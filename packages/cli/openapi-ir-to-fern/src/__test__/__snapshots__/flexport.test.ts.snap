// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser flexport simple 1`] = `
{
  "definitionFiles": {
    "booking.yml": {
      "docs": "Endpoints relating to Booking objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Booking",
        "endpoints": {
          "bookings_index": {
            "auth": false,
            "display-name": "List all bookings",
            "docs": "Returns a list of bookings.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "f.consignee_entity_ref": "amazon-us",
                  "f.shipment.id": 123456,
                  "f.shipper_entity_ref": "amazon-us",
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/booking",
                          "cargo": {
                            "_object": "/cargo",
                            "contains_hazmat": true,
                            "contains_li_ion": true,
                            "contains_magnets": true,
                            "contains_non_li_ion_battery": true,
                            "contains_other_dangerous_goods": true,
                            "lithium_batteries_packing_types": [
                              "packed_loose",
                              "packed_loose",
                            ],
                            "marks_and_numbers": "Fragile",
                            "shipping_units": [
                              {
                                "_object": "/shipping_unit",
                                "atomic_count": 9,
                                "count": 9,
                                "height": {
                                  "_object": "/quantity/length",
                                  "unit": "cm",
                                  "value": 472.62,
                                },
                                "length": {
                                  "_object": "/quantity/length",
                                  "unit": "cm",
                                  "value": 472.62,
                                },
                                "name": "Watches",
                                "unit_type": "carton",
                                "volume": {
                                  "_object": "/quantity/volume",
                                  "unit": "cbm",
                                  "value": 472.62,
                                },
                                "weight": {
                                  "_object": "/quantity/weight",
                                  "unit": "kg",
                                  "value": 2300.4,
                                },
                                "width": {
                                  "_object": "/quantity/length",
                                  "unit": "cm",
                                  "value": 472.62,
                                },
                              },
                              {
                                "_object": "/shipping_unit",
                                "atomic_count": 9,
                                "count": 9,
                                "name": "Cellular phones",
                                "unit_type": "pallet",
                              },
                            ],
                            "volume": {
                              "_object": "/quantity/volume",
                              "unit": "cbm",
                              "value": 472.62,
                            },
                            "weight": {
                              "_object": "/quantity/weight",
                              "unit": "kg",
                              "value": 2300.4,
                            },
                          },
                          "cargo_ready_date": "2019-06-30",
                          "consignee_entity": {
                            "_object": "/company_entity",
                            "id": 9281,
                            "mailing_address": {
                              "_object": "/address",
                              "city": "Albany",
                              "country": "United States of America",
                              "country_code": "US",
                              "ref": "my-address-ref",
                              "state": "MN",
                              "street_address": "1641 Settlers Lane",
                              "street_address2": "STE 2918",
                              "timezone": "America/Los_Angeles",
                              "unlocode": "USAL2",
                              "zip": "56307",
                            },
                            "name": "Zoomit",
                            "ref": "zoomit_ref",
                            "vat_numbers": [
                              {
                                "_object": "company_entity/vat_number",
                                "country_code": "US",
                                "number": "US 123746396",
                              },
                              {
                                "_object": "/company_entity/vat_number",
                                "country_code": "GB",
                                "number": "GB 123456789",
                              },
                            ],
                          },
                          "delivery_date": "2019-07-31",
                          "id": 123,
                          "metadata": {
                            "purchase_order": {
                              "0": "12345",
                            },
                            "sku": {
                              "0": "abc123",
                            },
                          },
                          "name": "PO 123",
                          "ocean_booking": {
                            "_object": "/ocean/booking",
                            "container_counts": {
                              "_object": "/container_counts",
                              "forty_five_ft_hc": 5,
                              "forty_ft": 3,
                              "forty_ft_hc": 4,
                              "twenty_ft": 2,
                            },
                            "destination_port": {
                              "_object": "/place",
                              "address": {
                                "_object": "/address",
                                "city": "Los Angeles",
                                "country": "United States",
                                "country_code": "US",
                                "ref": "address_ref_x",
                                "street_address": "123 Queen St",
                                "timezone": "America/Los_Angeles",
                                "unlocode": "USLA",
                              },
                              "details": [
                                {
                                  "_object": "/trucking/port",
                                  "country_code": "US",
                                  "iata_code": "LAX",
                                  "icao_code": "KLAX",
                                  "port_code": "2704",
                                },
                                {
                                  "_object": "/ocean/port",
                                  "country_code": "US",
                                  "iata_code": "LAX",
                                  "icao_code": "KLAX",
                                  "port_code": "2704",
                                },
                                {
                                  "_object": "/air/port",
                                  "country_code": "US",
                                  "iata_code": "LAX",
                                  "icao_code": "KLAX",
                                  "port_code": "3901",
                                },
                              ],
                              "name": "Long Beach, Los Angeles, California",
                            },
                            "incoterm": "FOB",
                            "is_lcl": false,
                            "origin_port": {
                              "_object": "/place",
                              "address": {
                                "_object": "/address",
                                "city": "Shanghai",
                                "country": "China",
                                "country_code": "CN",
                                "ref": "address_ref_x",
                                "street_address": "123 Queen St",
                                "timezone": "America/Los_Angeles",
                                "unlocode": "CNSZP",
                              },
                              "details": [
                                {
                                  "_object": "/trucking/port",
                                  "country_code": "US",
                                  "iata_code": "LAX",
                                  "icao_code": "KLAX",
                                  "port_code": "57035",
                                },
                                {
                                  "_object": "/ocean/port",
                                  "country_code": "US",
                                  "iata_code": "LAX",
                                  "icao_code": "KLAX",
                                  "port_code": "57035",
                                },
                                {
                                  "_object": "/air/port",
                                  "country_code": "US",
                                  "iata_code": "LAX",
                                  "icao_code": "KLAX",
                                  "port_code": "3901",
                                },
                              ],
                              "name": "Shenzhen, China",
                            },
                            "product_descriptions": [
                              {
                                "_object": "/bookings/product_descriptions",
                                "description": "Watches",
                                "description_for_export_customs": "手表",
                                "description_for_export_customs_locale": "zh_CN",
                                "hs_code": {
                                  "_object": "/hs_code",
                                  "code": "9101.00",
                                  "country_code": "US",
                                },
                              },
                              {
                                "_object": "/bookings/product_descriptions",
                                "description": "Wristwatches",
                                "description_for_export_customs": "手表",
                                "description_for_export_customs_locale": "zh_CN",
                              },
                            ],
                            "wants_delivery_service": false,
                            "wants_pickup_service": false,
                          },
                          "quote_status": "accepted_quote",
                          "shipper_entity": {
                            "_object": "/company_entity",
                            "id": 9281,
                            "mailing_address": {
                              "_object": "/address",
                              "city": "Albany",
                              "country": "United States of America",
                              "country_code": "US",
                              "ref": "my-address-ref",
                              "state": "MN",
                              "street_address": "1641 Settlers Lane",
                              "street_address2": "STE 2918",
                              "timezone": "America/Los_Angeles",
                              "unlocode": "USAL2",
                              "zip": "56307",
                            },
                            "name": "Zoomit V2",
                            "ref": "zoomit-us",
                            "vat_numbers": [
                              {
                                "_object": "company_entity/vat_number",
                                "country_code": "GB",
                                "number": "GB 123746396",
                              },
                              {
                                "_object": "/company_entity/vat_number",
                                "country_code": "GB",
                                "number": "GB 123456789",
                              },
                            ],
                          },
                          "special_instructions": "Handle carefully",
                          "wants_export_customs_service": true,
                          "wants_import_customs_service": true,
                        },
                        {
                          "_object": "/booking",
                          "id": 2983,
                          "name": "PO 12345",
                          "special_instructions": "This message is written in invisible ink.",
                          "wants_export_customs_service": true,
                          "wants_import_customs_service": true,
                        },
                      ],
                      "next": "https://api.flexport.com/bookings?page=3&per=10",
                      "prev": "https://api.flexport.com/bookings?page=12&per=10",
                    },
                    "self": "https://api.flexport.com/bookings?page=13&per=10",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/bookings",
            "request": {
              "name": "BookingsIndexRequest",
              "query-parameters": {
                "direction": {
                  "docs": "Set sort order. Allows "asc"(ascending) or "desc" (descending).",
                  "type": "optional<BookingsIndexRequestDirection>",
                },
                "f.cargo_ready_date": {
                  "docs": "Filters the list for bookings with the specified cargo ready date",
                  "type": "optional<string>",
                },
                "f.cargo_ready_date.gt": {
                  "docs": "Filters the list for bookings with cargo ready date after the specified date",
                  "type": "optional<string>",
                },
                "f.cargo_ready_date.gte": {
                  "docs": "Filters the list for bookings with cargo ready date after the specified date, inclusive",
                  "type": "optional<string>",
                },
                "f.cargo_ready_date.lt": {
                  "docs": "Filters the list for bookings with cargo ready date before the specified date",
                  "type": "optional<string>",
                },
                "f.cargo_ready_date.lte": {
                  "docs": "Filters the list for bookings with cargo ready date before the specified date, inclusive",
                  "type": "optional<string>",
                },
                "f.consignee_entity_ref": {
                  "docs": "Filters the list based on the booking's consignee",
                  "type": "optional<string>",
                },
                "f.created_at": {
                  "docs": "Filters the list for bookings with the specified created_at",
                  "type": "optional<string>",
                },
                "f.created_at.gt": {
                  "docs": "Filters the list for bookings created after the specified date",
                  "type": "optional<string>",
                },
                "f.created_at.gte": {
                  "docs": "Filters the list for bookings created after the specified date, inclusive",
                  "type": "optional<string>",
                },
                "f.created_at.lt": {
                  "docs": "Filters the list for bookings created before the specified date",
                  "type": "optional<string>",
                },
                "f.created_at.lte": {
                  "docs": "Filters the list for bookings created before the specified date, inclusive",
                  "type": "optional<string>",
                },
                "f.metadata.YOUR_METADATA_KEY": {
                  "docs": "Filters the list for bookings that have a specific metadata key-value pair. Multiple metadata filters can be added to a single query. If there are multiple metadata filters each with the same metadata key, then the filter will return bookings matching any of the specified metadata values for that metadata key. Note that keys must be URL encoded; e.g.: \`f.metadata.PO #=123\` is invalid. It should instead be \`f.metadata.PO%20%23\`
",
                  "type": "optional<string>",
                },
                "f.name": "optional<string>",
                "f.shipment.id": {
                  "docs": "Filter by the shipment resulting from the booking",
                  "type": "optional<integer>",
                },
                "f.shipper_entity_ref": {
                  "docs": "Filters the list based on the booking's shipper",
                  "type": "optional<string>",
                },
                "f.status": {
                  "docs": "Filter the list based on status of the booking",
                  "type": "optional<BookingsIndexRequestFStatus>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive).",
                  "type": "optional<integer>",
                },
                "sort": {
                  "docs": "Sort results by the specified field.",
                  "type": "optional<BookingsIndexRequestSort>",
                },
              },
            },
            "response": {
              "docs": "collection of bookings",
              "type": "BookingsIndexResponse",
            },
          },
          "create": {
            "auth": false,
            "display-name": "Create and return a booking",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "air_booking": {
                    "incoterm": "EXW",
                    "origin_port_iata_code": "HKG",
                    "origin_port_icao_code": "VHHH",
                    "origin_port_loc_code": "HKHKG",
                    "product_descriptions": [
                      {
                        "description": "Wristwatches",
                        "description_for_export_customs": "手表",
                        "description_for_export_customs_locale": "zh_CN",
                        "hs_code": "9101.01",
                      },
                    ],
                    "wants_delivery_service": true,
                    "wants_pickup_service": true,
                  },
                  "cargo": {
                    "contains_hazmat": true,
                    "contains_li_ion": true,
                    "contains_magnets": true,
                    "contains_non_li_ion_battery": true,
                    "contains_other_dangerous_goods": true,
                    "lithium_batteries_packing_types": [
                      "packed_loose",
                      "packed_loose",
                    ],
                    "marks_and_numbers": "Fragile",
                    "shipping_units": [
                      {
                        "atomic_count": 9,
                        "count": 9,
                        "height": {
                          "unit": "cm",
                          "value": 472.62,
                        },
                        "length": {
                          "unit": "cm",
                          "value": 472.62,
                        },
                        "name": "Watches",
                        "unit_type": "carton",
                        "volume": {
                          "unit": "cbm",
                          "value": 472.62,
                        },
                        "weight": {
                          "unit": "kg",
                          "value": 2300.4,
                        },
                        "width": {
                          "unit": "cm",
                          "value": 472.62,
                        },
                      },
                      {
                        "atomic_count": 9,
                        "count": 9,
                        "name": "Cellular phones",
                        "unit_type": "pallet",
                      },
                    ],
                    "volume": {
                      "unit": "cbm",
                      "value": 472.62,
                    },
                    "weight": {
                      "unit": "kg",
                      "value": 2300.4,
                    },
                  },
                  "cargo_ready_date": "2019-06-30",
                  "consignee_entity_ref": "zoomit_ref",
                  "delivery_date": "2019-07-31",
                  "destination_address_ref": "my-albany-ref",
                  "eccn_codes": "3A001, 5A002",
                  "flow_direct": true,
                  "name": "PO 123",
                  "ocean_booking": {
                    "container_counts": {
                      "forty_five_ft_hc": 5,
                      "forty_ft": 3,
                      "forty_ft_hc": 4,
                      "twenty_ft": 2,
                    },
                    "destination_port_loc_code": "USLAX",
                    "destination_port_us_cbp_port_code": "2704",
                    "incoterm": "FOB",
                    "is_lcl": false,
                    "origin_port_loc_code": "CNYTN",
                    "origin_port_us_cbp_port_code": "57078",
                    "product_descriptions": [
                      {
                        "description": "Watches",
                        "description_for_export_customs": "手表",
                        "description_for_export_customs_locale": "zh_CN",
                        "hs_code": "9101.00",
                      },
                      {
                        "description": "Wristwatches",
                        "description_for_export_customs": "手表",
                        "description_for_export_customs_locale": "zh_CN",
                        "hs_code": "9101.01",
                      },
                    ],
                    "wants_delivery_service": false,
                    "wants_pickup_service": false,
                  },
                  "origin_address_ref": "id-274346",
                  "shipper_entity_ref": "zoomit-us",
                  "special_instructions": "Handle carefully",
                  "trucking_booking": {
                    "description_of_products": "watches",
                    "is_ltl": true,
                    "payment_terms": "collect",
                  },
                  "wants_bco": false,
                  "wants_export_customs_service": true,
                  "wants_flexport_freight": false,
                  "wants_import_customs_service": false,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/booking",
                      "air_booking": {
                        "_object": "/air/booking",
                        "destination_port": {
                          "_object": "/place",
                          "name": "ORD - Chicago - IL",
                        },
                        "incoterm": "EXW",
                        "origin_port": {
                          "_object": "/place",
                          "name": "ORD - Chicago - IL",
                        },
                        "product_descriptions": [
                          {
                            "_object": "/bookings/product_descriptions",
                            "description": "Wristwatches",
                            "description_for_export_customs": "手表",
                            "description_for_export_customs_locale": "zh_CN",
                          },
                        ],
                        "wants_delivery_service": false,
                        "wants_pickup_service": true,
                      },
                      "booking_line_items": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/booking_line_items?f.booking.id=123",
                        "ref_type": "/purchase_orders/booking_line_item",
                      },
                      "cargo": {
                        "_object": "/cargo",
                        "contains_hazmat": true,
                        "contains_li_ion": true,
                        "contains_magnets": true,
                        "contains_non_li_ion_battery": true,
                        "contains_other_dangerous_goods": true,
                        "lithium_batteries_packing_types": [
                          "packed_loose",
                          "packed_loose",
                        ],
                        "marks_and_numbers": "Fragile",
                        "shipping_units": [
                          {
                            "_object": "/shipping_unit",
                            "atomic_count": 9,
                            "count": 9,
                            "height": {
                              "_object": "/quantity/length",
                              "unit": "cm",
                              "value": 472.62,
                            },
                            "length": {
                              "_object": "/quantity/length",
                              "unit": "cm",
                              "value": 472.62,
                            },
                            "name": "Watches",
                            "unit_type": "carton",
                            "volume": {
                              "_object": "/quantity/volume",
                              "unit": "cbm",
                              "value": 472.62,
                            },
                            "weight": {
                              "_object": "/quantity/weight",
                              "unit": "kg",
                              "value": 2300.4,
                            },
                            "width": {
                              "_object": "/quantity/length",
                              "unit": "cm",
                              "value": 472.62,
                            },
                          },
                          {
                            "_object": "/shipping_unit",
                            "atomic_count": 9,
                            "count": 9,
                            "name": "Cellular phones",
                            "unit_type": "pallet",
                          },
                        ],
                        "volume": {
                          "_object": "/quantity/volume",
                          "unit": "cbm",
                          "value": 472.62,
                        },
                        "weight": {
                          "_object": "/quantity/weight",
                          "unit": "kg",
                          "value": 2300.4,
                        },
                      },
                      "cargo_ready_date": "2019-05-30",
                      "consignee_entity": {
                        "_object": "/company_entity",
                        "id": 9281,
                        "mailing_address": {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "my-address-ref",
                          "state": "MN",
                          "street_address": "1641 Settlers Lane",
                          "street_address2": "STE 2918",
                          "timezone": "America/Los_Angeles",
                          "unlocode": "US AL2",
                          "zip": "56307",
                        },
                        "name": "Zoomit",
                        "ref": "self",
                        "vat_numbers": [
                          {
                            "_object": "company_entity/vat_number",
                            "country_code": "US",
                            "number": "US 123746396",
                          },
                          {
                            "_object": "/company_entity/vat_number",
                            "country_code": "GB",
                            "number": "GB 123456789",
                          },
                        ],
                      },
                      "created_at": "2019-04-01T18:44:34Z",
                      "delivery_date": "2019-05-30",
                      "destination_address": {
                        "_object": "/address",
                        "city": "San Francisco",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "warehouse_us",
                        "state": "CA",
                        "street_address": "325 Balboa St",
                        "street_address2": "Apt 6",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "US SF3",
                        "zip": "94113",
                      },
                      "id": 2983,
                      "metadata": {
                        "purchase_order": {
                          "0": "12345",
                        },
                        "sku": {
                          "0": "abc123",
                        },
                      },
                      "name": "PO 123",
                      "notify_party": "John Doe | john@example.com | 905-555-1234",
                      "ocean_booking": {
                        "_object": "/ocean/booking",
                        "container_counts": {
                          "_object": "/container_counts",
                          "forty_five_ft_hc": 5,
                          "forty_ft": 3,
                          "forty_ft_hc": 4,
                          "twenty_ft": 2,
                        },
                        "destination_port": {
                          "_object": "/place",
                          "address": {
                            "_object": "/address",
                            "city": "Los Angeles",
                            "country": "United States",
                            "country_code": "US",
                            "ref": "la-address-ref",
                            "street_address": "123 Queen St",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "USLA",
                          },
                          "details": [
                            {
                              "_object": "/trucking/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "2704",
                            },
                            {
                              "_object": "/ocean/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "2704",
                            },
                            {
                              "_object": "/air/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "3901",
                            },
                          ],
                          "name": "Long Beach, Los Angeles, California",
                        },
                        "incoterm": "FOB",
                        "is_lcl": false,
                        "origin_port": {
                          "_object": "/place",
                          "address": {
                            "_object": "/address",
                            "city": "Shanghai",
                            "country": "China",
                            "country_code": "CN",
                            "ref": "shanghai-ref",
                            "street_address": "123 Queen St",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "CNSZP",
                          },
                          "details": [
                            {
                              "_object": "/trucking/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "57035",
                            },
                            {
                              "_object": "/ocean/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "57035",
                            },
                            {
                              "_object": "/air/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "3901",
                            },
                          ],
                          "name": "Shenzhen, China",
                        },
                        "product_descriptions": [
                          {
                            "_object": "/bookings/product_descriptions",
                            "description": "Watches",
                            "description_for_export_customs": "手表",
                            "description_for_export_customs_locale": "zh_CN",
                            "hs_code": {
                              "_object": "/hs_code",
                              "code": "9101.00",
                              "country_code": "US",
                              "description": "N-Butyl-2,2,6,6-tetramethylpiperidin-4-amine (CAS No. 36177-92-1) (provided for in subheading 2933.39.91)",
                            },
                          },
                          {
                            "_object": "/bookings/product_descriptions",
                            "description": "Wristwatches",
                            "description_for_export_customs": "手表",
                            "description_for_export_customs_locale": "zh_CN",
                          },
                        ],
                        "wants_delivery_service": false,
                        "wants_pickup_service": true,
                      },
                      "origin_address": {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "warehouse_cn",
                        "state": "MN",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "US AL2",
                        "zip": "56307",
                      },
                      "quote_status": "pending_quote",
                      "shipment": {
                        "_object": "/api/refs/object",
                        "id": 123,
                        "link": "https://api.flexport.com/shipments/123",
                        "ref_type": "/shipment",
                      },
                      "shipper_entity": {
                        "_object": "/company_entity",
                        "id": 9281,
                        "mailing_address": {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "my-address-ref",
                          "state": "MN",
                          "street_address": "1641 Settlers Lane",
                          "street_address2": "STE 2918",
                          "timezone": "America/Los_Angeles",
                          "unlocode": "US AL2",
                          "zip": "56307",
                        },
                        "name": "My Manufacturer",
                        "ref": "manufacturer_1",
                        "vat_numbers": [
                          {
                            "_object": "company_entity/vat_number",
                            "country_code": "US",
                            "number": "US 123746396",
                          },
                          {
                            "_object": "/company_entity/vat_number",
                            "country_code": "GB",
                            "number": "GB 123456789",
                          },
                        ],
                      },
                      "special_instructions": "Handle carefully",
                      "status": "archived",
                      "transportation_mode": "ocean",
                      "trucking_booking": {
                        "_object": "/trucking/booking",
                        "description_of_products": "Wristwatches",
                        "is_ftl": false,
                        "payment_terms": "collect",
                      },
                      "wants_export_customs_service": true,
                      "wants_import_customs_service": true,
                    },
                    "self": "https://api.flexport.com/bookings",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/bookings",
            "request": {
              "body": {
                "properties": {
                  "air_booking": "optional<root.CreateAirBooking>",
                  "cargo": "root.CreateCargo",
                  "cargo_ready_date": {
                    "docs": "Always required. Date when cargo is ready for pickup at the origin location.",
                    "type": "string",
                  },
                  "consignee_entity_ref": {
                    "docs": "Always required. Customizable reference ID of company entity that is the consignee of the booking.",
                    "type": "string",
                  },
                  "declared_as_strategy": {
                    "docs": "Required when origin or destination port is Hong Kong. Does your shipment contain goods subject to export control regulations? Export Control Regulations include dual use item control, Hong Kong strategic commodity control, US and EU export control, etc.",
                    "type": "optional<CreateBookingDeclaredAsStrategy>",
                  },
                  "delivery_date": {
                    "docs": "Optional. Target date by when cargo must be delivered.",
                    "type": "optional<string>",
                  },
                  "destination_address_ref": {
                    "docs": "Always required for trucking bookings. Always required for air and ocean bookings if \`wants_delivery_service\` is TRUE. Customizable reference ID of network location that is the delivery location.",
                    "type": "string",
                  },
                  "eccn_codes": {
                    "docs": "Required when declared_as_strategy is "yes". Please provide the ECCN codes (Export Control Classification Number) of the products subject to export control regulations. Make sure you find the right ECCN codes in the Commerce Control List. Make sure you provide the correct format of the ECCN code (five character alpha-numeric such as 3A001, 5A002, etc) seperated by commas. According to the laws, providing the wrong ECCN information might cause fines.",
                    "type": "optional<string>",
                  },
                  "flow_direct": {
                    "docs": "Optional. Whether to create Flow Direct Quote for the Booking. Currently, only Ocean LCL Booking is supported",
                    "type": "optional<boolean>",
                  },
                  "metadata": "optional<root.MetadataCreate>",
                  "name": {
                    "docs": "Always required. Name of the booking.",
                    "type": "string",
                  },
                  "notify_party": {
                    "docs": "Optional. Name and address of company that is the notify party of the booking. If null, then this is the same as consignee.",
                    "type": "optional<string>",
                  },
                  "ocean_booking": "optional<root.CreateOceanBooking>",
                  "origin_address_ref": {
                    "docs": "Always required. Customizable reference ID of network location that is the pickup location.",
                    "type": "string",
                  },
                  "shipper_entity_ref": {
                    "docs": "Always required. Customizable reference ID of company entity that is the shipper of the booking.",
                    "type": "string",
                  },
                  "special_instructions": {
                    "docs": "Additional instructions not included in rest of booking form.",
                    "type": "optional<string>",
                  },
                  "trucking_booking": "optional<root.CreateTruckingBooking>",
                  "wants_bco": {
                    "docs": "Optional. Whether the booking requires Flexport to provide BCO services.",
                    "type": "optional<boolean>",
                  },
                  "wants_export_customs_service": {
                    "docs": "Always required. Whether the booking requires Flexport to provide export customs services.",
                    "type": "boolean",
                  },
                  "wants_flexport_freight": {
                    "docs": "Optional. Whether the booking requires Flexport to provide freight services.",
                    "type": "optional<boolean>",
                  },
                  "wants_import_customs_service": {
                    "docs": "Optional. Whether the booking requires Flexport to provide import customs services.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "CreateBooking",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "The created booking",
              "type": "BookingCreateResponse",
            },
          },
          "show": {
            "auth": false,
            "display-name": "Retrieve a booking",
            "docs": "Retrieves the details of a single booking.
",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": 1,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/booking",
                      "air_booking": {
                        "_object": "/air/booking",
                        "destination_port": {
                          "_object": "/place",
                          "name": "ORD - Chicago - IL",
                        },
                        "incoterm": "EXW",
                        "origin_port": {
                          "_object": "/place",
                          "name": "ORD - Chicago - IL",
                        },
                        "product_descriptions": [
                          {
                            "_object": "/bookings/product_descriptions",
                            "description": "Wristwatches",
                            "description_for_export_customs": "手表",
                            "description_for_export_customs_locale": "zh_CN",
                          },
                        ],
                        "wants_delivery_service": false,
                        "wants_pickup_service": true,
                      },
                      "booking_line_items": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/booking_line_items?f.booking.id=123",
                        "ref_type": "/purchase_orders/booking_line_item",
                      },
                      "cargo": {
                        "_object": "/cargo",
                        "contains_hazmat": false,
                        "contains_li_ion": true,
                        "contains_magnets": false,
                        "contains_non_li_ion_battery": false,
                        "contains_other_dangerous_goods": false,
                        "lithium_batteries_packing_types": [
                          "contained_in_equipment",
                          "packed_loose",
                        ],
                        "marks_and_numbers": "Very fragile",
                        "shipping_units": [
                          {
                            "_object": "/shipping_unit",
                            "atomic_count": 9,
                            "count": 3,
                            "height": {
                              "_object": "/quantity/length",
                              "unit": "cm",
                              "value": 472.62,
                            },
                            "length": {
                              "_object": "/quantity/length",
                              "unit": "cm",
                              "value": 472.62,
                            },
                            "name": "Airplanes",
                            "unit_type": "carton",
                            "volume": {
                              "_object": "/quantity/volume",
                              "unit": "cbm",
                              "value": 472.62,
                            },
                            "weight": {
                              "_object": "/quantity/weight",
                              "unit": "kg",
                              "value": 2300.4,
                            },
                            "width": {
                              "_object": "/quantity/length",
                              "unit": "cm",
                              "value": 472.62,
                            },
                          },
                          {
                            "_object": "/shipping_unit",
                            "atomic_count": 9,
                            "count": 9,
                            "name": "Cellular phones",
                            "unit_type": "pallet",
                          },
                        ],
                        "volume": {
                          "_object": "/quantity/volume",
                          "unit": "cbm",
                          "value": 472.62,
                        },
                        "weight": {
                          "_object": "/quantity/weight",
                          "unit": "kg",
                          "value": 2300.4,
                        },
                      },
                      "cargo_ready_date": "2019-01-30",
                      "consignee_entity": {
                        "_object": "/company_entity",
                        "id": 9281,
                        "mailing_address": {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "my-address-ref",
                          "state": "MN",
                          "street_address": "1641 Settlers Lane",
                          "street_address2": "STE 2918",
                          "timezone": "America/Los_Angeles",
                          "unlocode": "US AL2",
                          "zip": "56307",
                        },
                        "name": "Zoomit",
                        "ref": "zoomit_ref",
                        "vat_numbers": [
                          {
                            "_object": "company_entity/vat_number",
                            "country_code": "US",
                            "number": "US 123746396",
                          },
                          {
                            "_object": "/company_entity/vat_number",
                            "country_code": "GB",
                            "number": "GB 123456789",
                          },
                        ],
                      },
                      "created_at": "2019-04-01T18:44:34Z",
                      "delivery_date": "2019-02-22",
                      "destination_address": {
                        "_object": "/address",
                        "city": "San Francisco",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "my-sf-ref",
                        "state": "CA",
                        "street_address": "325 Balboa St",
                        "street_address2": "Apt 6",
                        "timezone": "America/Los Angeles",
                        "unlocode": "US SF3",
                        "zip": "94113",
                      },
                      "id": 2983,
                      "metadata": {
                        "purchase_order": {
                          "0": "12345",
                        },
                        "sku": {
                          "0": "abc123",
                        },
                      },
                      "name": "PO 123456",
                      "notify_party": "Jane Doe; jane@example.com; 905-555-1234",
                      "ocean_booking": {
                        "_object": "/ocean/booking",
                        "container_counts": {
                          "_object": "/container_counts",
                          "forty_five_ft_hc": 8,
                          "forty_ft": 2,
                          "forty_ft_hc": 4,
                          "twenty_ft": 1,
                        },
                        "destination_port": {
                          "_object": "/place",
                          "address": {
                            "_object": "/address",
                            "city": "Shanghai",
                            "country": "China",
                            "country_code": "CN",
                            "ref": "my-shanghai-ref",
                            "street_address": "123 Queen St",
                            "timezone": "China/Shanghai",
                            "unlocode": "CNSHA",
                          },
                          "details": [
                            {
                              "_object": "/trucking/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "57035",
                            },
                            {
                              "_object": "/ocean/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "57035",
                            },
                            {
                              "_object": "/air/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "3901",
                            },
                          ],
                          "name": "Shanghai, China",
                        },
                        "incoterm": "FOB",
                        "is_lcl": false,
                        "origin_port": {
                          "_object": "/place",
                          "address": {
                            "_object": "/address",
                            "city": "Shanghai",
                            "country": "China",
                            "country_code": "CN",
                            "ref": "my-shanghai-ref",
                            "street_address": "123 Queen St",
                            "timezone": "China/Shanghai",
                            "unlocode": "CNSHA",
                          },
                          "details": [
                            {
                              "_object": "/trucking/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "57035",
                            },
                            {
                              "_object": "/ocean/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "57035",
                            },
                            {
                              "_object": "/air/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "3901",
                            },
                          ],
                          "name": "Shanghai, China",
                        },
                        "product_descriptions": [
                          {
                            "_object": "/bookings/product_descriptions",
                            "description": "Wristwatches",
                            "description_for_export_customs": "手表",
                            "description_for_export_customs_locale": "zh_CN",
                          },
                        ],
                        "wants_delivery_service": false,
                        "wants_pickup_service": true,
                      },
                      "origin_address": {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "my-address-ref",
                        "state": "MN",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los Angeles",
                        "unlocode": "US AL2",
                        "zip": "56307",
                      },
                      "quote_status": "accepted_quote",
                      "shipment": {
                        "_object": "/api/refs/object",
                        "id": 123,
                        "link": "https://api.flexport.com/shipments/123",
                        "ref_type": "/shipment",
                      },
                      "shipper_entity": {
                        "_object": "/company_entity",
                        "id": 9281,
                        "mailing_address": {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "my-address-ref",
                          "state": "MN",
                          "street_address": "1641 Settlers Lane",
                          "street_address2": "STE 2918",
                          "timezone": "America/Los_Angeles",
                          "unlocode": "US AL2",
                          "zip": "56307",
                        },
                        "name": "Zoomit",
                        "ref": "zoomit_ref",
                        "vat_numbers": [
                          {
                            "_object": "company_entity/vat_number",
                            "country_code": "US",
                            "number": "US 123746396",
                          },
                          {
                            "_object": "/company_entity/vat_number",
                            "country_code": "GB",
                            "number": "GB 123456789",
                          },
                        ],
                      },
                      "special_instructions": "",
                      "status": "archived",
                      "transportation_mode": "ocean",
                      "trucking_booking": {
                        "_object": "/trucking/booking",
                        "description_of_products": "Wristwatches",
                        "is_ftl": false,
                        "payment_terms": "collect",
                      },
                      "wants_export_customs_service": true,
                      "wants_import_customs_service": true,
                    },
                    "self": "https://api.flexport.com/bookings/1234",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/bookings/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the booking to be retrieved",
                "type": "integer",
              },
            },
            "response": {
              "docs": "Success",
              "type": "BookingShowResponse",
            },
          },
        },
      },
      "types": {
        "BookingCreateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Booking>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "BookingShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Booking>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "BookingsIndexRequestDirection": {
          "enum": [
            "asc",
            "desc",
          ],
        },
        "BookingsIndexRequestFStatus": {
          "enum": [
            "booked",
            "submitted",
          ],
        },
        "BookingsIndexRequestSort": {
          "enum": [
            "cargo_ready_date",
            "created_at",
          ],
        },
        "BookingsIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<BookingsIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "BookingsIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.Booking>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
        "CreateBookingDeclaredAsStrategy": {
          "docs": "Required when origin or destination port is Hong Kong. Does your shipment contain goods subject to export control regulations? Export Control Regulations include dual use item control, Hong Kong strategic commodity control, US and EU export control, etc.",
          "enum": [
            "yes",
            "no",
            "notsure",
          ],
        },
      },
    },
    "bookingAmendment.yml": {
      "docs": "Endpoints relating to BookingAmendment objects. An existing booking is required to create booking amendments for.",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "BookingAmendment",
        "endpoints": {
          "booking_amendment_create": {
            "auth": false,
            "display-name": "Create a new booking amendment.",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "amendment_note": "This is an amendment note with useful context to changes made to the booking.",
                  "booking_id": 12345,
                  "new_cargo": {
                    "contains_hazmat": true,
                    "contains_li_ion": true,
                    "contains_magnets": true,
                    "contains_non_li_ion_battery": true,
                    "contains_other_dangerous_goods": true,
                    "lithium_batteries_packing_types": [
                      "packed_loose",
                      "packed_loose",
                    ],
                    "marks_and_numbers": "Fragile",
                    "shipping_units": [
                      {
                        "atomic_count": 9,
                        "count": 9,
                        "height": {
                          "unit": "cm",
                          "value": 472.62,
                        },
                        "length": {
                          "unit": "cm",
                          "value": 472.62,
                        },
                        "name": "Watches",
                        "unit_type": "carton",
                        "volume": {
                          "unit": "cbm",
                          "value": 472.62,
                        },
                        "weight": {
                          "unit": "kg",
                          "value": 2300.4,
                        },
                        "width": {
                          "unit": "cm",
                          "value": 472.62,
                        },
                      },
                      {
                        "atomic_count": 9,
                        "count": 9,
                        "name": "Cellular phones",
                        "unit_type": "pallet",
                      },
                    ],
                    "volume": {
                      "unit": "cbm",
                      "value": 472.62,
                    },
                    "weight": {
                      "unit": "kg",
                      "value": 2300.4,
                    },
                  },
                  "new_cargo_ready_date": "2019-06-30",
                  "new_container_counts": {
                    "forty_five_ft_hc": 5,
                    "forty_ft": 3,
                    "forty_ft_hc": 4,
                    "twenty_ft": 2,
                  },
                  "new_destination_address_ref": "id-123456",
                  "new_destination_port_loc_code": "CNYTN",
                  "new_destination_port_us_cbp_port_code": "57078",
                  "new_name": "Valentine's Day - 2020",
                  "new_origin_address_ref": "warehouse_cn",
                  "new_origin_port_loc_code": "CNSZP",
                  "new_origin_port_us_cbp_port_code": "57078",
                  "new_product_descriptions": [
                    {
                      "description": "Wristwatches",
                      "description_for_export_customs": "手表",
                      "hs_code": "9101.01",
                    },
                  ],
                  "new_wants_bco": true,
                  "new_wants_flexport_freight": true,
                  "new_wants_import_customs_service": false,
                  "new_wants_pickup_service": false,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/booking_amendment",
                      "booking_id": 12345,
                      "id": 2983,
                      "is_pending": false,
                      "new_cargo": {
                        "_object": "/cargo",
                        "contains_hazmat": true,
                        "contains_li_ion": true,
                        "contains_magnets": true,
                        "contains_non_li_ion_battery": true,
                        "contains_other_dangerous_goods": true,
                        "lithium_batteries_packing_types": [
                          "packed_loose",
                          "packed_loose",
                        ],
                        "marks_and_numbers": "Fragile",
                        "shipping_units": [
                          {
                            "_object": "/shipping_unit",
                            "atomic_count": 9,
                            "count": 9,
                            "height": {
                              "_object": "/quantity/length",
                              "unit": "cm",
                              "value": 472.62,
                            },
                            "length": {
                              "_object": "/quantity/length",
                              "unit": "cm",
                              "value": 472.62,
                            },
                            "name": "Watches",
                            "unit_type": "carton",
                            "volume": {
                              "_object": "/quantity/volume",
                              "unit": "cbm",
                              "value": 472.62,
                            },
                            "weight": {
                              "_object": "/quantity/weight",
                              "unit": "kg",
                              "value": 2300.4,
                            },
                            "width": {
                              "_object": "/quantity/length",
                              "unit": "cm",
                              "value": 472.62,
                            },
                          },
                          {
                            "_object": "/shipping_unit",
                            "atomic_count": 9,
                            "count": 9,
                            "name": "Cellular phones",
                            "unit_type": "pallet",
                          },
                        ],
                        "volume": {
                          "_object": "/quantity/volume",
                          "unit": "cbm",
                          "value": 472.62,
                        },
                        "weight": {
                          "_object": "/quantity/weight",
                          "unit": "kg",
                          "value": 2300.4,
                        },
                      },
                      "new_cargo_ready_date": "2019-06-30",
                      "new_container_counts": {
                        "_object": "/container_counts",
                        "forty_five_ft_hc": 5,
                        "forty_ft": 3,
                        "forty_ft_hc": 4,
                        "twenty_ft": 2,
                      },
                      "new_metadata": {
                        "PO": {
                          "0": "12345",
                        },
                        "SKU": {
                          "0": "abc123",
                        },
                      },
                      "new_name": "Valentine's Day - 2020",
                      "new_origin_address": {
                        "_object": "/address",
                        "city": "Shanghai",
                        "country": "China",
                        "country_code": "CN",
                        "ref": "my-shanghai-address-ref",
                        "state": "MN",
                        "street_address": "123 Queen St",
                        "street_address2": "STE 2918",
                        "timezone": "China/Shanghai",
                        "unlocode": "CNSHA",
                        "zip": "56307",
                      },
                      "new_port_of_loading": {
                        "_object": "/address",
                        "city": "Shanghai",
                        "country": "China",
                        "country_code": "CN",
                        "ref": "my-shanghai-address-ref",
                        "state": "MN",
                        "street_address": "123 Queen St",
                        "street_address2": "STE 2918",
                        "timezone": "China/Shanghai",
                        "unlocode": "CNSHA",
                        "zip": "56307",
                      },
                      "new_port_of_unloading": {
                        "_object": "/address",
                        "city": "Chicago",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "my-chicago-ref",
                        "state": "IL",
                        "street_address": "10000 West O'Hare Ave",
                        "street_address2": "PO Box 66142",
                        "timezone": "America/Chicago",
                        "unlocode": "US AL2",
                        "zip": "60666",
                      },
                      "new_product_descriptions": [
                        {
                          "_object": "/booking_amendment_product_description",
                          "description": "Wristwatches",
                          "description_for_export_customs": "手表",
                        },
                      ],
                      "new_wants_bco": true,
                      "new_wants_flexport_freight": true,
                      "new_wants_import_customs_service": false,
                      "new_wants_pickup_service": false,
                    },
                    "self": "https://api.flexport.com/booking_amendments",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/booking_amendments",
            "request": {
              "body": {
                "properties": {
                  "amendment_note": {
                    "docs": "Additional message to Flexport regarding the booking amendment.",
                    "type": "optional<string>",
                  },
                  "booking_id": {
                    "docs": "Identifier of the existing booking to be modified",
                    "type": "integer",
                  },
                  "new_cargo": "optional<root.CreateCargo>",
                  "new_cargo_ready_date": {
                    "docs": "Date when cargo is ready for pickup at the origin location.",
                    "type": "optional<string>",
                  },
                  "new_container_counts": "optional<root.CreateContainerCounts>",
                  "new_destination_address_ref": {
                    "docs": "Customizable reference ID of network location that is the delivery location.",
                    "type": "optional<string>",
                  },
                  "new_destination_port_loc_code": {
                    "docs": "At most one of \`new_destination_port_us_cbp_port_code\` or \`new_destination_port_loc_code\` may be specified. UN code for the destination port.",
                    "type": "optional<string>",
                  },
                  "new_destination_port_us_cbp_port_code": {
                    "docs": "At most one of \`new_destination_port_us_cbp_port_code\` or \`new_destination_port_loc_code\` may be specified. Unique port reference code used by US Customs and Border Protection.",
                    "type": "optional<string>",
                  },
                  "new_metadata": "optional<root.MetadataCreate>",
                  "new_name": {
                    "docs": "Name of the booking.",
                    "type": "optional<string>",
                  },
                  "new_origin_address_ref": {
                    "docs": "Customizable reference ID of network location that is the pickup location.",
                    "type": "optional<string>",
                  },
                  "new_origin_port_loc_code": {
                    "docs": "At most one of \`origin_port_us_cbp_port_code\` or  \`origin_port_loc_code\` may be specified. UN code for the origin port.",
                    "type": "optional<string>",
                  },
                  "new_origin_port_us_cbp_port_code": {
                    "docs": "At most one of \`origin_port_us_cbp_port_code\` or  \`origin_port_loc_code\` may be specified. Unique port reference code used by US Customs and Border Protection.",
                    "type": "optional<string>",
                  },
                  "new_product_descriptions": {
                    "docs": "New product (HS code) information",
                    "type": "optional<list<root.CreateBookingAmendmentHsCode>>",
                  },
                  "new_wants_bco": "optional<boolean>",
                  "new_wants_flexport_freight": "optional<boolean>",
                  "new_wants_import_customs_service": "optional<boolean>",
                  "new_wants_pickup_service": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "CreateBookingAmendment",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "The created booking amendment",
              "type": "BookingAmendmentCreateResponse",
            },
          },
        },
      },
      "types": {
        "BookingAmendmentCreateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.BookingAmendment>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "bookingLineItem.yml": {
      "docs": "Endpoints relating to BookingLineItem objects. **The Booking Line Item endpoints need special permission to access. Please contact
  your Flexport Sales representative if you are interested in using these endpoints.**",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "BookingLineItem",
        "endpoints": {
          "booking_line_item_create": {
            "auth": false,
            "display-name": "Create a booking line item",
            "docs": "Creates and returns a booking line item",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "booking_id": 9876,
                  "purchase_order_line_item_id": 112358,
                  "units": 200,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/purchase_orders/booking_line_item",
                      "booking": {
                        "_object": "/api/refs/object",
                        "id": 9876,
                        "link": "https://api.flexport.com/bookings/9876",
                        "ref_type": "/booking",
                      },
                      "id": 123456,
                      "purchase_order_line_item": {
                        "_object": "/api/refs/object",
                        "id": 112358,
                        "link": "https://api.flexport.com/purchase_order_line_items/112358",
                        "ref_type": "/purchase_orders/line_item",
                      },
                      "units": 200,
                    },
                    "self": "https://api.flexport.com/booking_line_items/123456",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/booking_line_items",
            "request": {
              "body": {
                "properties": {
                  "booking_id": {
                    "docs": "Always required. The identifier of the booking to add the PO line item to",
                    "type": "integer",
                  },
                  "purchase_order_line_item_id": {
                    "docs": "Always required. The identifier of the PO line item to book",
                    "type": "integer",
                  },
                  "units": {
                    "docs": "Always required. Number of units to book",
                    "type": "integer",
                  },
                },
              },
              "headers": undefined,
              "name": "CreateBookingLineItem",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "The created booking line item",
              "type": "BookingLineItemCreateResponse",
            },
          },
          "booking_line_item_index": {
            "auth": false,
            "display-name": "List all booking line items",
            "docs": "Returns a list of booking line items linked to submitted bookings",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "f.booking.id": 54321,
                  "f.purchase_order.id": 123,
                  "f.purchase_order_line_item.id": 54321,
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/purchase_orders/booking_line_item",
                          "booking": {
                            "_object": "/api/refs/object",
                            "id": 9876,
                            "link": "https://api.flexport.com/bookings/9876",
                            "ref_type": "/booking",
                          },
                          "id": 123456,
                          "purchase_order_line_item": {
                            "_object": "/api/refs/object",
                            "id": 112358,
                            "link": "https://api.flexport.com/purchase_order_line_items/112358",
                            "ref_type": "/purchase_orders/line_item",
                          },
                          "units": 200,
                        },
                        {
                          "_object": "/purchase_orders/booking_line_item",
                          "id": 1234,
                        },
                      ],
                      "next": "https://api.flexport.com/booking_line_items?page=3&per=10",
                      "prev": "https://api.flexport.com/booking_line_items?page=12&per=10",
                    },
                    "self": "https://api.flexport.com/booking_line_items?page=13&per=10",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/booking_line_items",
            "request": {
              "name": "BookingLineItemIndexRequest",
              "query-parameters": {
                "direction": {
                  "docs": "Set sort order. Allows "asc" (ascending) or "desc"  (descending)",
                  "type": "optional<BookingLineItemIndexRequestDirection>",
                },
                "f.booking.id": {
                  "docs": "Filters for all booking line items from a specific booking",
                  "type": "optional<integer>",
                },
                "f.purchase_order.id": {
                  "docs": "Filters for all booking line items from a purchase order",
                  "type": "optional<integer>",
                },
                "f.purchase_order_line_item.id": {
                  "docs": "Filters for all booking line items from a specific purchase order line item.",
                  "type": "optional<integer>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive)",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "collection of booking line items",
              "type": "BookingLineItemIndexResponse",
            },
          },
          "booking_line_item_show": {
            "auth": false,
            "display-name": "Retrieves the details of a single booking line item.",
            "docs": "Returns a list of booking line items",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": 1,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/purchase_orders/booking_line_item",
                      "booking": {
                        "_object": "/api/refs/object",
                        "id": 9876,
                        "link": "https://api.flexport.com/bookings/9876",
                        "ref_type": "/booking",
                      },
                      "id": 123456,
                      "purchase_order_line_item": {
                        "_object": "/api/refs/object",
                        "id": 112358,
                        "link": "https://api.flexport.com/purchase_order_line_items/112358",
                        "ref_type": "/purchase_orders/line_item",
                      },
                      "units": 200,
                    },
                    "self": "https://api.flexport.com/booking_line_items/123456",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/booking_line_items/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the booking line item to be retrieved",
                "type": "integer",
              },
            },
            "response": {
              "docs": "A collection of booking line items",
              "type": "BookingLineItemShowResponse",
            },
          },
        },
      },
      "types": {
        "BookingLineItemCreateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.BookingLineItem>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "BookingLineItemIndexRequestDirection": {
          "enum": [
            "asc",
            "desc",
          ],
        },
        "BookingLineItemIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<BookingLineItemIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "BookingLineItemIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.BookingLineItem>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
        "BookingLineItemShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.BookingLineItem>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "carbonCalculation.yml": {
      "docs": "Endpoints relating to Carbon Calculations",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Carbon Calculation",
        "endpoints": {
          "create": {
            "auth": false,
            "display-name": "Calculate carbon emissions",
            "docs": "Rate limited to 2,000 requests per hour",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "destination_port": "JFK",
                  "origin_coordinates": {
                    "latitude": "37.78",
                    "longitude": "-12.41",
                  },
                  "teus": "2",
                  "transportation_mode": "air",
                  "weight": {
                    "unit": "kg",
                    "value": 40,
                  },
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/carbon_calculation",
                      "co2e_emissions": {
                        "_object": "/quantity/weight",
                        "unit": "kg",
                        "value": 0.13,
                      },
                    },
                    "self": "https://api.flexport.com/carbon_calculation",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/carbon_calculation",
            "request": {
              "body": {
                "properties": {
                  "destination_address": {
                    "docs": "The physical address of the destination. One of \`distance\`, \`destination_coordinates\`, \`destination_address\`, or \`destination_port\` is required.",
                    "type": "optional<root.AddressForRequestBody>",
                  },
                  "destination_coordinates": {
                    "docs": "The latitude and longitude of the destination. One of \`distance\`, \`destination_coordinates\`, \`destination_address\`, or \`destination_port\` is required.",
                    "type": "optional<root.CoordinatesCreate>",
                  },
                  "destination_port": {
                    "docs": "Port of destination, used if no more specific destination location is provided.",
                    "type": "optional<string>",
                  },
                  "distance": {
                    "docs": "The total distance traveled by the shipment. This can be used instead of origin/destination locations.",
                    "type": "optional<root.DistanceCreate>",
                  },
                  "flight_type": {
                    "docs": "For \`transportation_mode: air\`, the type of plane used. One of \`freighter\`, \`belly_freighter\`, or \`unknown\`. Defaults to \`unknown\`.",
                    "type": "optional<CreateCarbonCalculationFlightType>",
                  },
                  "is_inland": {
                    "docs": "For \`transportation_mode: ocean\`, indicates if the calculation was inland or not. Defaults to false.",
                    "type": "optional<boolean>",
                  },
                  "is_lcl": {
                    "docs": "For \`transportation_mode: ocean\`, indicates if the calculation is less than container load or not. Defaults to false.",
                    "type": "optional<boolean>",
                  },
                  "is_reefer": {
                    "docs": "For \`transportation_mode: ocean\`, indicates if the calculation is a reefer shipment. Defaults to false.",
                    "type": "optional<boolean>",
                  },
                  "origin_address": {
                    "docs": "The physical address of the origin. One of \`distance\`, \`origin_coordinates\`, \`origin_address\`, or \`origin_port\` is required.",
                    "type": "optional<root.AddressForRequestBody>",
                  },
                  "origin_coordinates": {
                    "docs": "The latitude and longitude of the origin. One of \`distance\`, \`origin_coordinates\`, \`origin_address\`, or \`origin_port\` is required.",
                    "type": "optional<root.CoordinatesCreate>",
                  },
                  "origin_port": {
                    "docs": "Port of origin, used if no more specific origin location is provided.",
                    "type": "optional<string>",
                  },
                  "teus": {
                    "docs": "The number of TEUs (Twenty-foot Equivalent Units) moved in the calculation. Either \`weight\` or \`teus\` is required.",
                    "type": "optional<string>",
                  },
                  "transportation_mode": {
                    "docs": "The mode of transportation for calculation. One of \`air\`, \`ocean\`, \`truck\`, or \`rail\`. If \`transportation_mode\` is \`truck\`, \`ocean\`, or \`rail\`, \`country_code\` in both \`origin_address\` and \`destination_address\` is required.",
                    "type": "CreateCarbonCalculationTransportationMode",
                  },
                  "trucking_service_type": {
                    "docs": "For \`transportation_mode: truck\`, the type of service used. One of \`ftl\`, \`ltl\`, \`drayage\`, \`cartage\`, \`last_mile\`, \`airport_transfer\`, or \`air_cartage\`.",
                    "type": "optional<CreateCarbonCalculationTruckingServiceType>",
                  },
                  "weight": {
                    "docs": "The exact weight being shipped. Either \`weight\` or \`teus\` is required.",
                    "type": "optional<root.WeightCreate>",
                  },
                },
              },
              "headers": undefined,
              "name": "CreateCarbonCalculation",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Success",
              "type": "CarbonCalculationCreateResponse",
            },
          },
        },
      },
      "types": {
        "CarbonCalculationCreateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.CarbonCalculation>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "CreateCarbonCalculationFlightType": {
          "docs": "For \`transportation_mode: air\`, the type of plane used. One of \`freighter\`, \`belly_freighter\`, or \`unknown\`. Defaults to \`unknown\`.",
          "enum": [
            "freighter",
            "belly_freighter",
            "unknown",
          ],
        },
        "CreateCarbonCalculationTransportationMode": {
          "docs": "The mode of transportation for calculation. One of \`air\`, \`ocean\`, \`truck\`, or \`rail\`. If \`transportation_mode\` is \`truck\`, \`ocean\`, or \`rail\`, \`country_code\` in both \`origin_address\` and \`destination_address\` is required.",
          "enum": [
            "air",
            "ocean",
            "truck",
            "rail",
          ],
        },
        "CreateCarbonCalculationTruckingServiceType": {
          "docs": "For \`transportation_mode: truck\`, the type of service used. One of \`ftl\`, \`ltl\`, \`drayage\`, \`cartage\`, \`last_mile\`, \`airport_transfer\`, or \`air_cartage\`.",
          "enum": [
            "ftl",
            "ltl",
            "drayage",
            "cartage",
            "last_mile",
            "airport_transfer",
            "air_cartage",
          ],
        },
      },
    },
    "commercialInvoices.yml": {
      "docs": "Endpoints relating to Commercial Invoice objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Commercial Invoices",
        "endpoints": {
          "create": {
            "auth": false,
            "display-name": "Create and return a new commercial invoice",
            "docs": "**The Commercial Invoices POST endpoint needs special permission to access. Please contact your Flexport Sales representative if you are interested in using this endpoint.**",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "currency_code": "USD",
                  "invoice_number": "INVOICE-04-05-2020",
                  "is_related_parties": false,
                  "line_items": [
                    {
                      "container_number": "522932-1",
                      "country_of_origin": "CN",
                      "document_line_number": 4,
                      "price_per_unit": {
                        "amount": "12.34",
                        "currency_code": "USD",
                      },
                      "product_sku": "PRODUCT-123",
                      "purchase_order_number": "9876-ABC",
                      "quantity": {
                        "unit": "pcs",
                        "value": 1.1,
                      },
                      "value": {
                        "amount": "12.34",
                        "currency_code": "USD",
                      },
                    },
                  ],
                  "proration_amount": {
                    "amount": "12.34",
                    "currency_code": "USD",
                  },
                  "shipment_id": 79683,
                  "shipment_ref": "PO-123",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/commercial_invoice",
                      "currency": "USD",
                      "digitization_status": "complete",
                      "id": "abcxyz-23456-def",
                      "invoice_date": "invoice_date",
                      "invoice_number": "ABCDEFGHIJKLMNOP",
                      "involved_parties": [
                        {
                          "_object": "/customs/involved_party",
                          "name": "The West Coast Company",
                          "type": "consignee",
                        },
                      ],
                      "is_related_parties": false,
                      "line_items": [
                        {
                          "_object": "/commercial_invoice_line_item",
                          "container_number": {
                            "commercial_invoice_line_item_id": 12345,
                            "container_number": "XYZ123",
                            "created_at": "2020-01-01T15:28:03Z",
                            "id": 123,
                            "updated_at": "2020-01-01T15:28:03Z",
                          },
                          "document_line_number": 4,
                          "id": 12345,
                          "manufacturer_name": "Company Name",
                          "price_per_unit": {
                            "amount": "12.34",
                            "currency_code": "USD",
                          },
                          "product": {
                            "_object": "/api/refs/object",
                            "id": 12345,
                            "link": "https://api.flexport.com/products/12345",
                            "ref_type": "/product",
                          },
                          "purchase_order_number": "9876-ABC",
                          "total_units": 10,
                          "value": {
                            "amount": "12.34",
                            "currency_code": "USD",
                          },
                          "volume": {
                            "_object": "/quantity/volume",
                            "unit": "cbm",
                            "value": 12.34,
                          },
                          "weight": {
                            "_object": "/quantity/weight",
                            "unit": "kg",
                            "value": 12.34,
                          },
                        },
                        {
                          "_object": "/commercial_invoice_line_item",
                          "document_line_number": 4,
                          "id": 12345,
                          "manufacturer_name": "Company Name",
                          "purchase_order_number": "9876-ABC",
                          "total_units": 10,
                        },
                      ],
                      "manufacturer_addresses": [
                        {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "id-3333",
                          "state": "MN",
                          "street_address": "1641 Settlers Lane",
                          "street_address2": "STE 2918",
                          "timezone": "America/Los_Angeles",
                          "unlocode": "US AL2",
                          "zip": "56307",
                        },
                        {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "address_ref_x",
                          "street_address": "1641 Settlers Lane",
                          "timezone": "America/Los_Angeles",
                        },
                      ],
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "order_number": "order_number",
                      "shipment": {
                        "_object": "/api/refs/object",
                        "id": 123456,
                        "link": "https://api.flexport.com/shipments/123456",
                        "ref_type": "/shipment",
                      },
                      "total_unit_count": "12345",
                      "total_value": {
                        "amount": "100",
                        "currency_code": "USD",
                      },
                      "total_volume": {
                        "_object": "/quantity/volume",
                        "unit": "cbm",
                        "value": 100,
                      },
                      "total_weight": {
                        "_object": "/quantity/weight",
                        "unit": "kg",
                        "value": 100,
                      },
                    },
                    "self": "https://api.flexport.com/commercial_invoices",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/commercial_invoices",
            "request": {
              "body": {
                "properties": {
                  "currency_code": {
                    "docs": "The currency being used on the commercial invoice.",
                    "type": "string",
                  },
                  "invoice_number": {
                    "docs": "Invoice number on the commercial invoice, typically used for display purposes. Uniqueness is based on the supplier Involved Party. There can be multiple commercial invoices with the same invoice_number only if they have different suppliers.",
                    "type": "string",
                  },
                  "involved_parties": "optional<list<root.CreateInvolvedParty>>",
                  "is_related_parties": {
                    "docs": "Whether there was a related parties transaction as defined by CBP.",
                    "type": "optional<boolean>",
                  },
                  "line_items": "list<root.CreateCommercialInvoiceLineItem>",
                  "manufacturer_refs": {
                    "docs": "[DEPRECATED] Array of your custom strings used to refer to a manufacturer location.",
                    "type": "optional<list<string>>",
                  },
                  "metadata": "optional<root.MetadataCreate>",
                  "proration_amount": "root.MoneyCreate",
                  "shipment_id": {
                    "docs": "Flexport's unique identifier for the shipment. Either shipment_id or shipment_ref is required.",
                    "type": "optional<integer>",
                  },
                  "shipment_ref": {
                    "docs": "Your custom string used to refer to the shipment. Can be used to look up or reference the shipment later on. Either shipment_id or shipment_ref is required.",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "CreateCommercialInvoice",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "The created commercial invoice",
              "type": "CommercialInvoicesCreateResponse",
            },
          },
          "index": {
            "auth": false,
            "display-name": "List commercial invoices",
            "docs": "Returns a list of commercial invoices",
            "examples": [
              {
                "query-parameters": {
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/commercial_invoices",
                          "currency": "USD",
                          "digitization_status": "complete",
                          "id": "abcxyz-23456-def",
                          "invoice_number": "ABCDEFGHIJKLMNOP",
                          "is_related_parties": false,
                          "line_items": [
                            {
                              "_object": "/commercial_invoice_line_item",
                              "container_number": {
                                "commercial_invoice_line_item_id": 12345,
                                "container_number": "XYZ123",
                                "created_at": "2020-01-01T15:28:03Z",
                                "id": 123,
                                "updated_at": "2020-01-01T15:28:03Z",
                              },
                              "document_line_number": 4,
                              "id": 12345,
                              "manufacturer_name": "Company Name",
                              "price_per_unit": {
                                "amount": "12.34",
                                "currency_code": "USD",
                              },
                              "product": {
                                "_object": "/api/refs/object",
                                "id": 12345,
                                "link": "https://api.flexport.com/products/12345",
                                "ref_type": "/product",
                              },
                              "purchase_order_number": "9876-ABC",
                              "total_units": 10,
                              "value": {
                                "amount": "12.34",
                                "currency_code": "USD",
                              },
                              "volume": {
                                "_object": "/quantity/volume",
                                "unit": "cbm",
                                "value": 12.34,
                              },
                              "weight": {
                                "_object": "/quantity/weight",
                                "unit": "kg",
                                "value": 12.34,
                              },
                            },
                            {
                              "_object": "/commercial_invoice_line_item",
                              "document_line_number": 4,
                              "id": 12345,
                              "manufacturer_name": "Company Name",
                              "purchase_order_number": "9876-ABC",
                              "total_units": 10,
                            },
                          ],
                          "manufacturer_addresses": [
                            {
                              "_object": "/address",
                              "city": "Albany",
                              "country": "United States of America",
                              "country_code": "US",
                              "ref": "id-3333",
                              "state": "MN",
                              "street_address": "1641 Settlers Lane",
                              "street_address2": "STE 2918",
                              "timezone": "America/Los_Angeles",
                              "unlocode": "US AL2",
                              "zip": "56307",
                            },
                            {
                              "_object": "/address",
                              "city": "Albany",
                              "country": "United States of America",
                              "country_code": "US",
                              "ref": "address_ref_x",
                              "street_address": "1641 Settlers Lane",
                              "timezone": "America/Los_Angeles",
                            },
                          ],
                          "shipment": {
                            "_object": "/api/refs/object",
                            "id": 123456,
                            "link": "https://api.flexport.com/shipments/123456",
                            "ref_type": "/shipment",
                          },
                          "total_unit_count": "12345",
                          "total_value": {
                            "amount": "100",
                            "currency_code": "USD",
                          },
                          "total_volume": {
                            "_object": "/quantity/volume",
                            "unit": "cbm",
                            "value": 100,
                          },
                          "total_weight": {
                            "_object": "/quantity/weight",
                            "unit": "kg",
                            "value": 100,
                          },
                        },
                        {
                          "_object": "/commercial_invoice",
                          "currency": "USD",
                          "id": "abcxyz-23456-def",
                          "invoice_number": "INVOICE-04-05-2020",
                          "is_related_parties": false,
                          "total_unit_count": "123.0",
                        },
                      ],
                      "next": "https://api.flexport.com/commercial_invoices?page=3&per=10",
                      "prev": "https://api.flexport.com/commercial_invoices?page=1&per=10",
                    },
                    "self": "https://api.flexport.com/commercial_invoices?page=2&per=10",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/commercial_invoices",
            "request": {
              "name": "CommercialInvoicesIndexRequest",
              "query-parameters": {
                "f.invoice_number": {
                  "docs": "Filters results based on the invoice number.",
                  "type": "optional<string>",
                },
                "f.involved_party_seller_id": {
                  "docs": "Filters results based on the involved party seller ID.",
                  "type": "optional<string>",
                },
                "f.involved_party_seller_ref": {
                  "docs": "Filters results based on the invoolved party seller ref.",
                  "type": "optional<string>",
                },
                "f.shipment.id": {
                  "docs": "The unique id for the shipment.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive)",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Success",
              "type": "CommercialInvoicesIndexResponse",
            },
          },
          "show": {
            "auth": false,
            "display-name": "Retrieve a commercial invoice",
            "docs": "Retrieves the details of a single commercial invoice.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/commercial_invoice",
                      "currency": "USD",
                      "digitization_status": "complete",
                      "id": "abcxyz-23456-def",
                      "invoice_date": "invoice_date",
                      "invoice_number": "ABCDEFGHIJKLMNOP",
                      "involved_parties": [
                        {
                          "_object": "/customs/involved_party",
                          "name": "The West Coast Company",
                          "type": "consignee",
                        },
                      ],
                      "is_related_parties": false,
                      "line_items": [
                        {
                          "_object": "/commercial_invoice_line_item",
                          "container_number": {
                            "commercial_invoice_line_item_id": 12345,
                            "container_number": "XYZ123",
                            "created_at": "2020-01-01T15:28:03Z",
                            "id": 123,
                            "updated_at": "2020-01-01T15:28:03Z",
                          },
                          "document_line_number": 4,
                          "id": 12345,
                          "manufacturer_name": "Company Name",
                          "price_per_unit": {
                            "amount": "12.34",
                            "currency_code": "USD",
                          },
                          "product": {
                            "_object": "/api/refs/object",
                            "id": 12345,
                            "link": "https://api.flexport.com/products/12345",
                            "ref_type": "/product",
                          },
                          "purchase_order_number": "9876-ABC",
                          "total_units": 10,
                          "value": {
                            "amount": "12.34",
                            "currency_code": "USD",
                          },
                          "volume": {
                            "_object": "/quantity/volume",
                            "unit": "cbm",
                            "value": 12.34,
                          },
                          "weight": {
                            "_object": "/quantity/weight",
                            "unit": "kg",
                            "value": 12.34,
                          },
                        },
                        {
                          "_object": "/commercial_invoice_line_item",
                          "document_line_number": 4,
                          "id": 12345,
                          "manufacturer_name": "Company Name",
                          "purchase_order_number": "9876-ABC",
                          "total_units": 10,
                        },
                      ],
                      "manufacturer_addresses": [
                        {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "id-3333",
                          "state": "MN",
                          "street_address": "1641 Settlers Lane",
                          "street_address2": "STE 2918",
                          "timezone": "America/Los_Angeles",
                          "unlocode": "US AL2",
                          "zip": "56307",
                        },
                        {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "address_ref_x",
                          "street_address": "1641 Settlers Lane",
                          "timezone": "America/Los_Angeles",
                        },
                      ],
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "order_number": "order_number",
                      "shipment": {
                        "_object": "/api/refs/object",
                        "id": 123456,
                        "link": "https://api.flexport.com/shipments/123456",
                        "ref_type": "/shipment",
                      },
                      "total_unit_count": "12345",
                      "total_value": {
                        "amount": "100",
                        "currency_code": "USD",
                      },
                      "total_volume": {
                        "_object": "/quantity/volume",
                        "unit": "cbm",
                        "value": 100,
                      },
                      "total_weight": {
                        "_object": "/quantity/weight",
                        "unit": "kg",
                        "value": 100,
                      },
                    },
                    "self": "https://api.flexport.com/commercial_invoices/abcxyz-23456-def",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/commercial_invoices/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the requested commercial invoice",
                "type": "string",
              },
            },
            "response": {
              "docs": "Success",
              "type": "CommercialInvoicesShowResponse",
            },
          },
          "update": {
            "auth": false,
            "display-name": "Update an existing commercial invoice",
            "docs": "**The Commercial Invoices PATCH endpoint needs special permission to access. Please contact your Flexport Sales representative if you are interested in using this endpoint.**",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "currency_code": "USD",
                  "invoice_number": "INVOICE-04-05-2020",
                  "is_related_parties": false,
                  "line_items": [
                    {
                      "container_number": "522932-1",
                      "country_of_origin": "CN",
                      "document_line_number": 4,
                      "price_per_unit": {
                        "amount": "12.34",
                        "currency_code": "USD",
                      },
                      "product_sku": "PRODUCT-123",
                      "purchase_order_number": "9876-ABC",
                      "quantity": {
                        "unit": "pcs",
                        "value": 1.1,
                      },
                      "value": {
                        "amount": "12.34",
                        "currency_code": "USD",
                      },
                    },
                  ],
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/commercial_invoice",
                      "currency": "USD",
                      "digitization_status": "complete",
                      "id": "abcxyz-23456-def",
                      "invoice_date": "invoice_date",
                      "invoice_number": "ABCDEFGHIJKLMNOP",
                      "involved_parties": [
                        {
                          "_object": "/customs/involved_party",
                          "name": "The West Coast Company",
                          "type": "consignee",
                        },
                      ],
                      "is_related_parties": false,
                      "line_items": [
                        {
                          "_object": "/commercial_invoice_line_item",
                          "container_number": {
                            "commercial_invoice_line_item_id": 12345,
                            "container_number": "XYZ123",
                            "created_at": "2020-01-01T15:28:03Z",
                            "id": 123,
                            "updated_at": "2020-01-01T15:28:03Z",
                          },
                          "document_line_number": 4,
                          "id": 12345,
                          "manufacturer_name": "Company Name",
                          "price_per_unit": {
                            "amount": "12.34",
                            "currency_code": "USD",
                          },
                          "product": {
                            "_object": "/api/refs/object",
                            "id": 12345,
                            "link": "https://api.flexport.com/products/12345",
                            "ref_type": "/product",
                          },
                          "purchase_order_number": "9876-ABC",
                          "total_units": 10,
                          "value": {
                            "amount": "12.34",
                            "currency_code": "USD",
                          },
                          "volume": {
                            "_object": "/quantity/volume",
                            "unit": "cbm",
                            "value": 12.34,
                          },
                          "weight": {
                            "_object": "/quantity/weight",
                            "unit": "kg",
                            "value": 12.34,
                          },
                        },
                        {
                          "_object": "/commercial_invoice_line_item",
                          "document_line_number": 4,
                          "id": 12345,
                          "manufacturer_name": "Company Name",
                          "purchase_order_number": "9876-ABC",
                          "total_units": 10,
                        },
                      ],
                      "manufacturer_addresses": [
                        {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "id-3333",
                          "state": "MN",
                          "street_address": "1641 Settlers Lane",
                          "street_address2": "STE 2918",
                          "timezone": "America/Los_Angeles",
                          "unlocode": "US AL2",
                          "zip": "56307",
                        },
                        {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "address_ref_x",
                          "street_address": "1641 Settlers Lane",
                          "timezone": "America/Los_Angeles",
                        },
                      ],
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "order_number": "order_number",
                      "shipment": {
                        "_object": "/api/refs/object",
                        "id": 123456,
                        "link": "https://api.flexport.com/shipments/123456",
                        "ref_type": "/shipment",
                      },
                      "total_unit_count": "12345",
                      "total_value": {
                        "amount": "100",
                        "currency_code": "USD",
                      },
                      "total_volume": {
                        "_object": "/quantity/volume",
                        "unit": "cbm",
                        "value": 100,
                      },
                      "total_weight": {
                        "_object": "/quantity/weight",
                        "unit": "kg",
                        "value": 100,
                      },
                    },
                    "self": "https://api.flexport.com/commercial_invoices",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/commercial_invoices",
            "request": {
              "body": {
                "properties": {
                  "currency_code": {
                    "docs": "The currency being used on the commercial invoice.",
                    "type": "optional<string>",
                  },
                  "invoice_number": {
                    "docs": "Invoice number on the commercial invoice, typically used for display purposes. Uniqueness is based on the supplier Involved Party. There can be multiple commercial invoices with the same invoice_number only if they have different suppliers.",
                    "type": "optional<string>",
                  },
                  "is_related_parties": {
                    "docs": "Whether there was a related parties transaction as defined by CBP.",
                    "type": "optional<boolean>",
                  },
                  "line_items": "optional<list<root.CreateCommercialInvoiceLineItem>>",
                  "manufacturer_refs": "optional<list<string>>",
                  "metadata": "optional<root.Metadata>",
                  "proration_amount": "optional<root.Money>",
                },
              },
              "headers": undefined,
              "name": "UpdateCommercialInvoice",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "The updated commercial invoice",
              "type": "CommercialInvoicesUpdateResponse",
            },
          },
        },
      },
      "types": {
        "CommercialInvoicesCreateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.CommercialInvoice>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "CommercialInvoicesIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<CommercialInvoicesIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "CommercialInvoicesIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.CommercialInvoice>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
        "CommercialInvoicesShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.CommercialInvoice>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "CommercialInvoicesUpdateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.CommercialInvoice>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "company.yml": {
      "docs": "Endpoints relating to Company objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Company",
        "endpoints": {
          "network_company_create": {
            "auth": false,
            "display-name": "Create a new company object",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "name": "Zoomit",
                  "ref": "zoomit-ref",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/network/company",
                      "contacts": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/network/contacts?f.company.id=K67EZV1K8cQ5afQErZwk1Q",
                        "ref_type": "/network/contact",
                      },
                      "editable": true,
                      "entities": [
                        {
                          "_object": "/company/entity",
                          "id": 123456,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "zoomit_address_ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "USAL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "id-123456",
                          "vat_numbers": [
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "id": "K67EZV1K8cQ5afQErZwk1Q",
                      "locations": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/network/locations?f.company.id=K67EZV1K8cQ5afQErZwk1Q",
                        "ref_type": "/network/location",
                      },
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "name": "Zoomit",
                      "ref": "zoomit_ref",
                    },
                    "self": "https://api.flexport.com/network/companies",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/network/companies",
            "request": {
              "body": {
                "properties": {
                  "name": {
                    "docs": "Always required. Name of the company.",
                    "type": "string",
                  },
                  "ref": {
                    "docs": "Your custom string used to refer to the company",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "CreateCompany",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "The created company",
              "type": "NetworkCompanyCreateResponse",
            },
          },
          "network_company_index": {
            "auth": false,
            "display-name": "List company objects",
            "docs": "Returns a list of companies in the network.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/network/company",
                          "contacts": {
                            "_object": "/api/refs/collection",
                            "link": "https://api.flexport.com/network/contact/1234",
                            "ref_type": "/network/contacts",
                          },
                          "editable": true,
                          "entities": [
                            {
                              "_object": "/company_entity",
                              "id": 9281,
                              "mailing_address": {
                                "_object": "/address",
                                "city": "Albany",
                                "country": "United States of America",
                                "country_code": "US",
                                "ref": "zoomit_address_ref",
                                "state": "MN",
                                "street_address": "1641 Settlers Lane",
                                "street_address2": "STE 2918",
                                "timezone": "America/Los_Angeles",
                                "unlocode": "USAL2",
                                "zip": "56307",
                              },
                              "name": "Zoomit",
                              "ref": "zoomit_ref",
                              "vat_numbers": [
                                {
                                  "_object": "company_entity/vat_number",
                                  "country_code": "US",
                                  "number": "US 123746396",
                                },
                                {
                                  "_object": "/company_entity/vat_number",
                                  "country_code": "GB",
                                  "number": "GB 123456789",
                                },
                              ],
                            },
                            {
                              "_object": "/company_entity",
                              "id": 9281,
                              "name": "Zoomit",
                              "ref": "zoomit_ref",
                            },
                          ],
                          "id": "ABC123",
                          "locations": {
                            "_object": "/api/refs/collection",
                            "link": "https://api.flexport.com/network/location/123456",
                            "ref_type": "/network/location",
                          },
                          "name": "CompanyFoo",
                          "ref": "ref_for_company",
                        },
                        {
                          "_object": "/network/company",
                        },
                      ],
                      "next": "https://api.flexport.com/network/companies?page=3&per=10",
                      "prev": "https://api.flexport.com/network/companies?page=12&per=10",
                      "total_count": 121,
                    },
                    "self": "https://api.flexport.com/network/companies?page=13&per=10",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/network/companies",
            "request": {
              "name": "NetworkCompanyIndexRequest",
              "query-parameters": {
                "f.metadata.YOUR_METADATA_KEY": {
                  "docs": "Only return companies that have a specific metadata key-value pair. Multiple metadata filters can be added to a single query. If there are multiple metadata filters each with the same metadata key, then the filter will return companies matching any of the specified metadata values for that metadata key.",
                  "type": "optional<string>",
                },
                "f.ref": {
                  "docs": "The ref for the company.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive)",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "collection of companies",
              "type": "NetworkCompanyIndexResponse",
            },
          },
          "network_company_me": {
            "auth": false,
            "display-name": "Retrieve your company",
            "docs": "Retrieves the details of your own organization.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/network/company",
                      "contacts": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/network/contacts/1234",
                        "ref_type": "/network/contact",
                      },
                      "editable": true,
                      "entities": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "zoomit_address_ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "USAL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "id": "ABC123",
                      "locations": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/network/locations/123456",
                        "ref_type": "/network/location",
                      },
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "name": "CompanyFoo",
                      "ref": "ref_for_company",
                    },
                    "self": "https://api.flexport.com/network/me/companies",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/network/me/companies",
            "response": {
              "docs": "Success",
              "type": "NetworkCompanyMeResponse",
            },
          },
          "network_company_show": {
            "auth": false,
            "display-name": "Retrieve a company",
            "docs": "Retrieves the details of a single company.",
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/network/company",
                      "contacts": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/network/contacts/1234",
                        "ref_type": "/network/contact",
                      },
                      "editable": true,
                      "entities": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "zoomit_address_ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "USAL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "company_entity/vat_number",
                              "country_code": "US",
                              "number": "US 123746396",
                            },
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "id": "ABC123",
                      "locations": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/network/locations/123456",
                        "ref_type": "/network/location",
                      },
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "name": "CompanyFoo",
                      "ref": "ref_for_company",
                    },
                    "self": "https://api.flexport.com/network/companies/ABC123",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/network/companies/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the requested company",
                "type": "string",
              },
            },
            "response": {
              "docs": "Success",
              "type": "NetworkCompanyShowResponse",
            },
          },
          "network_company_update": {
            "auth": false,
            "display-name": "Update an existing company",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "request": {
                  "name": "Updated Zoomit",
                  "ref": "zoomit_ref",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/network/company",
                      "contacts": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/network/contacts?f.company.id=K67EZV1K8cQ5afQErZwk1Q",
                        "ref_type": "/network/contact",
                      },
                      "editable": true,
                      "entities": [
                        {
                          "_object": "/company/entity",
                          "id": 123456,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "zoomit_address_ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "USAL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "id-123456",
                          "vat_numbers": [
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "id": "K67EZV1K8cQ5afQErZwk1Q",
                      "locations": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/network/locations?f.company.id=K67EZV1K8cQ5afQErZwk1Q",
                        "ref_type": "/network/location",
                      },
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "name": "Updated Zoomit",
                      "ref": "zoomit_ref",
                    },
                    "self": "https://api.flexport.com/network/companies",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/network/companies/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the requested company",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "name": {
                    "docs": "Updated name of the company.",
                    "type": "optional<string>",
                  },
                  "ref": {
                    "docs": "Updated ref of the company",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "UpdateCompany",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "The updated company",
              "type": "NetworkCompanyUpdateResponse",
            },
          },
        },
      },
      "types": {
        "NetworkCompanyCreateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Company>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "NetworkCompanyIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<NetworkCompanyIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "NetworkCompanyIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.Company>>",
            "next": "optional<string>",
            "prev": "optional<string>",
            "total_count": "optional<integer>",
          },
        },
        "NetworkCompanyMeResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Company>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "NetworkCompanyShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Company>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "NetworkCompanyUpdateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Company>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "companyEntity.yml": {
      "docs": "Endpoints relating to CompanyEntity objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "CompanyEntity",
        "endpoints": {
          "company_entity_index": {
            "auth": false,
            "display-name": "List of company entity objects",
            "docs": "Returns a list of the company entity objects in the network.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "my-address-ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "USAL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "company_entity/vat_number",
                              "country_code": "US",
                              "number": "US 123746396",
                            },
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "next": "https://api.flexport.com/network/company_entities?page=3&per=10",
                      "prev": "https://api.flexport.com/network/company_entities?page=12&per=10",
                      "total_count": 121,
                    },
                    "self": "https://api.flexport.com/network/company_entities?page=13&per=10",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/network/company_entities",
            "request": {
              "name": "CompanyEntityIndexRequest",
              "query-parameters": {
                "f.company_id": {
                  "docs": "The id for the company entity's parent company",
                  "type": "optional<string>",
                },
                "f.company_ref": {
                  "docs": "The ref for the company entity's parent company",
                  "type": "optional<string>",
                },
                "f.ref": {
                  "docs": "The ref for the company entity",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive)",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "collection of company entities",
              "type": "CompanyEntityIndexResponse",
            },
          },
          "network_company_entity_create": {
            "auth": false,
            "display-name": "Create and return a new company entity",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "company_id": "2UXaj4xcHoW8nwh9UVOMpw",
                  "company_ref": "Zoomit",
                  "mailing_address": {
                    "city": "Albany",
                    "country_code": "US",
                    "state": "MN",
                    "street_address": "1641 Settlers Lane",
                    "street_address2": "STE 2918",
                    "unlocode": "USAL2",
                    "zip": "56307",
                  },
                  "name": "Zoomit",
                  "ref": "my-zoomit-ref",
                  "vat_numbers": [
                    {
                      "country_code": "GB",
                      "number": "GB 123456789",
                    },
                  ],
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/company_entity",
                      "id": 9281,
                      "mailing_address": {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "my-address-ref",
                        "state": "MN",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "USAL2",
                        "zip": "56307",
                      },
                      "name": "Zoomit",
                      "ref": "my-zoomit-ref",
                      "vat_numbers": [
                        {
                          "_object": "/company_entity/vat_number",
                          "country_code": "GB",
                          "number": "GB 123456789",
                        },
                        {
                          "_object": "/company_entity/vat_number",
                          "country_code": "GB",
                          "number": "GB 123456789",
                        },
                      ],
                    },
                    "self": "https://api.flexport.com/network/company_entities",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/network/company_entities",
            "request": {
              "body": {
                "properties": {
                  "company_id": {
                    "docs": "The id of the new company entity's parent company. Either company_id or company_ref is required",
                    "type": "optional<string>",
                  },
                  "company_ref": {
                    "docs": "The ref of the new company entity's parent company. Either company_id or company_ref is required",
                    "type": "optional<string>",
                  },
                  "mailing_address": {
                    "docs": "Always Required. The object representing the mailing address of the company entity.",
                    "type": "root.AddressForRequestBody",
                  },
                  "name": {
                    "docs": "Always required. Legal name of the new company entity",
                    "type": "string",
                  },
                  "ref": {
                    "docs": "Not required. The ref that will be created for the new company entity",
                    "type": "optional<string>",
                  },
                  "vat_numbers": {
                    "docs": "Not required. An array of VAT Numbers for the new company entity.",
                    "type": "optional<list<root.WriteVatNumber>>",
                  },
                },
              },
              "headers": undefined,
              "name": "CreateCompanyEntity",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "The created company entity",
              "type": "NetworkCompanyEntityCreateResponse",
            },
          },
          "network_company_entity_show": {
            "auth": false,
            "display-name": "Retrieve a company entity",
            "docs": "Retrieves the details of a single company entity",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/company_entity",
                      "id": 9281,
                      "mailing_address": {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "my-address-ref",
                        "state": "MN",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "USAL2",
                        "zip": "56307",
                      },
                      "name": "Zoomit",
                      "ref": "zoomit_ref",
                      "vat_numbers": [
                        {
                          "_object": "company_entity/vat_number",
                          "country_code": "US",
                          "number": "US 123746396",
                        },
                        {
                          "_object": "/company_entity/vat_number",
                          "country_code": "GB",
                          "number": "GB 123456789",
                        },
                      ],
                    },
                    "self": "https://api.flexport.com/network/company_entities/9281",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/network/company_entities/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the requested company entity",
                "type": "string",
              },
            },
            "response": {
              "docs": "Success",
              "type": "NetworkCompanyEntityShowResponse",
            },
          },
          "network_company_entity_update": {
            "auth": false,
            "display-name": "Update a company entity",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "request": {
                  "name": "Zoomit V2",
                  "ref": "zoomit-us",
                  "vat_numbers": [
                    {
                      "country_code": "GB",
                      "number": "GB 123456789",
                    },
                  ],
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/company_entity",
                      "id": 9281,
                      "mailing_address": {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "my-address-ref",
                        "state": "MN",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "USAL2",
                        "zip": "56307",
                      },
                      "name": "Zoomit V2",
                      "ref": "zoomit-us",
                      "vat_numbers": [
                        {
                          "_object": "company_entity/vat_number",
                          "country_code": "GB",
                          "number": "GB 123746396",
                        },
                        {
                          "_object": "/company_entity/vat_number",
                          "country_code": "GB",
                          "number": "GB 123456789",
                        },
                      ],
                    },
                    "self": "https://api.flexport.com/network/company_entities/9281",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/network/company_entities/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the requested company entity",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "mailing_address": "optional<root.AddressForRequestBody>",
                  "name": {
                    "docs": "The new legal name of the company entity",
                    "type": "optional<string>",
                  },
                  "ref": {
                    "docs": "The new ref that will be used for the company entity",
                    "type": "optional<string>",
                  },
                  "vat_numbers": {
                    "docs": "If a value for vat_numbers is specified, the array specified will replace all the existing VAT numbers of the company entity",
                    "type": "optional<list<root.WriteVatNumber>>",
                  },
                },
              },
              "headers": undefined,
              "name": "UpdateCompanyEntity",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Success",
              "type": "NetworkCompanyEntityUpdateResponse",
            },
          },
        },
      },
      "types": {
        "CompanyEntityIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<CompanyEntityIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "CompanyEntityIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.CompanyEntity>>",
            "next": "optional<string>",
            "prev": "optional<string>",
            "total_count": "optional<integer>",
          },
        },
        "NetworkCompanyEntityCreateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.CompanyEntity>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "NetworkCompanyEntityShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.CompanyEntity>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "NetworkCompanyEntityUpdateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.CompanyEntity>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "contact.yml": {
      "docs": "Endpoints relating to Contact objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Contact",
        "endpoints": {
          "network_contact_create": {
            "auth": false,
            "display-name": "Create a new contact object",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "company_id": "2UXaj4xcHoW8nwh9UVOMpw",
                  "email": "john@example.com",
                  "name": "John Smith",
                  "phone_number": "861-555-5555",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/network/contact",
                      "company": {
                        "_object": "/api/refs/object",
                        "id": "2UXaj4xcHoW8nwh9UVOMpw",
                        "link": "https://api.flexport.com/network/companies/2UXaj4xcHoW8nwh9UVOMpw",
                        "ref_type": "/network/company",
                      },
                      "email": "john@example.com",
                      "id": "FHLKEFHHoW8nwh9UVOMpw",
                      "locations": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/network/locations?f.contact.id=FHLKEFHHoW8nwh9UVOMpw",
                        "ref_type": "/network/location",
                      },
                      "name": "John Smith",
                      "phone_number": "861-555-5555",
                    },
                    "self": "https://api.flexport.com/network/contacts",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/network/contacts",
            "request": {
              "body": {
                "properties": {
                  "company_id": {
                    "docs": "ID of the new contact's company. If not specified, the contact will be created for your company.",
                    "type": "optional<string>",
                  },
                  "email": {
                    "docs": "Always required. Email address of the new contact.",
                    "type": "string",
                  },
                  "name": {
                    "docs": "Always required. Name of the new contact.",
                    "type": "string",
                  },
                  "phone_number": {
                    "docs": "Always required. Phone number of the new contact.",
                    "type": "string",
                  },
                },
              },
              "headers": undefined,
              "name": "CreateContact",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "The created contact",
              "type": "NetworkContactCreateResponse",
            },
          },
          "network_contact_index": {
            "auth": false,
            "display-name": "List contact objects",
            "docs": "Returns a list of contacts in the network.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/network/contact",
                          "company": {
                            "_object": "/api/refs/object",
                            "id": "2UXaj4xcHoW8nwh9UVOMpw",
                            "link": "https://api.flexport.com/network/companies/2UXaj4xcHoW8nwh9UVOMpw",
                            "ref_type": "/network/company",
                          },
                          "email": "joe@example.com",
                          "id": "ABC123",
                          "locations": {
                            "_object": "/api/refs/collection",
                            "link": "https://api.flexport.com/network/locations/123456",
                            "ref_type": "/network/location",
                          },
                          "name": "Joe Schmoe",
                          "phone_number": "6789998212",
                        },
                        {
                          "_object": "/network/contact",
                        },
                      ],
                      "next": "https://api.flexport.com/network/contacts?page=3&per=10",
                      "prev": "https://api.flexport.com/network/contacts?page=12&per=10",
                      "total_count": 121,
                    },
                    "self": "https://api.flexport.com/network/contacts?page=13&per=10",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/network/contacts",
            "request": {
              "name": "NetworkContactIndexRequest",
              "query-parameters": {
                "f.company.id": {
                  "docs": "The id for the company.",
                  "type": "optional<string>",
                },
                "f.company_ref": {
                  "docs": "The ref for the company.",
                  "type": "optional<string>",
                },
                "f.location.id": {
                  "docs": "Filters out all contacts not related to this location.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive)",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "collection of contacts",
              "type": "NetworkContactIndexResponse",
            },
          },
          "network_contact_show": {
            "auth": false,
            "display-name": "Retrieve a contact",
            "docs": "Retrieves the details of a single contact.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/network/contact",
                      "company": {
                        "_object": "/api/refs/object",
                        "id": "2UXaj4xcHoW8nwh9UVOMpw",
                        "link": "https://api.flexport.com/network/companies/2UXaj4xcHoW8nwh9UVOMpw",
                        "ref_type": "/network/company",
                      },
                      "email": "joe@example..com",
                      "id": "ABC123",
                      "locations": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/network/locations/123456",
                        "ref_type": "/network/location",
                      },
                      "name": "Joe Schmoe",
                      "phone_number": "6789998212",
                    },
                    "self": "https://api.flexport.com/network/contacts/ABC123",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/network/contacts/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the requested contact",
                "type": "string",
              },
            },
            "response": {
              "docs": "Success",
              "type": "NetworkContactShowResponse",
            },
          },
          "network_contact_update": {
            "auth": false,
            "display-name": "Update an existing contact",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "request": {
                  "email": "john_new_email@example.com",
                  "name": "John Smith",
                  "phone_number": "861-555-7777",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/network/contact",
                      "company": {
                        "_object": "/api/refs/object",
                        "id": "2UXaj4xcHoW8nwh9UVOMpw",
                        "link": "https://api.flexport.com/network/companies/2UXaj4xcHoW8nwh9UVOMpw",
                        "ref_type": "/network/company",
                      },
                      "email": "john_new_email@example.com",
                      "id": "FHLKEFHHoW8nwh9UVOMpw",
                      "locations": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/network/locations?f.contact.id=FHLKEFHHoW8nwh9UVOMpw",
                        "ref_type": "/network/location",
                      },
                      "name": "John Smith",
                      "phone_number": "861-555-7777",
                    },
                    "self": "https://api.flexport.com/network/contacts/FHLKEFHHoW8nwh9UVOMpw",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/network/contacts/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the requested contact",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "email": {
                    "docs": "Updated email address of the contact.",
                    "type": "optional<string>",
                  },
                  "name": {
                    "docs": "Updated name of the contact.",
                    "type": "optional<string>",
                  },
                  "phone_number": {
                    "docs": "Updated phone number of the contact.",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "UpdateContact",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "The updated contact",
              "type": "NetworkContactUpdateResponse",
            },
          },
        },
      },
      "types": {
        "NetworkContactCreateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Contact>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "NetworkContactIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<NetworkContactIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "NetworkContactIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.Contact>>",
            "next": "optional<string>",
            "prev": "optional<string>",
            "total_count": "optional<integer>",
          },
        },
        "NetworkContactShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Contact>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "NetworkContactUpdateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Contact>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "container.yml": {
      "docs": "Endpoints relating to Container objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Container",
        "endpoints": {
          "list": {
            "auth": false,
            "display-name": "List all containers.",
            "docs": "Returns a list of containers. The containers are sorted descending by creation date.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/ocean/shipment_container",
                          "actual_arrival_date": "2019-02-06T19:28:25Z",
                          "actual_delivery_date": "2019-02-06T19:28:25Z",
                          "actual_departure_date": "2019-02-06T19:28:25Z",
                          "actual_pickup_date": "2019-02-06T19:28:25Z",
                          "available_for_pickup_date": "2019-02-16T00:00:00Z",
                          "cargo_ready_date": "2019-02-06",
                          "container_legs": {
                            "_object": "/api/refs/collection",
                            "link": "https://api.flexport.com/ocean/shipment_container_legs?f.shipment_container.id=123",
                            "ref_type": "/ocean/shipment_container_leg",
                          },
                          "container_number": "BWSE3982156",
                          "container_size": "fourty_ft",
                          "container_type": "dry",
                          "empty_ready_date": "2019-02-16T00:00:00.000Z",
                          "empty_returned_date": "2019-02-28",
                          "estimated_arrival_date": "2019-02-06T19:28:25Z",
                          "estimated_available_for_pickup_date": "2019-02-16T00:00:00Z",
                          "estimated_delivery_date": "2019-02-06T19:28:25Z",
                          "estimated_departure_date": "2019-02-06T19:28:25Z",
                          "estimated_pickup_date": "2019-02-06T19:28:25Z",
                          "id": 283910,
                          "items": [
                            {
                              "_object": "/shipment_item",
                              "id": 29820,
                              "product": {
                                "_object": "/product",
                                "client_verified": true,
                                "country_of_origin": "China",
                                "description": "The best 12V AC Adapter on the market",
                                "id": 84291,
                                "name": "AC Adapter 12V",
                                "product_category": "Cosmetics",
                                "sku": "WDVCDFD-RM00472",
                              },
                              "purchase_order_number": "PO002811",
                              "total_units": 523,
                              "total_volume": {
                                "_object": "/quantity/volume",
                                "unit": "cbm",
                                "value": 8200,
                              },
                              "total_weight": {
                                "_object": "/quantity/weight",
                                "unit": "kg",
                                "value": 224.02,
                              },
                            },
                            {
                              "_object": "/shipment_item",
                              "id": 29820,
                              "purchase_order_number": "PO002811",
                              "total_units": 523,
                            },
                          ],
                          "last_free_day_date": "2019-02-16T00:00:00Z",
                          "seal_number": "UE_WQ2934875",
                          "shipment": {
                            "_object": "/api/refs/object",
                            "id": 123,
                            "link": "https://api.flexport.com/shipments/123",
                            "ref_type": "/shipment",
                          },
                        },
                        {
                          "_object": "/ocean/shipment_container",
                          "container_number": "BWSE3982156",
                          "id": 283910,
                        },
                      ],
                      "next": "https://api.flexport.com/ocean/shipment_containers?page=3",
                      "prev": "https://api.flexport.com/ocean/shipment_containers?page=1",
                    },
                    "self": "https://api.flexport.com",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/ocean/shipment_containers",
            "request": {
              "name": "ContainerListRequest",
              "query-parameters": {
                "f.container_number": {
                  "docs": "Only return containers associated with the given container number.",
                  "type": "optional<string>",
                },
                "f.metadata.YOUR_METADATA_KEY": {
                  "docs": "Only return containers that have a specific metadata key-value pair. Multiple metadata filters can be added to a single query. If there are multiple metadata filters each with the same metadata key, then the filter will return containers matching any of the specified metadata values for that metadata key.",
                  "type": "optional<string>",
                },
                "f.shipment.id": {
                  "docs": "Only return containers associated with the shipment specified by this id.",
                  "type": "optional<integer>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive).",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Success",
              "type": "ContainerListResponse",
            },
          },
          "show": {
            "auth": false,
            "display-name": "Retrieve a container.",
            "docs": "Retrieves the details of a single container.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/ocean/shipment_container",
                      "actual_arrival_date": "2019-02-06T19:28:25Z",
                      "actual_delivery_date": "2019-02-06T19:28:25Z",
                      "actual_departure_date": "2019-02-06T19:28:25Z",
                      "actual_pickup_date": "2019-02-06T19:28:25Z",
                      "available_for_pickup_date": "2019-02-16T00:00:00Z",
                      "cargo_ready_date": "2019-02-06",
                      "container_legs": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/ocean/shipment_container_legs?f.shipment_container.id=123",
                        "ref_type": "/ocean/shipment_container_leg",
                      },
                      "container_number": "BWSE3982156",
                      "container_size": "fourty_ft",
                      "container_type": "dry",
                      "empty_ready_date": "2019-02-16T00:00:00.000Z",
                      "empty_returned_date": "2019-02-28",
                      "estimated_arrival_date": "2019-02-06T19:28:25Z",
                      "estimated_available_for_pickup_date": "2019-02-16T00:00:00Z",
                      "estimated_delivery_date": "2019-02-06T19:28:25Z",
                      "estimated_departure_date": "2019-02-06T19:28:25Z",
                      "estimated_pickup_date": "2019-02-06T19:28:25Z",
                      "id": 283910,
                      "items": [
                        {
                          "_object": "/shipment_item",
                          "id": 29820,
                          "product": {
                            "_object": "/product",
                            "client_verified": true,
                            "country_of_origin": "China",
                            "description": "The best 12V AC Adapter on the market",
                            "id": 84291,
                            "name": "AC Adapter 12V",
                            "product_category": "Cosmetics",
                            "sku": "WDVCDFD-RM00472",
                          },
                          "purchase_order_number": "PO002811",
                          "total_units": 523,
                          "total_volume": {
                            "_object": "/quantity/volume",
                            "unit": "cbm",
                            "value": 8200,
                          },
                          "total_weight": {
                            "_object": "/quantity/weight",
                            "unit": "kg",
                            "value": 224.02,
                          },
                        },
                        {
                          "_object": "/shipment_item",
                          "id": 29820,
                          "purchase_order_number": "PO002811",
                          "total_units": 523,
                        },
                      ],
                      "last_free_day_date": "2019-02-16T00:00:00Z",
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "pickup_number": "ABCD1234",
                      "seal_number": "UE_WQ2934875",
                      "shipment": {
                        "_object": "/api/refs/object",
                        "id": 123,
                        "link": "https://api.flexport.com/shipments/123",
                        "ref_type": "/shipment",
                      },
                    },
                    "self": "https://api.flexport.com/ocean/shipment_containers/1234",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/ocean/shipment_containers/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the shipment to be retrieved.",
                "type": "string",
              },
            },
            "response": {
              "docs": "Success",
              "type": "ContainerShowResponse",
            },
          },
        },
      },
      "types": {
        "ContainerListResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<ContainerListResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "ContainerListResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.ShipmentContainer>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
        "ContainerShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.ShipmentContainer>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "containerLeg.yml": {
      "docs": "Endpoints relating to ContainerLeg objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "ContainerLeg",
        "endpoints": {
          "ocean_container_legs_index": {
            "auth": false,
            "display-name": "List all container legs",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/ocean/shipment_container_leg",
                          "dates": [
                            {
                              "actual_loaded_on_board_date": "2019-01-18T22:08:38.599Z",
                            },
                            {},
                          ],
                          "leg": {
                            "_object": "/api/refs/object",
                            "id": 123,
                            "link": "https://api.flexport.com/shipment_legs/123",
                            "ref_type": "/shipment_leg",
                          },
                          "shipment_container": {
                            "_object": "/api/refs/object",
                            "id": 123,
                            "link": "https://api.flexport.com/ocean/shipment_containers/123",
                            "ref_type": "/ocean/shipment_container",
                          },
                        },
                        {
                          "_object": "/ocean/shipment_container_leg",
                        },
                      ],
                      "next": "https://api.flexport.com/ocean/shipment_container_legs?page=3",
                      "prev": "https://api.flexport.com/ocean/shipment_container_legs?page=1",
                    },
                    "self": "https://api.flexport.com/ocean/shipment_container_legs",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/ocean/shipment_container_legs",
            "request": {
              "name": "OceanContainerLegsIndexRequest",
              "query-parameters": {
                "f.leg.id": {
                  "docs": "Only return containers legs associated with the shipment leg specified by this id.",
                  "type": "optional<integer>",
                },
                "f.shipment_container.container_number": {
                  "docs": "Only return containers legs associated with the given container number.",
                  "type": "optional<string>",
                },
                "f.shipment_container.id": {
                  "docs": "Only return containers legs associated with the shipment container specified by this id.",
                  "type": "optional<integer>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive).",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Success",
              "type": "OceanContainerLegsIndexResponse",
            },
          },
          "ocean_container_legs_show": {
            "auth": false,
            "display-name": "Retrieve a container leg on an Ocean shipment",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": 1,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/ocean/shipment_container_leg",
                      "dates": [
                        {
                          "actual_loaded_on_board_date": "2019-01-18T22:08:38.599Z",
                        },
                        {},
                      ],
                      "leg": {
                        "_object": "/api/refs/object",
                        "id": 123,
                        "link": "https://api.flexport.com/shipment_legs/123",
                        "ref_type": "/shipment_leg",
                      },
                      "shipment_container": {
                        "_object": "/api/refs/object",
                        "id": 123,
                        "link": "https://api.flexport.com/ocean/shipment_containers/123",
                        "ref_type": "/ocean/shipment_container",
                      },
                    },
                    "self": "https://api.flexport.com/ocean/shipment_container_legs/1234",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/ocean/shipment_container_legs/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the ContainerLeg to be retrieved",
                "type": "integer",
              },
            },
            "response": {
              "docs": "Success",
              "type": "OceanContainerLegsShowResponse",
            },
          },
        },
      },
      "types": {
        "OceanContainerLegsIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<OceanContainerLegsIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "OceanContainerLegsIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.OceanShipmentContainerLeg>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
        "OceanContainerLegsShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.OceanShipmentContainerLeg>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "customsEntries.yml": {
      "docs": "Endpoints relating to Customs Entry objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Customs Entries",
        "endpoints": {
          "customs_entry_index": {
            "auth": false,
            "display-name": "List customs entry objects",
            "docs": "Returns a list of customs entries.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/customs_entries",
                          "entry_number": "ABC-123456-7",
                          "id": "ABC123",
                          "release_date": "2019-05-03",
                          "release_status": "cleared",
                          "shipment": {
                            "_object": "/api/refs/object",
                            "id": 123456,
                            "link": "https://api.flexport.com/shipments/123456",
                            "ref_type": "/shipment",
                          },
                        },
                        {
                          "_object": "/customs_entry",
                        },
                      ],
                      "next": "https://api.flexport.com/customs_entries?page=3&per=10",
                      "prev": "https://api.flexport.com/customs_entries?page=12&per=10",
                    },
                    "self": "https://api.flexport.com/customs_entries?page=13&per=10",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/customs_entries",
            "request": {
              "name": "CustomsEntryIndexRequest",
              "query-parameters": {
                "f.shipment.id": {
                  "docs": "The unique id for the shipment.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive)",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "collection of customs entries",
              "type": "CustomsEntryIndexResponse",
            },
          },
          "show": {
            "auth": false,
            "display-name": "Retrieve a customs entry",
            "docs": "Retrieves the details of a single customs entry.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/customs_entry",
                      "entry_number": "ABC-123456-7",
                      "id": "abcdefg-1234567-hijk",
                      "release_date": "2019-05-03",
                      "release_status": "cleared",
                      "shipment": {
                        "_object": "/api/refs/object",
                        "id": 123456,
                        "link": "https://api.flexport.com/shipments/123456",
                        "ref_type": "/shipment",
                      },
                    },
                    "self": "https://api.flexport.com/customs_entries/abcdefg-1234567-hijk",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/customs_entries/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the requested customs entry",
                "type": "string",
              },
            },
            "response": {
              "docs": "Success",
              "type": "CustomsEntriesShowResponse",
            },
          },
        },
      },
      "types": {
        "CustomsEntriesShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.CustomsEntry>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "CustomsEntryIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<CustomsEntryIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "CustomsEntryIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.CustomsEntry>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
      },
    },
    "document.yml": {
      "docs": "Endpoints relating to Document objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Document",
        "endpoints": {
          "documents_create": {
            "auth": false,
            "display-name": "Create a document",
            "docs": "Create a new document for this client using the request payload",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "document": "SGVsbG8sIFdvcmxkIQ==",
                  "document_type": "packing_list",
                  "file_name": "Flexport-Booking.pdf",
                  "mime_type": "application/pdf",
                  "shipment_id": 1234567,
                  "user_email": "johndoe@flexport.com",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "document": "SGVsbG8sIFdvcmxkIQ==",
                      "document_type": "packing_list",
                      "file_name": "Flexport-Booking.pdf",
                      "memo": "memo",
                      "mime_type": "application/pdf",
                      "shipment_id": 1234567,
                      "user_email": "johndoe@flexport.com",
                    },
                    "self": "https://api.flexport.com/documents",
                    "version": 3,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/documents",
            "request": {
              "body": "root.CreateDocument",
            },
            "response": {
              "docs": "Created",
              "type": "DocumentsCreateResponse",
            },
          },
          "documents_download": {
            "auth": false,
            "display-name": "Download a document",
            "docs": "Retrieves the contents of a specified file. Returns the file as a stream of bytes.",
            "method": "GET",
            "path": "/documents/{id}/download",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the requested document",
                "type": "string",
              },
            },
            "response": {
              "docs": "Success",
              "type": "file",
            },
          },
          "documents_index": {
            "auth": false,
            "display-name": "List document objects",
            "docs": "Returns a list of all documents associated with shipments.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/document",
                          "document_type": "billing_packet",
                          "file_link": "https://api.flexport.com/documents/ABC123/download",
                          "file_metadata": {
                            "_object": "file/metadata",
                            "size": 20000,
                            "uploaded_at": "2019-06-12T02:00:00.338Z",
                          },
                          "file_name": "readme.txt",
                          "id": "ABC123",
                          "shipment": {
                            "_object": "/api/refs/object",
                            "id": 123456,
                            "link": "https://api.flexport.com/shipments/123456",
                            "ref_type": "/shipment",
                          },
                        },
                        {
                          "_object": "/document",
                        },
                      ],
                      "next": "https://api.flexport.com/documents?page=3&per=10",
                      "prev": "https://api.flexport.com/documents?page=12&per=10",
                      "total_count": 121,
                    },
                    "self": "https://api.flexport.com/documents?page=13&per=10",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/documents",
            "request": {
              "name": "DocumentsIndexRequest",
              "query-parameters": {
                "f.archived_at.exists": {
                  "docs": "Filters the list for documents that have been archived",
                  "type": "optional<string>",
                },
                "f.document_type": {
                  "docs": "Filters the list for documents that are the given type",
                  "type": "optional<string>",
                },
                "f.shipment.id": {
                  "docs": "Filters the list for documents that belong to the given shipment",
                  "type": "optional<string>",
                },
                "f.uploaded_at.gt": {
                  "docs": "Filters the list for documents that where uploaded after the given time",
                  "type": "optional<string>",
                },
                "f.uploaded_at.gte": {
                  "docs": "Filters the list for documents that where uploaded on or after the given time",
                  "type": "optional<string>",
                },
                "f.uploaded_at.lt": {
                  "docs": "Filters the list for documents that where uploaded before the given time",
                  "type": "optional<string>",
                },
                "f.uploaded_at.lte": {
                  "docs": "Filters the list for documents that where uploaded on or before the given time",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive)",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "collection of documents",
              "type": "DocumentsIndexResponse",
            },
          },
          "documents_show": {
            "auth": false,
            "display-name": "Retrieve a document",
            "docs": "Retrieves the details of a single document.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/document",
                      "archived_at": "2024-01-15T09:30:00Z",
                      "document_type": "billing_packet",
                      "file_link": "https://api.flexport.com/documents/ABC123/download",
                      "file_metadata": {
                        "_object": "file/metadata",
                        "size": 20000,
                        "uploaded_at": "2019-06-12T02:00:00.338Z",
                      },
                      "file_name": "readme.txt",
                      "id": "ABC123",
                      "memo": "memo",
                      "shipment": {
                        "_object": "/api/refs/object",
                        "id": 123456,
                        "link": "https://api.flexport.com/shipments/123456",
                        "ref_type": "/shipment",
                      },
                    },
                    "self": "https://api.flexport.com/documents/ABC123",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/documents/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the requested document",
                "type": "string",
              },
            },
            "response": {
              "docs": "Success",
              "type": "DocumentsShowResponse",
            },
          },
        },
      },
      "types": {
        "DocumentsCreateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.CreateDocument>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "DocumentsIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<DocumentsIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "DocumentsIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.Document>>",
            "next": "optional<string>",
            "prev": "optional<string>",
            "total_count": "optional<integer>",
          },
        },
        "DocumentsShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Document>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "event.yml": {
      "docs": "Endpoints relating to Event objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Event",
        "endpoints": {
          "events_index": {
            "auth": false,
            "display-name": "List all webhook events",
            "docs": "Returns a list of all events delivered to any webhook registered by this client",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/event",
                          "created_at": "2019-04-16T18:05:10.964Z",
                          "id": 354987,
                          "occurred_at": "2019-04-16T18:05:10.964Z",
                          "type": "/shipment_leg#departed",
                          "version": 2,
                        },
                      ],
                      "next": "next",
                      "prev": "prev",
                    },
                    "self": "https://api.flexport.com/events",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/events",
            "request": {
              "name": "EventsIndexRequest",
              "query-parameters": {
                "f.data.resource._object": {
                  "docs": "Get all events which involved a resource of this type. The key for this filter will be the '_object' value for your target resource",
                  "type": "optional<EventsIndexRequestFDataResourceObject>",
                },
                "f.data.shipment.id": {
                  "docs": "Get all events which involved the shipment with this ID",
                  "type": "optional<integer>",
                },
                "f.occurred_at.gte": {
                  "docs": "Filter by events which occurred on or after this datetime",
                  "type": "optional<string>",
                },
                "f.occurred_at.lte": {
                  "docs": "Filter by events which occurred on or before this datetime",
                  "type": "optional<string>",
                },
                "f.type": {
                  "docs": "Filter by the type of the event",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Success",
              "type": "EventsIndexResponse",
            },
          },
          "events_show": {
            "auth": false,
            "display-name": "Retrieve a single webhook event",
            "docs": "Returns the webhook event with ID ":id"",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": 1,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/event",
                      "created_at": "2019-04-16T18:05:10.964Z",
                      "data": {
                        "_object": "/shipment_event_data",
                        "containers": [
                          {
                            "_object": "/ocean/shipment_container",
                            "container_number": "BWSE3982156",
                            "id": 283910,
                          },
                        ],
                        "exception": {
                          "message": "US Customs Hold",
                          "root_cause_name": "Government Agency",
                        },
                        "location": {
                          "_object": "/shipment_node",
                          "tags": [
                            "port_of_loading",
                          ],
                        },
                        "resource": {
                          "_object": "/shipments",
                          "id": 2983,
                          "it_number": "V12345678",
                          "name": "ABC Shipment",
                          "pieces": 8372,
                          "visibility_only": true,
                          "wants_commercial_invoice_transcription": true,
                          "wants_delivery_service": true,
                          "wants_export_customs_service": true,
                          "wants_flexport_freight": true,
                          "wants_flexport_insurance": true,
                          "wants_freight_management_bco": true,
                          "wants_import_customs_service": true,
                          "wants_pickup_service": true,
                          "wants_trade_declaration_service": true,
                        },
                        "shipment": {
                          "_object": "/shipments",
                          "id": 2983,
                          "it_number": "V12345678",
                          "name": "ABC Shipment",
                          "pieces": 8372,
                          "visibility_only": true,
                          "wants_commercial_invoice_transcription": true,
                          "wants_delivery_service": true,
                          "wants_export_customs_service": true,
                          "wants_flexport_freight": true,
                          "wants_flexport_insurance": true,
                          "wants_freight_management_bco": true,
                          "wants_import_customs_service": true,
                          "wants_pickup_service": true,
                          "wants_trade_declaration_service": true,
                        },
                      },
                      "id": 354987,
                      "occurred_at": "2019-04-16T18:05:10.964Z",
                      "type": "/shipment_leg#departed",
                      "version": 2,
                    },
                    "self": "https://api.flexport.com/events/123456",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/events/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the event object to be retrieved",
                "type": "integer",
              },
            },
            "response": {
              "docs": "Success",
              "type": "EventsShowResponse",
            },
          },
        },
      },
      "types": {
        "EventsIndexRequestFDataResourceObject": {
          "enum": [
            {
              "name": "Document",
              "value": "/document",
            },
            {
              "name": "Invoice",
              "value": "/invoice",
            },
            {
              "name": "OceanShipmentContainer",
              "value": "/ocean/shipment_container",
            },
            {
              "name": "OceanShipmentContainerLeg",
              "value": "/ocean/shipment_container_leg",
            },
            {
              "name": "Shipment",
              "value": "/shipment",
            },
            {
              "name": "ShipmentLeg",
              "value": "/shipment_leg",
            },
          ],
        },
        "EventsIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<EventsIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "EventsIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.WebhookEvent>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
        "EventsShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.WebhookEvent>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "invoices.yml": {
      "docs": "Endpoints relating to Invoice objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Invoices",
        "endpoints": {
          "invoice_index": {
            "auth": false,
            "display-name": "List all invoices",
            "docs": "Returns a list of invoices.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "f.client_id": 54321,
                  "f.entity.id": 12345,
                  "f.entity.ref": "my-entity-ref",
                  "f.issued_at.gt": "2019-06-01",
                  "f.issued_at.lt": "2019-06-01T17:29:23.172Z",
                  "f.last_updated_at.gt": "2019-06-01",
                  "f.last_updated_at.lt": "2019-06-01T17:29:23.172Z",
                  "f.name": "FLEX-123456-1",
                  "f.shipment.id": 12345,
                  "f.shipment_id": 12345,
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/invoice",
                          "balance": {
                            "amount": "6743.29",
                            "currency_code": "EUR",
                          },
                          "credit_memos": [
                            {
                              "_object": "/credit_memo",
                              "amount": {
                                "amount": "100",
                                "currency_code": "EUR",
                              },
                              "categories": [
                                "customs",
                                "freight",
                                "categories",
                              ],
                              "category": "additional",
                              "credited_at": "2019-05-24T18:39:53Z",
                              "reasons": [
                                "reason for credit",
                                "another reason",
                                "reasons",
                              ],
                            },
                            {
                              "_object": "/credit_memo",
                              "category": "additional",
                              "credited_at": "2019-07-12T20:40:11Z",
                            },
                          ],
                          "due_date": "2019-05-22",
                          "id": "gwdpaYrhTI-T1ljn1M7o7w",
                          "issued_at": "2019-05-22T18:39:53Z",
                          "issuer": {
                            "_object": "/company_entity",
                            "id": 28714,
                            "mailing_address": {
                              "_object": "/address",
                              "city": "SAN FRANCISCO",
                              "country": "United States",
                              "country_code": "US",
                              "ref": "flexport-address-ref",
                              "state": "CA",
                              "street_address": "760 MARKET ST FL 8",
                              "street_address2": "",
                              "timezone": "America/Los_Angeles",
                              "zip": "94102-2300",
                            },
                            "name": "Flexport LLC",
                            "ref": "id-54321",
                            "vat_numbers": [
                              {
                                "_object": "company_entity/vat_number",
                                "country_code": "US",
                                "number": "US 572559803",
                              },
                              {
                                "_object": "/company_entity/vat_number",
                                "country_code": "GB",
                                "number": "GB 123456789",
                              },
                            ],
                          },
                          "items": [
                            {
                              "_object": "/invoice_item",
                              "amount": {
                                "amount": "125",
                                "currency_code": "EUR",
                              },
                              "category": "customs",
                              "name": "Import Customs Clearance",
                              "quantity": {
                                "_object": "/invoice/quantity",
                                "qualifier": "total",
                                "value": "1",
                              },
                              "rate": {
                                "_object": "/invoice/rate",
                                "qualifier": "EUR",
                                "value": "125.00",
                              },
                              "slug": "import_customs_clearance",
                            },
                            {
                              "_object": "/invoice_item",
                              "amount": {
                                "amount": "200.61",
                                "currency_code": "EUR",
                              },
                              "category": "destination",
                              "name": "Fuel Surcharge",
                              "quantity": {
                                "_object": "/invoice/quantity",
                                "qualifier": "EUR",
                                "value": "872.22",
                              },
                              "rate": {
                                "_object": "/invoice/rate",
                                "qualifier": "% Cartage Base",
                                "value": "23",
                              },
                              "slug": "fuel_surcharge",
                            },
                            {
                              "_object": "/invoice_item",
                              "amount": {
                                "amount": "872.22",
                                "currency_code": "EUR",
                              },
                              "category": "destination",
                              "name": "Cartage Base",
                              "quantity": {
                                "_object": "/invoice/quantity",
                                "qualifier": "100_LB",
                                "value": "1667",
                              },
                              "rate": {
                                "_object": "/invoice/rate",
                                "qualifier": "EUR",
                                "value": "0.5233",
                              },
                              "slug": "cartage_base",
                            },
                            {
                              "_object": "/invoice_item",
                              "amount": {
                                "amount": "15",
                                "currency_code": "EUR",
                              },
                              "category": "freight",
                              "name": "Automated Manifest System",
                              "quantity": {
                                "_object": "/invoice/quantity",
                                "qualifier": "bill of lading",
                                "value": "1",
                              },
                              "rate": {
                                "_object": "/invoice/rate",
                                "qualifier": "EUR",
                                "value": "15",
                              },
                              "slug": "automated_manifest_system_freight",
                            },
                            {
                              "_object": "/invoice_item",
                              "amount": {
                                "amount": "5197.13",
                                "currency_code": "EUR",
                              },
                              "category": "freight",
                              "name": "Air Freight",
                              "quantity": {
                                "_object": "/invoice/quantity",
                                "qualifier": "KG",
                                "value": "1667.67",
                              },
                              "rate": {
                                "_object": "/invoice/rate",
                                "qualifier": "EUR",
                                "value": "3.1183",
                              },
                              "slug": "air_freight",
                            },
                            {
                              "_object": "/invoice_item",
                              "amount": {
                                "amount": "433.33",
                                "currency_code": "EUR",
                              },
                              "category": "freight",
                              "name": "Fuel Surcharge",
                              "quantity": {
                                "_object": "/invoice/quantity",
                                "qualifier": "KG",
                                "value": "1667.67",
                              },
                              "rate": {
                                "_object": "/invoice/rate",
                                "qualifier": "EUR",
                                "value": "0.26",
                              },
                              "slug": "fuel_surcharge",
                            },
                            {
                              "_object": "/invoice_item",
                              "name": "FCL 40' HQ",
                              "slug": "fcl_40_hq",
                            },
                          ],
                          "last_updated_at": "2019-05-24T20:49:15Z",
                          "name": "FLEX-123456-1",
                          "notes": [
                            "**Container numbers**

1234567",
                            "**Notes**

Other details about this invoice",
                            "notes",
                          ],
                          "recipient": {
                            "_object": "/company_entity",
                            "id": 123456,
                            "mailing_address": {
                              "_object": "/address",
                              "city": "Anytown",
                              "country": "United States",
                              "country_code": "US",
                              "ref": "my-address-ref",
                              "state": "CA",
                              "street_address": "123 MAIN ST",
                              "street_address2": "",
                              "timezone": "America/Los_Angeles",
                              "zip": "12345",
                            },
                            "name": "Your Company Name",
                            "ref": "id-123456",
                            "vat_numbers": [
                              {
                                "_object": "company_entity/vat_number",
                                "country_code": "US",
                                "number": "US 573467947",
                              },
                              {
                                "_object": "/company_entity/vat_number",
                                "country_code": "GB",
                                "number": "GB 123456789",
                              },
                            ],
                          },
                          "shipments": {
                            "_object": "/api/refs/collection",
                            "id": 123,
                            "link": "https://api.flexport.com/shipments?f.invoice_id=gwdpaYrhTI-T1ljn1M7o7w",
                            "ref_type": "/shipment",
                          },
                          "status": "void",
                          "total": {
                            "amount": "6843.29",
                            "currency_code": "EUR",
                          },
                          "type": "Shipment",
                          "voided_at": "2019-05-22T20:49:15Z",
                        },
                        {
                          "_object": "/invoice",
                          "due_date": "2019-05-22",
                          "id": "gwdpaYrhTI-T1ljn1M7o7w",
                          "issued_at": "2019-05-22T18:39:53Z",
                          "last_updated_at": "2019-05-22T20:49:15Z",
                          "name": "FLEX-123456-1",
                          "voided_at": "2019-05-22T20:49:15Z",
                        },
                      ],
                      "next": "https://api.flexport.com/invoices?page=2&per=10",
                      "prev": "https://api.flexport.com/invoices?page=1&per=10",
                    },
                    "self": "https://api.flexport.com/invoices",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/invoices",
            "request": {
              "name": "InvoiceIndexRequest",
              "query-parameters": {
                "direction": {
                  "docs": "Set sort order. Allows "asc"(ascending) or "desc" (descending).",
                  "type": "optional<InvoiceIndexRequestDirection>",
                },
                "f.billed_directly_to_client": {
                  "docs": "Filters for invoices that are billed directly to the client, rather than invoices that are billed to a shipment.
This parameter is mutually exclusive with the f.shipment.id filter.
",
                  "type": "optional<boolean>",
                },
                "f.client_id": {
                  "docs": "[DEPRECATED] Filters the list for invoices billed directly to a client",
                  "type": "optional<integer>",
                },
                "f.entity.id": {
                  "docs": "Filters the list based on the ID of the company entity that receives the invoice",
                  "type": "optional<integer>",
                },
                "f.entity.ref": {
                  "docs": "Filters the list based on the ref of the company entity that receives the invoice",
                  "type": "optional<string>",
                },
                "f.issued_at.gt": {
                  "docs": "Filters the list for invoices issued after the specified date",
                  "type": "optional<string>",
                },
                "f.issued_at.lt": {
                  "docs": "Filters the list for invoices issued before the specified date",
                  "type": "optional<string>",
                },
                "f.last_updated_at.gt": {
                  "docs": "Filters the list for invoices last updated after the specified date",
                  "type": "optional<string>",
                },
                "f.last_updated_at.lt": {
                  "docs": "Filters the list for invoices last updated before the specified date",
                  "type": "optional<string>",
                },
                "f.name": {
                  "docs": "Filters the list based on the name of the invoice",
                  "type": "optional<string>",
                },
                "f.shipment.id": {
                  "docs": "Filters the list for invoices associated with a shipment",
                  "type": "optional<integer>",
                },
                "f.shipment_id": {
                  "docs": "[DEPRECATED] Filters the list for invoices associated with a shipment",
                  "type": "optional<integer>",
                },
                "f.status": {
                  "docs": "Filters the list based on the status of the invoice",
                  "type": "optional<InvoiceIndexRequestFStatus>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive).",
                  "type": "optional<integer>",
                },
                "sort": {
                  "docs": "Sort results by the specified field.",
                  "type": "optional<literal<"due_date">>",
                },
              },
            },
            "response": {
              "docs": "collection of invoices",
              "type": "InvoiceIndexResponse",
            },
          },
          "show": {
            "auth": false,
            "display-name": "Retrieve an invoice",
            "docs": "Retrieves the details of a single invoice",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/invoice",
                      "balance": {
                        "amount": "6743.29",
                        "currency_code": "EUR",
                      },
                      "credit_memos": [
                        {
                          "_object": "/credit_memo",
                          "amount": {
                            "amount": "100",
                            "currency_code": "EUR",
                          },
                          "categories": [
                            "customs",
                            "freight",
                            "categories",
                          ],
                          "category": "additional",
                          "credited_at": "2019-05-24T18:39:53Z",
                          "reasons": [
                            "reason for credit",
                            "another reason",
                            "reasons",
                          ],
                        },
                        {
                          "_object": "/credit_memo",
                          "category": "additional",
                          "credited_at": "2019-07-12T20:40:11Z",
                        },
                      ],
                      "due_date": "2019-05-22",
                      "id": "abcdef123",
                      "issued_at": "2019-05-22T18:39:53Z",
                      "issuer": {
                        "_object": "/company_entity",
                        "id": 28714,
                        "mailing_address": {
                          "_object": "/address",
                          "city": "SAN FRANCISCO",
                          "country": "United States",
                          "country_code": "US",
                          "ref": "flexport-address-ref",
                          "state": "CA",
                          "street_address": "760 MARKET ST FL 8",
                          "street_address2": "",
                          "timezone": "America/Los_Angeles",
                          "zip": "94102-2300",
                        },
                        "name": "Flexport LLC",
                        "ref": "id-54321",
                        "vat_numbers": [
                          {
                            "_object": "company_entity/vat_number",
                            "country_code": "US",
                            "number": "US 572559803",
                          },
                          {
                            "_object": "/company_entity/vat_number",
                            "country_code": "GB",
                            "number": "GB 123456789",
                          },
                        ],
                      },
                      "items": [
                        {
                          "_object": "/invoice_item",
                          "amount": {
                            "amount": "125",
                            "currency_code": "EUR",
                          },
                          "category": "customs",
                          "name": "Import Customs Clearance",
                          "quantity": {
                            "_object": "/invoice/quantity",
                            "qualifier": "total",
                            "value": "1",
                          },
                          "rate": {
                            "_object": "/invoice/rate",
                            "qualifier": "EUR",
                            "value": "125.00",
                          },
                          "slug": "import_customs_clearance",
                        },
                        {
                          "_object": "/invoice_item",
                          "amount": {
                            "amount": "200.61",
                            "currency_code": "EUR",
                          },
                          "category": "destination",
                          "name": "Fuel Surcharge",
                          "quantity": {
                            "_object": "/invoice/quantity",
                            "qualifier": "EUR",
                            "value": "872.22",
                          },
                          "rate": {
                            "_object": "/invoice/rate",
                            "qualifier": "% Cartage Base",
                            "value": "23",
                          },
                          "slug": "fuel_surcharge",
                        },
                        {
                          "_object": "/invoice_item",
                          "amount": {
                            "amount": "872.22",
                            "currency_code": "EUR",
                          },
                          "category": "destination",
                          "name": "Cartage Base",
                          "quantity": {
                            "_object": "/invoice/quantity",
                            "qualifier": "100_LB",
                            "value": "1667",
                          },
                          "rate": {
                            "_object": "/invoice/rate",
                            "qualifier": "EUR",
                            "value": "0.5233",
                          },
                          "slug": "cartage_base",
                        },
                        {
                          "_object": "/invoice_item",
                          "amount": {
                            "amount": "15",
                            "currency_code": "EUR",
                          },
                          "category": "freight",
                          "name": "Automated Manifest System",
                          "quantity": {
                            "_object": "/invoice/quantity",
                            "qualifier": "bill of lading",
                            "value": "1",
                          },
                          "rate": {
                            "_object": "/invoice/rate",
                            "qualifier": "EUR",
                            "value": "15",
                          },
                          "slug": "automated_manifest_system_freight",
                        },
                        {
                          "_object": "/invoice_item",
                          "amount": {
                            "amount": "5197.13",
                            "currency_code": "EUR",
                          },
                          "category": "freight",
                          "name": "Air Freight",
                          "quantity": {
                            "_object": "/invoice/quantity",
                            "qualifier": "KG",
                            "value": "1667.67",
                          },
                          "rate": {
                            "_object": "/invoice/rate",
                            "qualifier": "EUR",
                            "value": "3.1183",
                          },
                          "slug": "air_freight",
                        },
                        {
                          "_object": "/invoice_item",
                          "amount": {
                            "amount": "433.33",
                            "currency_code": "EUR",
                          },
                          "category": "freight",
                          "name": "Fuel Surcharge",
                          "quantity": {
                            "_object": "/invoice/quantity",
                            "qualifier": "KG",
                            "value": "1667.67",
                          },
                          "rate": {
                            "_object": "/invoice/rate",
                            "qualifier": "EUR",
                            "value": "0.26",
                          },
                          "slug": "fuel_surcharge",
                        },
                        {
                          "_object": "/invoice_item",
                          "name": "FCL 40' HQ",
                          "slug": "fcl_40_hq",
                        },
                      ],
                      "last_updated_at": "2019-05-24T20:49:15Z",
                      "name": "FLEX-123456-1",
                      "notes": [
                        "**Container numbers**

1234567",
                        "**Notes**

Other details about this invoice",
                        "notes",
                      ],
                      "recipient": {
                        "_object": "/company_entity",
                        "id": 123456,
                        "mailing_address": {
                          "_object": "/address",
                          "city": "Anytown",
                          "country": "United States",
                          "country_code": "US",
                          "ref": "my-address-ref",
                          "state": "CA",
                          "street_address": "123 MAIN ST",
                          "street_address2": "",
                          "timezone": "America/Los_Angeles",
                          "zip": "12345",
                        },
                        "name": "Your Company Name",
                        "ref": "id-123456",
                        "vat_numbers": [
                          {
                            "_object": "company_entity/vat_number",
                            "country_code": "US",
                            "number": "US 573467947",
                          },
                          {
                            "_object": "/company_entity/vat_number",
                            "country_code": "GB",
                            "number": "GB 123456789",
                          },
                        ],
                      },
                      "shipments": {
                        "_object": "/api/refs/collection",
                        "id": 123,
                        "link": "https://api.flexport.com/shipments?f.invoice_id=abcdef123",
                        "ref_type": "/shipment",
                      },
                      "status": "void",
                      "total": {
                        "amount": "6843.29",
                        "currency_code": "EUR",
                      },
                      "type": "Shipment",
                      "voided_at": "2019-05-22T20:49:15Z",
                    },
                    "self": "https://api.flexport.com/invoices/abcdef123",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/invoices/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the invoice to be retrieved",
                "type": "string",
              },
            },
            "response": {
              "docs": "Success",
              "type": "InvoicesShowResponse",
            },
          },
        },
      },
      "types": {
        "InvoiceIndexRequestDirection": {
          "enum": [
            "asc",
            "desc",
          ],
        },
        "InvoiceIndexRequestFStatus": {
          "enum": [
            "outstanding",
            "past_due",
            "void",
            "paid",
          ],
        },
        "InvoiceIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<InvoiceIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "InvoiceIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.Invoice>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
        "InvoicesShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Invoice>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "location.yml": {
      "docs": "Endpoints relating to Location objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Location",
        "endpoints": {
          "index": {
            "auth": false,
            "display-name": "List of location objects",
            "docs": "Returns a list of location objects in the network.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/network/location",
                          "address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "wayne_enterprises_ref",
                            "state": "MN",
                            "street_address": "1641 Gotham Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "USAL2",
                            "zip": "56307",
                          },
                          "company": {
                            "_object": "/api/refs/object",
                            "id": "abc123",
                            "link": "https://api.flexport.com/network/companies/abc123",
                            "ref_type": "/network/company",
                          },
                          "contacts": {
                            "_object": "/api/refs/collection",
                            "link": "https://api.flexport.com/network/contacts?f.location.id=abdef123",
                            "ref_type": "/network/contacts",
                          },
                          "editable": true,
                          "id": "abdef123",
                          "name": "Wayne Enterprises",
                        },
                        {
                          "_object": "/network/location",
                        },
                      ],
                      "next": "https://api.flexport.com/network/locations?page=3&per=10",
                      "prev": "https://api.flexport.com/network/locations?page=1&per=10",
                      "total_count": 11,
                    },
                    "self": "https://api.flexport.com/network/locations?page=2&per=10",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/network/locations",
            "request": {
              "name": "LocationIndexRequest",
              "query-parameters": {
                "f.company.id": {
                  "docs": "The id for a company.",
                  "type": "optional<string>",
                },
                "f.company_ref": {
                  "docs": "The ref for a company.",
                  "type": "optional<string>",
                },
                "f.contact.id": {
                  "docs": "The id for a contact at this location.",
                  "type": "optional<string>",
                },
                "f.metadata.YOUR_METADATA_KEY": {
                  "docs": "Only return locations that have a specific metadata key-value pair. Multiple metadata filters can be added to a single query. If there are multiple metadata filters each with the same metadata key, then the filter will return locations matching any of the specified metadata values for that metadata key.",
                  "type": "optional<string>",
                },
                "f.ref": {
                  "docs": "The ref for the location.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive)",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "collection of locations",
              "type": "LocationIndexResponse",
            },
          },
          "network_location_create": {
            "auth": false,
            "display-name": "Create and return a new location",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "address": {
                    "city": "Albany",
                    "country_code": "US",
                    "state": "MN",
                    "street_address": "1641 Settlers Lane",
                    "street_address2": "STE 2918",
                    "unlocode": "USAL2",
                    "zip": "56307",
                  },
                  "company_id": "xyz_123_ABC",
                  "name": "Zoomit",
                  "ref": "zoomit-management-co",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/network/location",
                      "address": {
                        "_object": "/address",
                        "city": "Los Angeles",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "zoomit-management-co",
                        "state": "CA",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "USLAX",
                        "zip": "56307",
                      },
                      "company": {
                        "_object": "/api/refs/object",
                        "id": "xyz_13_zbc",
                        "link": "https://api.flexport.com/network/companies/xyz_123_abc",
                        "ref_type": "/network/company",
                      },
                      "contacts": {
                        "_object": "/api/refs/collection",
                        "id": "id",
                        "link": "https://api.flexport.com/network/contacts?f.location.id=abdef123",
                        "ref_type": "/network/contacts",
                      },
                      "editable": true,
                      "id": "abdef123",
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "name": "Zoomit",
                      "ref": "ref",
                    },
                    "self": "https://api.flexport.com/network/locations",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/network/locations",
            "request": {
              "body": {
                "properties": {
                  "address": "root.AddressForRequestBody",
                  "company_id": {
                    "docs": "The id of the company entity to create this location for",
                    "type": "string",
                  },
                  "contact_ids": {
                    "docs": "Array of contact id's to assign to this location",
                    "type": "optional<list<string>>",
                  },
                  "metadata": {
                    "docs": "Optional metadata to add to a location. Keys must be strings and values should be arrays of strings.",
                    "type": "optional<map<string, unknown>>",
                  },
                  "name": {
                    "docs": "Name of the location",
                    "type": "string",
                  },
                  "ref": {
                    "docs": "Not required. The ref that will be created for the new location",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "CreateLocation",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "The created location",
              "type": "NetworkLocationCreateResponse",
            },
          },
          "network_location_show": {
            "auth": false,
            "display-name": "Retrieve a location by id",
            "docs": "Retrieves the details of a single location",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/network/location",
                      "address": {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "wayne_enterprises_ref",
                        "state": "MN",
                        "street_address": "1641 Gotham Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "USAL2",
                        "zip": "56307",
                      },
                      "company": {
                        "_object": "/api/refs/object",
                        "id": "abc123",
                        "link": "https://api.flexport.com/network/companies/abc123",
                        "ref_type": "/network/company",
                      },
                      "contacts": {
                        "_object": "/api/refs/collection",
                        "id": "id",
                        "link": "https://api.flexport.com/network/contacts?f.location.id=abdef123",
                        "ref_type": "/network/contacts",
                      },
                      "editable": true,
                      "id": "abdef123",
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "name": "Wayne Enterprises",
                      "ref": "ref",
                    },
                    "self": "https://api.flexport.com/network/locations/abdef123",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/network/locations/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the requested location",
                "type": "string",
              },
            },
            "response": {
              "docs": "Success",
              "type": "NetworkLocationShowResponse",
            },
          },
          "update": {
            "auth": false,
            "display-name": "Update a network location",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "request": {
                  "name": "Zoomit V2",
                  "ref": "zoomit-management-co",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/network/location",
                      "address": {
                        "_object": "/address",
                        "city": "Los Angeles",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "zoomit-management-co",
                        "state": "CA",
                        "street_address": "2 World Way",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "USLAX",
                        "zip": "90045",
                      },
                      "company": {
                        "_object": "/api/refs/object",
                        "id": "xyz_13_zbc",
                        "link": "https://api.flexport.com/network/companies/xyz_123_abc",
                        "ref_type": "/network/company",
                      },
                      "contacts": {
                        "_object": "/api/refs/collection",
                        "id": "id",
                        "link": "https://api.flexport.com/network/contacts?f.location.id=abdef123",
                        "ref_type": "/network/contacts",
                      },
                      "editable": true,
                      "id": "abdef123",
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "name": "Zoomit V2",
                      "ref": "ref",
                    },
                    "self": "https://api.flexport.com/network/locations/abdef123",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/network/locations/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the requested location",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "address": "optional<root.AddressForRequestBody>",
                  "contact_ids": {
                    "docs": "If a value for contact_ids is specified, the array specified will replace all the existing contacts at the location",
                    "type": "optional<list<string>>",
                  },
                  "metadata": {
                    "docs": "Metadata to replace existing metadata. Keys must be strings and values should be arrays.",
                    "type": "optional<map<string, unknown>>",
                  },
                  "name": {
                    "docs": "New name of the location",
                    "type": "optional<string>",
                  },
                  "ref": {
                    "docs": "The new ref for the location",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "UpdateLocation",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Success",
              "type": "LocationUpdateResponse",
            },
          },
        },
      },
      "types": {
        "LocationIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<LocationIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "LocationIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.Location>>",
            "next": "optional<string>",
            "prev": "optional<string>",
            "total_count": "optional<integer>",
          },
        },
        "LocationUpdateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Location>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "NetworkLocationCreateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Location>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "NetworkLocationShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Location>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "ports.yml": {
      "docs": "Endpoints relating to Ports objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Ports",
        "endpoints": {
          "index": {
            "auth": false,
            "display-name": "List of ports",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "f.unlocode": "CATOR",
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/place",
                          "address": {
                            "_object": "/address",
                            "city": "Chicago",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "my-chicago-ref",
                            "state": "IL",
                            "street_address": "10000 West O'Hare Ave",
                            "street_address2": "PO Box 66142",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "US AL2",
                            "zip": "60666",
                          },
                          "details": [
                            {
                              "_object": "/air/port",
                              "country_code": "US",
                              "iata_code": "ORD",
                              "icao_code": "KORD",
                              "port_code": "3901",
                            },
                            {
                              "_object": "/trucking/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "3901",
                            },
                            {
                              "_object": "/air/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "3901",
                            },
                          ],
                          "name": "ORD - Chicago - IL",
                        },
                        {
                          "_object": "/place",
                          "address": {
                            "_object": "/address",
                            "city": "Oakland",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "oakland-ref",
                            "state": "CA",
                            "street_address": "530 Water St",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "US AL2",
                            "zip": "94607",
                          },
                          "details": [
                            {
                              "_object": "/trucking/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "2811",
                            },
                            {
                              "_object": "/ocean/railport",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "2811",
                            },
                            {
                              "_object": "/ocean/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "2811",
                            },
                            {
                              "_object": "/air/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "3901",
                            },
                          ],
                          "name": "Oakland, CA",
                        },
                        {
                          "_object": "/place",
                          "name": "ORD - Chicago - IL",
                        },
                      ],
                      "next": "https://api.flexport.com/ports?page=1&per=10",
                      "prev": "https://api.flexport.com/ports?page=1&per=10",
                      "total_count": 1960,
                    },
                    "self": "https://api.flexport.com/ports?page=2&per=10",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/ports",
            "request": {
              "name": "PortsIndexRequest",
              "query-parameters": {
                "f.port_type": {
                  "docs": "Filter by the type of port. Ports can have more than one type",
                  "type": "optional<PortsIndexRequestFPortType>",
                },
                "f.unlocode": {
                  "docs": "Filter by unlocode.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive)",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "collection of ports",
              "type": "PortsIndexResponse",
            },
          },
        },
      },
      "types": {
        "PortsIndexRequestFPortType": {
          "enum": [
            "airport",
            "railport",
            "roadport",
            "seaport",
          ],
        },
        "PortsIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<PortsIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "PortsIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<optional<root.Place>>>",
            "next": "optional<string>",
            "prev": "optional<string>",
            "total_count": "optional<integer>",
          },
        },
      },
    },
    "product.yml": {
      "docs": "Endpoints relating to Product objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Product",
        "endpoints": {
          "create": {
            "auth": false,
            "display-name": "Create a product",
            "docs": "Create a new product for this client using the request payload",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "classifications": [
                    {
                      "codes": [
                        "codes",
                      ],
                      "region": "US",
                    },
                  ],
                  "client_verified": true,
                  "country_of_origin": "China",
                  "description": "The best 12V AC Adapter on the market",
                  "name": "AC Adapter 12V",
                  "product_category": "Cosmetics",
                  "product_properties": [
                    {
                      "type": "color",
                      "value": "blue",
                    },
                  ],
                  "sku": "WDVCDFD-RM00472",
                  "suppliers": [
                    {
                      "country_of_origin": "CN",
                      "id": 12345,
                      "ref": "FACTORY-123",
                    },
                  ],
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/product",
                      "archived_at": "2019-01-18T22:08:38Z",
                      "classifications": [
                        {
                          "_object": "/product/classification",
                          "codes": [
                            "0301:00",
                            "0301.00",
                          ],
                          "region": "US",
                        },
                        {
                          "_object": "/product/classification",
                          "codes": [
                            "0301.00",
                          ],
                          "region": "US",
                        },
                      ],
                      "client_verified": true,
                      "country_of_origin": "China",
                      "description": "The best 12V AC Adapter on the market",
                      "hs_codes": [
                        {
                          "_object": "/hs_code",
                          "code": "0301:00",
                          "country_code": "US",
                        },
                        {
                          "_object": "/hs_code",
                          "code": "9101.00",
                          "country_code": "US",
                        },
                      ],
                      "id": 84291,
                      "name": "AC Adapter 12V",
                      "product_category": "Cosmetics",
                      "product_properties": [
                        {
                          "_object": "/product/property",
                          "type": "color",
                          "value": "blue",
                        },
                        {
                          "_object": "/product/property",
                          "type": "color",
                          "value": "blue",
                        },
                      ],
                      "sku": "WDVCDFD-RM00472",
                    },
                    "self": "https://api.flexport.com/products/84291",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/products",
            "request": {
              "body": {
                "properties": {
                  "classifications": {
                    "docs": "Array of product classifications. If a value is specified, the array of product classifications will replace the existing set of product classifications.",
                    "type": "optional<list<root.WriteProductClassification>>",
                  },
                  "client_verified": {
                    "docs": "Indicates whether Client has verified this Product.",
                    "type": "optional<boolean>",
                  },
                  "country_of_origin": {
                    "docs": "Nation in which the product is manufactured",
                    "type": "string",
                  },
                  "description": {
                    "docs": "Description of product",
                    "type": "optional<string>",
                  },
                  "name": {
                    "docs": "Always required. Name of product",
                    "type": "string",
                  },
                  "product_category": {
                    "docs": "The category of the product",
                    "type": "string",
                  },
                  "product_properties": {
                    "docs": "Array of product properties, custom key value pairs that describe the product",
                    "type": "optional<list<root.WriteProductProperty>>",
                  },
                  "sku": {
                    "docs": "Always required. SKU of product",
                    "type": "string",
                  },
                  "suppliers": {
                    "docs": "Array of suppliers. If a value is specified, the array of suppliers will replace the existing set of suppliers.",
                    "type": "optional<list<root.WriteProductSupplier>>",
                  },
                },
              },
              "headers": undefined,
              "name": "CreateProduct",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Created",
              "type": "ProductCreateResponse",
            },
          },
          "index": {
            "auth": false,
            "display-name": "List all products for a client",
            "docs": "Returns a list of all products belonging to this client",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collectoins/paginated",
                      "data": [
                        {
                          "_object": "/product",
                          "archived_at": "2019-01-18T22:08:38Z",
                          "classifications": [
                            {
                              "_object": "/product/classification",
                              "codes": [
                                "0301:00",
                                "0301.00",
                              ],
                              "region": "US",
                            },
                            {
                              "_object": "/product/classification",
                              "codes": [
                                "0301.00",
                              ],
                              "region": "US",
                            },
                          ],
                          "client_verified": true,
                          "country_of_origin": "China",
                          "description": "The best 12V AC Adapter on the market",
                          "hs_codes": [
                            {
                              "_object": "/hs_code",
                              "code": "0301:00",
                              "country_code": "US",
                            },
                            {
                              "_object": "/hs_code",
                              "code": "9101.00",
                              "country_code": "US",
                            },
                          ],
                          "id": 84291,
                          "name": "AC Adapter 12V",
                          "product_category": "Cosmetics",
                          "product_properties": [
                            {
                              "_object": "/product/property",
                              "type": "color",
                              "value": "blue",
                            },
                            {
                              "_object": "/product/property",
                              "type": "color",
                              "value": "blue",
                            },
                          ],
                          "sku": "WDVCDFD-RM00472",
                        },
                        {
                          "_object": "/product",
                          "client_verified": true,
                          "country_of_origin": "China",
                          "description": "The best 12V AC Adapter on the market",
                          "id": 84291,
                          "name": "AC Adapter 12V",
                          "product_category": "Cosmetics",
                          "sku": "WDVCDFD-RM00472",
                        },
                      ],
                      "next": "https://api.flexport.com/products?page=3&per=10",
                      "prev": "https://api.flexport.com/products?page=1&per=10",
                    },
                    "self": "https://api.flexport.com/products?page=2&per=10",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/products",
            "request": {
              "name": "ProductIndexRequest",
              "query-parameters": {
                "f.archived_at.exists": {
                  "docs": "Filter out all archived products (f.archived_at.exists=false) or filter out all unarchived products (f.archived_at.exists=true)",
                  "type": "optional<boolean>",
                },
                "f.product_properties.TYPE": {
                  "docs": "Search for product properties that are key-value pairs. The key (TYPE) is appended at the end of the parameter name. Multiple property filters can be added to the same query. E.G. f.product_properties.color=blue",
                  "type": "optional<string>",
                },
                "f.sku": {
                  "docs": "Find the products having this SKU. SKUs are unique among active products, but there may be archived products that share the same sku.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Success",
              "type": "ProductIndexResponse",
            },
          },
          "show": {
            "auth": false,
            "display-name": "Retrieve a single product",
            "docs": "Returns the client's product with this ID",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/product",
                      "archived_at": "2019-01-18T22:08:38Z",
                      "classifications": [
                        {
                          "_object": "/product/classification",
                          "codes": [
                            "0301:00",
                            "0301.00",
                          ],
                          "region": "US",
                        },
                        {
                          "_object": "/product/classification",
                          "codes": [
                            "0301.00",
                          ],
                          "region": "US",
                        },
                      ],
                      "client_verified": true,
                      "country_of_origin": "China",
                      "description": "The best 12V AC Adapter on the market",
                      "hs_codes": [
                        {
                          "_object": "/hs_code",
                          "code": "0301:00",
                          "country_code": "US",
                        },
                        {
                          "_object": "/hs_code",
                          "code": "9101.00",
                          "country_code": "US",
                        },
                      ],
                      "id": 84291,
                      "name": "AC Adapter 12V",
                      "product_category": "Cosmetics",
                      "product_properties": [
                        {
                          "_object": "/product/property",
                          "type": "color",
                          "value": "blue",
                        },
                        {
                          "_object": "/product/property",
                          "type": "color",
                          "value": "blue",
                        },
                      ],
                      "sku": "WDVCDFD-RM00472",
                    },
                    "self": "https://api.flexport.com/products/84291",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/products/{id}",
            "path-parameters": {
              "id": {
                "docs": "Unique id for the product to be retrieved",
                "type": "string",
              },
            },
            "response": {
              "docs": "Success",
              "type": "ProductShowResponse",
            },
          },
          "update": {
            "auth": false,
            "display-name": "Update a product",
            "docs": "Update this product to represent the request payload",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "request": {
                  "classifications": [
                    {
                      "codes": [
                        "codes",
                      ],
                      "region": "US",
                    },
                  ],
                  "client_verified": true,
                  "country_of_origin": "China",
                  "description": "The best 12V AC Adapter on the market",
                  "name": "AC Adapter 12V",
                  "product_category": "Cosmetics",
                  "product_properties": [
                    {
                      "type": "color",
                      "value": "blue",
                    },
                  ],
                  "sku": "WDVCDFD-RM00472",
                  "suppliers": [
                    {
                      "country_of_origin": "CN",
                      "id": 12345,
                      "ref": "FACTORY-123",
                    },
                  ],
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/product",
                      "archived_at": "2019-01-18T22:08:38Z",
                      "classifications": [
                        {
                          "_object": "/product/classification",
                          "codes": [
                            "0301:00",
                            "0301.00",
                          ],
                          "region": "US",
                        },
                        {
                          "_object": "/product/classification",
                          "codes": [
                            "0301.00",
                          ],
                          "region": "US",
                        },
                      ],
                      "client_verified": true,
                      "country_of_origin": "China",
                      "description": "The best 12V AC Adapter on the market",
                      "hs_codes": [
                        {
                          "_object": "/hs_code",
                          "code": "0301:00",
                          "country_code": "US",
                        },
                        {
                          "_object": "/hs_code",
                          "code": "9101.00",
                          "country_code": "US",
                        },
                      ],
                      "id": 84291,
                      "name": "AC Adapter 12V",
                      "product_category": "Cosmetics",
                      "product_properties": [
                        {
                          "_object": "/product/property",
                          "type": "color",
                          "value": "blue",
                        },
                        {
                          "_object": "/product/property",
                          "type": "color",
                          "value": "blue",
                        },
                      ],
                      "sku": "WDVCDFD-RM00472",
                    },
                    "self": "https://api.flexport.com/products/84291",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/products/{id}",
            "path-parameters": {
              "id": {
                "docs": "Unique id for the product to be updated",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "classifications": {
                    "docs": "Array of product classifications. If a value is specified, the array of product classifications will replace the existing set of product classifications.",
                    "type": "optional<list<root.WriteProductClassification>>",
                  },
                  "client_verified": {
                    "docs": "Indicates whether Client has verified this Product.",
                    "type": "optional<boolean>",
                  },
                  "country_of_origin": {
                    "docs": "Nation in which the product is manufactured",
                    "type": "optional<string>",
                  },
                  "description": {
                    "docs": "Description of product",
                    "type": "optional<string>",
                  },
                  "name": {
                    "docs": "Name of product",
                    "type": "optional<string>",
                  },
                  "product_category": {
                    "docs": "The category of the product",
                    "type": "optional<string>",
                  },
                  "product_properties": {
                    "docs": "Array of product properties, custom key value pairs that describe the product",
                    "type": "optional<list<root.WriteProductProperty>>",
                  },
                  "sku": {
                    "docs": "SKU of product",
                    "type": "optional<string>",
                  },
                  "suppliers": {
                    "docs": "Array of suppliers. If a value is specified, the array of suppliers will replace the existing set of suppliers.",
                    "type": "optional<list<root.WriteProductSupplier>>",
                  },
                },
              },
              "headers": undefined,
              "name": "UpdateProduct",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Updated",
              "type": "ProductUpdateResponse",
            },
          },
        },
      },
      "types": {
        "ProductCreateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Product>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "ProductIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<ProductIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "ProductIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.Product>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
        "ProductShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Product>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "ProductUpdateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Product>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "purchaseOrder.yml": {
      "docs": "Endpoints relating to PurchaseOrder objects. **The Purchase Order endpoints need special permission to access. Please contact your Flexport Sales representative if you are interested in using these endpoints.**",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "PurchaseOrder",
        "endpoints": {
          "purchase_order_create": {
            "auth": false,
            "display-name": "Create and return a purchase order",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "cargo_ready_date": "2019-06-30",
                  "currency_code": "USD",
                  "destination_location_refs": [
                    "id-654321",
                    "id-654322",
                    "destination_location_refs",
                  ],
                  "destination_port": {
                    "code": "USFBN",
                    "code_type": "unlocode",
                  },
                  "freight_payment_terms": "freight_collect",
                  "incoterm": "FOB",
                  "issue_date": "2019-06-30",
                  "line_items": [
                    {
                      "assigned_party_ref": "id-12355",
                      "cargo_ready_date": "2019-06-30",
                      "destination_locations": [
                        {
                          "location_ref": "id-654321",
                          "units": 1,
                        },
                        {
                          "location_ref": "id-1234",
                          "units": 1,
                        },
                      ],
                      "destination_port": {
                        "code": "USFBN",
                        "code_type": "unlocode",
                      },
                      "hs_codes": [
                        {
                          "code": "6204.62.80.11",
                          "country_code": "US",
                        },
                        {
                          "code": "7608.20.00.00",
                          "country_code": "CA",
                        },
                      ],
                      "incoterm": "FOB",
                      "item_key": "item_key_1",
                      "line_item_number": 1,
                      "measurements": [
                        {
                          "measure_type": "length",
                          "unit_of_measure": "EA",
                          "value": "1.0",
                        },
                        {
                          "measure_type": "length",
                          "unit_of_measure": "EA",
                          "value": "1.0",
                        },
                      ],
                      "must_arrive_date": "2019-07-31",
                      "origin_location_ref": "id-123456",
                      "origin_port": {
                        "code": "USFBN",
                        "code_type": "unlocode",
                      },
                      "product": {
                        "color": "red",
                        "country_of_origin": "US",
                        "dangerous": true,
                        "ean_ucc_13": "1234567890123",
                        "ean_ucc_8": "12345678",
                        "lot_number": "123456789",
                        "name": "AC Adapter 12",
                        "product_category": "furniture",
                        "size": "m",
                        "sku": "SKU-123",
                        "style": "classic",
                        "upc": "123456789",
                      },
                      "transportation_mode": "ocean",
                      "unit_cost": {
                        "amount": "100.01",
                        "currency_code": "USD",
                      },
                      "units": 10,
                    },
                    {
                      "assigned_party_ref": "id-12321",
                      "cargo_ready_date": "2019-06-30",
                      "destination_locations": [
                        {
                          "location_ref": "id-1234",
                          "units": 1,
                        },
                      ],
                      "destination_port": {
                        "code": "USFBN",
                        "code_type": "unlocode",
                      },
                      "hs_codes": [
                        {
                          "code": "7608.20.00.00",
                          "country_code": "CA",
                        },
                      ],
                      "item_key": "item_key_1",
                      "line_item_number": 1,
                      "measurements": [
                        {
                          "measure_type": "length",
                          "unit_of_measure": "EA",
                          "value": "1.0",
                        },
                      ],
                      "must_arrive_date": "2019-09-30",
                      "origin_location_ref": "id-123456",
                      "origin_port": {
                        "code": "USFBN",
                        "code_type": "unlocode",
                      },
                      "product": {
                        "color": "red",
                        "country_of_origin": "US",
                        "dangerous": false,
                        "ean_ucc_13": "0123456789012",
                        "ean_ucc_8": "01234567",
                        "lot_number": "123-456",
                        "name": "AC Adapter 12",
                        "product_category": "Cosmetics",
                        "size": "M",
                        "sku": "SKU-123",
                        "style": "classical",
                        "upc": "012345678912",
                      },
                      "units": 100,
                    },
                  ],
                  "memo": "memo",
                  "must_arrive_date": "2019-07-31",
                  "name": "PO 123",
                  "order_class": "purchase_order",
                  "order_type": "Apparel",
                  "origin_location_ref": "id-123456",
                  "origin_port": {
                    "code": "USFBN",
                    "code_type": "unlocode",
                  },
                  "parties": [
                    {
                      "contacts": [
                        {
                          "department": "a department",
                          "email": "abc@173.com",
                          "fax": "123456789",
                          "name": "abc",
                          "phone": "123456789",
                        },
                        {
                          "department": "marketing",
                          "email": "John.Doe@example.com",
                          "fax": "1 323 555 1234",
                          "name": "John Doe",
                          "phone": "767 878 8888",
                        },
                      ],
                      "external_ref": "id-1232",
                      "location_ref": "id-1232",
                      "role": "buyer",
                    },
                    {
                      "contacts": [
                        {
                          "department": "a department",
                          "email": "abc@173.com",
                          "fax": "123456789",
                          "name": "cds",
                          "phone": "123456789",
                        },
                        {
                          "department": "marketing",
                          "email": "John.Doe@example.com",
                          "fax": "1 323 555 1234",
                          "name": "John Doe",
                          "phone": "767 878 8888",
                        },
                      ],
                      "external_ref": "id-321",
                      "location_ref": "id-432",
                      "role": "seller",
                    },
                    {
                      "external_ref": "id-12344",
                      "location_ref": "id-12344",
                      "role": "buyer",
                    },
                  ],
                  "priority": "standard",
                  "status": "open",
                  "transportation_mode": "ocean",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "archived_at": "archived_at",
                    "cargo_ready_date": "cargo_ready_date",
                    "created_at": "created_at",
                    "destination_addresses": [
                      {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "address_ref_x",
                        "state": "MN",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "US AL2",
                        "zip": "56307",
                      },
                    ],
                    "destination_port": {
                      "_object": "/place",
                      "address": {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "address_ref_x",
                        "state": "MN",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "US AL2",
                        "zip": "56307",
                      },
                      "details": [
                        {
                          "_object": "/air/port",
                          "country_code": "US",
                          "iata_code": "LAX",
                          "icao_code": "KLAX",
                          "port_code": "3901",
                        },
                      ],
                      "name": "ORD - Chicago - IL",
                    },
                    "freight_paymnet_terms": "freight_collect",
                    "id": 2983,
                    "incoterm": "EXW",
                    "issue_date": "issue_date",
                    "line_items": {
                      "_object": "/api/refs/collection",
                      "link": "https://api.flexport.com/purchase_order_line_items?f.purchase_order.id=123",
                      "ref_type": "/purchase_orders/line_item",
                    },
                    "memo": "This message is written in invisible ink",
                    "metadata": {
                      "metadata": {
                        "key": "value",
                      },
                    },
                    "must_arrive_date": "must_arrive_date",
                    "name": "PO 12345 - "shipment"",
                    "order_class": "purchase_order",
                    "order_type": "Apparel",
                    "origin_address": {
                      "_object": "/address",
                      "city": "Albany",
                      "country": "United States of America",
                      "country_code": "US",
                      "ref": "address_ref_x",
                      "state": "MN",
                      "street_address": "1641 Settlers Lane",
                      "street_address2": "STE 2918",
                      "timezone": "America/Los_Angeles",
                      "unlocode": "US AL2",
                      "zip": "56307",
                    },
                    "origin_port": {
                      "_object": "/place",
                      "address": {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "address_ref_x",
                        "state": "MN",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "US AL2",
                        "zip": "56307",
                      },
                      "details": [
                        {
                          "_object": "/air/port",
                          "country_code": "US",
                          "iata_code": "LAX",
                          "icao_code": "KLAX",
                          "port_code": "3901",
                        },
                      ],
                      "name": "ORD - Chicago - IL",
                    },
                    "parties": [
                      {
                        "company_entity": {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                        "contacts": [
                          {
                            "department": "marketing",
                            "email": "John.Doe@example.com",
                            "fax": "1 323 555 1234",
                            "name": "John Doe",
                            "phone": "767 878 8888",
                          },
                        ],
                        "location": {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "address_ref_x",
                          "street_address": "1641 Settlers Lane",
                          "timezone": "America/Los_Angeles",
                        },
                        "role": "buyer",
                      },
                    ],
                    "priority": "standard",
                    "status": "open",
                    "transportation_mode": "ocean",
                    "updated_at": "updated_at",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/purchase_orders",
            "request": {
              "body": "root.CreateOrUpdatePurchaseOrder",
            },
            "response": {
              "docs": "The created purchase order",
              "type": "root.PurchaseOrder",
            },
          },
          "purchase_order_index": {
            "auth": false,
            "display-name": "List all purchase orders",
            "docs": "Returns a list of purchase orders",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "f.buyer_entity_ref": "id-54321",
                  "f.buyer_ref": "amazon-us",
                  "f.name": "PO-123456",
                  "f.seller_entity_ref": "id-12345",
                  "f.seller_ref": "amazon-us",
                  "f.shipment.id": 123456,
                  "f.updated_at.gt": "2022-01-01 18:26:37 PST",
                  "f.updated_at.lt": "2022-01-01 18:26:37 PST",
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/purchase_order",
                          "cargo_ready_date": "2019-06-30",
                          "created_at": "2020-07-31T19:52:58.140Z",
                          "destination_addresses": [
                            {
                              "_object": "/address",
                              "city": "Duisburg",
                              "country": "Germany",
                              "country_code": "DE",
                              "ref": "id-318238",
                              "state": "North Rhine Westphalia",
                              "street_address": "Vandelay street 1",
                              "timezone": "Europe/Berlin",
                              "zip": "56776",
                            },
                            {
                              "_object": "/address",
                              "city": "Albany",
                              "country": "United States of America",
                              "country_code": "US",
                              "ref": "address_ref_x",
                              "street_address": "1641 Settlers Lane",
                              "timezone": "America/Los_Angeles",
                            },
                          ],
                          "destination_port": {
                            "_object": "/place",
                            "address": {
                              "_object": "/address",
                              "city": "Fairburn",
                              "country": "United States",
                              "country_code": "US",
                              "ref": "id-313120",
                              "state": "GA",
                              "street_address": "1641 Settlers Lane",
                              "timezone": "America/New_York",
                              "unlocode": "USFBN",
                            },
                            "details": [
                              {
                                "_object": "/ocean/railport",
                                "country_code": "US",
                                "iata_code": "LAX",
                                "icao_code": "KLAX",
                                "port_code": "3901",
                              },
                              {
                                "_object": "/trucking/port",
                                "country_code": "US",
                                "iata_code": "LAX",
                                "icao_code": "KLAX",
                                "port_code": "3901",
                              },
                              {
                                "_object": "/ocean/port",
                                "country_code": "US",
                                "iata_code": "LAX",
                                "icao_code": "KLAX",
                                "port_code": "3901",
                              },
                              {
                                "_object": "/air/port",
                                "country_code": "US",
                                "iata_code": "LAX",
                                "icao_code": "KLAX",
                                "port_code": "3901",
                              },
                            ],
                            "name": "Fairburn",
                          },
                          "id": 109771,
                          "incoterm": "FOB",
                          "issue_date": "2019-06-30",
                          "line_items": {
                            "_object": "/api/refs/collection",
                            "link": "https://api.flexport.com/purchase_order_line_items?f.purchase_order.id=109771",
                            "ref_type": "/purchase_orders/line_item",
                          },
                          "memo": "memo",
                          "metadata": {
                            "size": {
                              "0": "M",
                            },
                          },
                          "must_arrive_date": "2019-07-31",
                          "name": "PO 123",
                          "order_type": "Apparel",
                          "origin_address": {
                            "_object": "/address",
                            "city": "Shenzhen",
                            "country": "China",
                            "country_code": "CN",
                            "ref": "id-274346",
                            "state": "Beijing",
                            "street_address": "No 1, 123 St",
                            "timezone": "Asia/Shanghai",
                          },
                          "origin_port": {
                            "_object": "/place",
                            "address": {
                              "_object": "/address",
                              "city": "Fairburn",
                              "country": "United States",
                              "country_code": "US",
                              "ref": "id-313120",
                              "state": "GA",
                              "street_address": "1641 Settlers Lane",
                              "timezone": "America/New_York",
                              "unlocode": "USFBN",
                            },
                            "details": [
                              {
                                "_object": "/ocean/railport",
                                "country_code": "US",
                                "iata_code": "LAX",
                                "icao_code": "KLAX",
                                "port_code": "3901",
                              },
                              {
                                "_object": "/trucking/port",
                                "country_code": "US",
                                "iata_code": "LAX",
                                "icao_code": "KLAX",
                                "port_code": "3901",
                              },
                              {
                                "_object": "/ocean/port",
                                "country_code": "US",
                                "iata_code": "LAX",
                                "icao_code": "KLAX",
                                "port_code": "3901",
                              },
                              {
                                "_object": "/air/port",
                                "country_code": "US",
                                "iata_code": "LAX",
                                "icao_code": "KLAX",
                                "port_code": "3901",
                              },
                            ],
                            "name": "Fairburn",
                          },
                          "parties": [
                            {
                              "company_entity": {
                                "_object": "/company_entity",
                                "id": 754619,
                                "mailing_address": {
                                  "_object": "/address",
                                  "city": "shanghai",
                                  "country": "China",
                                  "country_code": "CN",
                                  "ref": "address_ref_x",
                                  "state": "Shanghai",
                                  "street_address": "test",
                                  "timezone": "Asia/Shanghai",
                                },
                                "name": "test",
                                "ref": "id-754619",
                                "vat_numbers": [
                                  {
                                    "_object": "/company_entity/vat_number",
                                    "country_code": "GB",
                                    "number": "GB 123456789",
                                  },
                                ],
                              },
                              "contacts": [
                                {
                                  "department": "marketing",
                                  "email": "John.Doe@example.com",
                                  "fax": "1 323 555 1234",
                                  "name": "John Doe",
                                  "phone": "767 878 8888",
                                },
                              ],
                              "role": "buyer",
                            },
                            {
                              "company_entity": {
                                "_object": "/company_entity",
                                "id": 677939,
                                "name": "75 Aero Camino Suite 203 Goleta",
                                "ref": "id-677939",
                                "vat_numbers": [
                                  {
                                    "_object": "/company_entity/vat_number",
                                    "country_code": "GB",
                                    "number": "GB 123456789",
                                  },
                                ],
                              },
                              "contacts": [
                                {
                                  "department": "a department",
                                  "email": "abc@173.com",
                                  "fax": "123456789",
                                  "name": "cds",
                                  "phone": "123456789",
                                },
                                {
                                  "department": "marketing",
                                  "email": "John.Doe@example.com",
                                  "fax": "1 323 555 1234",
                                  "name": "John Doe",
                                  "phone": "767 878 8888",
                                },
                              ],
                              "role": "seller",
                            },
                            {
                              "company_entity": {
                                "_object": "/company_entity",
                                "id": 754619,
                                "mailing_address": {
                                  "_object": "/address",
                                  "city": "shanghai",
                                  "country": "China",
                                  "country_code": "CN",
                                  "ref": "address_ref_x",
                                  "state": "Shanghai",
                                  "street_address": "test",
                                  "timezone": "Asia/Shanghai",
                                },
                                "name": "test",
                                "ref": "id-754619",
                                "vat_numbers": [
                                  {
                                    "_object": "/company_entity/vat_number",
                                    "country_code": "GB",
                                    "number": "GB 123456789",
                                  },
                                ],
                              },
                              "contacts": [
                                {
                                  "department": "a department",
                                  "email": "abc@173.com",
                                  "fax": "123456789",
                                  "name": "abc",
                                  "phone": "123456789",
                                },
                                {
                                  "department": "marketing",
                                  "email": "John.Doe@example.com",
                                  "fax": "1 323 555 1234",
                                  "name": "John Doe",
                                  "phone": "767 878 8888",
                                },
                              ],
                              "role": "owner",
                            },
                            {},
                          ],
                          "priority": "standard",
                          "status": "open",
                          "transportation_mode": "ocean",
                          "updated_at": "2020-07-31T19:52:58.161Z",
                        },
                        {
                          "_object": "/booking",
                          "id": 2983,
                          "memo": "This message is written in invisible ink",
                          "name": "PO 12345 - "shipment"",
                          "order_type": "Apparel",
                        },
                      ],
                      "next": "https://api.flexport.com/purchase_orders?page=3&per=10",
                      "prev": "https://api.flexport.com/purchase_orders?page=12&per=10",
                    },
                    "self": "https://api.flexport.com/purchase_orders?page=13&per=10",
                    "version": 3,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/purchase_orders",
            "request": {
              "name": "PurchaseOrderIndexRequest",
              "query-parameters": {
                "direction": {
                  "docs": "Set sort order. Allows "asc"(ascending) or "desc" (descending)",
                  "type": "optional<PurchaseOrderIndexRequestDirection>",
                },
                "f.archived_at.exists": {
                  "docs": "Filter out all archived purchase orders (f.archived_at.exists=false) or filter out all unarchived purchase orders (f.archived_at.exists=true)",
                  "type": "optional<boolean>",
                },
                "f.buyer_entity_ref": {
                  "docs": "Filters the list based on the PO buyer entity",
                  "type": "optional<string>",
                },
                "f.buyer_ref": {
                  "docs": "Filters the list based on PO buyer",
                  "type": "optional<string>",
                },
                "f.name": {
                  "docs": "Filter the list based on PO name",
                  "type": "optional<string>",
                },
                "f.roles": {
                  "allow-multiple": true,
                  "docs": "Filters the list based on which role you take in the PO. You can state multiple roles with a comma.",
                  "type": "optional<PurchaseOrderIndexRequestFRolesItem>",
                },
                "f.seller_entity_ref": {
                  "docs": "Filters the list based on the PO seller entity",
                  "type": "optional<string>",
                },
                "f.seller_ref": {
                  "docs": "Filters the list based on the PO seller",
                  "type": "optional<string>",
                },
                "f.shipment.id": {
                  "docs": "Filter the list based on whether a PO is on the shipment matching the provided ID",
                  "type": "optional<integer>",
                },
                "f.status": {
                  "docs": "Filters the list based on the PO status",
                  "type": "optional<PurchaseOrderIndexRequestFStatus>",
                },
                "f.updated_at.gt": {
                  "docs": "Filter the list for POs last updated after the provided time",
                  "type": "optional<string>",
                },
                "f.updated_at.lt": {
                  "docs": "Filter the list for POs last updated before the provided time",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page Should be between 1 and 100 (inclusive)",
                  "type": "optional<integer>",
                },
                "sort": {
                  "docs": "Sort results by the specified field (only \`id\` is supported at this time)",
                  "type": "optional<literal<"id">>",
                },
              },
            },
            "response": {
              "docs": "collection of purchase orders",
              "type": "PurchaseOrderIndexResponse",
            },
          },
          "purchase_order_show": {
            "auth": false,
            "display-name": "Retrieve a purchase order",
            "docs": "Retrieves the details of a single purchase order.
",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": 1,
                },
                "response": {
                  "body": {
                    "_object": "/purchase_order",
                    "data": {
                      "_object": "/booking",
                      "archived_at": "archived_at",
                      "cargo_ready_date": "cargo_ready_date",
                      "created_at": "created_at",
                      "destination_addresses": [
                        {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "address_ref_x",
                          "street_address": "1641 Settlers Lane",
                          "timezone": "America/Los_Angeles",
                        },
                      ],
                      "destination_port": {
                        "_object": "/place",
                        "address": {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "address_ref_x",
                          "street_address": "1641 Settlers Lane",
                          "timezone": "America/Los_Angeles",
                        },
                        "details": [
                          {
                            "_object": "/air/port",
                            "country_code": "US",
                            "iata_code": "LAX",
                            "icao_code": "KLAX",
                            "port_code": "3901",
                          },
                        ],
                        "name": "ORD - Chicago - IL",
                      },
                      "freight_paymnet_terms": "freight_collect",
                      "id": 2983,
                      "incoterm": "EXW",
                      "issue_date": "issue_date",
                      "line_items": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/purchase_order_line_items?f.purchase_order.id=123",
                        "ref_type": "/purchase_orders/line_item",
                      },
                      "memo": "This message is written in invisible ink",
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "must_arrive_date": "must_arrive_date",
                      "name": "PO 12345 - "shipment"",
                      "order_class": "purchase_order",
                      "order_type": "Apparel",
                      "origin_address": {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "address_ref_x",
                        "state": "MN",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "US AL2",
                        "zip": "56307",
                      },
                      "origin_port": {
                        "_object": "/place",
                        "address": {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "address_ref_x",
                          "street_address": "1641 Settlers Lane",
                          "timezone": "America/Los_Angeles",
                        },
                        "details": [
                          {
                            "_object": "/air/port",
                            "country_code": "US",
                            "iata_code": "LAX",
                            "icao_code": "KLAX",
                            "port_code": "3901",
                          },
                        ],
                        "name": "ORD - Chicago - IL",
                      },
                      "parties": [
                        {},
                      ],
                      "priority": "standard",
                      "status": "open",
                      "transportation_mode": "ocean",
                      "updated_at": "updated_at",
                    },
                    "self": "https://api.flexport.com/purchase_orders/1234",
                    "version": 3,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/purchase_orders/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the purchase order to be retrieved",
                "type": "integer",
              },
            },
            "request": {
              "name": "PurchaseOrderShowRequest",
              "query-parameters": {
                "f.purchase_order_version.id": {
                  "docs": "The id of the version of a purchase order. By default, the latest version of the purchase order is used.",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Success",
              "type": "PurchaseOrderShowResponse",
            },
          },
          "purchase_order_update": {
            "auth": false,
            "display-name": "Update and return a purchase order",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": 1,
                },
                "request": {
                  "cargo_ready_date": "2019-06-30",
                  "currency_code": "USD",
                  "destination_location_refs": [
                    "id-654321",
                    "id-654322",
                    "destination_location_refs",
                  ],
                  "destination_port": {
                    "code": "CNSHA",
                    "code_type": "unlocode",
                  },
                  "freight_payment_terms": "freight_collect",
                  "incoterm": "FOB",
                  "issue_date": "2019-06-30",
                  "line_items": [
                    {
                      "assigned_party_ref": "id-12321",
                      "cargo_ready_date": "2019-06-30",
                      "destination_locations": [
                        {
                          "location_ref": "id-1234",
                          "units": 1,
                        },
                      ],
                      "destination_port": {
                        "code": "USFBN",
                        "code_type": "unlocode",
                      },
                      "hs_codes": [
                        {
                          "code": "7608.20.00.00",
                          "country_code": "CA",
                        },
                      ],
                      "item_key": "item_key_1",
                      "line_item_number": 1,
                      "measurements": [
                        {
                          "measure_type": "length",
                          "unit_of_measure": "EA",
                          "value": "1.0",
                        },
                      ],
                      "must_arrive_date": "2019-09-30",
                      "origin_location_ref": "id-123456",
                      "origin_port": {
                        "code": "USFBN",
                        "code_type": "unlocode",
                      },
                      "product": {
                        "color": "red",
                        "country_of_origin": "US",
                        "dangerous": false,
                        "ean_ucc_13": "0123456789012",
                        "ean_ucc_8": "01234567",
                        "lot_number": "123-456",
                        "name": "AC Adapter 12",
                        "product_category": "Cosmetics",
                        "size": "M",
                        "sku": "SKU-123",
                        "style": "classical",
                        "upc": "012345678912",
                      },
                      "units": 100,
                    },
                  ],
                  "memo": "memo",
                  "must_arrive_date": "2019-07-31",
                  "name": "PO 123",
                  "order_class": "purchase_order",
                  "order_type": "Apparel",
                  "origin_location_ref": "id-123456",
                  "origin_port": {
                    "code": "USLA",
                    "code_type": "unlocode",
                  },
                  "parties": [
                    {
                      "external_ref": "id-1232",
                      "location_ref": "id-1232",
                      "role": "buyer",
                    },
                    {
                      "external_ref": "id-321",
                      "location_ref": "id-432",
                      "role": "seller",
                    },
                    {
                      "external_ref": "id-12344",
                      "location_ref": "id-12344",
                      "role": "buyer",
                    },
                  ],
                  "priority": "standard",
                  "status": "open",
                  "transportation_mode": "ocean",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "archived_at": "archived_at",
                    "cargo_ready_date": "cargo_ready_date",
                    "created_at": "created_at",
                    "destination_addresses": [
                      {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "address_ref_x",
                        "state": "MN",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "US AL2",
                        "zip": "56307",
                      },
                    ],
                    "destination_port": {
                      "_object": "/place",
                      "address": {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "address_ref_x",
                        "state": "MN",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "US AL2",
                        "zip": "56307",
                      },
                      "details": [
                        {
                          "_object": "/air/port",
                          "country_code": "US",
                          "iata_code": "LAX",
                          "icao_code": "KLAX",
                          "port_code": "3901",
                        },
                      ],
                      "name": "ORD - Chicago - IL",
                    },
                    "freight_paymnet_terms": "freight_collect",
                    "id": 2983,
                    "incoterm": "EXW",
                    "issue_date": "issue_date",
                    "line_items": {
                      "_object": "/api/refs/collection",
                      "link": "https://api.flexport.com/purchase_order_line_items?f.purchase_order.id=123",
                      "ref_type": "/purchase_orders/line_item",
                    },
                    "memo": "This message is written in invisible ink",
                    "metadata": {
                      "metadata": {
                        "key": "value",
                      },
                    },
                    "must_arrive_date": "must_arrive_date",
                    "name": "PO 12345 - "shipment"",
                    "order_class": "purchase_order",
                    "order_type": "Apparel",
                    "origin_address": {
                      "_object": "/address",
                      "city": "Albany",
                      "country": "United States of America",
                      "country_code": "US",
                      "ref": "address_ref_x",
                      "state": "MN",
                      "street_address": "1641 Settlers Lane",
                      "street_address2": "STE 2918",
                      "timezone": "America/Los_Angeles",
                      "unlocode": "US AL2",
                      "zip": "56307",
                    },
                    "origin_port": {
                      "_object": "/place",
                      "address": {
                        "_object": "/address",
                        "city": "Albany",
                        "country": "United States of America",
                        "country_code": "US",
                        "ref": "address_ref_x",
                        "state": "MN",
                        "street_address": "1641 Settlers Lane",
                        "street_address2": "STE 2918",
                        "timezone": "America/Los_Angeles",
                        "unlocode": "US AL2",
                        "zip": "56307",
                      },
                      "details": [
                        {
                          "_object": "/air/port",
                          "country_code": "US",
                          "iata_code": "LAX",
                          "icao_code": "KLAX",
                          "port_code": "3901",
                        },
                      ],
                      "name": "ORD - Chicago - IL",
                    },
                    "parties": [
                      {
                        "company_entity": {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                        "contacts": [
                          {
                            "department": "marketing",
                            "email": "John.Doe@example.com",
                            "fax": "1 323 555 1234",
                            "name": "John Doe",
                            "phone": "767 878 8888",
                          },
                        ],
                        "location": {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "address_ref_x",
                          "street_address": "1641 Settlers Lane",
                          "timezone": "America/Los_Angeles",
                        },
                        "role": "buyer",
                      },
                    ],
                    "priority": "standard",
                    "status": "open",
                    "transportation_mode": "ocean",
                    "updated_at": "updated_at",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/purchase_orders/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the purchase order to be updated",
                "type": "integer",
              },
            },
            "request": {
              "body": "root.CreateOrUpdatePurchaseOrder",
            },
            "response": {
              "docs": "The update purchase order",
              "type": "root.PurchaseOrder",
            },
          },
        },
      },
      "types": {
        "PurchaseOrderIndexRequestDirection": {
          "enum": [
            "asc",
            "desc",
          ],
        },
        "PurchaseOrderIndexRequestFRolesItem": {
          "enum": [
            "buyer",
            "seller",
            "owner",
            "shipper",
            "consignee",
            "freight_forwarder",
            "notify_party",
            "customs_broker",
            "carrier",
            "manufacturer",
            "buyers_agent",
            "sellers_agent",
          ],
        },
        "PurchaseOrderIndexRequestFStatus": {
          "enum": [
            "open",
            "closed",
            "cancelled",
          ],
        },
        "PurchaseOrderIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<PurchaseOrderIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "PurchaseOrderIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.PurchaseOrder>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
        "PurchaseOrderShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.PurchaseOrder>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "purchaseOrderLineItem.yml": {
      "docs": "Endpoints relating to PurchaseOrderLineItem objects. **The Purchase Order Line Item endpoints need special permission to access. Please contact your Flexport Sales representative if you are interested in using these endpoints.**",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "PurchaseOrderLineItem",
        "endpoints": {
          "purchase_order_line_item_index": {
            "auth": false,
            "display-name": "List all purchase order line items.",
            "docs": "Returns a list of purchase order line items",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "f.item_key": "item1",
                  "f.purchase_order.id": 123,
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/purchase_orders/line_item",
                          "assigned_party": {
                            "_object": "/company_entity",
                            "id": 9281,
                            "mailing_address": {
                              "_object": "/address",
                              "city": "Albany",
                              "country": "United States of America",
                              "country_code": "US",
                              "ref": "address_ref_x",
                              "state": "MN",
                              "street_address": "1641 Settlers Lane",
                              "street_address2": "STE 2918",
                              "timezone": "America/Los_Angeles",
                              "unlocode": "US AL2",
                              "zip": "56307",
                            },
                            "name": "My Manufacturer",
                            "ref": "manufacturer_1",
                            "vat_numbers": [
                              {
                                "_object": "company_entity/vat_number",
                                "country_code": "US",
                                "number": "US 123746396",
                              },
                              {
                                "_object": "/company_entity/vat_number",
                                "country_code": "GB",
                                "number": "GB 123456789",
                              },
                            ],
                          },
                          "booking_line_items": {
                            "_object": "/api/refs/collection",
                            "link": "https://api.flexport.com/booking_line_items?f.purchase_order_line_item.id=123456",
                            "ref_type": "/purchase_orders/booking_line_item",
                          },
                          "destination_addresses": [
                            {
                              "location_ref": "id-1234",
                              "units": 1,
                            },
                            {
                              "location_ref": "id-1234",
                              "units": 1,
                            },
                          ],
                          "hs_codes": [
                            {
                              "_object": "/hs_code",
                              "code": "8309.90.10.00",
                              "country_code": "US",
                            },
                            {
                              "_object": "/hs_code",
                              "code": "9101.00",
                              "country_code": "US",
                            },
                          ],
                          "id": 123456,
                          "incoterm": "FOB",
                          "item_key": "item1",
                          "line_item_number": 1,
                          "line_type": "main_line",
                          "measurements": [
                            {
                              "measure_type": "length",
                              "unit_of_measure": "EA",
                              "value": "1.0",
                            },
                            {
                              "unit_of_measure": "EA",
                            },
                          ],
                          "metadata": {
                            "size": {
                              "0": "M",
                            },
                          },
                          "must_arrive_date": "2019-03-11",
                          "origin_location": {
                            "_object": "/address",
                            "city": "Shenzhen",
                            "country": "China",
                            "country_code": "CN",
                            "ref": "sellingcoaddress",
                            "state": "44",
                            "street_address": "10th YouSong Industrial District",
                            "timezone": "China/Shenzhen",
                          },
                          "product": {
                            "color": "red",
                            "country_of_origin": "US",
                            "dangerous": true,
                            "ean_ucc_13": "1234567890123",
                            "ean_ucc_8": "12345678",
                            "lot_number": "123456789",
                            "name": "AC Adapter 12",
                            "product_category": "furniture",
                            "size": "m",
                            "sku": "SKU-123",
                            "style": "classic",
                            "upc": "123456789",
                          },
                          "purchase_order": {
                            "_object": "/api/refs/object",
                            "id": 12345,
                            "link": "https://api.flexport.com/purchase_orders/26088",
                            "ref_type": "/purchase_order",
                          },
                          "transportation_mode": "air",
                          "unit_cost": {
                            "amount": "121.00",
                            "currency_code": "USD",
                          },
                          "unit_of_measure": "HUN",
                          "units": 20,
                        },
                        {
                          "_object": "/purchase_orders/line_item",
                          "id": 123456,
                          "item_key": "item1",
                          "line_item_number": 1,
                        },
                      ],
                      "next": "https://api.flexport.com/purchase_order_line_items?page=3&per=10",
                      "prev": "https://api.flexport.com/purchase_orders?page=12&per=10",
                    },
                    "self": "https://api.flexport.com/purchase_orders?page=13&per=10",
                    "version": 3,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/purchase_order_line_items",
            "request": {
              "name": "PurchaseOrderLineItemIndexRequest",
              "query-parameters": {
                "direction": {
                  "docs": "Set sort order. Allows "asc"(ascending) or "desc" (descending)",
                  "type": "optional<PurchaseOrderLineItemIndexRequestDirection>",
                },
                "f.item_key": {
                  "docs": "Filters the list based on item key",
                  "type": "optional<string>",
                },
                "f.line_item_number": {
                  "docs": "Filters the list based on line item number",
                  "type": "optional<string>",
                },
                "f.purchase_order.id": {
                  "docs": "Filters the list based on the purchase order id",
                  "type": "optional<integer>",
                },
                "f.purchase_order_version.id": {
                  "docs": "The id of the version of a purchase order. By default, the latest version of the purchase order is used.",
                  "type": "optional<integer>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive)",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "collection of purchase order line items",
              "type": "PurchaseOrderLineItemIndexResponse",
            },
          },
          "purchase_order_line_item_show": {
            "auth": false,
            "display-name": "Retrieve a purchase order line item",
            "docs": "Returns the details of a purchase order line item",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": 1,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/purchase_orders/line_item",
                      "assigned_party": {
                        "_object": "/company_entity",
                        "id": 9281,
                        "mailing_address": {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "address_ref_x",
                          "state": "MN",
                          "street_address": "1641 Settlers Lane",
                          "street_address2": "STE 2918",
                          "timezone": "America/Los_Angeles",
                          "unlocode": "US AL2",
                          "zip": "56307",
                        },
                        "name": "My Manufacturer",
                        "ref": "manufacturer_1",
                        "vat_numbers": [
                          {
                            "_object": "company_entity/vat_number",
                            "country_code": "US",
                            "number": "US 123746396",
                          },
                          {
                            "_object": "/company_entity/vat_number",
                            "country_code": "GB",
                            "number": "GB 123456789",
                          },
                        ],
                      },
                      "booking_line_items": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/booking_line_items?f.purchase_order_line_item.id=123456",
                        "ref_type": "/purchase_orders/booking_line_item",
                      },
                      "destination_addresses": [
                        {
                          "location_ref": "id-1234",
                          "units": 1,
                        },
                        {
                          "location_ref": "id-1234",
                          "units": 1,
                        },
                      ],
                      "destination_port": {
                        "_object": "/place",
                        "address": {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "address_ref_x",
                          "street_address": "1641 Settlers Lane",
                          "timezone": "America/Los_Angeles",
                        },
                        "details": [
                          {
                            "_object": "/air/port",
                            "country_code": "US",
                            "iata_code": "LAX",
                            "icao_code": "KLAX",
                            "port_code": "3901",
                          },
                        ],
                        "name": "ORD - Chicago - IL",
                      },
                      "hs_codes": [
                        {
                          "_object": "/hs_code",
                          "code": "8309.90.10.00",
                          "country_code": "US",
                        },
                        {
                          "_object": "/hs_code",
                          "code": "9101.00",
                          "country_code": "US",
                        },
                      ],
                      "id": 123456,
                      "incoterm": "FOB",
                      "item_key": "item1",
                      "line_item_number": 1,
                      "line_type": "main_line",
                      "measurements": [
                        {
                          "measure_type": "length",
                          "unit_of_measure": "EA",
                          "value": "1.0",
                        },
                        {
                          "unit_of_measure": "EA",
                        },
                      ],
                      "metadata": {
                        "size": {
                          "0": "M",
                        },
                      },
                      "must_arrive_date": "2019-03-11",
                      "origin_location": {
                        "_object": "/address",
                        "city": "Shenzhen",
                        "country": "China",
                        "country_code": "CN",
                        "ref": "sellingcoaddress",
                        "state": "44",
                        "street_address": "10th YouSong Industrial District",
                        "street_address2": "STE 2918",
                        "timezone": "China/Shenzhen",
                        "unlocode": "US AL2",
                        "zip": "56307",
                      },
                      "origin_port": {
                        "_object": "/place",
                        "address": {
                          "_object": "/address",
                          "city": "Albany",
                          "country": "United States of America",
                          "country_code": "US",
                          "ref": "address_ref_x",
                          "street_address": "1641 Settlers Lane",
                          "timezone": "America/Los_Angeles",
                        },
                        "details": [
                          {
                            "_object": "/air/port",
                            "country_code": "US",
                            "iata_code": "LAX",
                            "icao_code": "KLAX",
                            "port_code": "3901",
                          },
                        ],
                        "name": "ORD - Chicago - IL",
                      },
                      "parent_line_key": "parent_line_key",
                      "product": {
                        "color": "red",
                        "country_of_origin": "US",
                        "dangerous": true,
                        "ean_ucc_13": "1234567890123",
                        "ean_ucc_8": "12345678",
                        "lot_number": "123456789",
                        "name": "AC Adapter 12",
                        "product_category": "furniture",
                        "size": "m",
                        "sku": "SKU-123",
                        "style": "classic",
                        "upc": "123456789",
                      },
                      "purchase_order": {
                        "_object": "/api/refs/object",
                        "id": 12345,
                        "link": "https://api.flexport.com/purchase_orders/26088",
                        "ref_type": "/purchase_order",
                      },
                      "transportation_mode": "air",
                      "unit_cost": {
                        "amount": "121.00",
                        "currency_code": "USD",
                      },
                      "unit_of_measure": "HUN",
                      "units": 20,
                    },
                    "self": "https://api.flexport.com/purchase_order_line_items/123456",
                    "version": 3,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/purchase_order_line_items/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the PO line item to be retrieved",
                "type": "integer",
              },
            },
            "response": {
              "docs": "collection of purchase order line items",
              "type": "PurchaseOrderLineItemShowResponse",
            },
          },
        },
      },
      "types": {
        "PurchaseOrderLineItemIndexRequestDirection": {
          "enum": [
            "asc",
            "desc",
          ],
        },
        "PurchaseOrderLineItemIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<PurchaseOrderLineItemIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "PurchaseOrderLineItemIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.PurchaseOrderLineItem>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
        "PurchaseOrderLineItemShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.PurchaseOrderLineItem>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
    "shipment.yml": {
      "docs": "Endpoints relating to Shipment objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Shipment",
        "endpoints": {
          "index": {
            "auth": false,
            "display-name": "List all shipments",
            "docs": "Returns a list of shipments.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "f.container_number": "BWSE3982156",
                  "f.purchase_order": "PO002811",
                  "f.sku": "ASA121",
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/shipments",
                          "actual_arrival_date": "2019-02-06T19:28:25Z",
                          "actual_delivered_in_full_date": "2019-02-06T19:28:25Z",
                          "actual_departure_date": "2019-02-06T19:28:25Z",
                          "actual_picked_up_in_full_date": "2019-02-06T19:28:25Z",
                          "arrival_date": "2019-02-06T19:28:25Z",
                          "belongs_to_a_buyers_consol": false,
                          "booking": {
                            "_object": "api/refs/object",
                            "id": "id",
                            "link": "https://api.flexport.com/bookings/12345",
                            "ref_type": "/booking",
                          },
                          "buyers": [
                            {
                              "_object": "/company_entity",
                              "id": 9281,
                              "mailing_address": {
                                "_object": "/address",
                                "city": "Albany",
                                "country": "United States of America",
                                "country_code": "US",
                                "ref": "address_ref_1",
                                "state": "MN",
                                "street_address": "1641 Settlers Lane",
                                "street_address2": "STE 2918",
                                "timezone": "America/Chicago",
                                "unlocode": "US AL2",
                                "zip": "56307",
                              },
                              "name": "Zoomit",
                              "ref": "zoomit_ref",
                              "vat_numbers": [
                                {
                                  "_object": "company_entity/vat_number",
                                  "country_code": "US",
                                  "number": "US 123746396",
                                },
                                {
                                  "_object": "/company_entity/vat_number",
                                  "country_code": "GB",
                                  "number": "GB 123456789",
                                },
                              ],
                            },
                            {
                              "_object": "/company_entity",
                              "id": 9281,
                              "name": "Zoomit",
                              "ref": "zoomit_ref",
                            },
                          ],
                          "calculated_volume": {
                            "_object": "/quantity/volume",
                            "unit": "cbm",
                            "value": 472.62,
                          },
                          "calculated_weight": {
                            "_object": "/quantity/weight",
                            "unit": "kg",
                            "value": 2300.4,
                          },
                          "cargo_ready_date": "2019-02-06",
                          "commercial_invoices": {
                            "_object": "/api/refs/collection",
                            "link": "https://api.flexport.com/commercial_invoices?f.shipment.id=2983",
                            "ref_type": "/commercial_invoice",
                          },
                          "consignees": [
                            {
                              "_object": "/company_entity",
                              "id": 9281,
                              "mailing_address": {
                                "_object": "/address",
                                "city": "Albany",
                                "country": "United States of America",
                                "country_code": "US",
                                "ref": "address_ref_1",
                                "state": "MN",
                                "street_address": "1641 Settlers Lane",
                                "street_address2": "STE 2918",
                                "timezone": "America/Chicago",
                                "unlocode": "US AL2",
                                "zip": "56307",
                              },
                              "name": "Zoomit",
                              "ref": "zoomit_ref",
                              "vat_numbers": [
                                {
                                  "_object": "company_entity/vat_number",
                                  "country_code": "US",
                                  "number": "US 123746396",
                                },
                                {
                                  "_object": "/company_entity/vat_number",
                                  "country_code": "GB",
                                  "number": "GB 123456789",
                                },
                              ],
                            },
                            {
                              "_object": "/company_entity",
                              "id": 9281,
                              "name": "Zoomit",
                              "ref": "zoomit_ref",
                            },
                          ],
                          "created_date": "2019-02-06T19:28:25Z",
                          "customs_entries": {
                            "_object": "/api/refs/collection",
                            "link": "https://api.flexport.com/customs_entries?f.shipment.id=2983",
                            "ref_type": "/customs_entry",
                          },
                          "dangerous_goods": {
                            "_object": "/shipment/dangerous_goods",
                            "classifications": [
                              "classifications",
                            ],
                            "review_status": "complete",
                          },
                          "delivered_in_full_date": "2019-02-06T19:28:25Z",
                          "departure_date": "2019-02-06T19:28:25Z",
                          "documents": {
                            "_object": "/api/refs/collection",
                            "link": "https://api.flexport.com/documents?f.shipment.id=2983",
                            "ref_type": "/document",
                          },
                          "estimated_arrival_date": "2019-02-06T19:28:25Z",
                          "estimated_delivered_in_full_date": "2019-02-06T19:28:25Z",
                          "estimated_departure_date": "2019-02-06T19:28:25Z",
                          "estimated_picked_up_in_full_date": "2019-02-06T19:28:25Z",
                          "freight_type": "door_to_door",
                          "id": 2983,
                          "importers_of_record": [
                            {
                              "_object": "/company_entity",
                              "id": 9281,
                              "mailing_address": {
                                "_object": "/address",
                                "city": "Albany",
                                "country": "United States of America",
                                "country_code": "US",
                                "ref": "address_ref_1",
                                "state": "MN",
                                "street_address": "1641 Settlers Lane",
                                "street_address2": "STE 2918",
                                "timezone": "America/Chicago",
                                "unlocode": "US AL2",
                                "zip": "56307",
                              },
                              "name": "Zoomit",
                              "ref": "zoomit_ref",
                              "vat_numbers": [
                                {
                                  "_object": "company_entity/vat_number",
                                  "country_code": "US",
                                  "number": "US 123746396",
                                },
                                {
                                  "_object": "/company_entity/vat_number",
                                  "country_code": "GB",
                                  "number": "GB 123456789",
                                },
                              ],
                            },
                            {
                              "_object": "/company_entity",
                              "id": 9281,
                              "name": "Zoomit",
                              "ref": "zoomit_ref",
                            },
                          ],
                          "incoterm": "FOB",
                          "it_number": "V12345678",
                          "items": [
                            {
                              "_object": "/shipment_item",
                              "id": 29820,
                              "product": {
                                "_object": "/product",
                                "client_verified": true,
                                "country_of_origin": "China",
                                "description": "The best 12V AC Adapter on the market",
                                "id": 84291,
                                "name": "AC Adapter 12V",
                                "product_category": "Cosmetics",
                                "sku": "WDVCDFD-RM00472",
                              },
                              "purchase_order_number": "PO002811",
                              "total_units": 523,
                              "total_volume": {
                                "_object": "/quantity/volume",
                                "unit": "cbm",
                                "value": 472.62,
                              },
                              "total_weight": {
                                "_object": "/quantity/weight",
                                "unit": "kg",
                                "value": 2300.4,
                              },
                            },
                            {
                              "_object": "/shipment_item",
                              "id": 29820,
                              "purchase_order_number": "PO002811",
                              "total_units": 523,
                            },
                          ],
                          "legs": {
                            "_object": "/api/refs/collection",
                            "link": "https://api.flexport.com/shipment_legs?f.shipment.id=123",
                            "ref_type": "/shipment_leg",
                          },
                          "name": "ABC Shipment",
                          "ocean_shipment": {
                            "_object": "/ocean/shipment",
                            "carrier_booking_number": "697216024",
                            "confirmed_space_released_at": "2021-06-08T06:18:46Z",
                            "containers": {
                              "_object": "/api/refs/collection",
                              "link": "https://api.flexport.com/ocean/shipment_containers?f.shipment.id=123",
                              "ref_type": "/ocean/shipment_container",
                            },
                            "house_bill_number": "TUWSANR18658",
                            "is_lcl": false,
                            "master_bill_number": "NEWO697216024",
                          },
                          "picked_up_in_full_date": "2019-02-06T19:28:25Z",
                          "pieces": 8372,
                          "priority": "high",
                          "sellers": [
                            {
                              "_object": "/company_entity",
                              "id": 9281,
                              "mailing_address": {
                                "_object": "/address",
                                "city": "Albany",
                                "country": "United States of America",
                                "country_code": "US",
                                "ref": "address_ref_1",
                                "state": "MN",
                                "street_address": "1641 Settlers Lane",
                                "street_address2": "STE 2918",
                                "timezone": "America/Chicago",
                                "unlocode": "US AL2",
                                "zip": "56307",
                              },
                              "name": "Zoomit",
                              "ref": "zoomit_ref",
                              "vat_numbers": [
                                {
                                  "_object": "company_entity/vat_number",
                                  "country_code": "US",
                                  "number": "US 123746396",
                                },
                                {
                                  "_object": "/company_entity/vat_number",
                                  "country_code": "GB",
                                  "number": "GB 123456789",
                                },
                              ],
                            },
                            {
                              "_object": "/company_entity",
                              "id": 9281,
                              "name": "Zoomit",
                              "ref": "zoomit_ref",
                            },
                          ],
                          "shippers": [
                            {
                              "_object": "/company_entity",
                              "id": 9281,
                              "mailing_address": {
                                "_object": "/address",
                                "city": "Albany",
                                "country": "United States of America",
                                "country_code": "US",
                                "ref": "address_ref_1",
                                "state": "MN",
                                "street_address": "1641 Settlers Lane",
                                "street_address2": "STE 2918",
                                "timezone": "America/Chicago",
                                "unlocode": "US AL2",
                                "zip": "56307",
                              },
                              "name": "Zoomit",
                              "ref": "zoomit_ref",
                              "vat_numbers": [
                                {
                                  "_object": "company_entity/vat_number",
                                  "country_code": "US",
                                  "number": "US 123746396",
                                },
                                {
                                  "_object": "/company_entity/vat_number",
                                  "country_code": "GB",
                                  "number": "GB 123456789",
                                },
                              ],
                            },
                            {
                              "_object": "/company_entity",
                              "id": 9281,
                              "name": "Zoomit",
                              "ref": "zoomit_ref",
                            },
                          ],
                          "status": "in_transit_to_arrival_port",
                          "transportation_mode": "ocean",
                          "updated_at": "2019-02-06T19:28:25Z",
                          "visibility_only": false,
                          "wants_commercial_invoice_transcription": true,
                          "wants_delivery_service": false,
                          "wants_export_customs_service": true,
                          "wants_flexport_freight": true,
                          "wants_flexport_insurance": true,
                          "wants_freight_management_bco": true,
                          "wants_import_customs_service": true,
                          "wants_pickup_service": false,
                          "wants_trade_declaration_service": false,
                        },
                        {
                          "_object": "/shipments",
                          "id": 2983,
                          "it_number": "V12345678",
                          "name": "ABC Shipment",
                          "pieces": 8372,
                          "visibility_only": true,
                          "wants_commercial_invoice_transcription": true,
                          "wants_delivery_service": true,
                          "wants_export_customs_service": true,
                          "wants_flexport_freight": true,
                          "wants_flexport_insurance": true,
                          "wants_freight_management_bco": true,
                          "wants_import_customs_service": true,
                          "wants_pickup_service": true,
                          "wants_trade_declaration_service": true,
                        },
                      ],
                      "next": "next",
                      "prev": "prev",
                    },
                    "self": "https://api.flexport.com/shipments?page=1&per=20&sort=id&direction=desc",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/shipments",
            "request": {
              "name": "ShipmentIndexRequest",
              "query-parameters": {
                "direction": {
                  "docs": "Set sort order. Allows "asc" (ascending) or "desc" (descending).",
                  "type": "optional<ShipmentIndexRequestDirection>",
                },
                "f.archived_at.gt": {
                  "docs": "Filters the list for shipments that where archived after the given time",
                  "type": "optional<string>",
                },
                "f.archived_at.lt": {
                  "docs": "Filters the list for shipments that where archived before the given time",
                  "type": "optional<string>",
                },
                "f.belongs_to_a_buyers_consol": {
                  "docs": "Filters the list based on whether the shipment belongs to a buyer's consolidation",
                  "type": "optional<boolean>",
                },
                "f.consignee_external_ref": {
                  "docs": "Filters the list for shipments that have the specified company entity (denoted by external ref) as a consignee",
                  "type": "optional<string>",
                },
                "f.container_number": {
                  "docs": "Filters the list for shipments that are associated with a container specified by the given container number.",
                  "type": "optional<string>",
                },
                "f.destination_address_ref": {
                  "docs": "Filters the list for shipments that have a shipment leg with the same destination address ref",
                  "type": "optional<string>",
                },
                "f.house_bill_number": {
                  "docs": "Filters the list for shipments that are associated with the given house bill number",
                  "type": "optional<string>",
                },
                "f.master_bill_number": {
                  "docs": "Filters the list for shipments that are associated with the given master bill number",
                  "type": "optional<string>",
                },
                "f.metadata.YOUR_METADATA_KEY": {
                  "docs": "Filters the list for shipments that have a specific metadata key-value pair. Multiple metadata filters can be added to a single query. If there are multiple metadata filters each with the same metadata key, then the filter will return shipments matching any of the specified metadata values for that metadata key. Note that keys must be URL encoded; e.g.: \`f.metadata.PO #=123\` is invalid. It should instead be \`f.metadata.PO%20%23\`
",
                  "type": "optional<string>",
                },
                "f.origin_address_ref": {
                  "docs": "Filters the list for shipments that have a shipment leg with the same origin address ref",
                  "type": "optional<string>",
                },
                "f.purchase_order": {
                  "docs": "Filters the list for shipments that are associated with the given purchase order number",
                  "type": "optional<string>",
                },
                "f.sku": {
                  "docs": "Filters the list for shipments that are associated a product identified by the given SKU.",
                  "type": "optional<string>",
                },
                "f.status": {
                  "docs": "Filters the list based on the shipment's \`status\`. Cannot be used with \`f.statuses.any\`",
                  "type": "optional<root.ShipmentStatus>",
                },
                "f.statuses.any": {
                  "docs": "Filters the list for all shipments whose \`status\` is one of the passed in statuses. Can pass in multiple comma-separated statuses.",
                  "type": "optional<root.ShipmentStatus>",
                },
                "f.transportation_mode": {
                  "docs": "Filters the list based on the shipment's \`transportation_mode\`. One of \`ocean\` or \`air\`.",
                  "type": "optional<root.TransportationMode>",
                },
                "f.updated_at.gt": {
                  "docs": "Filters the list for shipments that where updated after the given time",
                  "type": "optional<string>",
                },
                "f.updated_at.lt": {
                  "docs": "Filters the list for shipments that where updated before the given time",
                  "type": "optional<string>",
                },
                "f.visibility_only": {
                  "docs": "Filters the list based on shipment's visibility_only flag",
                  "type": "optional<boolean>",
                },
                "f.wants_commercial_invoice_transcription": {
                  "docs": "Filters the list based on shipment's wants_commercial_invoice_transcription",
                  "type": "optional<boolean>",
                },
                "f.wants_delivery_service": {
                  "docs": "Filters the list based on shipment's wants_delivery_service flag",
                  "type": "optional<boolean>",
                },
                "f.wants_export_customs_service": {
                  "docs": "Filters the list based on shipment's wants_export_customs_service",
                  "type": "optional<boolean>",
                },
                "f.wants_flexport_freight": {
                  "docs": "Filters the list based on shipment's wants_flexport_freight",
                  "type": "optional<boolean>",
                },
                "f.wants_flexport_insurance": {
                  "docs": "Filters the list based on shipment's wants_flexport_insurance",
                  "type": "optional<boolean>",
                },
                "f.wants_freight_management_bco": {
                  "docs": "Filters the list based on shipment's wants_freight_management_bco",
                  "type": "optional<boolean>",
                },
                "f.wants_import_customs_service": {
                  "docs": "Filters the list based on shipment's wants_import_customs_service",
                  "type": "optional<boolean>",
                },
                "f.wants_pickup_service": {
                  "docs": "Filters the list based on shipment's wants_pickup_service",
                  "type": "optional<boolean>",
                },
                "f.wants_trade_declaration_service": {
                  "docs": "Filters the list based on shipment's wants_trade_declaration_service",
                  "type": "optional<boolean>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive).",
                  "type": "optional<integer>",
                },
                "sort": {
                  "docs": "Sort results by the specified field.",
                  "type": "optional<ShipmentIndexRequestSort>",
                },
              },
            },
            "response": {
              "docs": "collection of shipments",
              "type": "ShipmentIndexResponse",
            },
          },
          "shipments_shareable": {
            "auth": false,
            "display-name": "Create shareable URLs for shipments",
            "docs": "Returns a list of shipments status shareable url",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "request": {
                  "shipment_ids": [
                    123,
                    456,
                    123,
                  ],
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/shipments_shareable",
                      "shipments": [
                        {
                          "expiration_date": "2023-06-05T00:14:50.341Z",
                          "shareable_url": "https://app.flexport.com/track_and_trace/Va0y2ckci5Jk",
                          "shipment_id": 123,
                        },
                        {
                          "expiration_date": "2023-06-05T00:14:50.341Z",
                          "shareable_url": "https://app.flexport.com/track_and_trace/Va0y2ckci5Jk",
                          "shipment_id": 456,
                        },
                        {
                          "expiration_date": "2023-06-05T00:14:50.341Z",
                          "shareable_url": "https://app.flexport.com/track_and_trace/Va0y2ckci5Jk",
                          "shipment_id": 123,
                        },
                      ],
                    },
                    "self": "https://api.flexport.com/shipments_shareable",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/shipments_shareable",
            "request": {
              "body": {
                "properties": {
                  "shipment_ids": {
                    "docs": "A list (length < 10) of the unique id for the shipment to be retrieved.",
                    "type": "optional<list<integer>>",
                  },
                },
              },
              "headers": undefined,
              "name": "ShipmentsShareableRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "collection of shipments shareable status url",
              "type": "ShipmentsShareableResponse",
            },
          },
          "show": {
            "auth": false,
            "display-name": "Retrieve a shipment",
            "docs": "Retrieves the details of a single shipment.
",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/shipments",
                      "actual_arrival_date": "2019-02-06T19:28:25Z",
                      "actual_delivered_in_full_date": "2019-02-06T19:28:25Z",
                      "actual_departure_date": "2019-02-06T19:28:25Z",
                      "actual_picked_up_in_full_date": "2019-02-06T19:28:25Z",
                      "air_shipment": {
                        "_object": "/air/shipment",
                        "chargeable_volume": {
                          "_object": "/quantity/volume",
                          "value": 472.62,
                        },
                        "chargeable_weight": {
                          "_object": "/quantity/weight",
                          "value": 2300.4,
                        },
                        "house_airway_bill": "HWXJKE67732",
                        "master_airway_bill": "22831046871",
                      },
                      "arrival_date": "2019-02-06T19:28:25Z",
                      "belongs_to_a_buyers_consol": false,
                      "booking": {
                        "_object": "api/refs/object",
                        "id": "id",
                        "link": "https://api.flexport.com/bookings/12345",
                        "ref_type": "/booking",
                      },
                      "buyers": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "my-address-ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "US AL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "company_entity/vat_number",
                              "country_code": "US",
                              "number": "US 123746396",
                            },
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "calculated_volume": {
                        "_object": "/quantity/volume",
                        "unit": "cbm",
                        "value": 472.62,
                      },
                      "calculated_weight": {
                        "_object": "/quantity/weight",
                        "unit": "kg",
                        "value": 2300.4,
                      },
                      "cargo_ready_date": "2019-02-06",
                      "child_shipments": [
                        {
                          "_object": "/api/refs/object",
                          "id": 123,
                          "link": "https://api.flexport.com/shipments/123",
                          "ref_type": "/shipment",
                        },
                      ],
                      "commercial_invoices": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/commercial_invoices?f.shipment.id=2983",
                        "ref_type": "/commercial_invoice",
                      },
                      "consignees": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "my-address-ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "US AL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "company_entity/vat_number",
                              "country_code": "US",
                              "number": "US 123746396",
                            },
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "created_date": "2019-02-06T19:28:25Z",
                      "customs_entries": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/customs_entries?f.shipment.id=2983",
                        "ref_type": "/customs_entry",
                      },
                      "dangerous_goods": {
                        "_object": "/shipment/dangerous_goods",
                        "classifications": [
                          "classifications",
                        ],
                        "review_status": "complete",
                      },
                      "delivered_in_full_date": "2019-02-06T19:28:25Z",
                      "departure_date": "2019-02-06T19:28:25Z",
                      "documents": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/documents?f.shipment.id=2983",
                        "ref_type": "/document",
                      },
                      "estimated_arrival_date": "2019-02-06T19:28:25Z",
                      "estimated_delivered_in_full_date": "2019-02-06T19:28:25Z",
                      "estimated_departure_date": "2019-02-06T19:28:25Z",
                      "estimated_picked_up_in_full_date": "2019-02-06T19:28:25Z",
                      "freight_type": "door_to_door",
                      "id": 2983,
                      "importers_of_record": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "my-address-ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "US AL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "company_entity/vat_number",
                              "country_code": "US",
                              "number": "US 123746396",
                            },
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "incoterm": "FOB",
                      "it_number": "V12345678",
                      "items": [
                        {
                          "_object": "/shipment_item",
                          "id": 29820,
                          "product": {
                            "_object": "/product",
                            "client_verified": true,
                            "country_of_origin": "China",
                            "description": "The best 12V AC Adapter on the market",
                            "id": 84291,
                            "name": "AC Adapter 12V",
                            "product_category": "Cosmetics",
                            "sku": "WDVCDFD-RM00472",
                          },
                          "purchase_order_number": "PO002811",
                          "total_units": 523,
                          "total_volume": {
                            "_object": "/quantity/volume",
                            "unit": "cbm",
                            "value": 472.62,
                          },
                          "total_weight": {
                            "_object": "/quantity/weight",
                            "unit": "kg",
                            "value": 2300.4,
                          },
                        },
                        {
                          "_object": "/shipment_item",
                          "id": 29820,
                          "purchase_order_number": "PO002811",
                          "total_units": 523,
                        },
                      ],
                      "legs": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/shipment_legs?f.shipment.id=123",
                        "ref_type": "/shipment_leg",
                      },
                      "metadata": {
                        "metadata": {
                          "key": "value",
                        },
                      },
                      "name": "ABC Shipment",
                      "ocean_shipment": {
                        "_object": "/ocean/shipment",
                        "carrier_booking_number": "697216024",
                        "confirmed_space_released_at": "2021-06-08T06:18:46Z",
                        "containers": {
                          "_object": "/api/refs/collection",
                          "link": "https://api.flexport.com/ocean/shipment_containers?f.shipment.id=123",
                          "ref_type": "/ocean/shipment_container",
                        },
                        "house_bill_number": "TUWSANR18658",
                        "is_lcl": false,
                        "master_bill_number": "NEWO697216024",
                      },
                      "parent_shipment": {
                        "_object": "/api/refs/object",
                        "id": 123,
                        "link": "https://api.flexport.com/shipments/123",
                        "ref_type": "/shipment",
                      },
                      "picked_up_in_full_date": "2019-02-06T19:28:25Z",
                      "pieces": 8372,
                      "priority": "high",
                      "sellers": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "my-address-ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "US AL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "company_entity/vat_number",
                              "country_code": "US",
                              "number": "US 123746396",
                            },
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "shippers": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "my-address-ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "US AL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "company_entity/vat_number",
                              "country_code": "US",
                              "number": "US 123746396",
                            },
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "status": "in_transit_to_arrival_port",
                      "target_delivery_date": "target_delivery_date",
                      "transportation_mode": "ocean",
                      "updated_at": "2019-02-06T19:28:25Z",
                      "visibility_only": false,
                      "wants_commercial_invoice_transcription": true,
                      "wants_delivery_service": false,
                      "wants_export_customs_service": true,
                      "wants_flexport_freight": true,
                      "wants_flexport_insurance": true,
                      "wants_freight_management_bco": true,
                      "wants_import_customs_service": true,
                      "wants_pickup_service": true,
                      "wants_trade_declaration_service": true,
                    },
                    "self": "https://api.flexport.com/shipments/1234",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/shipments/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the shipment to be retrieved.",
                "type": "string",
              },
            },
            "response": {
              "docs": "Success",
              "type": "ShipmentShowResponse",
            },
          },
          "update": {
            "auth": false,
            "display-name": "Update an existing shipment",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": 1,
                },
                "request": {},
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/shipments",
                      "actual_arrival_date": "2019-02-06T19:28:25Z",
                      "actual_delivered_in_full_date": "2019-02-06T19:28:25Z",
                      "actual_departure_date": "2019-02-06T19:28:25Z",
                      "actual_picked_up_in_full_date": "2019-02-06T19:28:25Z",
                      "air_shipment": {
                        "_object": "/air/shipment",
                        "chargeable_volume": {
                          "_object": "/quantity/volume",
                          "value": 472.62,
                        },
                        "chargeable_weight": {
                          "_object": "/quantity/weight",
                          "value": 2300.4,
                        },
                        "house_airway_bill": "HWXJKE67732",
                        "master_airway_bill": "22831046871",
                      },
                      "arrival_date": "2019-02-06T19:28:25Z",
                      "belongs_to_a_buyers_consol": true,
                      "booking": {
                        "_object": "api/refs/object",
                        "id": "id",
                        "link": "https://api.flexport.com/bookings/12345",
                        "ref_type": "/booking",
                      },
                      "buyers": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "my-address-ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "US AL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "company_entity/vat_number",
                              "country_code": "US",
                              "number": "US 123746396",
                            },
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "calculated_volume": {
                        "_object": "/quantity/volume",
                        "unit": "cbm",
                        "value": 472.62,
                      },
                      "calculated_weight": {
                        "_object": "/quantity/weight",
                        "unit": "kg",
                        "value": 2300.4,
                      },
                      "cargo_ready_date": "2019-02-06",
                      "child_shipments": [
                        {
                          "_object": "/api/refs/object",
                          "id": 123,
                          "link": "https://api.flexport.com/shipments/123",
                          "ref_type": "/shipment",
                        },
                      ],
                      "commercial_invoices": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/commercial_invoices?f.shipment.id=2983",
                        "ref_type": "/commercial_invoice",
                      },
                      "consignees": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "my-address-ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "US AL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "company_entity/vat_number",
                              "country_code": "US",
                              "number": "US 123746396",
                            },
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "created_date": "2019-02-06T19:28:25Z",
                      "customs_entries": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/customs_entries?f.shipment.id=2983",
                        "ref_type": "/customs_entry",
                      },
                      "dangerous_goods": {
                        "_object": "/shipment/dangerous_goods",
                        "classifications": [
                          "classifications",
                        ],
                        "review_status": "complete",
                      },
                      "delivered_in_full_date": "2019-02-06T19:28:25Z",
                      "departure_date": "2019-02-06T19:28:25Z",
                      "documents": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/documents?f.shipment.id=2983",
                        "ref_type": "/document",
                      },
                      "estimated_arrival_date": "2019-02-06T19:28:25Z",
                      "estimated_delivered_in_full_date": "2019-02-06T19:28:25Z",
                      "estimated_departure_date": "2019-02-06T19:28:25Z",
                      "estimated_picked_up_in_full_date": "2019-02-06T19:28:25Z",
                      "freight_type": "door_to_door",
                      "id": 2983,
                      "importers_of_record": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "my-address-ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "US AL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "company_entity/vat_number",
                              "country_code": "US",
                              "number": "US 123746396",
                            },
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "incoterm": "FOB",
                      "it_number": "V12345678",
                      "items": [
                        {
                          "_object": "/shipment_item",
                          "id": 29820,
                          "product": {
                            "_object": "/product",
                            "client_verified": true,
                            "country_of_origin": "China",
                            "description": "The best 12V AC Adapter on the market",
                            "id": 84291,
                            "name": "AC Adapter 12V",
                            "product_category": "Cosmetics",
                            "sku": "WDVCDFD-RM00472",
                          },
                          "purchase_order_number": "PO002811",
                          "total_units": 523,
                          "total_volume": {
                            "_object": "/quantity/volume",
                            "unit": "cbm",
                            "value": 472.62,
                          },
                          "total_weight": {
                            "_object": "/quantity/weight",
                            "unit": "kg",
                            "value": 2300.4,
                          },
                        },
                        {
                          "_object": "/shipment_item",
                          "id": 29820,
                          "purchase_order_number": "PO002811",
                          "total_units": 523,
                        },
                      ],
                      "legs": {
                        "_object": "/api/refs/collection",
                        "link": "https://api.flexport.com/shipment_legs?f.shipment.id=123",
                        "ref_type": "/shipment_leg",
                      },
                      "metadata": {
                        "purchase_order": {
                          "0": "12345",
                        },
                      },
                      "name": "ABC Shipment",
                      "ocean_shipment": {
                        "_object": "/ocean/shipment",
                        "carrier_booking_number": "697216024",
                        "confirmed_space_released_at": "2021-06-08T06:18:46Z",
                        "containers": {
                          "_object": "/api/refs/collection",
                          "link": "https://api.flexport.com/ocean/shipment_containers?f.shipment.id=123",
                          "ref_type": "/ocean/shipment_container",
                        },
                        "house_bill_number": "TUWSANR18658",
                        "is_lcl": false,
                        "master_bill_number": "NEWO697216024",
                      },
                      "parent_shipment": {
                        "_object": "/api/refs/object",
                        "id": 123,
                        "link": "https://api.flexport.com/shipments/123",
                        "ref_type": "/shipment",
                      },
                      "picked_up_in_full_date": "2019-02-06T19:28:25Z",
                      "pieces": 8372,
                      "priority": "high",
                      "sellers": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "my-address-ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "US AL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "company_entity/vat_number",
                              "country_code": "US",
                              "number": "US 123746396",
                            },
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "shippers": [
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "mailing_address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "my-address-ref",
                            "state": "MN",
                            "street_address": "1641 Settlers Lane",
                            "street_address2": "STE 2918",
                            "timezone": "America/Los_Angeles",
                            "unlocode": "US AL2",
                            "zip": "56307",
                          },
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                          "vat_numbers": [
                            {
                              "_object": "company_entity/vat_number",
                              "country_code": "US",
                              "number": "US 123746396",
                            },
                            {
                              "_object": "/company_entity/vat_number",
                              "country_code": "GB",
                              "number": "GB 123456789",
                            },
                          ],
                        },
                        {
                          "_object": "/company_entity",
                          "id": 9281,
                          "name": "Zoomit",
                          "ref": "zoomit_ref",
                        },
                      ],
                      "status": "in_transit_to_arrival_port",
                      "target_delivery_date": "target_delivery_date",
                      "transportation_mode": "ocean",
                      "updated_at": "2019-02-06T19:28:25Z",
                      "visibility_only": false,
                      "wants_commercial_invoice_transcription": true,
                      "wants_delivery_service": false,
                      "wants_export_customs_service": true,
                      "wants_flexport_freight": true,
                      "wants_flexport_insurance": true,
                      "wants_freight_management_bco": true,
                      "wants_import_customs_service": true,
                      "wants_pickup_service": true,
                      "wants_trade_declaration_service": true,
                    },
                    "self": "https://api.flexport.com/shipments/12345",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/shipments/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the shipment to be updated",
                "type": "integer",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "metadata": {
                    "docs": "Metadata to replace existing metadata. Keys should be strings and values should be arrays. All existing metadata will be replaced by the passed in object.",
                    "type": "optional<map<string, unknown>>",
                  },
                },
              },
              "headers": undefined,
              "name": "UpdateShipment",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "The updated shipment",
              "type": "ShipmentUpdateResponse",
            },
          },
        },
      },
      "types": {
        "ShipmentIndexRequestDirection": {
          "enum": [
            "asc",
            "desc",
          ],
        },
        "ShipmentIndexRequestSort": {
          "enum": [
            "id",
            "transportation_mode",
            "status",
            "updated_at",
            "archived_at",
          ],
        },
        "ShipmentIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<ShipmentIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "ShipmentIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.Shipment>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
        "ShipmentShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Shipment>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "ShipmentUpdateResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.Shipment>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "ShipmentsShareableResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<ShipmentsShareableResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "ShipmentsShareableResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "shipments": "optional<list<ShipmentsShareableResponseDataShipmentsItem>>",
          },
        },
        "ShipmentsShareableResponseDataShipmentsItem": {
          "docs": undefined,
          "properties": {
            "expiration_date": "optional<string>",
            "shareable_url": "optional<string>",
            "shipment_id": "optional<integer>",
          },
        },
      },
    },
    "shipmentLeg.yml": {
      "docs": "Endpoints relating to ShipmentLeg objects",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "ShipmentLeg",
        "endpoints": {
          "shipment_leg_index": {
            "auth": false,
            "display-name": "List all shipment route legs",
            "docs": "Returns a list of shipment route legs. The legs are sorted descending by creation date.",
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "page": 1,
                  "per": 20,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/api/collections/paginated",
                      "data": [
                        {
                          "_object": "/shipment_leg",
                          "actual_arrival_date": "2019-02-06T19:28:25Z",
                          "actual_departure_date": "2019-02-06T19:28:25Z",
                          "additional_dates": {
                            "cargo_ready_date": "2019-02-06",
                            "delivery_appointment_requested_at_date": "2019-07-09T04:00:00Z",
                            "delivery_appointment_requested_date": "2019-07-14T04:00:00Z",
                            "delivery_appointment_scheduled_at_date": "2019-07-11T04:00:00Z",
                            "delivery_appointment_scheduled_date": "2019-07-14T04:00:00Z",
                            "delivery_completed": "2019-07-14T04:00:00Z",
                            "loaded_on_truck_date": "2019-07-13T04:00:00Z",
                          },
                          "carrier_name": "Liberty Carrier",
                          "destination": {
                            "_object": "/shipment_node",
                            "place": {
                              "_object": "/place",
                              "address": {
                                "_object": "/address",
                                "city": "Chicago",
                                "country": "United States of America",
                                "country_code": "US",
                                "ref": "address_ref_1",
                                "state": "IL",
                                "street_address": "10000 West O'Hare Ave",
                                "street_address2": "PO Box 66142",
                                "timezone": "America/Chicago",
                                "unlocode": "US AL2",
                                "zip": "60666",
                              },
                              "details": [
                                {
                                  "_object": "/air/port",
                                  "country_code": "US",
                                  "iata_code": "ORD",
                                  "icao_code": "KORD",
                                  "port_code": "3901",
                                },
                                {
                                  "_object": "/trucking/port",
                                  "country_code": "US",
                                  "iata_code": "LAX",
                                  "icao_code": "KLAX",
                                  "port_code": "3901",
                                },
                                {
                                  "_object": "/air/port",
                                  "country_code": "US",
                                  "iata_code": "LAX",
                                  "icao_code": "KLAX",
                                  "port_code": "3901",
                                },
                              ],
                              "name": "ORD - Chicago - IL",
                            },
                            "tags": [
                              "port_of_loading",
                              "port_of_loading",
                            ],
                          },
                          "estimated_arrival_date": "2019-02-06T19:28:25Z",
                          "estimated_departure_date": "2019-02-06T19:28:25Z",
                          "id": 948211,
                          "ocean_leg": {
                            "_object": "/ocean/shipment_leg",
                            "container_legs": {
                              "_object": "/api/refs/collection",
                              "link": "https://api.flexport.com/ocean/shipment_container_legs?f.shipment_container.id=123",
                              "ref_type": "/ocean/shipment_container_leg",
                            },
                            "scac_code": "XJAE",
                            "vessel_imo": "IMO9074729",
                            "vessel_name": "Lenox",
                            "voyage_number": "059E",
                          },
                          "origin": {
                            "_object": "/shipment_node",
                            "place": {
                              "_object": "/place",
                              "address": {
                                "_object": "/address",
                                "city": "Chicago",
                                "country": "United States of America",
                                "country_code": "US",
                                "ref": "",
                                "state": "IL",
                                "street_address": "10000 West O'Hare Ave",
                                "street_address2": "PO Box 66142",
                                "timezone": "America/Chicago",
                                "unlocode": "US AL2",
                                "zip": "60666",
                              },
                              "details": [
                                {
                                  "_object": "/air/port",
                                  "country_code": "US",
                                  "iata_code": "ORD",
                                  "icao_code": "KORD",
                                  "port_code": "3901",
                                },
                                {
                                  "_object": "/trucking/port",
                                  "country_code": "US",
                                  "iata_code": "LAX",
                                  "icao_code": "KLAX",
                                  "port_code": "3901",
                                },
                                {
                                  "_object": "/air/port",
                                  "country_code": "US",
                                  "iata_code": "LAX",
                                  "icao_code": "KLAX",
                                  "port_code": "3901",
                                },
                              ],
                              "name": "ORD - Chicago - IL",
                            },
                            "tags": [
                              "port_of_loading",
                              "port_of_loading",
                            ],
                            "terminal": {
                              "_object": "/shipment_node/terminal",
                              "address": {
                                "_object": "/address",
                                "city": "Albany",
                                "country": "United States of America",
                                "country_code": "US",
                                "ref": "address_ref_1",
                                "state": "MN",
                                "street_address": "1645 Settlers Lane",
                                "timezone": "America/Chicago",
                                "unlocode": "US AL2",
                                "zip": "56307",
                              },
                              "firms_code": "I092",
                              "name": "Terminal 3",
                            },
                          },
                          "shipment": {
                            "_object": "/api/refs/object",
                            "id": 123,
                            "link": "https://api.flexport.com/shipments/123",
                            "ref_type": "/shipment",
                          },
                          "transportation_mode": "ocean",
                        },
                        {
                          "_object": "/shipment_leg",
                          "carrier_name": "Liberty Carrier",
                          "id": 948211,
                        },
                      ],
                      "next": "https://api.flexport.com/shipment_legs?page=3",
                      "prev": "https://api.flexport.com/shipment_legs?page=1",
                    },
                    "self": "https://api.flexport.com/shipment_legs",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/shipment_legs",
            "request": {
              "name": "ShipmentLegIndexRequest",
              "query-parameters": {
                "f.include_deleted": {
                  "docs": "Returns legs including deleted legs",
                  "type": "optional<boolean>",
                },
                "f.shipment.id": {
                  "docs": "Only return legs for the shipment specified by this id.",
                  "type": "optional<integer>",
                },
                "f.transportation_mode": {
                  "docs": "Only return legs that match the given transportation mode",
                  "type": "optional<integer>",
                },
                "page": {
                  "docs": "Page number of the page to retrieve",
                  "type": "optional<integer>",
                },
                "per": {
                  "docs": "Count of items in each page. Should be between 1 and 100 (inclusive).",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Success",
              "type": "ShipmentLegIndexResponse",
            },
          },
          "shipment_leg_show": {
            "auth": false,
            "display-name": "Retrieve a shipment route leg",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": 1,
                },
                "response": {
                  "body": {
                    "_object": "/api/response",
                    "data": {
                      "_object": "/shipment_leg",
                      "actual_arrival_date": "2019-02-06T19:28:25Z",
                      "actual_departure_date": "2019-02-06T19:28:25Z",
                      "additional_dates": {
                        "cargo_ready_date": "2019-02-06",
                        "delivery_appointment_requested_at_date": "2019-07-09T04:00:00Z",
                        "delivery_appointment_requested_date": "2019-07-14T04:00:00Z",
                        "delivery_appointment_scheduled_at_date": "2019-07-11T04:00:00Z",
                        "delivery_appointment_scheduled_date": "2019-07-14T04:00:00Z",
                        "delivery_completed": "2019-07-14T04:00:00Z",
                        "loaded_on_truck_date": "2019-07-13T04:00:00Z",
                      },
                      "air_leg": {
                        "_object": "/air/shipment_leg",
                        "flight_number": "Y8 1234",
                        "iata_code": "2Q",
                        "icao_code": "SNC",
                      },
                      "cargo_ready_date": "cargo_ready_date",
                      "carrier_name": "Liberty Carrier",
                      "deleted_at": "2024-01-15T09:30:00Z",
                      "destination": {
                        "_object": "/shipment_node",
                        "place": {
                          "_object": "/place",
                          "address": {
                            "_object": "/address",
                            "city": "Chicago",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "address_ref_1",
                            "state": "IL",
                            "street_address": "10000 West O'Hare Ave",
                            "street_address2": "PO Box 66142",
                            "timezone": "America/Chicago",
                            "unlocode": "US AL2",
                            "zip": "60666",
                          },
                          "details": [
                            {
                              "_object": "/air/port",
                              "country_code": "US",
                              "iata_code": "ORD",
                              "icao_code": "KORD",
                              "port_code": "3901",
                            },
                            {
                              "_object": "/trucking/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "3901",
                            },
                            {
                              "_object": "/air/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "3901",
                            },
                          ],
                          "name": "ORD - Chicago - IL",
                        },
                        "tags": [
                          "port_of_loading",
                          "port_of_loading",
                        ],
                        "terminal": {
                          "_object": "/shipment_node/terminal",
                          "firms_code": "I092",
                          "name": "Terminal 3",
                        },
                      },
                      "estimated_arrival_date": "2019-02-06T19:28:25Z",
                      "estimated_departure_date": "2019-02-06T19:28:25Z",
                      "id": 948211,
                      "ocean_leg": {
                        "_object": "/ocean/shipment_leg",
                        "container_legs": {
                          "_object": "/api/refs/collection",
                          "link": "https://api.flexport.com/ocean/shipment_container_legs?f.shipment_container.id=123",
                          "ref_type": "/ocean/shipment_container_leg",
                        },
                        "scac_code": "XJAE",
                        "vessel_imo": "IMO9074729",
                        "vessel_name": "Lenox",
                        "voyage_number": "059E",
                      },
                      "origin": {
                        "_object": "/shipment_node",
                        "place": {
                          "_object": "/place",
                          "address": {
                            "_object": "/address",
                            "city": "Chicago",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "address_ref_1",
                            "state": "IL",
                            "street_address": "10000 West O'Hare Ave",
                            "street_address2": "PO Box 66142",
                            "timezone": "America/Chicago",
                            "unlocode": "US AL2",
                            "zip": "60666",
                          },
                          "details": [
                            {
                              "_object": "/air/port",
                              "country_code": "US",
                              "iata_code": "ORD",
                              "icao_code": "KORD",
                              "port_code": "3901",
                            },
                            {
                              "_object": "/trucking/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "3901",
                            },
                            {
                              "_object": "/air/port",
                              "country_code": "US",
                              "iata_code": "LAX",
                              "icao_code": "KLAX",
                              "port_code": "3901",
                            },
                          ],
                          "name": "ORD - Chicago - IL",
                        },
                        "tags": [
                          "port_of_loading",
                          "port_of_loading",
                        ],
                        "terminal": {
                          "_object": "/shipment_node/terminal",
                          "address": {
                            "_object": "/address",
                            "city": "Albany",
                            "country": "United States of America",
                            "country_code": "US",
                            "ref": "address_ref_1",
                            "state": "MN",
                            "street_address": "1645 Settlers Lane",
                            "timezone": "America/Chicago",
                            "unlocode": "US AL2",
                            "zip": "56307",
                          },
                          "firms_code": "I092",
                          "name": "Terminal 3",
                        },
                      },
                      "rail_leg": {
                        "_object": "/rail/shipment_leg",
                        "container_legs": {
                          "_object": "/api/refs/collection",
                          "link": "https://api.flexport.com/ocean/shipment_container_legs?f.shipment_container.id=123",
                          "ref_type": "/ocean/shipment_container_leg",
                        },
                      },
                      "shipment": {
                        "_object": "/api/refs/object",
                        "id": 123,
                        "link": "https://api.flexport.com/shipments/123",
                        "ref_type": "/shipment",
                      },
                      "transportation_mode": "ocean",
                      "trucking_leg": {
                        "_object": "/trucking/shipment_leg",
                        "container_legs": {
                          "_object": "/api/refs/collection",
                          "link": "https://api.flexport.com/ocean/shipment_container_legs?f.shipment_container.id=123",
                          "ref_type": "/ocean/shipment_container_leg",
                        },
                        "pieces": 32,
                        "scac_code": "ABCD",
                        "service_type": "ltl",
                        "tracking_number": "FBA123456789",
                      },
                    },
                    "self": "https://api.flexport.com/shipment_legs/948211",
                    "version": 2,
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/shipment_legs/{id}",
            "path-parameters": {
              "id": {
                "docs": "The unique id for the ShipmentLeg object to be retrieved",
                "type": "integer",
              },
            },
            "request": {
              "name": "ShipmentLegShowRequest",
              "query-parameters": {
                "f.include_deleted": {
                  "docs": "Retrieves the leg even if it was deleted",
                  "type": "optional<boolean>",
                },
              },
            },
            "response": {
              "docs": "Success",
              "type": "ShipmentLegShowResponse",
            },
          },
        },
      },
      "types": {
        "ShipmentLegIndexResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<ShipmentLegIndexResponseData>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
        "ShipmentLegIndexResponseData": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<list<root.ShipmentLeg>>",
            "next": "optional<string>",
            "prev": "optional<string>",
          },
        },
        "ShipmentLegShowResponse": {
          "docs": undefined,
          "properties": {
            "_object": "optional<string>",
            "data": "optional<root.ShipmentLeg>",
            "self": "optional<string>",
            "version": "optional<integer>",
          },
        },
      },
    },
  },
  "packageMarkerFile": {
    "errors": {
      "BadRequestError": {
        "status-code": 400,
        "type": "unknown",
      },
    },
    "types": {
      "AdditionalDates": {
        "docs": undefined,
        "properties": {
          "cargo_ready_date": {
            "docs": "Represents the date when the cargo on the leg is ready for pickup.",
            "type": "optional<string>",
          },
          "delivery_appointment_requested_at_date": {
            "docs": "Date at which the appointment was first requested",
            "type": "optional<datetime>",
          },
          "delivery_appointment_requested_date": {
            "docs": "Date of the actual appointment date that was requested in that initial request",
            "type": "optional<datetime>",
          },
          "delivery_appointment_scheduled_at_date": {
            "docs": "Date at which the appointment was confirmed by the DC",
            "type": "optional<datetime>",
          },
          "delivery_appointment_scheduled_date": {
            "docs": "Date of the actual confirmed appointment",
            "type": "optional<datetime>",
          },
          "delivery_completed": {
            "docs": "Date when the cargo for this leg was unloaded and fully received at the final destination",
            "type": "optional<datetime>",
          },
          "loaded_on_truck_date": {
            "docs": "Date when the cargo has been transloaded from an ocean container to a truck",
            "type": "optional<datetime>",
          },
        },
      },
      "Address": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "city": "optional<string>",
          "country": "optional<string>",
          "country_code": "optional<string>",
          "ref": "optional<string>",
          "state": "optional<string>",
          "street_address": "optional<string>",
          "street_address2": "optional<string>",
          "timezone": "optional<string>",
          "unlocode": "optional<string>",
          "zip": "optional<string>",
        },
      },
      "AddressForRequestBody": {
        "docs": undefined,
        "properties": {
          "city": "optional<string>",
          "country_code": "optional<string>",
          "state": "optional<string>",
          "street_address": "optional<string>",
          "street_address2": "optional<string>",
          "unlocode": "optional<string>",
          "zip": "optional<string>",
        },
      },
      "AirBookingDetail": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "destination_port": "optional<Place>",
          "incoterm": "optional<AirBookingDetailIncoterm>",
          "origin_port": "optional<Place>",
          "product_descriptions": "optional<list<BookingHsCode>>",
          "wants_delivery_service": "optional<boolean>",
          "wants_pickup_service": "optional<boolean>",
        },
      },
      "AirBookingDetailIncoterm": {
        "enum": [
          "EXW",
          "FOB",
          "FAS",
          "FCA",
          "CPT",
          "CFR",
          "CIF",
          "CIP",
          "DAT",
          "DAP",
          "DDP",
          "DPU",
        ],
      },
      "AirShipmentDetail": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "chargeable_volume": "optional<Volume>",
          "chargeable_weight": "optional<Weight>",
          "house_airway_bill": "optional<string>",
          "master_airway_bill": "optional<string>",
        },
      },
      "AirShipmentLeg": {
        "docs": undefined,
        "properties": {
          "_object": "optional<string>",
          "flight_number": "optional<string>",
          "iata_code": "optional<string>",
          "icao_code": "optional<string>",
        },
      },
      "Airport": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "country_code": "optional<string>",
          "iata_code": "optional<string>",
          "icao_code": "optional<string>",
          "port_code": "optional<string>",
        },
      },
      "Booking": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "air_booking": "optional<AirBookingDetail>",
          "booking_line_items": "optional<BookingLineItemCollectionRef>",
          "cargo": "optional<Cargo>",
          "cargo_ready_date": "optional<string>",
          "consignee_entity": "optional<CompanyEntity>",
          "created_at": "optional<datetime>",
          "delivery_date": "optional<string>",
          "destination_address": "optional<Address>",
          "id": {
            "docs": "Unique identifier for the booking",
            "type": "optional<integer>",
          },
          "metadata": "optional<Metadata>",
          "name": {
            "docs": "The name of the booking",
            "type": "optional<string>",
          },
          "notify_party": "optional<string>",
          "ocean_booking": "optional<OceanBookingDetail>",
          "origin_address": "optional<Address>",
          "quote_status": "optional<BookingQuoteStatus>",
          "shipment": "optional<ShipmentRef>",
          "shipper_entity": "optional<CompanyEntity>",
          "special_instructions": "optional<string>",
          "status": "optional<BookingStatus>",
          "transportation_mode": "optional<TransportationMode>",
          "trucking_booking": "optional<TruckingBookingDetail>",
          "wants_export_customs_service": {
            "docs": "Determines if the booking requires Flexport to provide export customs services.",
            "type": "optional<boolean>",
          },
          "wants_import_customs_service": {
            "docs": "Determines if the booking requires Flexport to provide import customs services.",
            "type": "optional<boolean>",
          },
        },
      },
      "BookingAmendment": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "booking_id": {
            "docs": "Unique identifier for the booking that this amendment is for",
            "type": "optional<integer>",
          },
          "id": {
            "docs": "Unique identifier for the booking amendment",
            "type": "optional<integer>",
          },
          "is_pending": {
            "docs": "Depending on various conditions, the requested booking amendment may either be accepted and applied instantly, or it may require Flexport approval. 'is_pending' is set to true if approval is required.",
            "type": "optional<boolean>",
          },
          "new_cargo": {
            "docs": "The requested new cargo, possibly including package details",
            "type": "optional<Cargo>",
          },
          "new_cargo_ready_date": {
            "docs": "The requested new cargo ready date",
            "type": "optional<string>",
          },
          "new_container_counts": {
            "docs": "The requested new container count values",
            "type": "optional<ContainerCounts>",
          },
          "new_metadata": {
            "docs": "The requested new metadata",
            "type": "optional<Metadata>",
          },
          "new_name": {
            "docs": "The requested new name of the booking",
            "type": "optional<string>",
          },
          "new_origin_address": {
            "docs": "The requested new origin address",
            "type": "optional<Address>",
          },
          "new_port_of_loading": {
            "docs": "The requested new origin port (port of loading)",
            "type": "optional<Address>",
          },
          "new_port_of_unloading": {
            "docs": "The requested new destination port (port of unloading)",
            "type": "optional<Address>",
          },
          "new_product_descriptions": {
            "docs": "New product (HS code) information",
            "type": "optional<list<BookingAmendmentHsCode>>",
          },
          "new_wants_bco": {
            "docs": "The requested new wants-bco value",
            "type": "optional<boolean>",
          },
          "new_wants_flexport_freight": {
            "docs": "The requested new wants-flexport-freight value",
            "type": "optional<boolean>",
          },
          "new_wants_import_customs_service": {
            "docs": "The requested new wants-import-customs-service value",
            "type": "optional<boolean>",
          },
          "new_wants_pickup_service": {
            "docs": "The requested new wants-pickup value",
            "type": "optional<boolean>",
          },
        },
      },
      "BookingAmendmentHsCode": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "String representing the object’s type. Always \`/booking_amendment_product_description\` for this object.",
            "type": "optional<string>",
          },
          "description": {
            "docs": "Always required. English description of product in booking.",
            "type": "optional<string>",
          },
          "description_for_export_customs": {
            "docs": "Required if booking if origin address or origin port is in Mainland China. Chinese description of product in booking.",
            "type": "optional<string>",
          },
          "hs_code": "optional<HsCode>",
        },
      },
      "BookingHsCode": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "String representing the object’s type. Always \`/product_descriptions\` for this object.",
            "type": "optional<string>",
          },
          "description": {
            "docs": "Always required. English description of product in booking.",
            "type": "optional<string>",
          },
          "description_for_export_customs": {
            "docs": "Required if booking if origin address or origin port is in Mainland China. Chinese description of product in booking.",
            "type": "optional<string>",
          },
          "description_for_export_customs_locale": {
            "docs": "Required if booking if origin address or origin port is in Mainland China. Code for the locale for description_for_export_customs. Currently only \`zh_CN\`.",
            "type": "optional<string>",
          },
          "hs_code": "optional<HsCode>",
        },
      },
      "BookingLineItem": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "booking": "optional<BookingRef>",
          "id": {
            "docs": "Unique identifier for the booking line item",
            "type": "optional<integer>",
          },
          "purchase_order_line_item": "optional<PurchaseOrderLineItemRef>",
          "units": {
            "docs": "Number of units of purchase_order_line_item booked on booking",
            "type": "optional<integer>",
          },
        },
      },
      "BookingLineItemCollectionRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "link": {
            "docs": "URL to fetch list of objects.",
            "type": "optional<string>",
          },
          "ref_type": {
            "docs": "Type of the object in this list.",
            "type": "optional<string>",
          },
        },
      },
      "BookingQuoteStatus": {
        "enum": [
          "pending_quote",
          "sent_quote",
          "received_quote",
          "shared_quote",
          "expired_quote",
          "ready_to_share_quote",
          "accepted_quote",
          "rejected_quote",
          "requoted_quote",
          "archived_quote",
        ],
      },
      "BookingRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "id": "optional<integer>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "BookingStatus": {
        "enum": [
          "archived",
          "draft",
          "submitted",
          "booked",
          "shipment",
        ],
      },
      "CarbonCalculation": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "co2e_emissions": "optional<Weight>",
        },
      },
      "Cargo": {
        "docs": "With cargo you have two options, detailed or simple. These are both expressed directly on the cargo object. For detailed cargo, \`shipping_units\` is required, and \`weight\` and \`volume\` is required in the \`cargo\` object or the \`shipping_units\` object. For simple cargo, \`shipping_units\` is required, but only one should be specified, and \`weight\` and \`volume\` are required in the \`cargo\` object.",
        "properties": {
          "_object": {
            "docs": "String representing the object’s type. Always \`/cargo\` for this object.",
            "type": "optional<string>",
          },
          "contains_hazmat": {
            "docs": "Required. Whether the cargo contains hazardous materials.",
            "type": "optional<boolean>",
          },
          "contains_li_ion": {
            "docs": "Required. Whether the cargo contains lithium-ion batteries.",
            "type": "optional<boolean>",
          },
          "contains_magnets": {
            "docs": "Required. Whether the cargo contains magnets.",
            "type": "optional<boolean>",
          },
          "contains_non_li_ion_battery": {
            "docs": "Required. Whether the cargo contains non-lithium-ion batteries, e.g. lithium batteries.",
            "type": "optional<boolean>",
          },
          "contains_other_dangerous_goods": {
            "docs": "Required. Whether the cargo contains other non-hazmat, non-magnet, non-battery dangerous goods.",
            "type": "optional<boolean>",
          },
          "lithium_batteries_packing_types": {
            "docs": "Required if \`contains_li_ion\` is \`true\`. List of ways in which lithium-ion batteries will be packed for this booking. This can be a subset of \`packed_loose\`, \`packed_with_equipment\`, \`contained_in_equipment\`, and \`contained_in_battery_powered_vehicle\`.",
            "type": "optional<list<CargoLithiumBatteriesPackingTypesItem>>",
          },
          "marks_and_numbers": {
            "docs": "Optional. Identifying markings and numbers that are visible on the cargo.",
            "type": "optional<string>",
          },
          "shipping_units": "optional<list<ShippingUnit>>",
          "volume": "optional<Volume>",
          "weight": "optional<Weight>",
        },
      },
      "CargoLithiumBatteriesPackingTypesItem": {
        "enum": [
          "packed_loose",
          "packed_with_equipment",
          "contained_in_equipment",
          "contained_in_battery_powered_vehicles",
        ],
      },
      "CommercialInvoice": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object. Always /commercial_invoice for this object.",
            "type": "optional<string>",
          },
          "currency": "optional<string>",
          "digitization_status": {
            "docs": "Status about if the digitization process for this commercial invoice is complete. If it is not complete, then the commercial invoice should be considered a draft that can change.",
            "type": "optional<CommercialInvoiceDigitizationStatus>",
          },
          "id": {
            "docs": "Unique identifier for the commercial invoice.",
            "type": "optional<string>",
          },
          "invoice_date": {
            "docs": "Represents date of the invoice. This can be null.",
            "type": "optional<string>",
          },
          "invoice_number": {
            "docs": "Invoice number on the commercial invoice, typically used for display purposes.",
            "type": "optional<string>",
          },
          "involved_parties": "optional<list<CustomsInvolvedParty>>",
          "is_related_parties": {
            "docs": "Whether there was a related parties transaction as defined by CBP.",
            "type": "optional<boolean>",
          },
          "line_items": "optional<list<CommercialInvoiceLineItem>>",
          "manufacturer_addresses": "optional<list<Address>>",
          "metadata": "optional<Metadata>",
          "order_number": {
            "docs": "Represents the which order the invoice is linked to. This can be null.",
            "type": "optional<string>",
          },
          "shipment": "optional<ShipmentRef>",
          "total_unit_count": {
            "docs": "Total units on this commercial invoice.",
            "type": "optional<string>",
          },
          "total_value": "optional<Money>",
          "total_volume": "optional<Volume>",
          "total_weight": "optional<Weight>",
        },
      },
      "CommercialInvoiceCollectionRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "CommercialInvoiceDigitizationStatus": {
        "docs": "Status about if the digitization process for this commercial invoice is complete. If it is not complete, then the commercial invoice should be considered a draft that can change.",
        "enum": [
          "pending",
          "reviewed",
          "complete",
        ],
      },
      "CommercialInvoiceLineItem": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object. Always /commercial_invoice_line_item for this object.",
            "type": "optional<string>",
          },
          "container_number": "optional<CommercialInvoiceLineItemContainerNumber>",
          "document_line_number": "optional<integer>",
          "first_sale_value": "optional<Money>",
          "id": "optional<integer>",
          "manufacturer_address": "optional<Address>",
          "manufacturer_name": "optional<string>",
          "metadata": "optional<Metadata>",
          "net_net_weight": {
            "docs": "Weight excluding packaging, tags, labels, instruction manuals, etc.",
            "type": "optional<Weight>",
          },
          "net_value": "optional<Money>",
          "net_weight": {
            "docs": "Weight excluding packaging.",
            "type": "optional<Weight>",
          },
          "po_line_item_number": {
            "docs": "Purchase order line item number",
            "type": "optional<string>",
          },
          "price_per_unit": "optional<Money>",
          "product": "optional<ProductRef>",
          "purchase_order_number": "optional<string>",
          "total_units": "optional<integer>",
          "value": "optional<Money>",
          "volume": "optional<Volume>",
          "weight": {
            "docs": "Weight including any associated packaging (padding, foam, etc).",
            "type": "optional<Weight>",
          },
        },
      },
      "CommercialInvoiceLineItemContainerNumber": {
        "docs": undefined,
        "properties": {
          "commercial_invoice_line_item_id": "optional<integer>",
          "container_number": "optional<string>",
          "created_at": "optional<datetime>",
          "deleted_at": "optional<datetime>",
          "id": "optional<integer>",
          "updated_at": "optional<datetime>",
        },
      },
      "Company": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object. Always /network/company for this object.",
            "type": "optional<string>",
          },
          "contacts": "optional<GenericCollectionRef>",
          "editable": "optional<boolean>",
          "entities": "optional<list<CompanyEntity>>",
          "id": {
            "docs": "Unique identifier for the company",
            "type": "optional<string>",
          },
          "locations": "optional<GenericCollectionRef>",
          "metadata": "optional<Metadata>",
          "name": "optional<string>",
          "ref": "optional<string>",
        },
      },
      "CompanyEntity": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "id": "optional<integer>",
          "mailing_address": "optional<Address>",
          "name": "optional<string>",
          "ref": "optional<string>",
          "vat_numbers": "optional<list<VatNumber>>",
        },
      },
      "CompanyEntityRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "id": "optional<integer>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "Contact": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object. Always /network/contact for this object.",
            "type": "optional<string>",
          },
          "company": {
            "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
            "type": "optional<ContactCompany>",
          },
          "email": "optional<string>",
          "id": {
            "docs": "Unique identifier for the contact",
            "type": "optional<string>",
          },
          "locations": "optional<GenericCollectionRef>",
          "name": "optional<string>",
          "phone_number": "optional<string>",
        },
      },
      "ContactCompany": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "id": "optional<string>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "ContainerCollectionRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "link": {
            "docs": "URL to fetch list of objects.",
            "type": "optional<string>",
          },
          "ref_type": {
            "docs": "Type of the object in this list.",
            "type": "optional<string>",
          },
        },
      },
      "ContainerCounts": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "String representing the object’s type. Always \`/container_counts\` for this object.",
            "type": "optional<string>",
          },
          "forty_five_ft_hc": {
            "docs": "Quantity of 45 ft HC containers requested.",
            "type": "optional<integer>",
          },
          "forty_ft": {
            "docs": "Quantity of 40 ft containers requested.",
            "type": "optional<integer>",
          },
          "forty_ft_hc": {
            "docs": "Quantity of 40 ft HC containers requested.",
            "type": "optional<integer>",
          },
          "twenty_ft": {
            "docs": "Quantity of 20 ft containers requested.",
            "type": "optional<integer>",
          },
        },
      },
      "ContainerLegCollectionRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "link": {
            "docs": "URL to fetch list of objects.",
            "type": "optional<string>",
          },
          "ref_type": {
            "docs": "Type of the object in this list.",
            "type": "optional<string>",
          },
        },
      },
      "ContainerRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "id": "optional<integer>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "CoordinatesCreate": {
        "docs": undefined,
        "properties": {
          "latitude": "optional<string>",
          "longitude": "optional<string>",
        },
      },
      "CreateAirBooking": {
        "docs": "If a non-null value is passed in for 'air_booking', then the new booking will be assumed to be an air booking, even if the 'ocean_booking' or 'trucking_booking' fields are set.",
        "properties": {
          "destination_port_iata_code": {
            "docs": "Optional, provide one of \`destination_port_us_cbp_port_code\`, \`destination_port_loc_code\`, \`destination_port_iata_code\`, or \`destination_port_icao_code\`. Unique airport reference code used by IATA.",
            "type": "optional<string>",
          },
          "destination_port_icao_code": {
            "docs": "Optional, provide one of \`destination_port_us_cbp_port_code\`, \`destination_port_loc_code\`, \`destination_port_iata_code\`, or \`destination_port_icao_code\`. Unique airport reference code used by ICAO.",
            "type": "optional<string>",
          },
          "destination_port_loc_code": {
            "docs": "Optional, provide one of \`destination_port_us_cbp_port_code\`, \`destination_port_loc_code\`, \`destination_port_iata_code\`, or \`destination_port_icao_code\`. Unique port reference code published in the UN/LOCODE.",
            "type": "optional<string>",
          },
          "destination_port_us_cbp_port_code": {
            "docs": "Optional, provide one of \`destination_port_us_cbp_port_code\`, \`destination_port_loc_code\`, \`destination_port_iata_code\`, or \`destination_port_icao_code\`. Unique port reference code used by US CBP, not applicable for non-US airports.",
            "type": "optional<string>",
          },
          "incoterm": "CreateAirBookingIncoterm",
          "origin_port_iata_code": {
            "docs": "One of \`origin_port_us_cbp_port_code\`, \`origin_port_loc_code\`, \`origin_port_iata_code\`, or \`origin_port_icao_code\` is required if \`pickup_service\` = \`no\`. Unique airport reference code used by IATA.",
            "type": "optional<string>",
          },
          "origin_port_icao_code": {
            "docs": "One of \`origin_port_us_cbp_port_code\`, \`origin_port_loc_code\`, \`origin_port_iata_code\`, or \`origin_port_icao_code\` is required if \`pickup_service\` = \`no\`. Unique airport reference code used by ICAO.",
            "type": "optional<string>",
          },
          "origin_port_loc_code": {
            "docs": "One of \`origin_port_us_cbp_port_code\`, \`origin_port_loc_code\`, \`origin_port_iata_code\`, or \`origin_port_icao_code\` is required if \`pickup_service\` = \`no\`. Unique port reference code published in the UN/LOCODE.",
            "type": "optional<string>",
          },
          "origin_port_us_cbp_port_code": {
            "docs": "One of \`origin_port_us_cbp_port_code\`, \`origin_port_loc_code\`, \`origin_port_iata_code\`, or \`origin_port_icao_code\` is required if \`pickup_service\` = \`no\`. Unique port reference code used by US CBP, not applicable for non-US airports.",
            "type": "optional<string>",
          },
          "product_descriptions": "list<CreateBookingHsCode>",
          "wants_delivery_service": {
            "docs": "Optional. Whether transportation is requested from the destination port to destination address. If unknown, then leave as \`null\`.",
            "type": "optional<boolean>",
          },
          "wants_pickup_service": {
            "docs": "Always required. Whether transportation is requested from the origin location to the port.",
            "type": "boolean",
          },
        },
      },
      "CreateAirBookingIncoterm": {
        "enum": [
          "EXW",
          "FOB",
          "FAS",
          "FCA",
          "CPT",
          "CFR",
          "CIF",
          "CIP",
          "DAT",
          "DAP",
          "DDP",
          "DPU",
        ],
      },
      "CreateBookingAmendmentHsCode": {
        "docs": undefined,
        "properties": {
          "description": {
            "docs": "Always required. English description of product in booking.",
            "type": "string",
          },
          "description_for_export_customs": {
            "docs": "Required if booking if origin address or origin port is in Mainland China. Chinese description of product in booking.",
            "type": "optional<string>",
          },
          "hs_code": {
            "docs": "The six digit code under which the product should be classified for export customs.",
            "type": "string",
          },
        },
      },
      "CreateBookingHsCode": {
        "docs": undefined,
        "properties": {
          "description": {
            "docs": "Always required. English description of product in booking.",
            "type": "string",
          },
          "description_for_export_customs": {
            "docs": "Required if booking if origin address or origin port is in Mainland China. Chinese description of product in booking.",
            "type": "optional<string>",
          },
          "description_for_export_customs_locale": {
            "docs": "Required if booking if origin address or origin port is in Mainland China. Code for the locale for description_for_export_customs. Currently only \`zh_CN\`.",
            "type": "optional<string>",
          },
          "hs_code": {
            "docs": "The six digit code under which the product should be classified for export customs.",
            "type": "string",
          },
        },
      },
      "CreateCargo": {
        "docs": "With cargo you have two options, detailed or simple. These are both expressed directly on the cargo object. For detailed cargo, \`shipping_units\` is required, and \`weight\` and \`volume\` is required in the \`cargo\` object or the \`shipping_units\` object. For simple cargo, \`shipping_units\` is required, but only one should be specified, and \`weight\` and \`volume\` are required in the \`cargo\` object.",
        "properties": {
          "contains_hazmat": {
            "docs": "Required. Whether the cargo contains hazardous materials.",
            "type": "optional<boolean>",
          },
          "contains_li_ion": {
            "docs": "Required. Whether the cargo contains lithium-ion batteries.",
            "type": "optional<boolean>",
          },
          "contains_magnets": {
            "docs": "Required. Whether the cargo contains magnets.",
            "type": "optional<boolean>",
          },
          "contains_non_li_ion_battery": {
            "docs": "Required. Whether the cargo contains non-lithium-ion batteries, e.g. lithium batteries.",
            "type": "optional<boolean>",
          },
          "contains_other_dangerous_goods": {
            "docs": "Required. Whether the cargo contains other non-hazmat, non-magnet, non-battery dangerous goods.",
            "type": "optional<boolean>",
          },
          "lithium_batteries_packing_types": {
            "docs": "Required if \`contains_li_ion\` is \`true\`. List of ways in which lithium-ion batteries will be packed for this booking. This can be a subset of \`packed_loose\`, \`packed_with_equipment\`, \`contained_in_equipment\`, and \`contained_in_battery_powered_vehicle\`.",
            "type": "optional<list<CreateCargoLithiumBatteriesPackingTypesItem>>",
          },
          "marks_and_numbers": {
            "docs": "Optional. Identifying markings and numbers that are visible on the cargo.",
            "type": "optional<string>",
          },
          "shipping_units": "optional<list<ShippingUnitCreate>>",
          "volume": "optional<VolumeCreate>",
          "weight": "optional<WeightCreate>",
        },
      },
      "CreateCargoLithiumBatteriesPackingTypesItem": {
        "enum": [
          "packed_loose",
          "packed_with_equipment",
          "contained_in_equipment",
          "contained_in_battery_powered_vehicles",
        ],
      },
      "CreateCommercialInvoiceLineItem": {
        "docs": undefined,
        "properties": {
          "container_number": "optional<string>",
          "country_of_origin": "optional<string>",
          "document_line_number": {
            "docs": "Document line number that this data represents. Counting from 1.",
            "type": "optional<integer>",
          },
          "first_sale_value": "optional<MoneyCreate>",
          "gross_weight": "optional<WeightCreate>",
          "manufacturer_ref": {
            "docs": "[DEPRECATED] Your custom string used to refer to a manufacturer location.",
            "type": "optional<string>",
          },
          "metadata": "optional<MetadataCreate>",
          "net_net_weight": "optional<WeightCreate>",
          "net_value": "optional<MoneyCreate>",
          "net_weight": "optional<WeightCreate>",
          "po_line_item_number": {
            "docs": "Purchase order line item number",
            "type": "optional<string>",
          },
          "price_per_unit": "MoneyCreate",
          "product_sku": {
            "docs": "The SKU of the product associated with this line item as it is stored in Flexport's system.",
            "type": "string",
          },
          "purchase_order_number": "optional<string>",
          "quantity": "CreateQuantity",
          "value": "MoneyCreate",
          "volume": "optional<VolumeCreate>",
        },
      },
      "CreateContainerCounts": {
        "docs": undefined,
        "properties": {
          "forty_five_ft_hc": {
            "docs": "Quantity of 45 ft HC containers requested.",
            "type": "optional<integer>",
          },
          "forty_ft": {
            "docs": "Quantity of 40 ft containers requested.",
            "type": "optional<integer>",
          },
          "forty_ft_hc": {
            "docs": "Quantity of 40 ft HC containers requested.",
            "type": "optional<integer>",
          },
          "twenty_ft": {
            "docs": "Quantity of 20 ft containers requested.",
            "type": "optional<integer>",
          },
        },
      },
      "CreateDocument": {
        "docs": undefined,
        "properties": {
          "document": {
            "docs": "Document represented in a strict Base64-encoded string.",
            "type": "string",
          },
          "document_type": {
            "docs": "Type of document.",
            "type": "string",
          },
          "file_name": {
            "docs": "Name of the document.",
            "type": "string",
          },
          "memo": {
            "docs": "Document memo or message.",
            "type": "optional<string>",
          },
          "mime_type": {
            "docs": "A two type descriptor describing the media type associated with the document.",
            "type": "string",
          },
          "shipment_id": {
            "docs": "Corresponding shipment for the document.",
            "type": "integer",
          },
          "user_email": {
            "docs": "Email of the user that will be listed as the document's uploader. If omitted, it will default to the company's admin.",
            "type": "optional<string>",
          },
        },
      },
      "CreateInvolvedParty": {
        "docs": undefined,
        "properties": {
          "company_entity_ref": {
            "docs": "Your custom string used to refer to the company entity. Can be used to look up or reference the company entity later on.",
            "type": "string",
          },
          "type": "string",
        },
      },
      "CreateLineItem": {
        "docs": undefined,
        "properties": {
          "assigned_party_ref": {
            "docs": "The party that this line item is assigned to. Useful if assigning line items to different factories under a vendor, for example.",
            "type": "optional<string>",
          },
          "cargo_ready_date": {
            "docs": "Required if there is no cargo_ready_date in the line item's purchase order. Date when cargo is ready for pickup at the origin location.",
            "type": "optional<string>",
          },
          "destination_locations": {
            "docs": "List of destinations locations for this line item and the number of units to be sent",
            "type": "optional<list<CreateLineItemDestinationLocation>>",
          },
          "destination_port": {
            "docs": "Optional. The destination port",
            "type": "optional<CreatePurchaseOrderPort>",
          },
          "hs_codes": {
            "docs": "A list of the hs codes in this line item",
            "type": "optional<list<CreatePurchaseOrderHsCode>>",
          },
          "incoterm": {
            "docs": "Required if there is no incoterm in the line item's purchase order. The Incoterm of your line item.",
            "type": "optional<CreateLineItemIncoterm>",
          },
          "item_key": {
            "docs": "Value uniquely identifying a line item within a Purchase Order.",
            "type": "string",
          },
          "line_item_number": {
            "docs": "Integer used to sequence the order of line items. Line items will appear in the UX in this order. Assigned automatically if not provided",
            "type": "optional<integer>",
          },
          "line_type": {
            "docs": "type of the line item",
            "type": "optional<CreateLineItemLineType>",
          },
          "measurements": {
            "docs": "Measurements for the unit of measure provided on the line item. For example, if the unit of measure on the line is barrels, these are the measurements for a barrel",
            "type": "optional<list<CreateLineItemMeasurement>>",
          },
          "metadata": "optional<MetadataCreate>",
          "must_arrive_date": {
            "docs": "Required if there is no must_arrive_date in the line item's purchase order. The must arrive date for this purchase order.",
            "type": "optional<string>",
          },
          "origin_location_ref": {
            "docs": "Optional. Customizable reference ID of network location that is the origin location.",
            "type": "optional<string>",
          },
          "origin_port": {
            "docs": "Optional. The origin port",
            "type": "optional<CreatePurchaseOrderPort>",
          },
          "parent_line_key": {
            "docs": "The line_item_key of the parent line item. This can not be set if this line item is a main line item.",
            "type": "optional<string>",
          },
          "product": "CreatePurchaseOrderProduct",
          "transportation_mode": {
            "docs": "Required if there is no transportation_mode in purchase order",
            "type": "optional<CreateLineItemTransportationMode>",
          },
          "unit_cost": {
            "docs": "The cost and currency per unit for this line item",
            "type": "optional<MoneyCreate>",
          },
          "unit_of_measure": {
            "docs": "The measurement per unit for this line item.",
            "type": "optional<CreateLineItemUnitOfMeasure>",
          },
          "units": {
            "docs": "Always required. The number of units for this line item.",
            "type": "integer",
          },
        },
      },
      "CreateLineItemDestinationLocation": {
        "docs": undefined,
        "properties": {
          "location_ref": {
            "docs": "Location ref",
            "type": "string",
          },
          "units": {
            "docs": "Number of units to go to this location",
            "type": "optional<integer>",
          },
        },
      },
      "CreateLineItemIncoterm": {
        "docs": "Required if there is no incoterm in the line item's purchase order. The Incoterm of your line item.",
        "enum": [
          "EXW",
          "FOB",
          "FAS",
          "FCA",
          "CPT",
          "CFR",
          "CIF",
          "CIP",
          "DAT",
          "DAP",
          "DDP",
        ],
      },
      "CreateLineItemLineType": {
        "docs": "type of the line item",
        "enum": [
          "main_line",
          "sub_line",
          "component_line",
        ],
      },
      "CreateLineItemMeasurement": {
        "docs": undefined,
        "properties": {
          "measure_type": {
            "docs": "The type of measure",
            "type": "CreateLineItemMeasurementMeasureType",
          },
          "unit_of_measure": {
            "docs": "The unit of measure that corresponds to the measure_type used. For example, measure_type might be length, and unit_of_measure might be meters.",
            "type": "string",
          },
          "value": {
            "docs": "The numeric value",
            "type": "string",
          },
        },
      },
      "CreateLineItemMeasurementMeasureType": {
        "docs": "The type of measure",
        "enum": [
          "length",
          "width",
          "height",
          "gross_weight",
          "net_weight",
          "net_net_weight",
          "gross_volume",
          "volume_weight",
        ],
      },
      "CreateLineItemTransportationMode": {
        "docs": "Required if there is no transportation_mode in purchase order",
        "enum": [
          "air",
          "ocean",
          "truck",
          "rail",
        ],
      },
      "CreateLineItemUnitOfMeasure": {
        "docs": "The measurement per unit for this line item.",
        "enum": [
          "BBL",
          "CAR",
          "CGM",
          "CKG",
          "CM",
          "CM2",
          "CTN",
          "CYK",
          "DOZ",
          "DPC",
          "DPR",
          "DS",
          "FBM",
          "G",
          "GBQ",
          "GR",
          "GRL",
          "HUN",
          "IRG",
          "JWL",
          "K",
          "KG",
          "KM3",
          "KM",
          "KWH",
          "L",
          "LNM",
          "M",
          "M2",
          "M3",
          "MBQ",
          "NO",
          "OSG",
          "PCS",
          "PDG",
          "PFL",
          "PK",
          "PRS",
          "PTG",
          "PX",
          "RHG",
          "RUG",
          "T",
          "TDWB",
          "THS",
          "W",
          "X",
          {
            "name": "Twenty",
            "value": "20",
          },
          {
            "name": "TwentyOne",
            "value": "21",
          },
          {
            "name": "TwoW",
            "value": "2W",
          },
          {
            "name": "FortyThree",
            "value": "43",
          },
          "AS",
          "BA",
          "BC",
          "BD",
          "BG",
          "BJ",
          "BK",
          "BN",
          "BO",
          "BU",
          "BX",
          "CA",
          "CB",
          "CC",
          "CF",
          "CI",
          "CN",
          "CP",
          "CQ",
          "CR",
          "CS",
          "CT",
          "CX",
          "CY",
          "DF",
          "DH",
          "DR",
          "DZ",
          "EA",
          "FT",
          "GA",
          "GRAM",
          "GS",
          "IN",
          "JO",
          "JR",
          "LB",
          "LT",
          "MP",
          "MR",
          "MT",
          "OZ",
          "PC",
          "PQ",
          "PR",
          "PS",
          "PT",
          "QT",
          "RA",
          "RL",
          "RM",
          "RO",
          "SC",
          "SF",
          "SH",
          "SI",
          "SJ",
          "SL",
          "SM",
          "SO",
          "SQ",
          "ST",
          "SV",
          "SX",
          "SY",
          "TE",
          "TN",
          "TO",
          "UN",
          "YD",
          "Z3",
        ],
      },
      "CreateOceanBooking": {
        "docs": undefined,
        "properties": {
          "container_counts": "CreateContainerCounts",
          "destination_port_loc_code": {
            "docs": "Optional, provide one of \`destination_port_us_cbp_port_code\` or \`destination_port_loc_code\`. Unique port reference code published in the United Nations Code for Trade and Transport Locations (UN/LOCODE).",
            "type": "optional<string>",
          },
          "destination_port_us_cbp_port_code": {
            "docs": "Optional, provide one of \`destination_port_us_cbp_port_code\` or \`destination_port_loc_code\`. Unique port reference code published in the United Nations Code for Trade and Transport Locations (UN/LOCODE).",
            "type": "optional<string>",
          },
          "incoterm": {
            "docs": "Always required. The Incoterm of your shipment",
            "type": "CreateOceanBookingIncoterm",
          },
          "is_lcl": {
            "docs": "Always required. Whether the booking is for an LCL shipment. If false, the booking is FCL. If true, the booking is LCL.",
            "type": "boolean",
          },
          "origin_port_loc_code": {
            "docs": "One of \`origin_port_us_cbp_port_code\` or  \`origin_port_loc_code\` is required if \`pickup_service\` = \`no\`. Unique port reference code used by US CBP.",
            "type": "optional<string>",
          },
          "origin_port_us_cbp_port_code": {
            "docs": "One of \`origin_port_us_cbp_port_code\` or  \`origin_port_loc_code\` is required if \`pickup_service\` = \`no\`. Unique port reference code used by US Customs and Border Protection.",
            "type": "optional<string>",
          },
          "product_descriptions": "list<CreateBookingHsCode>",
          "wants_delivery_service": {
            "docs": "Optional. Whether transportation is requested from the destination port to destination address. If unknown, then leave as \`null\`.",
            "type": "optional<boolean>",
          },
          "wants_pickup_service": {
            "docs": "Always required. Whether transportation is requested from the origin location to the port.",
            "type": "boolean",
          },
        },
      },
      "CreateOceanBookingIncoterm": {
        "docs": "Always required. The Incoterm of your shipment",
        "enum": [
          "EXW",
          "FOB",
          "FAS",
          "FCA",
          "CPT",
          "CFR",
          "CIF",
          "CIP",
          "DAT",
          "DAP",
          "DDP",
          "DPU",
        ],
      },
      "CreateOrUpdatePurchaseOrder": {
        "docs": undefined,
        "properties": {
          "cargo_ready_date": {
            "docs": "Required if there is no cargo_ready_date in each line item. Date when cargo is ready for pickup at the origin location.",
            "type": "optional<string>",
          },
          "currency_code": {
            "docs": "Required if there is no currency_code in each line item. The currency code being used in this purchase order.",
            "type": "optional<string>",
          },
          "destination_location_refs": {
            "docs": "Reference ID of the network locations that are the destination locations. Multiple values are allowed, which would signify that this order is going to be shipped to multiple locations.",
            "type": "optional<list<string>>",
          },
          "destination_port": {
            "docs": "The destination port",
            "type": "optional<CreatePurchaseOrderPort>",
          },
          "freight_payment_terms": {
            "docs": "The freight payment term for the purchase order",
            "type": "optional<CreateOrUpdatePurchaseOrderFreightPaymentTerms>",
          },
          "incoterm": {
            "docs": "Required if there is no incoterm in each line item. The incoterm of your purchase order.",
            "type": "optional<CreateOrUpdatePurchaseOrderIncoterm>",
          },
          "issue_date": {
            "docs": "The issue date for this purchase order.",
            "type": "optional<string>",
          },
          "line_items": {
            "docs": "A list of the line items in this purchase order",
            "type": "list<CreateLineItem>",
          },
          "memo": {
            "docs": "Your notes or instructions on this purchase order.",
            "type": "optional<string>",
          },
          "metadata": "optional<MetadataCreate>",
          "must_arrive_date": {
            "docs": "Required if there is no must_arrive_date in each line item. The must arrive date for this purchase order.",
            "type": "optional<string>",
          },
          "name": {
            "docs": "Always required. Name of the purchase order.",
            "type": "string",
          },
          "order_class": {
            "docs": "Class of the purchase order.",
            "type": "optional<CreateOrUpdatePurchaseOrderOrderClass>",
          },
          "order_type": {
            "docs": "Type of purchase order, which is used for rules, searching, and reporting",
            "type": "optional<string>",
          },
          "origin_location_ref": {
            "docs": "Customizable reference ID of the network location that is the origin location.",
            "type": "optional<string>",
          },
          "origin_port": {
            "docs": "The origin port",
            "type": "optional<CreatePurchaseOrderPort>",
          },
          "parties": {
            "docs": "A list of the parties in this purchase order. Buyer and seller are required parties. Owner is the owner of this order and will default to the buyer if not specified.",
            "type": "list<CreateParty>",
          },
          "priority": {
            "docs": "priority of the purchase order.",
            "type": "optional<CreateOrUpdatePurchaseOrderPriority>",
          },
          "status": {
            "docs": "The status of the purchase order. Open POs denote POs that are ready to be booked. Closed POs are ones that you'd like to mark as done (typically because they've finished shipping), while Cancelled POs denote POs that were mistakenly uploaded or that should not be used",
            "type": "optional<CreateOrUpdatePurchaseOrderStatus>",
          },
          "transportation_mode": {
            "docs": "Required if there is no transportation_mode in purchase order",
            "type": "optional<CreateOrUpdatePurchaseOrderTransportationMode>",
          },
        },
      },
      "CreateOrUpdatePurchaseOrderFreightPaymentTerms": {
        "docs": "The freight payment term for the purchase order",
        "enum": [
          "freight_collect",
          "freight_prepaid",
        ],
      },
      "CreateOrUpdatePurchaseOrderIncoterm": {
        "docs": "Required if there is no incoterm in each line item. The incoterm of your purchase order.",
        "enum": [
          "EXW",
          "FOB",
          "FAS",
          "FCA",
          "CPT",
          "CFR",
          "CIF",
          "CIP",
          "DAT",
          "DAP",
          "DDP",
        ],
      },
      "CreateOrUpdatePurchaseOrderOrderClass": {
        "docs": "Class of the purchase order.",
        "enum": [
          "purchase_order",
          "sales_order",
          "transfer_order",
          "delivery_order",
          "work_order",
        ],
      },
      "CreateOrUpdatePurchaseOrderPriority": {
        "docs": "priority of the purchase order.",
        "enum": [
          "high",
          "standard",
        ],
      },
      "CreateOrUpdatePurchaseOrderStatus": {
        "docs": "The status of the purchase order. Open POs denote POs that are ready to be booked. Closed POs are ones that you'd like to mark as done (typically because they've finished shipping), while Cancelled POs denote POs that were mistakenly uploaded or that should not be used",
        "enum": [
          "open",
          "cancelled",
          "closed",
        ],
      },
      "CreateOrUpdatePurchaseOrderTransportationMode": {
        "docs": "Required if there is no transportation_mode in purchase order",
        "enum": [
          "air",
          "ocean",
          "truck",
          "rail",
        ],
      },
      "CreateParty": {
        "docs": "A party is a company entity that is tied to a purchase order and has a specific role.",
        "properties": {
          "contacts": {
            "docs": "A list of contact data for who should be contacted should there be questions about this order. For example, if your supplier needs to contact someone, who should they contact?",
            "type": "optional<list<CreatePartyContactsItem>>",
          },
          "external_ref": {
            "docs": "The external ref of the company entity that you wish to tie to this party",
            "type": "string",
          },
          "location_ref": {
            "docs": "The external ref of the location that you wish to tie to this party. This should be the address that would be associated with the party at the top of a purchase order document. Used for order delivery to suppliers, not in the booking process.",
            "type": "optional<string>",
          },
          "role": {
            "docs": "The role that the party has",
            "type": "CreatePartyRole",
          },
        },
      },
      "CreatePartyContactsItem": {
        "docs": undefined,
        "properties": {
          "department": "optional<string>",
          "email": "optional<string>",
          "fax": "optional<string>",
          "name": "optional<string>",
          "phone": "optional<string>",
        },
      },
      "CreatePartyRole": {
        "docs": "The role that the party has",
        "enum": [
          "buyer",
          "seller",
          "owner",
          "shipper",
          "consignee",
          "freight_forwarder",
          "notify_party",
          "customs_broker",
          "carrier",
          "manufacturer",
          "buyers_agent",
          "sellers_agent",
        ],
      },
      "CreatePurchaseOrderHsCode": {
        "docs": undefined,
        "properties": {
          "code": {
            "docs": "The indentifying code on the hs code",
            "type": "string",
          },
          "country_code": {
            "docs": "The country code of the country that the hs code belongs to",
            "type": "string",
          },
        },
      },
      "CreatePurchaseOrderPort": {
        "docs": undefined,
        "properties": {
          "code": {
            "docs": "A unique identifier for this port",
            "type": "string",
          },
          "code_type": {
            "docs": "The code type of the port",
            "type": "CreatePurchaseOrderPortCodeType",
          },
        },
      },
      "CreatePurchaseOrderPortCodeType": {
        "docs": "The code type of the port",
        "enum": [
          "unlocode",
          "iata",
          "icao",
          "us_cbp",
        ],
      },
      "CreatePurchaseOrderProduct": {
        "docs": undefined,
        "properties": {
          "color": {
            "docs": "The color of the product",
            "type": "optional<string>",
          },
          "country_of_origin": {
            "docs": "The country the product was manufactured in",
            "type": "optional<string>",
          },
          "dangerous": {
            "docs": "Whether or not the product is a dangerous good.",
            "type": "optional<boolean>",
          },
          "ean_ucc_13": {
            "docs": "The EAN/UCC-13 of the product.",
            "type": "optional<string>",
          },
          "ean_ucc_8": {
            "docs": "The EAN/UCC-8 of the product.",
            "type": "optional<string>",
          },
          "lot_number": {
            "docs": "The lot number of the product",
            "type": "optional<string>",
          },
          "name": {
            "docs": "The name of product",
            "type": "string",
          },
          "product_category": {
            "docs": "The category to group this product under",
            "type": "optional<string>",
          },
          "size": {
            "docs": "The size of the product",
            "type": "optional<string>",
          },
          "sku": {
            "docs": "SKU of the product. Required when line item is bookable, there is no sub line item on this line item",
            "type": "optional<string>",
          },
          "style": {
            "docs": "The style of the product",
            "type": "optional<string>",
          },
          "upc": {
            "docs": "Universal product code",
            "type": "optional<string>",
          },
        },
      },
      "CreateQuantity": {
        "docs": undefined,
        "properties": {
          "unit": {
            "docs": "Required. Unit of measurement.",
            "type": "CreateQuantityUnit",
          },
          "value": {
            "docs": "Required. The number of units in the units of measurement.",
            "type": "double",
          },
        },
      },
      "CreateQuantityUnit": {
        "docs": "Required. Unit of measurement.",
        "enum": [
          "pcs",
          "dpc",
          "doz",
          "hun",
          "ths",
          "prs",
          "dpr",
        ],
      },
      "CreateTruckingBooking": {
        "docs": undefined,
        "properties": {
          "description_of_products": {
            "docs": "General description of the products in the shipment.",
            "type": "optional<string>",
          },
          "is_ltl": {
            "docs": "Whether the booking is for an LTL shipment. If false, the booking is FTL. If true, then the booking is LTL.",
            "type": "boolean",
          },
          "payment_terms": {
            "docs": "Whether the shipper or consignee is responsible for payment of trucking freight. This can be \`collect\` (consignee) or \`prepaid\` (shipper).",
            "type": "CreateTruckingBookingPaymentTerms",
          },
        },
      },
      "CreateTruckingBookingPaymentTerms": {
        "docs": "Whether the shipper or consignee is responsible for payment of trucking freight. This can be \`collect\` (consignee) or \`prepaid\` (shipper).",
        "enum": [
          "collect",
          "prepaid",
        ],
      },
      "CreditMemo": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "The type of the object",
            "type": "optional<string>",
          },
          "amount": "optional<Money>",
          "categories": {
            "docs": "List of categories of the credited line items",
            "type": "optional<list<string>>",
          },
          "category": {
            "docs": "DEPRECATED - Not available after v3. Please use \`categories\`.",
            "type": "optional<string>",
          },
          "credited_at": "optional<datetime>",
          "reason": {
            "docs": "DEPRECATED - Not available after v3. Please use \`reasons\`.",
            "type": "optional<string>",
          },
          "reasons": {
            "docs": "List of reasons why the credit was applied to the line items",
            "type": "optional<list<string>>",
          },
        },
      },
      "CustomsEntry": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object. Always /customs_entry for this object.",
            "type": "optional<string>",
          },
          "entry_number": "optional<string>",
          "id": {
            "docs": "Unique identifier for the customs entry.",
            "type": "optional<string>",
          },
          "release_date": {
            "docs": "The cargo release date for this entry.",
            "type": "optional<string>",
          },
          "release_status": {
            "docs": "The release status for this entry.",
            "type": "optional<CustomsEntryReleaseStatus>",
          },
          "shipment": "optional<ShipmentRef>",
        },
      },
      "CustomsEntryCollectionRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "CustomsEntryReleaseStatus": {
        "docs": "The release status for this entry.",
        "enum": [
          "cleared",
          "customs_hold",
          "pending",
        ],
      },
      "CustomsInvolvedParty": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "address": "optional<Address>",
          "company_entity": "optional<CompanyEntityRef>",
          "name": {
            "docs": "The name of involved party.",
            "type": "optional<string>",
          },
          "type": {
            "docs": "The type of involved party.",
            "type": "optional<string>",
          },
        },
      },
      "DistanceCreate": {
        "docs": undefined,
        "properties": {
          "unit": {
            "docs": "Required. Unit of measurement. "km" for kilometers. "mi" for miles.",
            "type": "optional<DistanceCreateUnit>",
          },
          "value": {
            "docs": "Required. Specifies the distance as a float.",
            "type": "optional<double>",
          },
        },
      },
      "DistanceCreateUnit": {
        "docs": "Required. Unit of measurement. "km" for kilometers. "mi" for miles.",
        "enum": [
          "km",
          "mi",
        ],
      },
      "Document": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object. Always /document for this object.",
            "type": "optional<string>",
          },
          "archived_at": {
            "docs": "Date-time string when this document was archived. Null if not archived.",
            "type": "optional<datetime>",
          },
          "document_type": {
            "docs": "Type of the document.",
            "type": "optional<string>",
          },
          "file_link": {
            "docs": "The link that can be used to download the file.",
            "type": "optional<string>",
          },
          "file_metadata": "optional<FileMetadata>",
          "file_name": "optional<string>",
          "id": {
            "docs": "Unique identifier for the document",
            "type": "optional<string>",
          },
          "memo": {
            "docs": "A short message or description about the document",
            "type": "optional<string>",
          },
          "shipment": "optional<ShipmentRef>",
        },
      },
      "DocumentCollectionRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "Error": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "String representing the object’s type. Always /api/error for this object.",
            "type": "optional<string>",
          },
          "code": {
            "docs": "Specialized identifier for this type of error in our API",
            "type": "optional<string>",
          },
          "message": {
            "docs": "Human readable error message",
            "type": "optional<string>",
          },
          "status": {
            "docs": "The HTTP status code (client or server error) made available for consumption from the body of the response.",
            "type": "optional<integer>",
          },
        },
      },
      "Exception": {
        "docs": undefined,
        "properties": {
          "_object": "optional<string>",
          "message": {
            "docs": "Description of the exceptional event.",
            "type": "optional<string>",
          },
          "root_cause_name": {
            "docs": "The main reason for the exception as human-friendly text.",
            "type": "optional<string>",
          },
          "root_cause_slug": {
            "docs": "The main reason for the exception as an identifier.",
            "type": "optional<ExceptionRootCauseSlug>",
          },
        },
      },
      "ExceptionRootCauseSlug": {
        "docs": "The main reason for the exception as an identifier.",
        "enum": [
          "carrier",
          "client",
          "consignee",
          "destination_agent",
          "destination_trucking_carrier",
          "export_customs_agent",
          "flexport",
          "government_agency",
          "import_customs_agent",
          "natural_event",
          "origin_agent",
          "origin_trucking_carrier",
          "shipper",
          "terminal",
          "unknown",
        ],
      },
      "FileMetadata": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object. Always /file_metadata for this object.",
            "type": "optional<string>",
          },
          "size": {
            "docs": "Size of the file in bytes",
            "type": "optional<integer>",
          },
          "uploaded_at": {
            "docs": "Date this document was uploaded.",
            "type": "optional<string>",
          },
        },
      },
      "FreightType": {
        "enum": [
          "port_to_door",
          "port_to_port",
          "door_to_door",
          "door_to_port",
        ],
      },
      "GenericCollectionRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "GenericObjectRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "id": "optional<GenericObjectRefId>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "GenericObjectRefId": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "string",
          "integer",
        ],
      },
      "HsCode": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "String representing the object’s type. Always \`/hs_code\` for this object.",
            "type": "optional<string>",
          },
          "code": {
            "docs": "6 digit (international HS) or 10 digit (US HTS) code.",
            "type": "optional<string>",
          },
          "country_code": "optional<string>",
          "description": {
            "docs": "Description of HS or HTS code classification.",
            "type": "optional<string>",
          },
        },
      },
      "Invoice": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object. Always '/invoice' for this object.",
            "type": "optional<string>",
          },
          "balance": {
            "docs": "Outstanding balance on the invoice",
            "type": "optional<Money>",
          },
          "credit_memos": {
            "docs": "List of any credits applied to this invoice.",
            "type": "optional<list<CreditMemo>>",
          },
          "due_date": {
            "docs": "Due date of the invoice",
            "type": "optional<string>",
          },
          "id": {
            "docs": "Unique ID for the invoice",
            "type": "optional<string>",
          },
          "issued_at": {
            "docs": "When the invoice was issued",
            "type": "optional<datetime>",
          },
          "issuer": {
            "docs": "Entity issuing the invoice (i.e. Flexport)",
            "type": "optional<CompanyEntity>",
          },
          "items": "optional<list<InvoiceItem>>",
          "last_updated_at": {
            "docs": "Time of the last adjustment to in invoice",
            "type": "optional<datetime>",
          },
          "name": {
            "docs": "Unique name for the invoice",
            "type": "optional<string>",
          },
          "notes": "optional<list<string>>",
          "recipient": {
            "docs": "Entity receiving the invoice (i.e. the customer)",
            "type": "optional<CompanyEntity>",
          },
          "shipments": "optional<ShipmentRef>",
          "status": {
            "docs": "Status of the invoice",
            "type": "optional<InvoiceStatus>",
          },
          "total": {
            "docs": "Sum of charges on the invoice",
            "type": "optional<Money>",
          },
          "type": {
            "docs": "What the invoice is being issued for. Shipment related charges are type \`Shipment\` and non-shipment related charges are type \`Client\`",
            "type": "optional<InvoiceType>",
          },
          "voided_at": {
            "docs": "When the invoice was voided (if applicable)",
            "type": "optional<datetime>",
          },
        },
      },
      "InvoiceItem": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object.",
            "type": "optional<string>",
          },
          "amount": "optional<Money>",
          "category": {
            "docs": "Category of the charge.",
            "type": "optional<InvoiceItemCategory>",
          },
          "container_numbers": {
            "docs": "Containers this charge is related to",
            "type": "optional<list<string>>",
          },
          "name": {
            "docs": "Description of charge.",
            "type": "optional<string>",
          },
          "quantity": "optional<InvoiceQuantity>",
          "rate": "optional<InvoiceRate>",
          "slug": {
            "docs": "Code describing the charge.",
            "type": "optional<string>",
          },
        },
      },
      "InvoiceItemCategory": {
        "docs": "Category of the charge.",
        "enum": [
          "freight",
          "origin",
          "destination",
          "customs",
          "additional",
          "capital",
        ],
      },
      "InvoiceQuantity": {
        "docs": "Describes the number of units used to calculate the price of a line item",
        "properties": {
          "_object": {
            "docs": "The type of the object",
            "type": "optional<string>",
          },
          "qualifier": {
            "docs": "describes what the value represents",
            "type": "optional<string>",
          },
          "value": {
            "docs": "numeric value described by qualifier",
            "type": "optional<string>",
          },
        },
      },
      "InvoiceRate": {
        "docs": "Describes the rate per unit used to calculate the price of a line item",
        "properties": {
          "_object": {
            "docs": "The type of the object",
            "type": "optional<string>",
          },
          "qualifier": {
            "docs": "describes what the value represents",
            "type": "optional<string>",
          },
          "value": {
            "docs": "numeric value described by qualifier",
            "type": "optional<string>",
          },
        },
      },
      "InvoiceStatus": {
        "docs": "Status of the invoice",
        "enum": [
          "outstanding",
          "past_due",
          "void",
          "paid",
          "payment_pending",
        ],
      },
      "InvoiceType": {
        "docs": "What the invoice is being issued for. Shipment related charges are type \`Shipment\` and non-shipment related charges are type \`Client\`",
        "enum": [
          "Shipment",
          "Client",
        ],
      },
      "LegCollectionRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "link": {
            "docs": "URL to fetch list of objects.",
            "type": "optional<string>",
          },
          "ref_type": {
            "docs": "Type of the object in this list.",
            "type": "optional<string>",
          },
        },
      },
      "LegRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "id": "optional<integer>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "Length": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "String representing the object’s type. Always \`/quantity/length\` for this object.",
            "type": "optional<string>",
          },
          "unit": {
            "docs": "Required. Unit of measurement. "cm" for centimeters. "in" for inches.",
            "type": "optional<LengthUnit>",
          },
          "value": {
            "docs": "Required. Specifies the length as a float.",
            "type": "optional<double>",
          },
        },
      },
      "LengthCreate": {
        "docs": undefined,
        "properties": {
          "unit": {
            "docs": "Required. Unit of measurement. "cm" for centimeters. "in" for inches.",
            "type": "optional<LengthCreateUnit>",
          },
          "value": {
            "docs": "Required. Specifies the length as a float.",
            "type": "optional<double>",
          },
        },
      },
      "LengthCreateUnit": {
        "docs": "Required. Unit of measurement. "cm" for centimeters. "in" for inches.",
        "enum": [
          "cm",
          "in",
        ],
      },
      "LengthUnit": {
        "docs": "Required. Unit of measurement. "cm" for centimeters. "in" for inches.",
        "enum": [
          "cm",
          "in",
        ],
      },
      "LineItemMeasurement": {
        "docs": undefined,
        "properties": {
          "measure_type": {
            "docs": "The type of measure",
            "type": "optional<LineItemMeasurementMeasureType>",
          },
          "unit_of_measure": {
            "docs": "The cost per unit for this line item.",
            "type": "optional<string>",
          },
          "value": {
            "docs": "The numeric value",
            "type": "optional<string>",
          },
        },
      },
      "LineItemMeasurementMeasureType": {
        "docs": "The type of measure",
        "enum": [
          "length",
          "width",
          "height",
          "gross_weight",
          "net_weight",
          "net_net_weight",
          "gross_volume",
          "volume_weight",
        ],
      },
      "Location": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object. Always /network/location for this object.",
            "type": "optional<string>",
          },
          "address": "optional<Address>",
          "company": "optional<GenericObjectRef>",
          "contacts": "optional<GenericObjectRef>",
          "editable": "optional<boolean>",
          "id": {
            "docs": "Unique identifier for the location",
            "type": "optional<string>",
          },
          "metadata": "optional<Metadata>",
          "name": "optional<string>",
          "ref": "optional<string>",
        },
      },
      "Manufacturer": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "manufacturer_code": "optional<string>",
        },
      },
      "Metadata": {
        "docs": "Set of custom key-values specific to the object. The keys are strings and values are arrays of strings. The set of valid keys is always the consignee's list of keys, even if call was made by a different party.
",
        "type": "map<string, unknown>",
      },
      "MetadataCreate": {
        "discriminated": false,
        "docs": "Metadata has two allowed formats. Either array format or object format. Refer to the metadata section in this documentation for more information.",
        "union": [
          {
            "docs": "Object format.",
            "type": "MetadataCreateExampleKey",
          },
          {
            "docs": "Array format.",
            "type": "list<MetadataCreateItem>",
          },
        ],
      },
      "MetadataCreateExampleKey": {
        "docs": "Object format.",
        "properties": {
          "example_key": "optional<list<string>>",
        },
      },
      "MetadataCreateItem": {
        "docs": undefined,
        "properties": {
          "name": "optional<string>",
          "value": "optional<list<string>>",
        },
      },
      "Money": {
        "docs": undefined,
        "extends": [
          "MoneyCreate",
        ],
        "properties": {},
      },
      "MoneyCreate": {
        "docs": undefined,
        "properties": {
          "amount": "optional<string>",
          "currency_code": "optional<string>",
        },
      },
      "OceanBookingDetail": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "container_counts": "optional<ContainerCounts>",
          "destination_port": "optional<Place>",
          "incoterm": "optional<OceanBookingDetailIncoterm>",
          "is_lcl": "optional<boolean>",
          "origin_port": "optional<Place>",
          "product_descriptions": "optional<list<BookingHsCode>>",
          "wants_delivery_service": "optional<boolean>",
          "wants_pickup_service": "optional<boolean>",
        },
      },
      "OceanBookingDetailIncoterm": {
        "enum": [
          "EXW",
          "FOB",
          "FAS",
          "FCA",
          "CPT",
          "CFR",
          "CIF",
          "CIP",
          "DAT",
          "DAP",
          "DDP",
          "DPU",
        ],
      },
      "OceanShipmentContainerLeg": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "dates": "optional<list<map<string, unknown>>>",
          "leg": "optional<LegRef>",
          "shipment_container": "optional<ContainerRef>",
        },
      },
      "OceanShipmentDetail": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "carrier_booking_number": "optional<string>",
          "confirmed_space_released_at": {
            "docs": "the date-time at which the carrier confirms space release related to the shipping order",
            "type": "optional<datetime>",
          },
          "containers": "optional<ContainerCollectionRef>",
          "house_bill_number": "optional<string>",
          "is_lcl": "optional<boolean>",
          "master_bill_number": "optional<string>",
        },
      },
      "OceanShipmentLeg": {
        "docs": undefined,
        "properties": {
          "_object": "optional<string>",
          "container_legs": "optional<ContainerLegCollectionRef>",
          "scac_code": "optional<string>",
          "vessel_imo": "optional<string>",
          "vessel_name": "optional<string>",
          "voyage_number": "optional<string>",
        },
      },
      "Parties": {
        "docs": "A party is a company entity that is tied to a purchase order that has a specific role.",
        "properties": {
          "company_entity": "optional<CompanyEntity>",
          "contacts": {
            "docs": "A list of contact data for who should be contacted should there be questions about this order. For example, if your supplier needs to contact someone, who should they contact?",
            "type": "optional<list<PartiesContactsItem>>",
          },
          "location": {
            "docs": "The object of the location that is tied to this party. This should be the address that would be associated with the party at the top of a purchase order document. Used for order delivery to suppliers, not in the booking process.",
            "type": "optional<Address>",
          },
          "role": {
            "docs": "The role that the party has",
            "type": "optional<PartiesRole>",
          },
        },
      },
      "PartiesContactsItem": {
        "docs": undefined,
        "properties": {
          "department": "optional<string>",
          "email": "optional<string>",
          "fax": "optional<string>",
          "name": "optional<string>",
          "phone": "optional<string>",
        },
      },
      "PartiesRole": {
        "docs": "The role that the party has",
        "enum": [
          "buyer",
          "seller",
          "owner",
          "shipper",
          "consignee",
          "freight_forwarder",
          "notify_party",
          "customs_broker",
          "carrier",
          "manufacturer",
          "buyers_agent",
          "sellers_agent",
        ],
      },
      "Place": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "address": "optional<Address>",
          "details": "optional<list<PlaceDetailsItem>>",
          "name": {
            "docs": "Name of the place",
            "type": "optional<string>",
          },
        },
      },
      "PlaceDetailsItem": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "Airport",
          "Placeport",
          "Manufacturer",
        ],
      },
      "Placeport": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<PlaceportObject>",
          },
          "port_code": "optional<string>",
        },
      },
      "PlaceportObject": {
        "docs": "Type of the object",
        "enum": [
          {
            "name": "OceanRailport",
            "value": "/ocean/railport",
          },
          {
            "name": "TruckingPort",
            "value": "/trucking/port",
          },
          {
            "name": "OceanPort",
            "value": "/ocean/port",
          },
        ],
      },
      "Product": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "archived_at": {
            "docs": "If the product has been archived, the time it was archived. If the product is still active this will be null.",
            "type": "optional<datetime>",
          },
          "classifications": "optional<list<ProductClassification>>",
          "client_verified": {
            "docs": "Indicates whether Client has verified this Product.",
            "type": "optional<boolean>",
          },
          "country_of_origin": {
            "docs": "[DEPRECATED] - Use the country_of_origin on the supplier field. The country the product was manufactured",
            "type": "optional<string>",
          },
          "description": {
            "docs": "Description of product",
            "type": "optional<string>",
          },
          "hs_codes": {
            "docs": "DEPRECATED - HS codes can be found in the classifications array",
            "type": "optional<list<HsCode>>",
          },
          "id": {
            "docs": "The Flexport id used to refer to the product",
            "type": "optional<integer>",
          },
          "name": {
            "docs": "The name of the product",
            "type": "optional<string>",
          },
          "product_category": {
            "docs": "The category to group this product under",
            "type": "optional<string>",
          },
          "product_properties": {
            "docs": "A user defined set of key-value objects to describe the product",
            "type": "optional<list<ProductProperty>>",
          },
          "sku": {
            "docs": "The SKU used to refer to the product",
            "type": "optional<string>",
          },
        },
      },
      "ProductClassification": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "codes": {
            "docs": "An array of HS codes for this product in the provided region",
            "type": "optional<list<string>>",
          },
          "region": {
            "docs": "The region for this classification. Currently only 2-character ISO codes and "EU" are supported",
            "type": "optional<string>",
          },
        },
      },
      "ProductProperty": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "type": {
            "docs": "Type of this property",
            "type": "optional<string>",
          },
          "value": {
            "docs": "Value of this property",
            "type": "optional<string>",
          },
        },
      },
      "ProductRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "id": "optional<integer>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "PurchaseOrder": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "archived_at": "optional<string>",
          "cargo_ready_date": "optional<string>",
          "created_at": "optional<string>",
          "destination_addresses": "optional<list<Address>>",
          "destination_port": "optional<Place>",
          "freight_paymnet_terms": "optional<PurchaseOrderFreightPaymnetTerms>",
          "id": {
            "docs": "A unique identifier for the purchase order",
            "type": "optional<integer>",
          },
          "incoterm": "optional<PurchaseOrderIncoterm>",
          "issue_date": {
            "docs": "the date that the order was issued",
            "type": "optional<string>",
          },
          "line_items": "optional<PurchaseOrderLineItemCollectionRef>",
          "memo": "optional<string>",
          "metadata": "optional<Metadata>",
          "must_arrive_date": "optional<string>",
          "name": {
            "docs": "The name of the purchase order",
            "type": "optional<string>",
          },
          "order_class": {
            "docs": "Class of the purchase order.",
            "type": "optional<PurchaseOrderOrderClass>",
          },
          "order_type": {
            "docs": "Type of purchase order, which is used for rules, searching, and reporting",
            "type": "optional<string>",
          },
          "origin_address": "optional<Address>",
          "origin_port": "optional<Place>",
          "parties": {
            "docs": "A list of the parties in this purchase order. Buyer, Seller and Owner parties will always be returned.",
            "type": "optional<list<Parties>>",
          },
          "priority": "optional<PurchaseOrderPriority>",
          "status": {
            "docs": "The status of the purchase order. Open POs denote POs that are ready to be booked. Closed POs are ones that you'd like to mark as done (typically because they've finished shipping), while Cancelled POs denote POs that were mistakenly uploaded or that should not be used.",
            "type": "optional<PurchaseOrderStatus>",
          },
          "transportation_mode": "optional<TransportationMode>",
          "updated_at": "optional<string>",
        },
      },
      "PurchaseOrderFreightPaymnetTerms": {
        "enum": [
          "freight_collect",
          "freight_prepaid",
        ],
      },
      "PurchaseOrderIncoterm": {
        "enum": [
          "EXW",
          "FOB",
          "FAS",
          "FCA",
          "CPT",
          "CFR",
          "CIF",
          "CIP",
          "DAT",
          "DAP",
          "DDP",
          "DPU",
        ],
      },
      "PurchaseOrderLineItem": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "assigned_party": "optional<CompanyEntity>",
          "booking_line_items": "optional<BookingLineItemCollectionRef>",
          "destination_addresses": "optional<list<PurchaseOrderLineItemDestinationAddress>>",
          "destination_port": "optional<Place>",
          "hs_codes": "optional<list<HsCode>>",
          "id": {
            "docs": "Unique identifier for the line item on the latest version of the PO",
            "type": "optional<integer>",
          },
          "incoterm": "optional<PurchaseOrderLineItemIncoterm>",
          "item_key": {
            "docs": "Value uniquely identifying a line item within a Purchase Order.",
            "type": "optional<string>",
          },
          "line_item_number": {
            "docs": "Integer used to sequence the order of line items. Line items will appear in the UX in this order. Assigned automatically if not provided.",
            "type": "optional<integer>",
          },
          "line_type": "optional<PurchaseOrderLineItemLineType>",
          "measurements": {
            "docs": "line item measurement group",
            "type": "optional<list<LineItemMeasurement>>",
          },
          "metadata": "optional<Metadata>",
          "must_arrive_date": "optional<string>",
          "origin_location": "optional<Address>",
          "origin_port": "optional<Place>",
          "parent_line_key": {
            "docs": "The line_item_key of this line items parent",
            "type": "optional<string>",
          },
          "product": "optional<PurchaseOrderProduct>",
          "purchase_order": "optional<PurchaseOrderRef>",
          "transportation_mode": "optional<TransportationMode>",
          "unit_cost": "optional<Money>",
          "unit_of_measure": "optional<PurchaseOrderLineItemUnitOfMeasure>",
          "units": "optional<integer>",
        },
      },
      "PurchaseOrderLineItemCollectionRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "link": {
            "docs": "URL to fetch list of objects",
            "type": "optional<string>",
          },
          "ref_type": {
            "docs": "Type of the object in this list",
            "type": "optional<string>",
          },
        },
      },
      "PurchaseOrderLineItemDestinationAddress": {
        "docs": undefined,
        "properties": {
          "location_ref": {
            "docs": "Location ref",
            "type": "optional<string>",
          },
          "units": {
            "docs": "Number of units to go to this location",
            "type": "optional<integer>",
          },
        },
      },
      "PurchaseOrderLineItemIncoterm": {
        "enum": [
          "EXW",
          "FOB",
          "FAS",
          "FCA",
          "CPT",
          "CFR",
          "CIF",
          "CIP",
          "DAT",
          "DAP",
          "DDP",
          "DPU",
        ],
      },
      "PurchaseOrderLineItemLineType": {
        "enum": [
          "main_line",
          "sub_line",
          "component_line",
        ],
      },
      "PurchaseOrderLineItemRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "id": "optional<integer>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "PurchaseOrderLineItemUnitOfMeasure": {
        "enum": [
          "BBL",
          "CAR",
          "CGM",
          "CKG",
          "CM",
          "CM2",
          "CTN",
          "CYK",
          "DPC",
          "DPR",
          "DS",
          "FBM",
          "G",
          "GBQ",
          "GR",
          "GRL",
          "HUN",
          "IRG",
          "JWL",
          "K",
          "KG",
          "KM",
          "KM3",
          "KWH",
          "L",
          "LNM",
          "M",
          "M2",
          "M3",
          "MBQ",
          "NO",
          "OSG",
          "PCS",
          "PDG",
          "PFL",
          "PK",
          "PRS",
          "PTG",
          "PX",
          "RHG",
          "RUG",
          "T",
          "TDWB",
          "W",
          "X",
        ],
      },
      "PurchaseOrderOrderClass": {
        "docs": "Class of the purchase order.",
        "enum": [
          "purchase_order",
          "sales_order",
          "transfer_order",
          "delivery_order",
          "work_order",
        ],
      },
      "PurchaseOrderPriority": {
        "enum": [
          "standard",
          "high",
        ],
      },
      "PurchaseOrderProduct": {
        "docs": undefined,
        "properties": {
          "color": {
            "docs": "The color of the product",
            "type": "optional<string>",
          },
          "country_of_origin": {
            "docs": "The country the product was manufactured in",
            "type": "optional<string>",
          },
          "dangerous": {
            "docs": "Whether or not the product is a dangerous good.",
            "type": "optional<boolean>",
          },
          "ean_ucc_13": {
            "docs": "The EAN/UCC-13 of the product.",
            "type": "optional<string>",
          },
          "ean_ucc_8": {
            "docs": "The EAN/UCC-8 of the product.",
            "type": "optional<string>",
          },
          "lot_number": {
            "docs": "The lot number of the product",
            "type": "optional<string>",
          },
          "name": {
            "docs": "The name of product",
            "type": "optional<string>",
          },
          "product_category": {
            "docs": "The category to group this product under",
            "type": "optional<string>",
          },
          "size": {
            "docs": "The size of the product",
            "type": "optional<string>",
          },
          "sku": {
            "docs": "SKU of the product.",
            "type": "optional<string>",
          },
          "style": {
            "docs": "The style of the product",
            "type": "optional<string>",
          },
          "upc": {
            "docs": "Universal product code",
            "type": "optional<string>",
          },
        },
      },
      "PurchaseOrderRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": "optional<string>",
          "id": "optional<integer>",
          "link": "optional<string>",
          "ref_type": "optional<string>",
        },
      },
      "PurchaseOrderStatus": {
        "docs": "The status of the purchase order. Open POs denote POs that are ready to be booked. Closed POs are ones that you'd like to mark as done (typically because they've finished shipping), while Cancelled POs denote POs that were mistakenly uploaded or that should not be used.",
        "enum": [
          "open",
          "closed",
          "cancelled",
        ],
      },
      "RailShipmentLeg": {
        "docs": undefined,
        "properties": {
          "_object": "optional<string>",
          "container_legs": "optional<ContainerLegCollectionRef>",
        },
      },
      "Shipment": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "actual_arrival_date": {
            "docs": "Actual arrival date to the last port of the main voyage",
            "type": "optional<datetime>",
          },
          "actual_delivered_in_full_date": {
            "docs": "Actual delivery date to the destination location. For ocean shipments with multiple containers, this is the date of last delivered container",
            "type": "optional<datetime>",
          },
          "actual_departure_date": {
            "docs": "Actual departure date from the first port of the main voyage",
            "type": "optional<datetime>",
          },
          "actual_picked_up_in_full_date": {
            "docs": "Actual pickup date from the origin location. For ocean shipments with multiple containers, this is the date of last picked up container",
            "type": "optional<datetime>",
          },
          "air_shipment": "optional<AirShipmentDetail>",
          "arrival_date": {
            "docs": "DEPRECATED date field",
            "type": "optional<datetime>",
          },
          "belongs_to_a_buyers_consol": {
            "docs": "Indicated whether the shipment is part of a buyer's consol.",
            "type": "optional<boolean>",
          },
          "booking": "optional<GenericObjectRef>",
          "buyers": "optional<list<CompanyEntity>>",
          "calculated_volume": "optional<Volume>",
          "calculated_weight": "optional<Weight>",
          "cargo_ready_date": {
            "docs": "Date when cargo is ready for pickup at the origin location",
            "type": "optional<string>",
          },
          "child_shipments": {
            "docs": "Links to the child shipments if the shipment is the parent shipment in a buyer's consol.",
            "type": "optional<list<ShipmentRef>>",
          },
          "commercial_invoices": "optional<CommercialInvoiceCollectionRef>",
          "consignees": "optional<list<CompanyEntity>>",
          "created_date": {
            "docs": "Date the user confirmed the Flexport quote for this Shipment",
            "type": "optional<datetime>",
          },
          "customs_entries": "optional<CustomsEntryCollectionRef>",
          "dangerous_goods": "optional<ShipmentDangerousGoods>",
          "delivered_in_full_date": {
            "docs": "DEPRECATED date field",
            "type": "optional<datetime>",
          },
          "departure_date": {
            "docs": "DEPRECATED date field",
            "type": "optional<datetime>",
          },
          "documents": "optional<DocumentCollectionRef>",
          "estimated_arrival_date": {
            "docs": "Estimated arrival date to the last port of the main voyage",
            "type": "optional<datetime>",
          },
          "estimated_delivered_in_full_date": {
            "docs": "Estimated delivery date to the destination location. For ocean shipments with multiple containers, this is the date of last delivered container",
            "type": "optional<datetime>",
          },
          "estimated_departure_date": {
            "docs": "Estimated departure date from the first port of the main voyage",
            "type": "optional<datetime>",
          },
          "estimated_picked_up_in_full_date": {
            "docs": "Estimated pickup date from the origin location. For ocean shipments with multiple containers, this is the date of last picked up container",
            "type": "optional<datetime>",
          },
          "freight_type": "optional<FreightType>",
          "id": {
            "docs": "Unique identifier for the shipment",
            "type": "optional<integer>",
          },
          "importers_of_record": "optional<list<CompanyEntity>>",
          "incoterm": "optional<ShipmentIncoterm>",
          "it_number": {
            "docs": "Inbond Transit number used for US Customs",
            "type": "optional<string>",
          },
          "items": "optional<list<ShipmentItem>>",
          "legs": "optional<LegCollectionRef>",
          "metadata": "optional<Metadata>",
          "name": {
            "docs": "The name of the shipment",
            "type": "optional<string>",
          },
          "ocean_shipment": "optional<OceanShipmentDetail>",
          "parent_shipment": {
            "docs": "Links to the parent shipment if the shipment is a child shipment in a buyer's consol.",
            "type": "optional<ShipmentRef>",
          },
          "picked_up_in_full_date": {
            "docs": "DEPRECATED date field",
            "type": "optional<datetime>",
          },
          "pieces": "optional<integer>",
          "priority": {
            "docs": "The level of attention Flexport should give to this shipment",
            "type": "optional<ShipmentPriority>",
          },
          "sellers": "optional<list<CompanyEntity>>",
          "shippers": "optional<list<CompanyEntity>>",
          "status": "optional<ShipmentStatus>",
          "target_delivery_date": {
            "docs": "Target date for when the shipment will be fully delivered. This date is set when the shipment's booking is confirmed. This value may be different from estimated_delivered_in_full_date, which is updated when there is new information about the progress of a shipment.",
            "type": "optional<string>",
          },
          "transportation_mode": "optional<TransportationMode>",
          "updated_at": {
            "docs": "Date when the shipment object was last updated",
            "type": "optional<datetime>",
          },
          "visibility_only": {
            "docs": "Indicates if a shipment was requested for tracking via the Flexport visibility-only service.",
            "type": "optional<boolean>",
          },
          "wants_commercial_invoice_transcription": {
            "docs": "Determines if a shipment is using Flexport’s commercial invoice transcription service.",
            "type": "optional<boolean>",
          },
          "wants_delivery_service": {
            "docs": "Determines if Flexport is responsible for door delivery on a shipment.",
            "type": "optional<boolean>",
          },
          "wants_export_customs_service": {
            "docs": "Determines if the shipment requires Flexport to provide export customs services.",
            "type": "optional<boolean>",
          },
          "wants_flexport_freight": {
            "docs": "Determines if a shipment is using Flexport services for a combination of import customs clearance or final leg delivery.",
            "type": "optional<boolean>",
          },
          "wants_flexport_insurance": {
            "docs": "Determines if a shipment is using Flexport’s insurance service.",
            "type": "optional<boolean>",
          },
          "wants_freight_management_bco": {
            "docs": "Determines if a shipment bypasses a freight forwader and is booked directly with a steamship line.",
            "type": "optional<boolean>",
          },
          "wants_import_customs_service": {
            "docs": "Determines if the shipment requires Flexport to provide import customs services.",
            "type": "optional<boolean>",
          },
          "wants_pickup_service": {
            "docs": "Determines if a shipment uses Flexport trucking services from origin location to port.",
            "type": "optional<boolean>",
          },
          "wants_trade_declaration_service": {
            "docs": "Determines if a shipment uses trade declaration service for HK exports.",
            "type": "optional<boolean>",
          },
        },
      },
      "ShipmentContainer": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "actual_arrival_date": "optional<datetime>",
          "actual_delivery_date": "optional<datetime>",
          "actual_departure_date": "optional<datetime>",
          "actual_pickup_date": "optional<datetime>",
          "available_for_pickup_date": "optional<datetime>",
          "cargo_ready_date": "optional<string>",
          "container_legs": "optional<ContainerLegCollectionRef>",
          "container_number": "optional<string>",
          "container_size": "optional<ShipmentContainerContainerSize>",
          "container_type": "optional<ShipmentContainerContainerType>",
          "empty_ready_date": "optional<string>",
          "empty_returned_date": "optional<string>",
          "estimated_arrival_date": "optional<datetime>",
          "estimated_available_for_pickup_date": "optional<datetime>",
          "estimated_delivery_date": "optional<datetime>",
          "estimated_departure_date": "optional<datetime>",
          "estimated_pickup_date": "optional<datetime>",
          "id": "optional<integer>",
          "items": "optional<list<ShipmentItem>>",
          "last_free_day_date": "optional<datetime>",
          "metadata": "optional<Metadata>",
          "pickup_number": "optional<string>",
          "seal_number": "optional<string>",
          "shipment": "optional<ShipmentRef>",
        },
      },
      "ShipmentContainerContainerSize": {
        "enum": [
          "twenty_ft",
          "fourty_ft",
          "fourty_ft_hc",
          "fourty_five_ft_hc",
          "fifty_three_ft",
          "fifty_three_ft_hc",
        ],
      },
      "ShipmentContainerContainerType": {
        "enum": [
          "dry",
          "flat_rack",
          "headload",
          "open",
          "reefer",
          "lcl",
          "tank",
          "ventilated",
          "bulk",
          "special",
        ],
      },
      "ShipmentDangerousGoods": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of this object",
            "type": "optional<string>",
          },
          "classifications": {
            "docs": "Array of numeric UN codes that combine both the class and the division of the dangerous good classification",
            "type": "optional<list<string>>",
          },
          "review_status": "optional<ShipmentDangerousGoodsReviewStatus>",
        },
      },
      "ShipmentDangerousGoodsReviewStatus": {
        "enum": [
          "pending",
          "in_progress",
          "complete",
          "denied",
          "not_applicable",
          "misflagged",
        ],
      },
      "ShipmentEventData": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "containers": {
            "docs": "An array of the containers associated with this event.  Array is empty for shipment-level events.",
            "type": "optional<list<ShipmentContainer>>",
          },
          "exception": "optional<Exception>",
          "location": {
            "docs": "Possibly null. Location associated with the event.",
            "type": "optional<ShipmentNode>",
          },
          "resource": "optional<ShipmentEventDataResource>",
          "shipment": "optional<Shipment>",
        },
      },
      "ShipmentEventDataResource": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "Shipment",
          "ShipmentLeg",
          "OceanShipmentContainerLeg",
        ],
      },
      "ShipmentIncoterm": {
        "enum": [
          "EXW",
          "FOB",
          "FAS",
          "FCA",
          "CPT",
          "CFR",
          "CIF",
          "CIP",
          "DAT",
          "DAP",
          "DDP",
          "DPU",
        ],
      },
      "ShipmentItem": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "id": "optional<integer>",
          "product": "optional<Product>",
          "purchase_order_number": "optional<string>",
          "total_units": "optional<integer>",
          "total_volume": "optional<Volume>",
          "total_weight": "optional<Weight>",
        },
      },
      "ShipmentLeg": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "actual_arrival_date": "optional<datetime>",
          "actual_departure_date": "optional<datetime>",
          "additional_dates": "optional<AdditionalDates>",
          "air_leg": "optional<AirShipmentLeg>",
          "cargo_ready_date": {
            "docs": "[DEPRECATED] See additional_dates",
            "type": "optional<string>",
          },
          "carrier_name": "optional<string>",
          "deleted_at": {
            "docs": "Date-time string when this leg was deleted. Null if not deleted.",
            "type": "optional<datetime>",
          },
          "destination": "optional<ShipmentNode>",
          "estimated_arrival_date": "optional<datetime>",
          "estimated_departure_date": "optional<datetime>",
          "id": "optional<integer>",
          "ocean_leg": "optional<OceanShipmentLeg>",
          "origin": "optional<ShipmentNode>",
          "rail_leg": "optional<RailShipmentLeg>",
          "shipment": "optional<ShipmentRef>",
          "transportation_mode": "optional<TransportationMode>",
          "trucking_leg": "optional<TruckingShipmentLeg>",
        },
      },
      "ShipmentNode": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "place": "optional<Place>",
          "tags": "optional<list<string>>",
          "terminal": "optional<Terminal>",
        },
      },
      "ShipmentPriority": {
        "docs": "The level of attention Flexport should give to this shipment",
        "enum": [
          "standard",
          "high",
        ],
      },
      "ShipmentRef": {
        "docs": "[Expandable API link.](https://apidocs.flexport.com/v3/tag/Expansion)",
        "properties": {
          "_object": {
            "docs": "Type of Object Returned. In this case, /api/refs/object.",
            "type": "optional<string>",
          },
          "id": {
            "docs": "Unique identifier for the shipment",
            "type": "optional<integer>",
          },
          "link": {
            "docs": "Link to the shipment",
            "type": "optional<string>",
          },
          "ref_type": {
            "docs": "Type of Object Referenced. In this case, /shipment.",
            "type": "optional<string>",
          },
        },
      },
      "ShipmentStatus": {
        "enum": [
          "seller_location",
          "origin_stop_off",
          "in_transit_to_departure_port",
          "departure_port",
          "in_transit_to_intermediary_port",
          "intermediary_port",
          "in_transit_to_arrival_port",
          "arrival_port",
          "deconsolidation",
          "in_transit_to_final_destination",
          "destination_stop_off",
          "gated_out",
          "final_destination",
        ],
      },
      "ShippingUnit": {
        "docs": "For detailed cargo, \`shipping_units\` is required. For simple cargo, \`shipping_units\` is required, but only one should be specified.",
        "properties": {
          "_object": {
            "docs": "String representing the object’s type. Always \`/shipping_unit\` for this object.",
            "type": "optional<string>",
          },
          "atomic_count": {
            "docs": "Required if \`unit_type\` = \`pallet\`. The number of atomic units, i.e. units that will not be unpacked and broken up during shipping, contained in each shipping unit.",
            "type": "optional<integer>",
          },
          "count": {
            "docs": "Required. Total number of this shipping unit.",
            "type": "optional<integer>",
          },
          "height": "optional<Length>",
          "length": "optional<Length>",
          "name": {
            "docs": "Optional. Name of the unit of cargo.",
            "type": "optional<string>",
          },
          "unit_type": {
            "docs": "Required. Packing method of the shipping. This can be \`bag\`, \`bale\`, \`barrel\`, \`carton\`, \`crate\`, \`package\`, \`pallet\`, or \`roll\`.",
            "type": "optional<string>",
          },
          "volume": "optional<Volume>",
          "weight": "optional<Weight>",
          "width": "optional<Length>",
        },
      },
      "ShippingUnitCreate": {
        "docs": "For detailed cargo, \`shipping_units\` is required. For simple cargo, \`shipping_units\` is required, but only one should be specified.",
        "properties": {
          "atomic_count": {
            "docs": "Required if \`unit_type\` = \`pallet\`. The number of atomic units, i.e. units that will not be unpacked and broken up during shipping, contained in each shipping unit.",
            "type": "optional<integer>",
          },
          "count": {
            "docs": "Required. Total number of this shipping unit.",
            "type": "optional<integer>",
          },
          "height": "optional<LengthCreate>",
          "length": "optional<LengthCreate>",
          "name": {
            "docs": "Optional. Name of the unit of cargo.",
            "type": "optional<string>",
          },
          "unit_type": {
            "docs": "Required. Packing method of the shipping. This can be \`bag\`, \`bale\`, \`barrel\`, \`carton\`, \`crate\`, \`package\`, \`pallet\`, or \`roll\`.",
            "type": "optional<string>",
          },
          "volume": "optional<VolumeCreate>",
          "weight": "optional<WeightCreate>",
          "width": "optional<LengthCreate>",
        },
      },
      "Terminal": {
        "docs": "Name and address of a specific terminal within a port or airport.  Possibly null",
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "address": "optional<Address>",
          "firms_code": {
            "docs": "Four digit alpha-numeric identifier assigned by U.S. Customs and Border Protection to bonded facilities;  available prior to shipment arrival at location tagged 'customs_entry'",
            "type": "optional<string>",
          },
          "name": {
            "docs": "Name of the terminal",
            "type": "optional<string>",
          },
        },
      },
      "TransportationMode": {
        "enum": [
          "ocean",
          "air",
          "truck",
          "rail",
          "unknown_transportation",
          "ocean_air",
          "truck_intl",
          "warehouse_storage",
        ],
      },
      "TruckingBookingDetail": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "description_of_products": "optional<string>",
          "is_ftl": "optional<boolean>",
          "payment_terms": "optional<TruckingBookingDetailPaymentTerms>",
        },
      },
      "TruckingBookingDetailPaymentTerms": {
        "enum": [
          "collect",
          "prepaid",
        ],
      },
      "TruckingShipmentLeg": {
        "docs": undefined,
        "properties": {
          "_object": "optional<string>",
          "container_legs": "optional<ContainerLegCollectionRef>",
          "pieces": "optional<integer>",
          "scac_code": "optional<string>",
          "service_type": "optional<TruckingShipmentLegServiceType>",
          "tracking_number": "optional<string>",
        },
      },
      "TruckingShipmentLegServiceType": {
        "enum": [
          "ltl",
          "ftl",
          "drayage",
          "cartage",
        ],
      },
      "VatNumber": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "country_code": {
            "docs": "ISO 3166 two-letter country code",
            "type": "optional<string>",
          },
          "number": "optional<string>",
        },
      },
      "Volume": {
        "docs": undefined,
        "extends": [
          "VolumeCreate",
        ],
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
        },
      },
      "VolumeCreate": {
        "docs": undefined,
        "properties": {
          "unit": {
            "docs": "unit of measurement. "cbm" for cubic meters. "cbft" for cubic feet.",
            "type": "optional<VolumeCreateUnit>",
          },
          "value": {
            "docs": "total volume",
            "type": "optional<double>",
          },
        },
      },
      "VolumeCreateUnit": {
        "docs": "unit of measurement. "cbm" for cubic meters. "cbft" for cubic feet.",
        "enum": [
          "cbm",
          "cbft",
        ],
      },
      "WebhookEvent": {
        "docs": undefined,
        "properties": {
          "_object": {
            "docs": "Type of the object",
            "type": "optional<string>",
          },
          "created_at": "optional<string>",
          "data": "optional<ShipmentEventData>",
          "id": "optional<integer>",
          "occurred_at": "optional<string>",
          "type": "optional<string>",
          "version": "optional<integer>",
        },
      },
      "Weight": {
        "docs": undefined,
        "extends": [
          "WeightCreate",
        ],
        "properties": {
          "_object": {
            "docs": "String representing the object’s type. Always \`/quantity/weight\` for this object.",
            "type": "optional<string>",
          },
        },
      },
      "WeightCreate": {
        "docs": undefined,
        "properties": {
          "unit": {
            "docs": "Required. Unit of measurement. "kg" for kilograms, "lbs" for pounds",
            "type": "optional<WeightCreateUnit>",
          },
          "value": {
            "docs": "Required. Specifies the weight as a float.",
            "type": "optional<double>",
          },
        },
      },
      "WeightCreateUnit": {
        "docs": "Required. Unit of measurement. "kg" for kilograms, "lbs" for pounds",
        "enum": [
          "kg",
          "lbs",
        ],
      },
      "WriteProductClassification": {
        "docs": undefined,
        "properties": {
          "codes": {
            "docs": "Always required. An array of HS codes for this product in the provided region",
            "type": "list<string>",
          },
          "region": {
            "docs": "Always required. The region for this classification. Currently only 2-character ISO codes and "EU" are supported",
            "type": "string",
          },
        },
      },
      "WriteProductProperty": {
        "docs": undefined,
        "properties": {
          "type": {
            "docs": "Always required. User defined type of this property",
            "type": "string",
          },
          "value": {
            "docs": "Always required. Value of this property",
            "type": "string",
          },
        },
      },
      "WriteProductSupplier": {
        "docs": undefined,
        "properties": {
          "country_of_origin": {
            "docs": "Always required. ISO Alpha-2 country in which the product is manufactured",
            "type": "string",
          },
          "id": {
            "docs": "The supplier location ID. Either id or ref is required.",
            "type": "optional<integer>",
          },
          "ref": {
            "docs": "Your custom string used to refer to the supplier location. Either id or ref is required.",
            "type": "optional<string>",
          },
        },
      },
      "WriteVatNumber": {
        "docs": undefined,
        "properties": {
          "country_code": {
            "docs": "ISO 3166 two-letter country code",
            "type": "string",
          },
          "number": {
            "docs": "Full VAT number, including the country code",
            "type": "string",
          },
        },
      },
    },
  },
  "rootApiFile": {
    "default-environment": "Default",
    "display-name": "Flexport API",
    "environments": {
      "Default": "https://api.flexport.com",
    },
    "error-discrimination": {
      "strategy": "status-code",
    },
    "name": "api",
  },
}
`;
