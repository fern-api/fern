// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser belvo simple 1`] = `
{
  "definitionFiles": {
    "accounts.yml": {
      "docs": "An **account** is the representation of a bank account inside a financial institution. A user can have one or more accounts in an institution. 

For example, one user (or link) can have a checking account, several credit cards, and a loan account.

Querying for a user's account information is useful as you can get information regarding:

- what types of accounts the user has
- the balance for each account (savings, checking, credit card, loan, and so on)


> 🚧 Scheduled field deprecation
> 
> Please note that we will soon be deprecating the following fields in our \`loan_data\` object:
> 
> - \`cutting_date\`
> - \`cutting_day\`
> - \`credit_limit\`: replaced by the \`principal\` field.
> - \`interest_rate\`: replaced by the \`interest_rates\` object.
> - \`last_payment_date\`
> - \`last_period_balance\`: replaced by the \`outstanding_balance \` field.
> - \`limit_day\`
> - \`limit_date\`: replaced by the \`payment_day \` field.
> - \`no_interest_payment\`
> - \`payment_due_day\`

### **🔦 Filterable fields**

Please see the table below for an alphabetized list of fields that you can filter your responses by. For more information on how to use filters, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) article.

| Field                         | Available Filters                      |
| ----------------------------- | -------------------------------------- |
| \`balance__available\`          | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`balance__current\`            | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`bank_product_id\`             | \`=\`                                    |
| \`category\`                    | \`=\`, \`in\`                              |
| \`created_at \`                 | \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\`      |
| \`currency\`                    | \`=\`\\*, \`in\`                            |
| \`id\`                          | \`=\`, \`in\`                              |
| \`institution\`                 | \`=\`, \`in\`                              |
| \`internal_identification\`     | \`=\`                                    |
| \`link\`                        | \`=\`, \`in\`                              |
| \`name\`                        | \`=\`, \`icontains\`                       |
| \`number\`                      | \`=\`, \`in\`                              |
| \`public_identification_name\`  | \`=\`                                    |
| \`public_identification_value\` | \`=\`                                    |
| \`type\`                        | \`=\`, \`in\`                              |

\`\`\`curl cURL
## Filtering results to have savings accounts with a balance
## between 5000 and 8000 Colombian pesos
https://sandbox.belvo.com/api/accounts/?category=savings&balance__available__range=5000,8000&currency=COP
\`\`\`
\`\`\`javascript Node
// Filtering results to have savings accounts with a balance
// between 5000 and 8000 Colombian pesos
client.accounts.list({
  filters: {
    category: "savings",
    balance__available__range: "5000,8000",
    currency: "COP"
  }
})
\`\`\`
\`\`\`python Python
## Filtering results to have savings accounts with a balance
## between 5000 and 8000 Colombian pesos
client.Accounts.list(category="savings",balance__available__range="5000,8000",currency="COP")
\`\`\`
\`\`\`ruby Ruby
## Filtering results to have savings accounts with a balance
## between 5000 and 8000 Colombian pesos
client.accounts.list(params: {
  category: "savings",
  balance__available__range: "5000,8000",
  currency: "COP"
})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Accounts",
        "endpoints": {
          "DestroyAccount": {
            "auth": true,
            "display-name": "Delete an account",
            "docs": "Delete a specific account and all associated transactions, as well as owners, from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/accounts/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`account.id\` you want to delete",
                "type": "string",
              },
            },
          },
          "DetailAccount": {
            "auth": true,
            "display-name": "Get an account's details",
            "docs": "Get the details of a specific account.

  > 🚧 Scheduled field deprecation
  >
  > Please note that we will soon be deprecating the following fields in our \`loan_data\` object:
  > - \`cutting_date\`
  > - \`cutting_day\`
  > - \`credit_limit\`: replaced by the \`principal\` field.
  > - \`interest_rate\`: replaced by the \`interest_rates\` object.
  > - \`last_payment_date\`
  > - \`last_period_balance\`: replaced by the \`outstanding_balance \` field.
  > - \`limit_day\`
  > - \`limit_date\`: replaced by the \`payment_day \` field.
  > - \`no_interest_payment\`
  > - \`payment_due_day\`",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "balance": {
                      "available": 5621.12,
                      "current": 5874.13,
                    },
                    "balance_type": "ASSET",
                    "bank_product_id": "bank_product_id",
                    "category": "CHECKING_ACCOUNT",
                    "collected_at": "2019-09-27T13:01:41Z",
                    "created_at": "2022-02-09T08:45:50Z",
                    "credit_data": {
                      "collected_at": "2019-09-27T13:01:41Z",
                      "credit_limit": 192000,
                      "cutting_date": "2019-12-11",
                      "end_date": "end_date",
                      "interest_rate": 4,
                      "last_payment_date": "last_payment_date",
                      "minimum_payment": 2400.3,
                      "monthly_payment": 1.1,
                      "next_payment_date": "2019-12-13",
                      "no_interest_payment": 2690.83,
                    },
                    "currency": "MXN",
                    "funds_data": [
                      {
                        "balance": 88427.94,
                        "collected_at": "2020-04-23T21:32:55Z",
                        "name": "FIX X",
                        "percentage": 100,
                        "public_identifications": [
                          {
                            "name": "CNPJ",
                            "value": "05.954.445/0221-68",
                          },
                        ],
                        "type": "CNPJ",
                      },
                    ],
                    "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                    "institution": {
                      "name": "erebor_mx_retail",
                      "type": "bank",
                    },
                    "internal_identification": "internal_identification",
                    "last_accessed_at": "2021-03-09T10:28:40Z",
                    "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "loan_data": {
                      "collected_at": "2022-02-09T08:45:50Z",
                      "contract_amount": 202000,
                      "contract_end_date": "2027-10-01",
                      "contract_number": "890ASLDJF87SD00",
                      "contract_start_date": "2020-03-01",
                      "credit_limit": 1.1,
                      "cutting_date": "cutting_date",
                      "cutting_day": "cutting_day",
                      "fees": [
                        {
                          "type": "OPERATION_FEE",
                          "value": 5.6,
                        },
                      ],
                      "interest_rate": 1.1,
                      "interest_rates": [
                        {
                          "name": "jurosEfetivo",
                          "value": 7.85,
                        },
                      ],
                      "last_payment_date": "last_payment_date",
                      "last_period_balance": 1.1,
                      "limit_day": "limit_day",
                      "loan_type": "Consignado",
                      "monthly_payment": 1000,
                      "no_interest_payment": 1.1,
                      "number_of_installments_outstanding": 48,
                      "number_of_installments_total": 60,
                      "outstanding_balance": 182000,
                      "outstanding_principal": 142023,
                      "payment_day": "27",
                      "principal": 192000,
                    },
                    "name": "Cuenta Perfiles- M.N. - MXN-666",
                    "number": "4057068115181",
                    "public_identification_name": "CLABE",
                    "public_identification_value": "150194683119900273",
                    "receivables_data": {
                      "anticipated": 1393.46,
                      "available": 800.37,
                      "collected_at": "2022-02-09T08:45:50Z",
                      "current": 2193.83,
                    },
                    "type": "Cuentas de efectivo",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/accounts/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`account.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailAccountRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "optional<root.Account>",
            },
          },
          "ListAccounts": {
            "auth": true,
            "display-name": "List all accounts",
            "docs": "Get a paginated list of all existing accounts in your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "balance__available": "4000.00",
                  "balance__available__gt": "2000.00",
                  "balance__available__gte": "1999.00",
                  "balance__available__lt": "6000.00",
                  "balance__available__lte": "5999.00",
                  "balance__available__range": "3000.00,4350.00",
                  "balance__current": "4000.00",
                  "balance__current__gt": "2000.00",
                  "balance__current__gte": "1999.00",
                  "balance__current__lt": "6000.00",
                  "balance__current__lte": "5999.00",
                  "balance__current__range": "3000.00,4350.00",
                  "category": "CREDIT_ACCOUNT",
                  "category__in": "CHECKING_ACCOUNT,SAVINGS_ACCOUNT",
                  "created_at__gt": "2022-05-05",
                  "created_at__gte": "2022-05-04",
                  "created_at__lt": "2022-04-01",
                  "created_at__lte": "2022-03-30",
                  "created_at__range": "2022-03-03,2022-05-04",
                  "currency": "COP",
                  "currency__in": "COP,MXN",
                  "fields": "link,balance,account",
                  "id": "24ccab1d-3a86-4136-a6eb-e04bf52b356f",
                  "id__in": "24ccab1d-3a86-4136-a6eb-e04bf52b356f,beb2b197-3cf7-428d-bef3-f415c0d57509",
                  "institution": "erebor_mx_retail",
                  "institution__in": "erebor_mx_retail,gringotts_mx_retail",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "link__in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65",
                  "name": "Cuenta Perfiles- M.N. - MXN-666",
                  "name__icontains": "Perfiles",
                  "number": "4057068115181",
                  "number__in": "4057068115181,7809346821648",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                  "public_identification_name": "CLABE",
                  "public_identification_value": "150194683119900273",
                  "type": "Cuentas de efectivo",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "balance": {
                          "current": 5874.13,
                        },
                        "balance_type": "ASSET",
                        "bank_product_id": "bank_product_id",
                        "category": "CHECKING_ACCOUNT",
                        "collected_at": "2019-09-27T13:01:41Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "credit_data": {
                          "collected_at": "2019-09-27T13:01:41Z",
                          "credit_limit": 192000,
                          "cutting_date": "2019-12-11",
                          "interest_rate": 4,
                          "minimum_payment": 2400.3,
                          "next_payment_date": "2019-12-13",
                          "no_interest_payment": 2690.83,
                        },
                        "currency": "MXN",
                        "funds_data": [
                          {
                            "collected_at": "2020-04-23T21:32:55Z",
                          },
                        ],
                        "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                        "institution": {
                          "name": "erebor_mx_retail",
                        },
                        "internal_identification": "internal_identification",
                        "last_accessed_at": "2021-03-09T10:28:40Z",
                        "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "loan_data": {
                          "collected_at": "2022-02-09T08:45:50Z",
                          "contract_end_date": "2027-10-01",
                          "monthly_payment": 1000,
                          "outstanding_balance": 182000,
                          "principal": 192000,
                        },
                        "name": "Cuenta Perfiles- M.N. - MXN-666",
                        "number": "4057068115181",
                        "public_identification_name": "CLABE",
                        "public_identification_value": "150194683119900273",
                        "receivables_data": {
                          "anticipated": 1393.46,
                          "available": 800.37,
                          "collected_at": "2022-02-09T08:45:50Z",
                          "current": 2193.83,
                        },
                        "type": "Cuentas de efectivo",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/accounts",
            "request": {
              "name": "ListAccountsRequest",
              "query-parameters": {
                "balance__available": {
                  "docs": "Return accounts that have a \`balance.available\` matching exactly this value.",
                  "type": "optional<string>",
                },
                "balance__available__gt": {
                  "docs": "Return accounts that have a \`balance.available\` greater than this value.",
                  "type": "optional<string>",
                },
                "balance__available__gte": {
                  "docs": "Return accounts that have a \`balance.available\` greater than or equal to this value.",
                  "type": "optional<string>",
                },
                "balance__available__lt": {
                  "docs": "Return accounts that have a \`balance.available\` less than this value.",
                  "type": "optional<string>",
                },
                "balance__available__lte": {
                  "docs": "Return accounts that have a \`balance.available\` less than or equal to this value.",
                  "type": "optional<string>",
                },
                "balance__available__range": {
                  "docs": "Return accounts that have a \`balance.available\` within a range of two values.",
                  "type": "optional<string>",
                },
                "balance__current": {
                  "docs": "Return accounts that have a \`balance.current\` matching exactly this value.",
                  "type": "optional<string>",
                },
                "balance__current__gt": {
                  "docs": "Return accounts that have a \`balance.current\` greater than this value.",
                  "type": "optional<string>",
                },
                "balance__current__gte": {
                  "docs": "Return accounts that have a \`balance.available\` greater than or equal to this value.",
                  "type": "optional<string>",
                },
                "balance__current__lt": {
                  "docs": "Return accounts that have a \`balance.current\` less than this value.",
                  "type": "optional<string>",
                },
                "balance__current__lte": {
                  "docs": "Return accounts that have a \`balance.available\` less than or equal to this value.",
                  "type": "optional<string>",
                },
                "balance__current__range": {
                  "docs": "Return accounts that have a \`balance.available\` within a range of two values.",
                  "type": "optional<string>",
                },
                "category": {
                  "docs": "Return accounts only for the given category (for example, \`CHECKING_ACCOUNT\` and \`SAVINGS_ACCOUNT\`).",
                  "type": "optional<string>",
                },
                "category__in": {
                  "docs": "Return accounts only for the given categories (for example, \`CHECKING_ACCOUNT\` and \`SAVINGS_ACCOUNT\`).",
                  "type": "optional<string>",
                },
                "created_at__gt": {
                  "docs": "Return accounts that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return accounts that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return accounts that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return accounts that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return accounts that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "currency": {
                  "docs": "Return accounts that hold finances in only this three-letter currency code.",
                  "type": "optional<string>",
                },
                "currency__in": {
                  "docs": "Return accounts that hold finances in one of these three-letter currency codes.",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "id": {
                  "docs": "Return information only for this \`account.id\`.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "Return information for these \`account.id\`s.",
                  "type": "optional<string>",
                },
                "institution": {
                  "docs": "Return accounts only for this institution (use the Belvo-designated name, such as \`erebor_mx_retail\`).",
                  "type": "optional<string>",
                },
                "institution__in": {
                  "docs": "Return accounts only for these institutions (use the Belvo-designated names, such as \`erebor_mx_retail\` and \`gringotts_mx_retail\`).",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return accounts only for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "name": {
                  "docs": "Return accounts with exactly this internal (specified by the institution) name.",
                  "type": "optional<string>",
                },
                "name__icontains": {
                  "docs": "Return accounts partially matching this internal (specified by the institution) name.",
                  "type": "optional<string>",
                },
                "number": {
                  "docs": "Return information only for this account number (as specified by the institution).",
                  "type": "optional<string>",
                },
                "number__in": {
                  "docs": "Return information for these account numbers (as specified by the institution).",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
                "public_identification_name": {
                  "docs": "Return information only for this type of account ID. For example, CLABE accounts.",
                  "type": "optional<string>",
                },
                "public_identification_value": {
                  "docs": "Return information only for this account ID. For example, the account number for a CLABE account.",
                  "type": "optional<string>",
                },
                "type": {
                  "docs": "Return information only for accounts matching this account type, as designated by the institution.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.AccountsPaginatedResponse",
            },
          },
          "PatchAccounts": {
            "auth": true,
            "display-name": "Complete an accounts request",
            "docs": "Used to resume an Account retrieve session that was paused because an MFA token was required by the institution.

  > 🚧 Scheduled field deprecation
  > 
  > Please note that we will soon be deprecating the following fields in our \`loan_data\` object:
  > - \`cutting_date\`
  > - \`cutting_day\`
  > - \`credit_limit\`: replaced by the \`principal\` field.
  > - \`interest_rate\`: replaced by the \`interest_rates\` object.
  > - \`last_payment_date\`
  > - \`last_period_balance\`: replaced by the \`outstanding_balance \` field.
  > - \`limit_day\`
  > - \`limit_date\`: replaced by the \`payment_day \` field.
  > - \`no_interest_payment\`
  > - \`payment_due_day\`",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "683005d6-f45c-4adb-b289-f1a12f50f80c",
                  "save_data": true,
                  "session": "6e7b283c6efa449c9c028a16b5c249fa",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "balance": {
                        "available": 5621.12,
                        "current": 5874.13,
                      },
                      "balance_type": "ASSET",
                      "bank_product_id": "bank_product_id",
                      "category": "CHECKING_ACCOUNT",
                      "collected_at": "2019-09-27T13:01:41Z",
                      "created_at": "2022-02-09T08:45:50Z",
                      "credit_data": {
                        "collected_at": "2019-09-27T13:01:41Z",
                        "credit_limit": 192000,
                        "cutting_date": "2019-12-11",
                        "end_date": "end_date",
                        "interest_rate": 4,
                        "last_payment_date": "last_payment_date",
                        "minimum_payment": 2400.3,
                        "monthly_payment": 1.1,
                        "next_payment_date": "2019-12-13",
                        "no_interest_payment": 2690.83,
                      },
                      "currency": "MXN",
                      "funds_data": [
                        {
                          "collected_at": "2020-04-23T21:32:55Z",
                        },
                      ],
                      "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                      "institution": {
                        "name": "erebor_mx_retail",
                        "type": "bank",
                      },
                      "internal_identification": "internal_identification",
                      "last_accessed_at": "2021-03-09T10:28:40Z",
                      "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                      "loan_data": {
                        "collected_at": "2022-02-09T08:45:50Z",
                        "contract_amount": 202000,
                        "contract_end_date": "2027-10-01",
                        "contract_number": "890ASLDJF87SD00",
                        "contract_start_date": "2020-03-01",
                        "credit_limit": 1.1,
                        "cutting_date": "cutting_date",
                        "cutting_day": "cutting_day",
                        "fees": [
                          {
                            "type": "OPERATION_FEE",
                            "value": 5.6,
                          },
                        ],
                        "interest_rate": 1.1,
                        "interest_rates": [
                          {
                            "name": "jurosEfetivo",
                            "value": 7.85,
                          },
                        ],
                        "last_payment_date": "last_payment_date",
                        "last_period_balance": 1.1,
                        "limit_day": "limit_day",
                        "loan_type": "Consignado",
                        "monthly_payment": 1000,
                        "no_interest_payment": 1.1,
                        "number_of_installments_outstanding": 48,
                        "number_of_installments_total": 60,
                        "outstanding_balance": 182000,
                        "outstanding_principal": 142023,
                        "payment_day": "27",
                        "principal": 192000,
                      },
                      "name": "Cuenta Perfiles- M.N. - MXN-666",
                      "number": "4057068115181",
                      "public_identification_name": "CLABE",
                      "public_identification_value": "150194683119900273",
                      "receivables_data": {
                        "anticipated": 1393.46,
                        "available": 800.37,
                        "collected_at": "2022-02-09T08:45:50Z",
                        "current": 2193.83,
                      },
                      "type": "Cuentas de efectivo",
                    },
                  ],
                },
              },
            ],
            "method": "PATCH",
            "path": "/api/accounts",
            "request": {
              "body": "root.PatchBody",
              "name": "PatchAccountsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<optional<root.Account>>",
            },
          },
          "RetrieveAccounts": {
            "auth": true,
            "display-name": "Retrieve accounts for a link",
            "docs": "Retrieve accounts from an existing link.

  > 🚧 Scheduled field deprecation
  > 
  > Please note that we will soon be deprecating the following fields in our \`loan_data\` object:
  > - \`cutting_date\`
  > - \`cutting_day\`
  > - \`credit_limit\`: replaced by the \`principal\` field.
  > - \`interest_rate\`: replaced by the \`interest_rates\` object.
  > - \`last_payment_date\`
  > - \`last_period_balance\`: replaced by the \`outstanding_balance \` field.
  > - \`limit_day\`
  > - \`limit_date\`: replaced by the \`payment_day \` field.
  > - \`no_interest_payment\`
  > - \`payment_due_day\`",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "2ccd5e15-194a-4a19-a45a-e7223c7e6717",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "balance": {
                        "available": 5621.12,
                        "current": 5874.13,
                      },
                      "balance_type": "ASSET",
                      "bank_product_id": "bank_product_id",
                      "category": "CHECKING_ACCOUNT",
                      "collected_at": "2019-09-27T13:01:41Z",
                      "created_at": "2022-02-09T08:45:50Z",
                      "credit_data": {
                        "collected_at": "2019-09-27T13:01:41Z",
                        "credit_limit": 192000,
                        "cutting_date": "2019-12-11",
                        "end_date": "end_date",
                        "interest_rate": 4,
                        "last_payment_date": "last_payment_date",
                        "minimum_payment": 2400.3,
                        "monthly_payment": 1.1,
                        "next_payment_date": "2019-12-13",
                        "no_interest_payment": 2690.83,
                      },
                      "currency": "MXN",
                      "funds_data": [
                        {
                          "collected_at": "2020-04-23T21:32:55Z",
                        },
                      ],
                      "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                      "institution": {
                        "name": "erebor_mx_retail",
                        "type": "bank",
                      },
                      "internal_identification": "internal_identification",
                      "last_accessed_at": "2021-03-09T10:28:40Z",
                      "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                      "loan_data": {
                        "collected_at": "2022-02-09T08:45:50Z",
                        "contract_amount": 202000,
                        "contract_end_date": "2027-10-01",
                        "contract_number": "890ASLDJF87SD00",
                        "contract_start_date": "2020-03-01",
                        "credit_limit": 1.1,
                        "cutting_date": "cutting_date",
                        "cutting_day": "cutting_day",
                        "fees": [
                          {
                            "type": "OPERATION_FEE",
                            "value": 5.6,
                          },
                        ],
                        "interest_rate": 1.1,
                        "interest_rates": [
                          {
                            "name": "jurosEfetivo",
                            "value": 7.85,
                          },
                        ],
                        "last_payment_date": "last_payment_date",
                        "last_period_balance": 1.1,
                        "limit_day": "limit_day",
                        "loan_type": "Consignado",
                        "monthly_payment": 1000,
                        "no_interest_payment": 1.1,
                        "number_of_installments_outstanding": 48,
                        "number_of_installments_total": 60,
                        "outstanding_balance": 182000,
                        "outstanding_principal": 142023,
                        "payment_day": "27",
                        "principal": 192000,
                      },
                      "name": "Cuenta Perfiles- M.N. - MXN-666",
                      "number": "4057068115181",
                      "public_identification_name": "CLABE",
                      "public_identification_value": "150194683119900273",
                      "receivables_data": {
                        "anticipated": 1393.46,
                        "available": 800.37,
                        "collected_at": "2022-02-09T08:45:50Z",
                        "current": 2193.83,
                      },
                      "type": "Cuentas de efectivo",
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/api/accounts",
            "request": {
              "body": "root.StandardRequest",
              "name": "RetrieveAccountsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<optional<root.Account>>",
            },
          },
        },
      },
    },
    "balances.yml": {
      "docs": "A **balance** represents the amount of funds available in a checking or savings account over a period of time.

<ul>
  <li>
    If your Balance request is not for a checking or savings account, we return
    an empty array.
  </li>
  <li>
    If we cannot calculate the balance for a given day within your requested
    period, the <code>balance</code> and <code>current_balance</code> fields
    will return <code>null</code> for that day.
  </li>
</ul>

> 📘 
> 
> Savings accounts that do not have any associated transactions (for example, some _poupança_ accounts in Brazil) will not contain accurate Balance information. We do not recommend using the Balance endpoint for these types of accounts. 
> 
> Savings accounts vary from institution to institution, so we recommend that you first use our [Retrieve transactions for a link](https://developers.belvo.com/reference/retrievetransactions) request, adding the \`account\` in the request body, to see if the Savings account has any associated transactions.


### **🔦 Filterable fields**

Please see the table below for an alphabetized list of fields that you can filter your responses by. For more information on how to use filters, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) article.

| Field             | Available Filters                      |
| ----------------- | -------------------------------------- |
| \`account\`         | \`=\`, \`in\`                              |
| \`account_type\`    | \`=\`, \`in\`                              |
| \`balance\`         | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`currency\`        | \`=\`, \`in\`                              |
| \`current_balance\` | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`id\`              | \`=\`, \`in\`                              |
| \`institution\`     | \`=\`, \`in\`                              |
| \`link\`            | \`=\`, \`in\`                              |
| \`value_date\`      | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |

\`\`\`curl cURL
# Filtering results to have balances greater than 5000
https://api.belvo.com/api/balances/?balance__gt=5000 

# Filtering results to have balances greater than 5000 and in Brazilian Reis
https://api.belvo.com/api/balances/?balance__gt=5000&currency=BRL
\`\`\`
\`\`\`javascript Node
//  Filtering results to have balances greater than 5000
client.balances.list({
  filters: {
    balance__gt: 5000
  }
})

//  Filtering results to have balances greater than 5000 and in Brazilian Reis

client.balances.list({
  filters: {
    balance__gt: 5000,
    currency: "BRL"
  }
})
\`\`\`
\`\`\`python Python
# Filtering results to have balances greater than 5000
client.Balances.list(balance__gt=5000)

# Filtering results to have balances greater than 5000 and in Brazilian Reis
client.Balances.list(balance__gt=5000, currency="BRL")
\`\`\`
\`\`\`ruby Ruby
# Filtering results to have balances greater than 5000
client.balances.list(params: {
  balance__gt: 5000
})

# Filtering results to have balances greater than 5000 and in Brazilian Reis
client.balances.list(params: {
  balance__gt: 5000,
  currency: "BRL"
})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Balances",
        "endpoints": {
          "DestroyBalance": {
            "auth": true,
            "display-name": "Delete a balance",
            "docs": "Delete a specific balance from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/balances/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`balance.id\` that you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailBalance": {
            "auth": true,
            "display-name": "Get a balance's details",
            "docs": "Get the details of a specific balance.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "account": {
                      "balance": {
                        "available": 5621.12,
                        "current": 5874.13,
                      },
                      "balance_type": "ASSET",
                      "bank_product_id": "bank_product_id",
                      "category": "CHECKING_ACCOUNT",
                      "collected_at": "2019-09-27T13:01:41Z",
                      "created_at": "2022-02-09T08:45:50Z",
                      "credit_data": {
                        "collected_at": "2019-09-27T13:01:41Z",
                        "credit_limit": 192000,
                        "cutting_date": "2019-12-11",
                        "end_date": "end_date",
                        "interest_rate": 4,
                        "last_payment_date": "last_payment_date",
                        "minimum_payment": 2400.3,
                        "monthly_payment": 1.1,
                        "next_payment_date": "2019-12-13",
                        "no_interest_payment": 2690.83,
                      },
                      "currency": "MXN",
                      "funds_data": [
                        {
                          "collected_at": "2020-04-23T21:32:55Z",
                        },
                      ],
                      "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                      "institution": {
                        "name": "erebor_mx_retail",
                        "type": "bank",
                      },
                      "internal_identification": "internal_identification",
                      "last_accessed_at": "2021-03-09T10:28:40Z",
                      "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                      "loan_data": {
                        "collected_at": "2022-02-09T08:45:50Z",
                        "contract_amount": 202000,
                        "contract_end_date": "2027-10-01",
                        "contract_number": "890ASLDJF87SD00",
                        "contract_start_date": "2020-03-01",
                        "credit_limit": 1.1,
                        "cutting_date": "cutting_date",
                        "cutting_day": "cutting_day",
                        "fees": [
                          {
                            "type": "OPERATION_FEE",
                            "value": 5.6,
                          },
                        ],
                        "interest_rate": 1.1,
                        "interest_rates": [
                          {
                            "name": "jurosEfetivo",
                            "value": 7.85,
                          },
                        ],
                        "last_payment_date": "last_payment_date",
                        "last_period_balance": 1.1,
                        "limit_day": "limit_day",
                        "loan_type": "Consignado",
                        "monthly_payment": 1000,
                        "no_interest_payment": 1.1,
                        "number_of_installments_outstanding": 48,
                        "number_of_installments_total": 60,
                        "outstanding_balance": 182000,
                        "outstanding_principal": 142023,
                        "payment_day": "27",
                        "principal": 192000,
                      },
                      "name": "Cuenta Perfiles- M.N. - MXN-666",
                      "number": "4057068115181",
                      "public_identification_name": "CLABE",
                      "public_identification_value": "150194683119900273",
                      "receivables_data": {
                        "anticipated": 1393.46,
                        "available": 800.37,
                        "collected_at": "2022-02-09T08:45:50Z",
                        "current": 2193.83,
                      },
                      "type": "Cuentas de efectivo",
                    },
                    "balance": 50000,
                    "collected_at": "2024-01-15T09:30:00Z",
                    "current_balance": 1.1,
                    "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                    "statement": "statement",
                    "value_date": "2019-10-23",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/balances/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`balance.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailBalanceRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.Balance",
            },
          },
          "ListBalances": {
            "auth": true,
            "display-name": "List all balances",
            "docs": "Get a paginated list of all existing balances in your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "account": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "account__in": "24ccab1d-3a86-4136-a6eb-e04bf52b356f,beb2b197-3cf7-428d-bef3-f415c0d57509",
                  "account__type": "Cuentas de efectivo",
                  "account__type__in": "Cuentas de efectivo,Credito",
                  "balance": "530.00",
                  "balance__gt": "520.00",
                  "balance__gte": "519.00",
                  "balance__lt": "540.00",
                  "balance__lte": "541.00",
                  "balance__range": "519.00,541.00",
                  "currency": "COP",
                  "currency__in": "COP,MXN",
                  "fields": "link,balance,account",
                  "id": "73694155-b871-41ec-94e3-37d17ff62b5d",
                  "id__in": "73694155-b871-41ec-94e3-37d17ff62b5d,40968d42-7d89-49e3-9931-78baa8e0544e",
                  "institution": "erebor_mx_retail",
                  "institution__in": "erebor_mx_retail,gringotts_mx_retail",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "link__in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                  "value_date": "2022-05-05",
                  "value_date__gt": "2022-05-06",
                  "value_date__gte": "2022-05-04",
                  "value_date__lt": "2022-03-02",
                  "value_date__lte": "2022-03-01",
                  "value_date__range": "2022-03-01,2022-05-06",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "account": {
                          "balance": {
                            "current": 5874.13,
                          },
                          "balance_type": "ASSET",
                          "category": "CHECKING_ACCOUNT",
                          "collected_at": "2019-09-27T13:01:41Z",
                          "created_at": "2022-02-09T08:45:50Z",
                          "currency": "MXN",
                          "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                          "last_accessed_at": "2021-03-09T10:28:40Z",
                          "loan_data": {
                            "collected_at": "2022-02-09T08:45:50Z",
                            "contract_end_date": "2027-10-01",
                            "monthly_payment": 1000,
                            "outstanding_balance": 182000,
                            "principal": 192000,
                          },
                          "name": "Cuenta Perfiles- M.N. - MXN-666",
                          "number": "4057068115181",
                          "public_identification_name": "CLABE",
                          "public_identification_value": "150194683119900273",
                          "type": "Cuentas de efectivo",
                        },
                        "balance": 50000,
                        "collected_at": "2024-01-15T09:30:00Z",
                        "current_balance": 1.1,
                        "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                        "statement": "statement",
                        "value_date": "2019-10-23",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/balances",
            "request": {
              "name": "ListBalancesRequest",
              "query-parameters": {
                "account": {
                  "docs": "The \`account.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "account__in": {
                  "docs": "Return balances only for these \`account.id\`s.",
                  "type": "optional<string>",
                },
                "account__type": {
                  "docs": "Return information only for accounts matching this account type, as designated by the institution.",
                  "type": "optional<string>",
                },
                "account__type__in": {
                  "docs": "Return information only for accounts matching these account types, as designated by the institution.",
                  "type": "optional<string>",
                },
                "balance": {
                  "docs": "Return balances matching exactly this value.",
                  "type": "optional<string>",
                },
                "balance__gt": {
                  "docs": "Return balances greater than this value.",
                  "type": "optional<string>",
                },
                "balance__gte": {
                  "docs": "Return balances greater than or equal to this value.",
                  "type": "optional<string>",
                },
                "balance__lt": {
                  "docs": "Return balances less than this value.",
                  "type": "optional<string>",
                },
                "balance__lte": {
                  "docs": "Return balances less than or equal to this value.",
                  "type": "optional<string>",
                },
                "balance__range": {
                  "docs": "Return balances between these two values.",
                  "type": "optional<string>",
                },
                "currency": {
                  "docs": "Return balances that are in this three-letter currency code.",
                  "type": "optional<string>",
                },
                "currency__in": {
                  "docs": "Return balances that are in these three-letter currency codes.",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "id": {
                  "docs": "Return information only for this \`balance.id\`.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "Return information only for these \`balance.id\`s.",
                  "type": "optional<string>",
                },
                "institution": {
                  "docs": "Return balances only for this institution (use the Belvo-designated name, such as \`erebor_mx_retail\`).",
                  "type": "optional<string>",
                },
                "institution__in": {
                  "docs": "Return balances only for these institutions (use the Belvo-designated names, such as \`erebor_mx_retail\` and \`gringotts_mx_retail\`).",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return balances only for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
                "value_date": {
                  "docs": "Return balances for exactly this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__gt": {
                  "docs": "Return balances for after this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__gte": {
                  "docs": "Return balances for this date or later (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__lt": {
                  "docs": "Return balances for before this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__lte": {
                  "docs": "Return balances for this date or earlier (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__range": {
                  "docs": "Return balances for this date range (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.BalancesPaginatedResponse",
            },
          },
          "PatchBalances": {
            "auth": true,
            "display-name": "Complete a balances request",
            "docs": "Used to resume a Balance retrieve session that was paused because an MFA token was required by the institution.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "683005d6-f45c-4adb-b289-f1a12f50f80c",
                  "save_data": true,
                  "session": "6e7b283c6efa449c9c028a16b5c249fa",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "account": {
                        "balance": {
                          "current": 5874.13,
                        },
                        "balance_type": "ASSET",
                        "bank_product_id": "bank_product_id",
                        "category": "CHECKING_ACCOUNT",
                        "collected_at": "2019-09-27T13:01:41Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "credit_data": {
                          "collected_at": "2019-09-27T13:01:41Z",
                          "credit_limit": 192000,
                          "cutting_date": "2019-12-11",
                          "interest_rate": 4,
                          "minimum_payment": 2400.3,
                          "next_payment_date": "2019-12-13",
                          "no_interest_payment": 2690.83,
                        },
                        "currency": "MXN",
                        "funds_data": [
                          {
                            "collected_at": "2020-04-23T21:32:55Z",
                          },
                        ],
                        "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                        "institution": {
                          "name": "erebor_mx_retail",
                        },
                        "internal_identification": "internal_identification",
                        "last_accessed_at": "2021-03-09T10:28:40Z",
                        "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "loan_data": {
                          "collected_at": "2022-02-09T08:45:50Z",
                          "contract_end_date": "2027-10-01",
                          "monthly_payment": 1000,
                          "outstanding_balance": 182000,
                          "principal": 192000,
                        },
                        "name": "Cuenta Perfiles- M.N. - MXN-666",
                        "number": "4057068115181",
                        "public_identification_name": "CLABE",
                        "public_identification_value": "150194683119900273",
                        "receivables_data": {
                          "anticipated": 1393.46,
                          "available": 800.37,
                          "collected_at": "2022-02-09T08:45:50Z",
                          "current": 2193.83,
                        },
                        "type": "Cuentas de efectivo",
                      },
                      "balance": 50000,
                      "collected_at": "2024-01-15T09:30:00Z",
                      "current_balance": 1.1,
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "statement": "statement",
                      "value_date": "2019-10-23",
                    },
                  ],
                },
              },
            ],
            "method": "PATCH",
            "path": "/api/balances",
            "request": {
              "body": "root.PatchBody",
              "name": "PatchBalancesRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<root.Balance>",
            },
          },
          "RetrieveBalances": {
            "auth": true,
            "display-name": "Retrieve balances for a link",
            "docs": "Retrieve balances from one or more accounts for a specific link within a specified date range.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "account": "d4617561-1c01-4b2f-83b6-a594f7b3bc57",
                  "date_from": "2021-01-18",
                  "date_to": "2021-02-15",
                  "link": "2ccd5e15-194a-4a19-a45a-e7223c7e6717",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "account": {
                        "balance": {
                          "current": 5874.13,
                        },
                        "balance_type": "ASSET",
                        "bank_product_id": "bank_product_id",
                        "category": "CHECKING_ACCOUNT",
                        "collected_at": "2019-09-27T13:01:41Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "credit_data": {
                          "collected_at": "2019-09-27T13:01:41Z",
                          "credit_limit": 192000,
                          "cutting_date": "2019-12-11",
                          "interest_rate": 4,
                          "minimum_payment": 2400.3,
                          "next_payment_date": "2019-12-13",
                          "no_interest_payment": 2690.83,
                        },
                        "currency": "MXN",
                        "funds_data": [
                          {
                            "collected_at": "2020-04-23T21:32:55Z",
                          },
                        ],
                        "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                        "institution": {
                          "name": "erebor_mx_retail",
                        },
                        "internal_identification": "internal_identification",
                        "last_accessed_at": "2021-03-09T10:28:40Z",
                        "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "loan_data": {
                          "collected_at": "2022-02-09T08:45:50Z",
                          "contract_end_date": "2027-10-01",
                          "monthly_payment": 1000,
                          "outstanding_balance": 182000,
                          "principal": 192000,
                        },
                        "name": "Cuenta Perfiles- M.N. - MXN-666",
                        "number": "4057068115181",
                        "public_identification_name": "CLABE",
                        "public_identification_value": "150194683119900273",
                        "receivables_data": {
                          "anticipated": 1393.46,
                          "available": 800.37,
                          "collected_at": "2022-02-09T08:45:50Z",
                          "current": 2193.83,
                        },
                        "type": "Cuentas de efectivo",
                      },
                      "balance": 50000,
                      "collected_at": "2024-01-15T09:30:00Z",
                      "current_balance": 1.1,
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "statement": "statement",
                      "value_date": "2019-10-23",
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/api/balances",
            "request": {
              "body": {
                "properties": {
                  "account": {
                    "docs": "If provided, only balances matching this \`account.id\` are returned.",
                    "type": "optional<string>",
                  },
                  "date_from": {
                    "docs": "Date from which you want to start receiving balances, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
                    "type": "string",
                  },
                  "date_to": {
                    "docs": "Date that you want to stop receiving balances, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
                    "type": "string",
                  },
                  "link": {
                    "docs": "The \`link.id\` that you want to get information for.",
                    "type": "string",
                  },
                  "save_data": {
                    "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                    "type": "optional<boolean>",
                  },
                  "token": {
                    "docs": "The OTP token generated by the bank.",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "BalancesRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<root.Balance>",
            },
          },
        },
      },
    },
    "bankAccounts.yml": {
      "docs": "To receive inflow payments to your organization's bank account, you must register the bank accounts (individual and business) using Belvo's Payments API.

- **Individual** bank accounts must be created for each payer (your customer).
- **Business** bank accounts need to be created for the beneficiary of the payment (your organization).
",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Bank Accounts",
        "endpoints": {
          "CreateBankAccount": {
            "auth": true,
            "display-name": "Create a new bank account",
            "docs": "Create a new bank account from which to send or request funds.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "request": {
                  "details": {
                    "account_type": "CHECKINGS",
                    "agency": "0444",
                    "country": "BRA",
                    "number": "45722-0",
                  },
                  "holder": {
                    "information": {
                      "identifier": "231.002.999-00",
                      "identifier_type": "CPF",
                      "name": "Caetano Veloso Entertainment Universe",
                    },
                    "type": "INDIVIDUAL",
                  },
                  "institution": "f512d996-583a-4a91-8b5b-eba2e103b068",
                },
                "response": {
                  "body": {
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "62053a72-e2d5-4c95-a578-6b16616900ac",
                    "customer": "customer",
                    "details": {
                      "account_type": "CHECKINGS",
                      "agency": "0444",
                      "country": "BRA",
                      "number": "45722-0",
                    },
                    "holder": {
                      "information": {
                        "identifier": "231.002.999-00",
                        "identifier_type": "CPF",
                        "name": "Caetano Veloso Entertainment Universe",
                      },
                      "type": "INDIVIDUAL",
                    },
                    "id": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                    "institution": "institution",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/payments/bank-accounts",
            "request": {
              "body": "CreateBankAccountRequest",
            },
            "response": {
              "docs": "OK (Created)",
              "type": "CreateBankAccountResponse",
            },
          },
          "DetailBankAccount": {
            "auth": true,
            "display-name": "Get details about a bank account",
            "docs": "Get the details about a specific bank account",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "a3b92311-1888-449f-acaa-49ae28d68fcd",
                },
                "response": {
                  "body": {
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "62053a72-e2d5-4c95-a578-6b16616900ac",
                    "customer": "customer",
                    "details": {
                      "account_type": "CHECKINGS",
                      "agency": "0444",
                      "country": "BRA",
                      "number": "45722-0",
                    },
                    "holder": {
                      "information": {
                        "identifier": "231.002.999-00",
                        "identifier_type": "CPF",
                        "name": "Caetano Veloso Entertainment Universe",
                      },
                      "type": "INDIVIDUAL",
                    },
                    "id": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                    "institution": "institution",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/bank-accounts/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`bank-account.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "DetailBankAccountResponse",
            },
          },
          "ListBankAccount": {
            "auth": true,
            "display-name": "List all bank accounts",
            "docs": "List all bank accounts associated with your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "created_at": "2022-09-15",
                  "created_at__gt": "2022-09-15",
                  "created_at__gte": "2022-09-15",
                  "created_at__lt": "2022-09-15",
                  "created_at__lte": "2022-09-15",
                  "created_at__range": "2022-09-15,2022-09-20",
                  "customer": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d",
                  "holder__type": "INDIVIDUAL",
                  "holder__type__in": "INDIVIDUAL,BUSINESS",
                  "id__in": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264",
                  "institution": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d",
                  "number": "1231564526",
                  "number__in": "1231564526,15648325",
                  "page": 1,
                  "providers": "payments_way",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://api.belvo.com/payments/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "created_at": "2022-02-09T08:45:50Z",
                        "created_by": "62053a72-e2d5-4c95-a578-6b16616900ac",
                        "customer": "customer",
                        "details": {
                          "account_type": "CHECKINGS",
                          "agency": "0444",
                          "country": "BRA",
                          "number": "45722-0",
                        },
                        "holder": {
                          "information": {
                            "identifier": "231.002.999-00",
                            "identifier_type": "CPF",
                            "name": "Caetano Veloso Entertainment Universe",
                          },
                          "type": "INDIVIDUAL",
                        },
                        "id": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                        "institution": "institution",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/bank-accounts",
            "request": {
              "name": "ListBankAccountRequest",
              "query-parameters": {
                "created_at": {
                  "docs": "Return results only for this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__gt": {
                  "docs": "Return results only after this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return results only for this date and after (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return results only before this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return results only for this date and before (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return results between this date range (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "customer": {
                  "docs": "The \`customer.id\` you want to get results for.",
                  "type": "optional<string>",
                },
                "holder__type": {
                  "docs": "Return results for a matched value type.",
                  "type": "optional<string>",
                },
                "holder__type__in": {
                  "docs": "Return results for listed holder types.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "One or more \`bank-account.id\`s (comma separated) that you want to get results for.",
                  "type": "optional<string>",
                },
                "institution": {
                  "docs": "The \`institution.id\` you want to get results for.",
                  "type": "optional<string>",
                },
                "number": {
                  "docs": "Return results that exactly match a value.",
                  "type": "optional<string>",
                },
                "number__in": {
                  "docs": "Return results for listed numbers.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "providers": {
                  "docs": "Return results only for this value.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.BankAccountPaginatedResponse",
            },
          },
        },
      },
      "types": {
        "CreateBankAccountRequest": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.CreateBankAccountOfpi",
            "root.CreateBankAccountPse",
          ],
        },
        "CreateBankAccountResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.BankAccountOfpiResponse",
            "root.BankAccountPseResponse",
          ],
        },
        "DetailBankAccountResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.BankAccountOfpiResponse",
            "root.BankAccountPseResponse",
          ],
        },
      },
    },
    "categorization.yml": {
      "docs": "Our Categorization resource provides you with categorized information for a transaction. You’ll need to send a POST Categorize Transactions request with raw transactional information (such as amount, description, and holder information) to which Belvo:
- assigns a standardized category to each transaction
- provides additional information about the merchant involved in the transaction (name, logo, website URL)",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Categorization",
        "endpoints": {
          "CategorizeTransactions": {
            "auth": true,
            "display-name": "Categorize transactions",
            "docs": "Send through your raw transaction data and receive enriched information for each of your transactions.

<div style="background-color:#f4f6f8; border-left: 6px solid #5bc0de;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px">
<strong>Note: </strong> Belvo can process up to 10,000 unique transactions per request.
</div>",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.ForbiddenError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "request": {
                  "language": "pt",
                  "transactions": [
                    {
                      "account_category": "CHECKING_ACCOUNT",
                      "account_holder_id": "7890098789087",
                      "account_holder_type": "INDIVIDUAL",
                      "account_id": "BBVACA-89077589",
                      "amount": 650.89,
                      "currency": "BRL",
                      "description": "APPL3STORE",
                      "institution": "BBVA",
                      "transaction_id": "3CWE4927CF15355",
                      "type": "INFLOW",
                      "value_date": "2022-11-18",
                    },
                  ],
                },
                "response": {
                  "body": {
                    "transactions": [
                      {
                        "account_category": "CHECKING_ACCOUNT",
                        "account_holder_id": "7890098789087",
                        "account_holder_type": "INDIVIDUAL",
                        "account_id": "BBVACA-89077589",
                        "amount": 650.89,
                        "category": "Income & Payments",
                        "currency": "BRL",
                        "description": "APPL3STORE",
                        "institution": "BBVA",
                        "mcc": 2345,
                        "merchant": {
                          "merchant_name": "Apple, Inc",
                        },
                        "subcategory": "Freelance",
                        "transaction_id": "3CWE4927CF15355",
                        "type": "INFLOW",
                        "value_date": "2022-11-18",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/api/categorization",
            "request": {
              "body": {
                "properties": {
                  "language": {
                    "docs": "Two-letter ISO 639-1 code for the language of the transaction.",
                    "type": "string",
                  },
                  "transactions": {
                    "docs": "An array of transaction objects that you want categorized.

**Note:** Each object corresponds to one, unique transaction and you can send through up to 10,000 transactions per request.",
                    "type": "list<root.CategorizationBodyRequest>",
                  },
                },
              },
              "headers": undefined,
              "name": "CategorizationRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Ok",
              "type": "root.Categorization",
            },
          },
        },
      },
    },
    "customers.yml": {
      "docs": "A **customer** is the payer that's going to push funds into your bank account. You need to create a customer in order to receive inflow payments to your organization's bank account.
",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Customers",
        "endpoints": {
          "CreateCustomer": {
            "auth": true,
            "display-name": "Create a new customer",
            "docs": "Create a new customer to send or request funds.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "request": {
                  "country": "BRA",
                  "customer_type": "INDIVIDUAL",
                  "email": "caetano.veloso@musicabrazil.br",
                  "identifier": "1018760936",
                  "identifier_type": "CPF",
                  "name": "Caetano Veloso",
                },
                "response": {
                  "body": {
                    "address": "Rua de Caetano Veloso 432, 70200 Brasilia",
                    "country": "BRA",
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                    "customer_type": "INDIVIDUAL",
                    "email": "caetano.veloso@musicabrazil.br",
                    "id": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                    "identifier": "00.000.000/0001-91",
                    "identifier_type": "CPF",
                    "name": "Caetano Veloso",
                    "phone": "3210-9876",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/payments/customers",
            "request": {
              "body": "CreateCustomerRequest",
            },
            "response": {
              "docs": "OK (Created)",
              "type": "CreateCustomerResponse",
            },
          },
          "DetailCustomer": {
            "auth": true,
            "display-name": "Get details about a customer",
            "docs": "Get the details about a specific customer",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "a3b92311-1888-449f-acaa-49ae28d68fcd",
                },
                "response": {
                  "body": {
                    "address": "Rua de Caetano Veloso 432, 70200 Brasilia",
                    "country": "BRA",
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                    "customer_type": "INDIVIDUAL",
                    "email": "caetano.veloso@musicabrazil.br",
                    "id": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                    "identifier": "00.000.000/0001-91",
                    "identifier_type": "CPF",
                    "name": "Caetano Veloso",
                    "phone": "3210-9876",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/customers/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`customer.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "DetailCustomerResponse",
            },
          },
          "ListCustomers": {
            "auth": true,
            "display-name": "List all customers",
            "docs": "List all customers associated with your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "created_at": "2022-09-15",
                  "created_at__gt": "2022-09-15",
                  "created_at__gte": "2022-09-15",
                  "created_at__lt": "2022-09-15",
                  "created_at__lte": "2022-09-15",
                  "created_at__range": "2022-09-15,2022-09-20",
                  "customer__type": "INDIVIDUAL",
                  "id__in": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264",
                  "page": 1,
                  "search": "car",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://api.belvo.com/payments/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "address": "Rua de Caetano Veloso 432, 70200 Brasilia",
                        "country": "BRA",
                        "created_at": "2022-02-09T08:45:50Z",
                        "created_by": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                        "customer_type": "INDIVIDUAL",
                        "email": "caetano.veloso@musicabrazil.br",
                        "id": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                        "identifier": "00.000.000/0001-91",
                        "identifier_type": "CPF",
                        "name": "Caetano Veloso",
                        "phone": "3210-9876",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/customers",
            "request": {
              "name": "ListCustomersRequest",
              "query-parameters": {
                "created_at": {
                  "docs": "Return results only for this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__gt": {
                  "docs": "Return results only after this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return results only for this date and after (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return results only before this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return results only for this date and before (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return results between this date range (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "customer__type": {
                  "docs": "Return results only for this customer type (either \`INDIVIDUAL\` or \`BUSINESS\`).",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "One or more \`customer.id\`s (comma separated) that you want to get results for.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "search": {
                  "docs": "Return results for one or more customers that match either the name or email you searched for. 

**Note:** This filter supports both full and partial search queries, with a minimum of three characters required. For example, searching for \`car\` may match the following values:

  - \`Carlos Vives\`
  - \`Carmen Domínguez\` 
  - \`carlos.vives@musicacolombia.co\`",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.CustomerPaginatedResponse",
            },
          },
        },
      },
      "types": {
        "CreateCustomerRequest": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.CreateCustomerOfpi",
            "root.CreateCustomerPse",
          ],
        },
        "CreateCustomerResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.CustomerOfpi",
            "root.CustomerPse",
          ],
        },
        "DetailCustomerResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.CustomerOfpi",
            "root.CustomerPse",
          ],
        },
      },
    },
    "employmentRecords.yml": {
      "docs": "# Employment Records

Our employment records resource lets you get a comprehensive view of your user’s current social security contributions and employment history.

With Belvo's employment records resource, you can access information about your user's current social security contributions and employment history. For the each user, we return the:

- personal data
- work history
- historical and current daily base salary
- and more!

At the moment, the employment records resource is available for:

- 🇲🇽 Mexico (IMSS)",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Employment Records",
        "endpoints": {
          "DestroyEmploymentRecord": {
            "auth": true,
            "display-name": "Delete an employment record",
            "docs": "Delete a specific employment record from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/employment-records/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`employment-record.id\` that you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailEmploymentRecord": {
            "auth": true,
            "display-name": "Get an employment record's details",
            "docs": "Get the details of a specific employment record.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "collected_at": "2020-04-23T21:32:55Z",
                    "created_at": "2020-04-23T21:32:55Z",
                    "employment_records": [
                      {
                        "collected_at": "2020-04-23T21:32:55Z",
                        "currency": "MXN",
                        "employer": "Batman Enterprises CDMX",
                        "employer_id": "780-BAT-88769-CDMX",
                        "employment_status_updates": [
                          {
                            "base_salary": 1033.09,
                            "update_date": "2021-09-01",
                          },
                        ],
                        "end_date": "2019-12-31",
                        "monthly_salary": 1.1,
                        "most_recent_base_salary": 762.54,
                        "start_date": "2019-10-10",
                        "state": "DISTRITO FEDERAL",
                        "weeks_employed": 12,
                      },
                    ],
                    "files": [
                      {
                        "type": "ReporteSemanasCotizadas_190123",
                        "value": "=PDF_BINARY=",
                      },
                    ],
                    "id": "fef05fc8-7357-4a4a-9d29-55038ea31a04",
                    "internal_identification": "BLPM951331IONVGR54",
                    "link": "27c1d5cf-e8fb-433a-a2f7-d246de199c01",
                    "personal_data": {
                      "birth_date": "2022-02-09",
                      "document_ids": [
                        {},
                      ],
                      "email": "bruce.banner@avengers.com",
                      "entitlements": {
                        "entitled_to_company_benefits": true,
                        "entitled_to_health_insurance": true,
                        "status": "EMPLOYED",
                        "valid_until": "valid_until",
                      },
                      "first_name": "Bruce",
                      "last_name": "Banner del Torro",
                      "official_name": "Bruce Banner del Torro",
                    },
                    "report_date": "2023-01-19",
                    "social_security_summary": {
                      "weeks_contributed": 188,
                      "weeks_redeemed": 0,
                      "weeks_reinstated": 0,
                    },
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/employment-records/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`employment-record.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailEmploymentRecordRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.EmploymentRecord",
            },
          },
          "ListEmploymentRecords": {
            "auth": true,
            "display-name": "List all employment records",
            "docs": "Get a paginated list of all existing employment records in your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "collected_at": "2020-04-23T21:32:55Z",
                        "created_at": "2020-04-23T21:32:55Z",
                        "employment_records": [
                          {
                            "collected_at": "2020-04-23T21:32:55Z",
                            "currency": "MXN",
                            "employer": "Batman Enterprises CDMX",
                            "employer_id": "780-BAT-88769-CDMX",
                            "end_date": "2019-12-31",
                            "most_recent_base_salary": 762.54,
                            "start_date": "2019-10-10",
                            "state": "DISTRITO FEDERAL",
                            "weeks_employed": 12,
                          },
                        ],
                        "files": [
                          {
                            "type": "ReporteSemanasCotizadas_190123",
                            "value": "=PDF_BINARY=",
                          },
                        ],
                        "id": "fef05fc8-7357-4a4a-9d29-55038ea31a04",
                        "internal_identification": "BLPM951331IONVGR54",
                        "link": "27c1d5cf-e8fb-433a-a2f7-d246de199c01",
                        "report_date": "2023-01-19",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/employment-records",
            "request": {
              "name": "ListEmploymentRecordsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.EmploymentRecordsPaginatedResponse",
            },
          },
          "RetrieveEmploymentRecordDetails": {
            "auth": true,
            "display-name": "Retrieve employment record details",
            "docs": "Retrieve employment record details for an individual.
",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "d686c617-6d9e-4bc6-9801-5ac276ccb6a2",
                },
                "response": {
                  "body": [
                    {
                      "collected_at": "2020-04-23T21:32:55Z",
                      "created_at": "2020-04-23T21:32:55Z",
                      "employment_records": [
                        {
                          "collected_at": "2020-04-23T21:32:55Z",
                          "currency": "MXN",
                          "employer": "Batman Enterprises CDMX",
                          "employer_id": "780-BAT-88769-CDMX",
                          "end_date": "2019-12-31",
                          "most_recent_base_salary": 762.54,
                          "start_date": "2019-10-10",
                          "state": "DISTRITO FEDERAL",
                          "weeks_employed": 12,
                        },
                      ],
                      "files": [
                        {
                          "type": "ReporteSemanasCotizadas_190123",
                          "value": "=PDF_BINARY=",
                        },
                      ],
                      "id": "fef05fc8-7357-4a4a-9d29-55038ea31a04",
                      "internal_identification": "BLPM951331IONVGR54",
                      "link": "27c1d5cf-e8fb-433a-a2f7-d246de199c01",
                      "personal_data": {
                        "birth_date": "2022-02-09",
                        "document_ids": [
                          {},
                        ],
                        "email": "bruce.banner@avengers.com",
                        "entitlements": {
                          "entitled_to_company_benefits": true,
                          "entitled_to_health_insurance": true,
                        },
                        "first_name": "Bruce",
                        "last_name": "Banner del Torro",
                        "official_name": "Bruce Banner del Torro",
                      },
                      "report_date": "2023-01-19",
                      "social_security_summary": {
                        "weeks_contributed": 188,
                        "weeks_redeemed": 0,
                        "weeks_reinstated": 0,
                      },
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/api/employment-records",
            "request": {
              "body": {
                "properties": {
                  "attach_pdf": {
                    "docs": "When set to \`true\`, you will receive the PDF in binary format in the response.",
                    "type": "optional<boolean>",
                  },
                  "link": {
                    "docs": "The \`link.id\` you want to retrieve employment records for.",
                    "type": "string",
                  },
                  "save_data": {
                    "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "EmploymentRecordRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "list<root.EmploymentRecord>",
            },
          },
        },
      },
    },
    "incomeVerification.yml": {
      "docs": "Verify your users' income and forecast their future income potential with Belvo. Your only need to send trough a your raw transaction data and Belvo returns:

- insights into your user’s multiple sources of income
- a stability score that reflects the consistency and regularity of your user’s income history
- a confidence level for future income",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Income Verification",
        "endpoints": {
          "VerifyIncome": {
            "auth": true,
            "display-name": "Verify incomes",
            "docs": "Send through your raw data and receive enriched information for each of your user's income streams.

<div style="background-color:#f4f6f8; border-left: 6px solid #5bc0de;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px">
<strong>Note: </strong> Belvo can process up to 10,000 unique transactions per request.
</div>",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.ForbiddenError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "request": {
                  "date_from": "2022-08-01",
                  "date_to": "2022-12-30",
                  "language": "pt",
                  "transactions": [
                    {
                      "account_category": "CHECKING_ACCOUNT",
                      "account_holder_id": "a61bc801-9fa5-457b-88ad-850c96eaca30",
                      "account_holder_type": "INDIVIDUAL",
                      "account_id": "EBACA-89077589",
                      "amount": 650.89,
                      "currency": "BRL",
                      "description": "SALÁRIO MENSAL",
                      "institution": "Erebor Retail Brasil",
                      "transaction_id": "3CWE4927CF15355",
                      "value_date": "2022-11-18",
                    },
                  ],
                },
                "response": {
                  "body": [
                    {
                      "created_at": "2022-02-09T08:45:50Z",
                      "first_transaction_date": "2022-06-09",
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "income_source_type": "BANK",
                      "income_streams": [],
                      "last_transaction_date": "2023-02-09",
                      "link": "f4621548-2f9e-440e-9ebd-ae8decac8c02",
                      "monthly_average": 1705.46,
                      "monthly_average_high_confidence": 0,
                      "monthly_average_irregular": 1308.18,
                      "monthly_average_low_confidence": 1308.18,
                      "monthly_average_medium_confidence": 2500,
                      "monthly_average_regular": 2500,
                      "number_of_income_streams": 12,
                      "total_high_confidence": 0,
                      "total_income_amount": 12616.37,
                      "total_irregular_income_amount": 2616.37,
                      "total_low_confidence": 2616.37,
                      "total_medium_confidence": 10000,
                      "total_regular_income_amount": 10000,
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/api/enrich/incomes",
            "request": {
              "body": {
                "properties": {
                  "allowed_income_types": "optional<list<root.EnumInvoiceAllowedIncomeTypesRequest>>",
                  "date_from": {
                    "docs": "The date from which you want to start getting incomes for, in \`YYYY-MM-DD\` format, within the last 365 days. When you use this parameter, you must also send \`date_to\`.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
                    "type": "optional<string>",
                  },
                  "date_to": {
                    "docs": "The date you want to stop getting incomes for, in \`YYYY-MM-DD\` format, within the last 365 days. When you use this parameter, you must also send \`date_from\`.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
                    "type": "optional<string>",
                  },
                  "language": {
                    "docs": "Two-letter ISO 639-1 code for the language of the transaction.",
                    "type": "string",
                  },
                  "minimum_confidence_level": "optional<root.EnumIncomeMinimumConfidenceLevelRequest>",
                  "transactions": {
                    "docs": "An array of transaction objects that you want enriched.

**Note:** Each object corresponds to one, unique transaction and you can send through up to 10,000 transactions per request.",
                    "type": "list<root.EyodIncomeVerificationBodyRequest>",
                  },
                },
              },
              "headers": undefined,
              "name": "EyodIncomeVerificationRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Ok",
              "type": "list<root.Income>",
            },
          },
        },
      },
    },
    "incomes.yml": {
      "docs": "Use the Incomes endpoint to gather insights on an account's income sources for the past 365 days. The endpoint is particularly useful when you want to verify a person's income.

<div style="background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px">
    <strong>Info: </strong> The incomes resource is <b>only</b> available for Checking and Savings
accounts associated with banking links.
 </div>


 ### **🔦 Filterable fields**

Please see the table below for an alphabetized list of fields that you can filter your responses by. For more information on how to use filters, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) article.

| Field        | Available Filters                 |
| ------------ | --------------------------------- |
| \`account\`    | \`=\`, \`in\`                         |
| \`created_at\` | \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`id\`         | \`=\`, \`in\`                         |

\`\`\`curl cURL
# Filtering results to have incomes from one link:
https://sandbox.belvo.com/api/incomes/?link=link-id

# Filtering results to have incomes from one link and from two of their accounts:
https://sandbox.belvo.com/api/incomes/?link=link-id&account__in=account-id1,account-id2
\`\`\`
\`\`\`javascript Node
// Filtering results to have incomes from one link:
client.incomes.list({
  filters: {
    link: "link-id"
  }
})

// Filtering results to have incomes from one link and from two of their accounts:

client.incomes.list({
  filters: {
    link: "link-id",
    account__in: "account-id1,account-id2"
  }
})
\`\`\`
\`\`\`python Python
# Filtering results to have incomes from one link:
client.Incomes.list(link="link-id")

# Filtering results to have incomes from one link and from two of their accounts:
client.Incomes.list(link="link-id", account__in="account-id1,account-id2")
\`\`\`
\`\`\`ruby Ruby
# Filtering results to have incomes from one link:
client.incomes.list(params: {
  link: "link-id"
})

# Filtering results to have incomes from one link and from two of their accounts:
client.incomes.list(params: {
  link: "link-id",
  account__in: "account-id1,account-id2"
})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Incomes",
        "endpoints": {
          "DestroyIncomes": {
            "auth": true,
            "display-name": "Delete an income",
            "docs": "Delete a specific income from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/incomes/{id}",
            "path-parameters": {
              "id": {
                "docs": "the \`income.id\` that you want to delete",
                "type": "string",
              },
            },
          },
          "DetailIncome": {
            "auth": true,
            "display-name": "Get an income's details",
            "docs": "Get the details of a specific income.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": [
                    {
                      "created_at": "2022-02-09T08:45:50Z",
                      "first_transaction_date": "2022-06-09",
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "income_source_type": "BANK",
                      "income_streams": [],
                      "last_transaction_date": "2023-02-09",
                      "link": "f4621548-2f9e-440e-9ebd-ae8decac8c02",
                      "monthly_average": 1705.46,
                      "monthly_average_high_confidence": 0,
                      "monthly_average_irregular": 1308.18,
                      "monthly_average_low_confidence": 1308.18,
                      "monthly_average_medium_confidence": 2500,
                      "monthly_average_regular": 2500,
                      "number_of_income_streams": 12,
                      "total_high_confidence": 0,
                      "total_income_amount": 12616.37,
                      "total_irregular_income_amount": 2616.37,
                      "total_low_confidence": 2616.37,
                      "total_medium_confidence": 10000,
                      "total_regular_income_amount": 10000,
                    },
                  ],
                },
              },
            ],
            "method": "GET",
            "path": "/api/incomes/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`income.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailIncomeRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "list<root.Income>",
            },
          },
          "ListIncomes": {
            "auth": true,
            "display-name": "List all incomes",
            "docs": "Get a paginated list of all incomes in your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "account": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "account__in": "24ccab1d-3a86-4136-a6eb-e04bf52b356f,beb2b197-3cf7-428d-bef3-f415c0d57509",
                  "fields": "link,balance,account",
                  "link": "73694155-b871-41ec-94e3-37d17ff62b5d",
                  "link__in": "73694155-b871-41ec-94e3-37d17ff62b5d,40968d42-7d89-49e3-9931-78baa8e0544e",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "created_at": "2022-02-09T08:45:50Z",
                        "first_transaction_date": "2022-06-09",
                        "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                        "income_source_type": "BANK",
                        "income_streams": [],
                        "last_transaction_date": "2023-02-09",
                        "link": "f4621548-2f9e-440e-9ebd-ae8decac8c02",
                        "monthly_average": 1705.46,
                        "monthly_average_high_confidence": 0,
                        "monthly_average_irregular": 1308.18,
                        "monthly_average_low_confidence": 1308.18,
                        "monthly_average_medium_confidence": 2500,
                        "monthly_average_regular": 2500,
                        "number_of_income_streams": 12,
                        "total_high_confidence": 0,
                        "total_income_amount": 12616.37,
                        "total_irregular_income_amount": 2616.37,
                        "total_low_confidence": 2616.37,
                        "total_medium_confidence": 10000,
                        "total_regular_income_amount": 10000,
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/incomes",
            "request": {
              "name": "ListIncomesRequest",
              "query-parameters": {
                "account": {
                  "docs": "The \`account.id\` you want to filter by.

ℹ️ We highly recommend adding the \`account.id\` filter in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "account__in": {
                  "docs": "Return incomes for these \`account.id\`s.",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return incomes only for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.IncomesPaginatedResponse",
            },
          },
          "PatchIncomes": {
            "auth": true,
            "display-name": "Complete an incomes request",
            "docs": "Used to resume an Income retrieve session that was paused because an MFA token was required by the institution.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "683005d6-f45c-4adb-b289-f1a12f50f80c",
                  "save_data": true,
                  "session": "6e7b283c6efa449c9c028a16b5c249fa",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "created_at": "2022-02-09T08:45:50Z",
                      "first_transaction_date": "2022-06-09",
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "income_source_type": "BANK",
                      "income_streams": [],
                      "last_transaction_date": "2023-02-09",
                      "link": "f4621548-2f9e-440e-9ebd-ae8decac8c02",
                      "monthly_average": 1705.46,
                      "monthly_average_high_confidence": 0,
                      "monthly_average_irregular": 1308.18,
                      "monthly_average_low_confidence": 1308.18,
                      "monthly_average_medium_confidence": 2500,
                      "monthly_average_regular": 2500,
                      "number_of_income_streams": 12,
                      "total_high_confidence": 0,
                      "total_income_amount": 12616.37,
                      "total_irregular_income_amount": 2616.37,
                      "total_low_confidence": 2616.37,
                      "total_medium_confidence": 10000,
                      "total_regular_income_amount": 10000,
                    },
                  ],
                },
              },
            ],
            "method": "PATCH",
            "path": "/api/incomes",
            "request": {
              "body": "root.PatchBody",
              "name": "PatchIncomesRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<root.Income>",
            },
          },
          "RetrieveIncome": {
            "auth": true,
            "display-name": "Retrieve incomes for a link",
            "docs": "Retrieve income insights for <b>checking and savings accounts</b> from a specific link. You can receive insights for a period of up to 365 days, depending on the transaction history available for each [bank](https://developers.belvo.com/docs/institution).",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "date_from": "2020-08-01",
                  "date_to": "2020-12-30",
                  "link": "2ccd5e15-194a-4a19-a45a-e7223c7e6717",
                  "token": "1234ab",
                },
                "response": {
                  "body": {
                    "created_at": "2022-02-09T08:45:50Z",
                    "first_transaction_date": "2022-06-09",
                    "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                    "income_source_type": "BANK",
                    "income_streams": [
                      {
                        "account_id": "EBACA-89077589",
                        "average_income_amount": 2500,
                        "confidence": "HIGH",
                        "currency": "BRL",
                        "frequency": "MONTHLY",
                        "full_periods": 12,
                        "income_type": "SALARY",
                        "last_income_amount": 2500,
                        "last_income_date": "2022-02-09",
                        "last_income_description": {
                          "key": "value",
                        },
                        "lookback_periods": 4,
                        "monthly_average": 2500,
                        "number_of_incomes": 4,
                        "periods_with_income": 3,
                        "regularity": 0.75,
                        "stability": 1,
                        "trend": 0,
                      },
                    ],
                    "last_transaction_date": "2023-02-09",
                    "link": "f4621548-2f9e-440e-9ebd-ae8decac8c02",
                    "monthly_average": 1705.46,
                    "monthly_average_high_confidence": 0,
                    "monthly_average_irregular": 1308.18,
                    "monthly_average_low_confidence": 1308.18,
                    "monthly_average_medium_confidence": 2500,
                    "monthly_average_regular": 2500,
                    "number_of_income_streams": 12,
                    "total_high_confidence": 0,
                    "total_income_amount": 12616.37,
                    "total_irregular_income_amount": 2616.37,
                    "total_low_confidence": 2616.37,
                    "total_medium_confidence": 10000,
                    "total_regular_income_amount": 10000,
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/api/incomes",
            "request": {
              "body": {
                "properties": {
                  "allowed_income_types": "optional<list<root.EnumInvoiceAllowedIncomeTypesRequest>>",
                  "date_from": {
                    "docs": "The date from which you want to start getting incomes for, in \`YYYY-MM-DD\` format, within the last 365 days. When you use this parameter, you must also send \`date_to\`.

⚠️ You must have at least 90 days between \`date_from\` and \`date_to\`.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
                    "type": "optional<string>",
                  },
                  "date_to": {
                    "docs": "The date you want to stop getting incomes for, in \`YYYY-MM-DD\` format, within the last 365 days. When you use this parameter, you must also send \`date_from\`.

⚠️ You must have at least 90 days between \`date_from\` and \`date_to\`.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
                    "type": "optional<string>",
                  },
                  "link": {
                    "docs": "The \`link.id\` that you want to get information for.",
                    "type": "string",
                  },
                  "minimum_confidence_level": "optional<root.EnumIncomeMinimumConfidenceLevelRequest>",
                  "save_data": {
                    "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                    "type": "optional<boolean>",
                  },
                  "token": {
                    "docs": "The OTP token generated by the bank.",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "IncomesRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "root.Income",
            },
          },
        },
      },
    },
    "institutions.yml": {
      "docs": "An **institution** is an entity that Belvo can access information from. It can be a:

- bank institution, such as Banamex retail banking or HSBC business banking.
- fiscal institution, such as the Servicio de Administración Tributaria (SAT) in Mexico.

![](https://files.readme.io/69a4676-Banking__Tax.png)

You can see a complete list of institutions by either consulting our [Institutions article](https://developers.belvo.com/docs/institution) or making a List request to this endpoint.",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Institutions",
        "endpoints": {
          "DetailInstitution": {
            "auth": true,
            "display-name": "Get an institution's details",
            "docs": "Get the details of a specific institution.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "country_codes": [
                      "MX",
                    ],
                    "display_name": "Erebor Mexico",
                    "features": [
                      {
                        "description": "The institution may require a token during link creation or login",
                        "name": "token_required",
                      },
                    ],
                    "form_fields": [
                      {
                        "label": "Client number",
                        "name": "username",
                        "placeholder": "ABC333333A33",
                        "type": "text",
                        "validation": "^.{1,}$",
                        "validation_message": "Invalid client number",
                        "values": [
                          {
                            "code": "001",
                            "label": "Cédula de Ciudadanía",
                            "placeholder": "DEF4444908M22",
                            "validation": "^.{1,}$",
                            "validation_message": "Invalid document number",
                          },
                        ],
                      },
                    ],
                    "icon_logo": "https://statics.belvo.io/widget/images/institutions/erebor.svg",
                    "id": 1003,
                    "integration_type": "credentials",
                    "logo": "https://belvo-api-media.s3.amazonaws.com/logos/erebor_logo.png",
                    "name": "erebor_mx_retail",
                    "primary_color": "#056dae",
                    "resources": [
                      "ACCOUNTS",
                    ],
                    "status": "healthy",
                    "text_logo": "https://statics.belvo.io/widget/images/institutions/erebor.svg",
                    "type": "bank",
                    "website": "https://www.erebor.com/",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/institutions/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`institution.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailInstitutionRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.Institution",
            },
          },
          "ListInstitutions": {
            "auth": true,
            "display-name": "List all institutions",
            "docs": "Get a paginated list of all the institutions currently supported by Belvo. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "country_code": "MX",
                  "country_code__in": "CO,BR",
                  "display_name": "Erebor Bank",
                  "fields": "link,balance,account",
                  "name__in": "erebor_br_retail,gotham_co_business",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                  "resources__allin": "ACCOUNTS,OWNERS,TRANSACTIONS",
                  "status": "healthy",
                  "status__in": "healthy,down",
                  "type": "fiscal",
                  "type__in": "fiscal,bank",
                  "website": "https://www.erebor.mx",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "country_codes": [
                          "MX",
                        ],
                        "display_name": "Erebor Mexico",
                        "features": [
                          {
                            "description": "The institution may require a token during link creation or login",
                            "name": "token_required",
                          },
                        ],
                        "form_fields": [
                          {
                            "label": "Client number",
                            "name": "username",
                            "placeholder": "ABC333333A33",
                            "type": "text",
                            "validation": "^.{1,}$",
                            "validation_message": "Invalid client number",
                          },
                        ],
                        "icon_logo": "https://statics.belvo.io/widget/images/institutions/erebor.svg",
                        "id": 1003,
                        "integration_type": "credentials",
                        "logo": "https://belvo-api-media.s3.amazonaws.com/logos/erebor_logo.png",
                        "name": "erebor_mx_retail",
                        "primary_color": "#056dae",
                        "resources": [
                          "ACCOUNTS",
                        ],
                        "status": "healthy",
                        "text_logo": "https://statics.belvo.io/widget/images/institutions/erebor.svg",
                        "type": "bank",
                        "website": "https://www.erebor.com/",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/institutions",
            "request": {
              "name": "ListInstitutionsRequest",
              "query-parameters": {
                "country_code": {
                  "docs": "Return institutions only for this two-letter country code.",
                  "type": "optional<string>",
                },
                "country_code__in": {
                  "docs": "Return institutions only for these two-letter country codes.",
                  "type": "optional<string>",
                },
                "display_name": {
                  "docs": "Return institutions that partially match this display name.",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "name": "optional<string>",
                "name__in": {
                  "docs": "Return institutions with one or more of these Belvo-designated names.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
                "resources__allin": {
                  "docs": "Return institutions that support these resources.",
                  "type": "optional<string>",
                },
                "status": {
                  "docs": "Return institutions with the given status. You can choose between \`healthy\` or \`down\`.",
                  "type": "optional<string>",
                },
                "status__in": {
                  "docs": "Return institutions with one of the given statuses. You can choose between \`healthy\` or \`down\`.",
                  "type": "optional<string>",
                },
                "type": {
                  "docs": "Return institutions of this type. You can choose between \`bank\` or \`fiscal\`.",
                  "type": "optional<string>",
                },
                "type__in": {
                  "docs": "Return institutions of one of these types. You can choose between \`bank\` or \`fiscal\`.",
                  "type": "optional<string>",
                },
                "website": {
                  "docs": "Return institutions with this website URL.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.InstitutionsPaginatedResponse",
            },
          },
        },
      },
    },
    "investmentPortfolios.yml": {
      "docs": "At the moment we only support the following institutions and investment products:

| Institution                     | Portfolio                         | Instruments                 |
| ------------------------------- | --------------------------------- | --------------------------- |
| Banco de Brazil Retail (Brazil) | \`FIXED_INCOME\`                    | \`DEPOSIT\`                   |
| Banco Inter Retail (Brazil)     | \`FIXED_INCOME\`                    | \`DEPOSIT\`                   |
| Bradesco Retail (Brazil)        | \`FIXED_INCOME\`, \`VARIABLE_INCOME\` | \`DEPOSIT\`, \`FUND\`           |
| CaixaBank Retail (Brazil)       | \`FIXED_INCOME\`, \`VARIABLE_INCOME\` | \`DEPOSIT\`, \`FUND\`           |
| Itau Retail (Brazil)            | \`FIXED_INCOME\`, \`VARIABLE_INCOME\` | \`DEPOSIT\`, \`FUND\`, \`STOCKS\` |
| Santander Retail (Brazil)       | \`FIXED_INCOME\`, \`VARIABLE_INCOME\` | \`DEPOSIT\`, \`BOND\`, \`FUND\`   |


### **🔦 Filterable fields**

Please see the table below for an alphabetized list of fields that you can filter your responses by. For more information on how to use filters, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) article.

| Field         | Available Filters                 |
| ------------- | --------------------------------- |
| \`created_at \` | \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`link\`        | \`=\`, \`in\`                         |

\`\`\`curl cURL
# Filtering results so that you get the portfolios of one link:
https://sandbox.belvo.com/investments/portfolios/?link=89c91f42-df34-4c5d-a4f1-6e1e40438af4

\`\`\`
\`\`\`javascript Node
// Filtering results so that you get the portfolios of one link:
client. investmentsPortfolios.list({
  filters: {
    link: "89c91f42-df34-4c5d-a4f1-6e1e40438af4"
  }
})

\`\`\`
\`\`\`python Python
# Filtering results so that you get the portfolios of one link:
client. InvestmentsPortfolios.list(link="89c91f42-df34-4c5d-a4f1-6e1e40438af4")

\`\`\`
\`\`\`ruby Ruby
# Filtering results so that you get the portfolios of one link:
client. investments_portfolio.list(params: {
  link: "89c91f42-df34-4c5d-a4f1-6e1e40438af4"
})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Investment Portfolios",
        "endpoints": {
          "DestroyPortfolio": {
            "auth": true,
            "display-name": "Delete a portfolio",
            "docs": "Delete a specific investment portfolio and all associated instruments, transactions, and owners from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/investments/portfolios/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`portfolio.id\` that you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailPortfolio": {
            "auth": true,
            "display-name": "Get a portfolio's details",
            "docs": "Get the details of a specific portfolio.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "balance_gross": 76000,
                    "balance_net": 77370.69,
                    "balance_type": "ASSET",
                    "currency": "BRL",
                    "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "instruments": [
                      {
                        "average_acquisition_price": 10.01,
                        "balance_gross": 100.09,
                        "balance_net": 99.09,
                        "currency": "USD",
                        "fees": [
                          {
                            "type": "OPERATION_FEE",
                            "value": 123.09,
                          },
                        ],
                        "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "interest_rates": [
                          {
                            "index": "CDI",
                            "type": "yearly",
                            "value": 11.31,
                          },
                        ],
                        "name": "CBD DIGITAL ESPECIAL",
                        "open_date": "2021-08-10",
                        "price": 10.41,
                        "profit": 3.08,
                        "public_id": [
                          {
                            "type": "isin",
                            "value": "435-3354.3333",
                          },
                        ],
                        "quantity": 27.46,
                        "redemption_conditions": [
                          {
                            "type": "due_date",
                            "value": "12-02-2023",
                          },
                        ],
                        "subtype": "CBD",
                        "type": "BOND",
                      },
                    ],
                    "name": "Investimento",
                    "type": "FIXED_INCOME",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/investments/portfolios/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`portfolio.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailPortfolioRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.InvestmentsPortfolio",
            },
          },
          "ListPortfolio": {
            "auth": true,
            "display-name": "List all portfolios",
            "docs": "Get a paginated list of all the existing portfolios (and their instruments) in your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "balance_gross": 76000,
                        "balance_net": 77370.69,
                        "balance_type": "ASSET",
                        "currency": "BRL",
                        "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "instruments": [
                          {
                            "average_acquisition_price": 10.01,
                            "balance_gross": 100.09,
                            "balance_net": 99.09,
                            "currency": "USD",
                            "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                            "name": "CBD DIGITAL ESPECIAL",
                            "open_date": "2021-08-10",
                            "price": 10.41,
                            "profit": 3.08,
                            "public_id": [
                              {
                                "type": "isin",
                                "value": "435-3354.3333",
                              },
                            ],
                            "quantity": 27.46,
                            "subtype": "CBD",
                            "type": "BOND",
                          },
                        ],
                        "name": "Investimento",
                        "type": "FIXED_INCOME",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/investments/portfolios",
            "request": {
              "name": "ListPortfolioRequest",
              "query-parameters": {
                "created_at__gt": "optional<string>",
                "created_at__gte": "optional<string>",
                "created_at__lt": "optional<string>",
                "created_at__lte": "optional<string>",
                "created_at__range": "optional<string>",
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": "optional<string>",
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.InvestmentsPortfoliosPaginatedResponse",
            },
          },
          "PatchPortfolio": {
            "auth": true,
            "display-name": "Complete a portfolios request",
            "docs": "Used to resume a portfolio retrieve session that was paused because an MFA token was required by the institution.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "683005d6-f45c-4adb-b289-f1a12f50f80c",
                  "session": "6e7b283c6efa449c9c028a16b5c249fa",
                  "token": "1234ab",
                },
                "response": {
                  "body": {
                    "balance_gross": 76000,
                    "balance_net": 77370.69,
                    "balance_type": "ASSET",
                    "currency": "BRL",
                    "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "instruments": [
                      {
                        "average_acquisition_price": 10.01,
                        "balance_gross": 100.09,
                        "balance_net": 99.09,
                        "currency": "USD",
                        "fees": [
                          {
                            "type": "OPERATION_FEE",
                            "value": 123.09,
                          },
                        ],
                        "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "interest_rates": [
                          {
                            "index": "CDI",
                            "type": "yearly",
                            "value": 11.31,
                          },
                        ],
                        "name": "CBD DIGITAL ESPECIAL",
                        "open_date": "2021-08-10",
                        "price": 10.41,
                        "profit": 3.08,
                        "public_id": [
                          {
                            "type": "isin",
                            "value": "435-3354.3333",
                          },
                        ],
                        "quantity": 27.46,
                        "redemption_conditions": [
                          {
                            "type": "due_date",
                            "value": "12-02-2023",
                          },
                        ],
                        "subtype": "CBD",
                        "type": "BOND",
                      },
                    ],
                    "name": "Investimento",
                    "type": "FIXED_INCOME",
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/investments/portfolios",
            "request": {
              "body": "root.PatchBodyWithoutSaveData",
              "name": "PatchPortfolioRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "root.InvestmentsPortfolio",
            },
          },
          "RetrievePortfolio": {
            "auth": true,
            "display-name": "Retrieve portfolios for a link",
            "docs": "Retrieve all portfolios for an existing link.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "2ccd5e15-194a-4a19-a45a-e7223c7e6717",
                  "token": "1234ab",
                },
                "response": {
                  "body": {
                    "balance_gross": 76000,
                    "balance_net": 77370.69,
                    "balance_type": "ASSET",
                    "currency": "BRL",
                    "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "instruments": [
                      {
                        "average_acquisition_price": 10.01,
                        "balance_gross": 100.09,
                        "balance_net": 99.09,
                        "currency": "USD",
                        "fees": [
                          {
                            "type": "OPERATION_FEE",
                            "value": 123.09,
                          },
                        ],
                        "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "interest_rates": [
                          {
                            "index": "CDI",
                            "type": "yearly",
                            "value": 11.31,
                          },
                        ],
                        "name": "CBD DIGITAL ESPECIAL",
                        "open_date": "2021-08-10",
                        "price": 10.41,
                        "profit": 3.08,
                        "public_id": [
                          {
                            "type": "isin",
                            "value": "435-3354.3333",
                          },
                        ],
                        "quantity": 27.46,
                        "redemption_conditions": [
                          {
                            "type": "due_date",
                            "value": "12-02-2023",
                          },
                        ],
                        "subtype": "CBD",
                        "type": "BOND",
                      },
                    ],
                    "name": "Investimento",
                    "type": "FIXED_INCOME",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/investments/portfolios",
            "request": {
              "body": "root.StandardRequest",
              "name": "RetrievePortfolioRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "root.InvestmentsPortfolio",
            },
          },
        },
      },
    },
    "invoices.yml": {
      "docs": "An **invoice** is the representation of an electronic invoice, that can be received or sent, by a business or an individual and has been uploaded to the fiscal institution's website. Multiple INFLOW (invoice received) and OUTFLOW (invoice sent) invoices can be retrieved inside each link coming from a fiscal institution.

### **🔦 Filterable fields**

Please see the table below for an alphabetized list of fields that you can filter your responses by. For more information on how to use filters, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) article.

| Field                    | Available Filters                      |
| ------------------------ | -------------------------------------- |
| \`created_at \`            | \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\`      |
| \`id\`                     | \`=\`, \`in\`                              |
| \`invoice_date\`           | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`invoice_identification\` | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`link\`                   | \`=\`, \`in\`                              |
| \`status\`                 | \`=\`, \`in\`                              |
| \`total_amount\`           | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`type\`                   | \`=\`, \`in\`                              |

\`\`\`curl cURL
# Filtering results so that you get Tax Returns from one link:
https://sandbox.belvo.com/api/invoices/?link=link-id

# Filtering results so that you get Tax Returns from two links 
# and are of type normal and their status is vigente:
https://sandbox.belvo.com/api/invoices/?link__in=link-id1,link-id2&informacion_general__tipo_declaracion=Normal&status=vigente
\`\`\`
\`\`\`javascript Node
//  Filtering results so that you get the Tax Returns from one link:
client.invoices.list({
  filters: {
    link: "link-id"
  }
})

//  Filtering results so that you get the Tax Returns from two links
// and are of type normal and their status is vigente:
client.invoices.list({
  filters: {
    link__in: "link-id-1, link-id-2",
    informacion_general__tipo_declaracion: "Normal",
    status: "vigente"
  }
})

\`\`\`
\`\`\`python Python
# Filtering results so that you get the Tax Return from one link:
client.invoices.list(link="link-id")

# Filtering results so that you get the Tax Returns from two links
# # and are of type normal and their status is vigente:
client.invoices.list(link__in="link-id1,link-id2", informacion_general__tipo_declaracion="Normal", status="vigente")
\`\`\`
\`\`\`ruby Ruby
# Filtering results so that you get the Tax Return from one link:
client.invoices.list(params: {
  link: "link-id"
})


# Filtering results so that you get the Tax Returns from two links
# and are of type normal and their status is vigente:
client.invoices.list(params: {
  link__in: "link-id1, link-id1",
  informacion_general__tipo_declaracion: "Normal",
  status: "vigente"
})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Invoices",
        "endpoints": {
          "DestroyInvoice": {
            "auth": true,
            "display-name": "Delete an invoice",
            "docs": "Delete a specific invoice from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/invoices/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`invoice.id\` that you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailInvoice": {
            "auth": true,
            "display-name": "Get an invoice's details",
            "docs": "Get the details of a specific invoice.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "cancelation_status": "cancelation_status",
                    "cancelation_update_date": "2019-12-02",
                    "certification_authority": "CCC333333CC33",
                    "certification_date": "2019-12-01",
                    "collected_at": "2019-09-27T13:01:41Z",
                    "created_at": "2022-02-09T08:45:50Z",
                    "currency": "MXN",
                    "discount_amount": 10,
                    "exchange_rate": 0.052,
                    "folio": "26",
                    "id": "c749315b-eec2-435d-a458-06912878564f",
                    "invoice_date": "2019-12-01",
                    "invoice_details": [
                      {
                        "collected_at": "2019-09-27T13:01:41Z",
                        "description": "December 2019 accounting fees",
                        "pre_tax_amount": 400,
                        "product_identification": "84101600",
                        "quantity": 10,
                        "retained_taxes": [
                          {
                            "retained_tax_amount": 209.79,
                            "tax": "ISR",
                            "tax_percentage": 10,
                          },
                        ],
                        "tax_amount": 64,
                        "tax_percentage": 16,
                        "tax_type": "tax_type",
                        "total_amount": 464,
                        "unit_amount": 200,
                        "unit_code": "E48",
                        "unit_description": "Unidad de servicio",
                      },
                    ],
                    "invoice_identification": "A1A1A1A1-2B2B-3C33-D44D-555555E55EE",
                    "invoice_type": "Egreso",
                    "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "payment_method": "PUE",
                    "payment_method_description": "payment_method_description",
                    "payment_type": "99",
                    "payment_type_description": "payment_type_description",
                    "payments": [
                      {
                        "amount": 8000.5,
                        "beneficiary_account_number": "12343453245633",
                        "beneficiary_rfc": "BNM840515VB1",
                        "currency": "BRL",
                        "date": "2020-03-17T12:00:00Z",
                        "exchange_rate": "3.75",
                        "operation_number": "831840",
                        "payer_account_number": "13343663245699",
                        "payer_bank_name": "CITI BANAMEX",
                        "payer_rfc": "BKJM840515VB1",
                        "payment_type": "03",
                        "related_documents": [
                          {
                            "amount_paid": 8000,
                            "currency": "MXN",
                            "invoice_identification": "7EE015F3-6311-11EA-B02A-00155D014007",
                            "outstanding_balance": 10877.84,
                            "partiality_number": 1,
                            "payment_method": "PPD",
                            "previous_balance": 18877.84,
                          },
                        ],
                      },
                    ],
                    "payroll": {
                      "amount": 20400.1,
                      "collected_at": "2019-09-27T13:01:41Z",
                      "date_from": "2018-07-01",
                      "date_to": "2018-07-31",
                      "days": 30,
                      "payment_date": "payment_date",
                      "type": "O",
                      "version": "1.2",
                    },
                    "place_of_issue": "01165",
                    "receiver_blacklist_status": "receiver_blacklist_status",
                    "receiver_id": "BBB222222BB22",
                    "receiver_name": "BELVO CORP",
                    "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
                    "sender_blacklist_status": "sender_blacklist_status",
                    "sender_id": "AAA111111AA11",
                    "sender_name": "ACME CORP",
                    "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
                    "status": "Vigente",
                    "subtotal_amount": 400,
                    "tax_amount": 64,
                    "total_amount": 454,
                    "type": "INFLOW",
                    "usage": "P01",
                    "version": "3.3",
                    "warnings": {
                      "code": "sat_xml_limit_reached",
                      "message": "The daily limit for XML downloads set by SAT was reached so this invoice might be missing data. Please check https://tinyurl.com/yydzhy5d for more information on this error.",
                    },
                    "xml": "xml",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/invoices/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`invoice.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailInvoiceRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "DetailInvoiceResponse",
            },
          },
          "ListInvoices": {
            "auth": true,
            "display-name": "List all invoices",
            "docs": "Get a paginated list of all existing invoices in your Belvo account. By default, we return 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "created_at__gt": "2022-05-05",
                  "created_at__gte": "2022-05-04",
                  "created_at__lt": "2022-04-01",
                  "created_at__lte": "2022-03-30",
                  "created_at__range": "2022-03-03,2022-05-04",
                  "fields": "link,balance,account",
                  "id": "73694155-b871-41ec-94e3-37d17ff62b5d",
                  "id__in": "73694155-b871-41ec-94e3-37d17ff62b5d,40968d42-7d89-49e3-9931-78baa8e0544e",
                  "invoice_date": "2022-05-05",
                  "invoice_date__gt": "2022-05-06",
                  "invoice_date__gte": "2022-05-04",
                  "invoice_date__lt": "2022-03-02",
                  "invoice_date__lte": "2022-03-01",
                  "invoice_date__range": "2022-03-01,2022-05-06",
                  "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
                  "invoice_identification__in": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840,992B9918-3G6H-4E0B-DAI9-2BE2D833B833",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "link__in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                  "status": "Vigente",
                  "status__in": "Vigente,Cancelado",
                  "total_amount": "1000.00",
                  "total_amount__gt": "520.00",
                  "total_amount__gte": "519.00",
                  "total_amount__lt": "540.00",
                  "total_amount__lte": "541.00",
                  "total_amount__range": "519.00,541.00",
                  "type": "OUTFLOW",
                  "type__in": "OUTFLOW,INFLOW",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "cancelation_status": "cancelation_status",
                        "cancelation_update_date": "2019-12-02",
                        "certification_authority": "CCC333333CC33",
                        "certification_date": "2019-12-01",
                        "collected_at": "2019-09-27T13:01:41Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "currency": "MXN",
                        "discount_amount": 10,
                        "exchange_rate": 0.052,
                        "folio": "26",
                        "id": "c749315b-eec2-435d-a458-06912878564f",
                        "invoice_date": "2019-12-01",
                        "invoice_details": [
                          {
                            "description": "December 2019 accounting fees",
                            "pre_tax_amount": 400,
                            "product_identification": "84101600",
                            "quantity": 10,
                            "tax_amount": 64,
                            "tax_percentage": 16,
                            "total_amount": 464,
                            "unit_amount": 200,
                            "unit_code": "E48",
                            "unit_description": "Unidad de servicio",
                          },
                        ],
                        "invoice_identification": "A1A1A1A1-2B2B-3C33-D44D-555555E55EE",
                        "invoice_type": "Egreso",
                        "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "payment_method": "PUE",
                        "payment_method_description": "payment_method_description",
                        "payment_type": "99",
                        "payment_type_description": "payment_type_description",
                        "payments": [
                          {
                            "amount": 8000.5,
                            "beneficiary_account_number": "12343453245633",
                            "currency": "BRL",
                            "date": "2020-03-17T12:00:00Z",
                            "exchange_rate": "3.75",
                            "operation_number": "831840",
                            "payer_account_number": "13343663245699",
                            "payer_bank_name": "CITI BANAMEX",
                            "payer_rfc": "BKJM840515VB1",
                            "payment_type": "03",
                            "related_documents": [
                              {
                                "amount_paid": 8000,
                                "currency": "MXN",
                                "invoice_identification": "7EE015F3-6311-11EA-B02A-00155D014007",
                                "outstanding_balance": 10877.84,
                                "partiality_number": 1,
                                "payment_method": "PPD",
                                "previous_balance": 18877.84,
                              },
                            ],
                          },
                        ],
                        "payroll": {
                          "amount": 20400.1,
                          "date_from": "2018-07-01",
                          "date_to": "2018-07-31",
                          "days": 30,
                          "payment_date": "payment_date",
                          "type": "O",
                          "version": "1.2",
                        },
                        "place_of_issue": "01165",
                        "receiver_blacklist_status": "receiver_blacklist_status",
                        "receiver_id": "BBB222222BB22",
                        "receiver_name": "BELVO CORP",
                        "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
                        "sender_blacklist_status": "sender_blacklist_status",
                        "sender_id": "AAA111111AA11",
                        "sender_name": "ACME CORP",
                        "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
                        "status": "Vigente",
                        "subtotal_amount": 400,
                        "tax_amount": 64,
                        "total_amount": 454,
                        "type": "INFLOW",
                        "usage": "P01",
                        "version": "3.3",
                        "warnings": {
                          "code": "sat_xml_limit_reached",
                          "message": "The daily limit for XML downloads set by SAT was reached so this invoice might be missing data. Please check https://tinyurl.com/yydzhy5d for more information on this error.",
                        },
                        "xml": "xml",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/invoices",
            "request": {
              "name": "ListInvoicesRequest",
              "query-parameters": {
                "created_at__gt": {
                  "docs": "Return invoices that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return invoices that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return invoices that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return invoices that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return invoices that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "id": {
                  "docs": "Return information only for this \`invoice.id\`.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "Return information only for these \`invoice.id\`s.",
                  "type": "optional<string>",
                },
                "invoice_date": {
                  "docs": "Return invoices issued exactly on this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "invoice_date__gt": {
                  "docs": "Return invoices issued after this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "invoice_date__gte": {
                  "docs": "Return invoices issued on this date or later (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "invoice_date__lt": {
                  "docs": "Return balances issued before this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "invoice_date__lte": {
                  "docs": "Return balances issued on this date or earlier (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "invoice_date__range": {
                  "docs": "Return invoices issued within this date range (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "invoice_identification": {
                  "docs": "Return an invoice with this ID (as provided by the insitution).",
                  "type": "optional<string>",
                },
                "invoice_identification__in": {
                  "docs": "Return invoices with these IDs (as provided by the institution).",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return invoices only for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
                "status": {
                  "docs": "Return invoices with this status. Can be either \`Vigente\` (valid) or \`Cancelado\` (cancelled).",
                  "type": "optional<string>",
                },
                "status__in": {
                  "docs": "Return invoices with these statuses. Can be either \`Vigente\` (valid) or \`Cancelado\` (cancelled).",
                  "type": "optional<string>",
                },
                "total_amount": {
                  "docs": "Return invoices matching exactly this value.",
                  "type": "optional<string>",
                },
                "total_amount__gt": {
                  "docs": "Return invoices greater than this value.",
                  "type": "optional<string>",
                },
                "total_amount__gte": {
                  "docs": "Return invoices greater than or equal to this value.",
                  "type": "optional<string>",
                },
                "total_amount__lt": {
                  "docs": "Return invoices less than this value.",
                  "type": "optional<string>",
                },
                "total_amount__lte": {
                  "docs": "Return invoices less than or equal to this value.",
                  "type": "optional<string>",
                },
                "total_amount__range": {
                  "docs": "Return invoices between these two values.",
                  "type": "optional<string>",
                },
                "type": {
                  "docs": "Return invoices of this type. Can be either \`OUTFLOW\` or \`INFLOW\`.",
                  "type": "optional<string>",
                },
                "type__in": {
                  "docs": "Return invoices of these types. Can be either \`OUTFLOW\` or \`INFLOW\`.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.InvoicesResponsePaginatedResponse",
            },
          },
          "PatchInvoices": {
            "auth": true,
            "display-name": "Complete an invoices request",
            "docs": "Used to resume an Invoice retrieve session that was paused because an MFA token was required by the institution.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "683005d6-f45c-4adb-b289-f1a12f50f80c",
                  "save_data": true,
                  "session": "6e7b283c6efa449c9c028a16b5c249fa",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "cancelation_status": "cancelation_status",
                      "cancelation_update_date": "2019-12-02",
                      "certification_authority": "CCC333333CC33",
                      "certification_date": "2019-12-01",
                      "collected_at": "2019-09-27T13:01:41Z",
                      "created_at": "2022-02-09T08:45:50Z",
                      "currency": "MXN",
                      "discount_amount": 10,
                      "exchange_rate": 0.052,
                      "folio": "26",
                      "id": "c749315b-eec2-435d-a458-06912878564f",
                      "invoice_date": "2019-12-01",
                      "invoice_details": [
                        {
                          "description": "December 2019 accounting fees",
                          "pre_tax_amount": 400,
                          "product_identification": "84101600",
                          "quantity": 10,
                          "tax_amount": 64,
                          "tax_percentage": 16,
                          "total_amount": 464,
                          "unit_amount": 200,
                          "unit_code": "E48",
                          "unit_description": "Unidad de servicio",
                        },
                      ],
                      "invoice_identification": "A1A1A1A1-2B2B-3C33-D44D-555555E55EE",
                      "invoice_type": "Egreso",
                      "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                      "payment_method": "PUE",
                      "payment_method_description": "payment_method_description",
                      "payment_type": "99",
                      "payment_type_description": "payment_type_description",
                      "payments": [
                        {
                          "amount": 8000.5,
                          "beneficiary_account_number": "12343453245633",
                          "currency": "BRL",
                          "date": "2020-03-17T12:00:00Z",
                          "exchange_rate": "3.75",
                          "operation_number": "831840",
                          "payer_account_number": "13343663245699",
                          "payer_bank_name": "CITI BANAMEX",
                          "payer_rfc": "BKJM840515VB1",
                          "payment_type": "03",
                          "related_documents": [
                            {
                              "amount_paid": 8000,
                              "currency": "MXN",
                              "invoice_identification": "7EE015F3-6311-11EA-B02A-00155D014007",
                              "outstanding_balance": 10877.84,
                              "partiality_number": 1,
                              "payment_method": "PPD",
                              "previous_balance": 18877.84,
                            },
                          ],
                        },
                      ],
                      "payroll": {
                        "amount": 20400.1,
                        "collected_at": "2019-09-27T13:01:41Z",
                        "date_from": "2018-07-01",
                        "date_to": "2018-07-31",
                        "days": 30,
                        "payment_date": "payment_date",
                        "type": "O",
                        "version": "1.2",
                      },
                      "place_of_issue": "01165",
                      "receiver_blacklist_status": "receiver_blacklist_status",
                      "receiver_id": "BBB222222BB22",
                      "receiver_name": "BELVO CORP",
                      "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
                      "sender_blacklist_status": "sender_blacklist_status",
                      "sender_id": "AAA111111AA11",
                      "sender_name": "ACME CORP",
                      "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
                      "status": "Vigente",
                      "subtotal_amount": 400,
                      "tax_amount": 64,
                      "total_amount": 454,
                      "type": "INFLOW",
                      "usage": "P01",
                      "version": "3.3",
                      "warnings": {
                        "code": "sat_xml_limit_reached",
                        "message": "The daily limit for XML downloads set by SAT was reached so this invoice might be missing data. Please check https://tinyurl.com/yydzhy5d for more information on this error.",
                      },
                      "xml": "xml",
                    },
                  ],
                },
              },
            ],
            "method": "PATCH",
            "path": "/api/invoices",
            "request": {
              "body": "root.PatchBody",
              "name": "PatchInvoicesRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<PatchInvoicesResponseItem>",
            },
          },
          "RetrieveInvoices": {
            "auth": true,
            "display-name": "Retrieve invoices for a link",
            "docs": "Retrieve invoice information from a specific fiscal link.
<div style="background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px"> <strong>Info: </strong> You can ask for up to **one** year (365 days) of invoices per request. If you need invoices for more than one year, just make another request. </div>
",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "date_from": "2020-01-01",
                  "date_to": "2020-02-01",
                  "link": "d4617561-1c01-4b2f-83b6-a594f7b3bc57",
                  "save_data": true,
                  "type": "INFLOW",
                },
                "response": {
                  "body": [
                    {
                      "cancelation_status": "cancelation_status",
                      "cancelation_update_date": "2019-12-02",
                      "certification_authority": "CCC333333CC33",
                      "certification_date": "2019-12-01",
                      "collected_at": "2019-09-27T13:01:41Z",
                      "created_at": "2022-02-09T08:45:50Z",
                      "currency": "MXN",
                      "discount_amount": 10,
                      "exchange_rate": 0.052,
                      "folio": "26",
                      "id": "c749315b-eec2-435d-a458-06912878564f",
                      "invoice_date": "2019-12-01",
                      "invoice_details": [
                        {
                          "description": "December 2019 accounting fees",
                          "pre_tax_amount": 400,
                          "product_identification": "84101600",
                          "quantity": 10,
                          "tax_amount": 64,
                          "tax_percentage": 16,
                          "total_amount": 464,
                          "unit_amount": 200,
                          "unit_code": "E48",
                          "unit_description": "Unidad de servicio",
                        },
                      ],
                      "invoice_identification": "A1A1A1A1-2B2B-3C33-D44D-555555E55EE",
                      "invoice_type": "Egreso",
                      "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                      "payment_method": "PUE",
                      "payment_method_description": "payment_method_description",
                      "payment_type": "99",
                      "payment_type_description": "payment_type_description",
                      "payments": [
                        {
                          "amount": 8000.5,
                          "beneficiary_account_number": "12343453245633",
                          "currency": "BRL",
                          "date": "2020-03-17T12:00:00Z",
                          "exchange_rate": "3.75",
                          "operation_number": "831840",
                          "payer_account_number": "13343663245699",
                          "payer_bank_name": "CITI BANAMEX",
                          "payer_rfc": "BKJM840515VB1",
                          "payment_type": "03",
                          "related_documents": [
                            {
                              "amount_paid": 8000,
                              "currency": "MXN",
                              "invoice_identification": "7EE015F3-6311-11EA-B02A-00155D014007",
                              "outstanding_balance": 10877.84,
                              "partiality_number": 1,
                              "payment_method": "PPD",
                              "previous_balance": 18877.84,
                            },
                          ],
                        },
                      ],
                      "payroll": {
                        "amount": 20400.1,
                        "collected_at": "2019-09-27T13:01:41Z",
                        "date_from": "2018-07-01",
                        "date_to": "2018-07-31",
                        "days": 30,
                        "payment_date": "payment_date",
                        "type": "O",
                        "version": "1.2",
                      },
                      "place_of_issue": "01165",
                      "receiver_blacklist_status": "receiver_blacklist_status",
                      "receiver_id": "BBB222222BB22",
                      "receiver_name": "BELVO CORP",
                      "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
                      "sender_blacklist_status": "sender_blacklist_status",
                      "sender_id": "AAA111111AA11",
                      "sender_name": "ACME CORP",
                      "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
                      "status": "Vigente",
                      "subtotal_amount": 400,
                      "tax_amount": 64,
                      "total_amount": 454,
                      "type": "INFLOW",
                      "usage": "P01",
                      "version": "3.3",
                      "warnings": {
                        "code": "sat_xml_limit_reached",
                        "message": "The daily limit for XML downloads set by SAT was reached so this invoice might be missing data. Please check https://tinyurl.com/yydzhy5d for more information on this error.",
                      },
                      "xml": "xml",
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/api/invoices",
            "request": {
              "body": {
                "properties": {
                  "attach_xml": {
                    "docs": "When set to \`true\`, you will receive the XML invoice in the response.",
                    "type": "optional<boolean>",
                  },
                  "date_from": {
                    "docs": "The date from which you want to start getting invoices for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.
",
                    "type": "string",
                  },
                  "date_to": {
                    "docs": "The date you want to stop getting invoices for, in \`YYYY-MM-DD\` format.

⚠️ The number of days between \`date_from\` and \`date_to\` cannot be over 365.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).
",
                    "type": "string",
                  },
                  "link": {
                    "docs": "The fiscal \`link.id\` to use.",
                    "type": "string",
                  },
                  "save_data": {
                    "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                    "type": "optional<boolean>",
                  },
                  "type": "optional<root.EnumInvoiceType>",
                },
              },
              "headers": undefined,
              "name": "InvoicesRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<RetrieveInvoicesResponseItem>",
            },
          },
        },
      },
      "types": {
        "DetailInvoiceResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.InvoiceWithIdSat",
            "root.InvoiceDian",
          ],
        },
        "PatchInvoicesResponseItem": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.InvoiceWithIdSat",
            "root.InvoiceDian",
          ],
        },
        "RetrieveInvoicesResponseItem": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.InvoiceWithIdSat",
            "root.InvoiceDian",
          ],
        },
      },
    },
    "links.yml": {
      "docs": "A **Link** is a set of credentials associated to an end-user's access to an **institution**.

<div style="background-color:#f4f6f8; border-left: 6px solid #808080;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px">
<strong>Example: </strong> The username and password combination used to log in to an online banking application would be a link.
</div>

You will need to register a **Link** before accessing information from that specific end-user, such as account or transaction details.

<div style="background-color:#f4f6f8; border-left: 6px solid #4CAF50;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px">
<strong>Note: </strong> We recommend using our <a href="https://developers.belvo.com/docs/connect-widget" target="_blank">Connect Widget</a> to handle link creation and link status updates.
</div>

You have the possibility to register two types of links:

### Recurrent links (default)

With recurrent links, Belvo automatically refreshes information weekly and notifies you via [Webhooks](https://developers.belvo.com/docs/webhooks) so you always have up-to-date data. Then, when you receive the webhook, you can make GET requests to the List or Detail endpoints to instantly access up-to-date information, without needing to connect to the institution.

<img src="https://files.readme.io/7b6c0d4-Recurrent_Link_FLow.png" alt="fiscal-endpoints" width="950">

You can also make POST calls directly to the institution, as with single links, as soon as the link is created. However, we recommend you follow the flow described above (waiting for the webhook event) for a more optimal experience.

### Single links

Single links are used to perform ad hoc data access to accounts, owners, transactions, and so on. For example, you can use it when you want to do an underwriting process to assess risk before lending money.

For single links, you have to perform POST calls to an institution **every time** you want to access fresh data.

<img src="https://files.readme.io/eda7956-Single_Link_Flow.svg" alt="fiscal-endpoints" width="950">",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Links",
        "endpoints": {
          "ChangeLinkAccessMode": {
            "auth": true,
            "display-name": "Change a link's access mode",
            "docs": "Change a link's access mode from \`single\` to \`recurrent\` or from \`recurrent\` to single.
ℹ️ **Note**: When you change a link from \`single\`\` to \`recurrent\`, they will only be updated the next day at the scheduled interval.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.NotFoundError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "e4bb1afb-4a4f-4dd6-8be0-e615d233185b",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "access_mode": "single",
                },
                "response": {
                  "body": {
                    "access_mode": "recurrent",
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "bcef7f35-67f2-4b19-b009-cb38795faf09",
                    "external_id": "56ab5706-6e00-48a4-91c9-ca55968678d9",
                    "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "institution": "erebor_mx_retail",
                    "institution_user_id": "sooE7XJWEKypZJR603ecaWYk-8Ap0oD8Nr1pBQ4eG9c=",
                    "last_accessed_at": "2019-09-27T13:02:03Z",
                    "refresh_rate": "7d",
                    "status": "valid",
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/api/links/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`link.id\` you want to change the \`access_mode\` for.",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "access_mode": "root.EnumLinkAccessModeRequest",
                },
              },
              "headers": undefined,
              "name": "ChangeAccessMode",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.Link",
            },
          },
          "DestroyLink": {
            "auth": true,
            "display-name": "Delete a link",
            "docs": "Delete a specific link and all associated accounts, transactions, and owners from your Belvo account.
# Deleting links in batches
To delete links in bulk, we recommend looping through the list of links you want to delete and making the delete request.

  > 🚧 **Rate limiting and IP blocking**
  > 
  > An important technical note for performing operations in batches is to take into consideration our rate-limiting: up to 80 requests every 30 seconds. If you exceed this limit, you run the risk of Belvo blocking your IP from making further requests.
  > 
  > For more information, or if your IP address has been blocked, please contact our [support team](https://support.belvo.com/hc/en-us/requests/new).",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/links/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`link.id\` that you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailLink": {
            "auth": true,
            "display-name": "Get a link's details",
            "docs": "Get the details of a specific link.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "access_mode": "recurrent",
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "bcef7f35-67f2-4b19-b009-cb38795faf09",
                    "external_id": "56ab5706-6e00-48a4-91c9-ca55968678d9",
                    "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "institution": "erebor_mx_retail",
                    "institution_user_id": "sooE7XJWEKypZJR603ecaWYk-8Ap0oD8Nr1pBQ4eG9c=",
                    "last_accessed_at": "2019-09-27T13:02:03Z",
                    "refresh_rate": "7d",
                    "status": "valid",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/links/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`link.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailLinkRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.Link",
            },
          },
          "ListLinks": {
            "auth": true,
            "display-name": "List all links",
            "docs": "Get a paginated list of all the existing links in your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "access_mode": "single",
                  "created_at": "2022-05-01",
                  "created_at__gt": "2022-05-05",
                  "created_at__gte": "2022-05-04",
                  "created_at__lt": "2022-04-01",
                  "created_at__lte": "2022-03-30",
                  "created_at__range": "2022-03-03,2022-05-04",
                  "created_by__not_in": "578947e2-3c9a-4401-bbad-59b2f2d2b91b,d3d941ab-4ca5-43c1-8b23-db329ee4cb7e",
                  "external_id": "InternalUser4000",
                  "external_id__in": "InternalUser4000,InternalUser4001",
                  "fields": "link,balance,account",
                  "id": "73694155-b871-41ec-94e3-37d17ff62b5d",
                  "id__in": "73694155-b871-41ec-94e3-37d17ff62b5d,40968d42-7d89-49e3-9931-78baa8e0544e",
                  "institution": "erebor_mx_retail",
                  "institution__in": "erebor_mx_retail,gringotts_co_retail",
                  "institution_user_id": "ezFoxjPDr7YnASnOaft5F3zt7D0kurgDNlLtZFjxUo0=",
                  "institution_user_id__in": "ezFoxjPDr7YnASnOaft5F3zt7D0kurgDNlLtZFjxUo0=,YwuTM0uEEh1BbVgDZBcNpa_-Tm3l2q8ZkZNrlhp-pNA=",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                  "refresh_rate": "24h",
                  "status": "invalid",
                  "status__in": "invalid,unconfirmed",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "access_mode": "recurrent",
                        "created_at": "2022-02-09T08:45:50Z",
                        "created_by": "bcef7f35-67f2-4b19-b009-cb38795faf09",
                        "external_id": "56ab5706-6e00-48a4-91c9-ca55968678d9",
                        "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "institution": "erebor_mx_retail",
                        "institution_user_id": "sooE7XJWEKypZJR603ecaWYk-8Ap0oD8Nr1pBQ4eG9c=",
                        "last_accessed_at": "2019-09-27T13:02:03Z",
                        "refresh_rate": "7d",
                        "status": "valid",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/links",
            "request": {
              "name": "ListLinksRequest",
              "query-parameters": {
                "access_mode": {
                  "docs": "Return links only with this access mode. Can be either \`single\` or \`recurrent\`.",
                  "type": "optional<string>",
                },
                "created_at": {
                  "docs": "Return links that were last updated in Belvo's database on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gt": {
                  "docs": "Return links that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return links that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return links that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return links that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return links that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_by__not_in": {
                  "docs": "Return links that were not created by these Belvo users.",
                  "type": "optional<string>",
                },
                "external_id": {
                  "docs": "Return links with this external ID.",
                  "type": "optional<string>",
                },
                "external_id__in": {
                  "docs": "Return links with these external IDs.",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "id": {
                  "docs": "Return information only for this \`link.id\`.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "Return information only for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "institution": {
                  "docs": "Return links created for this institution (use the Belvo-designated name, such as \`erebor_mx_retail\`).",
                  "type": "optional<string>",
                },
                "institution__in": {
                  "docs": "Return links created for these institutions (use the Belvo-designated name, such as \`erebor_mx_retail\` and \`gringotts_co_retail\`).",
                  "type": "optional<string>",
                },
                "institution_user_id": {
                  "docs": "Return links with this specific institution user ID.",
                  "type": "optional<string>",
                },
                "institution_user_id__in": {
                  "docs": "Return links with these institution user IDs.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
                "refresh_rate": {
                  "docs": "Return links with this refresh rate. Choose between \`6h\`, \`12h\`, \`24h\`, \`7d\`, or \`30d\`.",
                  "type": "optional<string>",
                },
                "status": {
                  "docs": "Return links with this status. Choose between \`valid\`, \`invalid\`, \`unconfirmed\`, or \`token_required\`.",
                  "type": "optional<string>",
                },
                "status__in": {
                  "docs": "Return links with these statuses. Choose between \`valid\`, \`invalid\`, \`unconfirmed\`, or \`token_required\`.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.PaginatedResponseLink",
            },
          },
          "PatchLinks": {
            "auth": true,
            "display-name": "Complete a links request",
            "docs": "Used to resume a Link register session that was paused because an MFA token was required by the institution.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "683005d6-f45c-4adb-b289-f1a12f50f80c",
                  "session": "6e7b283c6efa449c9c028a16b5c249fa",
                  "token": "1234ab",
                },
                "response": {
                  "body": {
                    "access_mode": "recurrent",
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "bcef7f35-67f2-4b19-b009-cb38795faf09",
                    "external_id": "56ab5706-6e00-48a4-91c9-ca55968678d9",
                    "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "institution": "erebor_mx_retail",
                    "institution_user_id": "sooE7XJWEKypZJR603ecaWYk-8Ap0oD8Nr1pBQ4eG9c=",
                    "last_accessed_at": "2019-09-27T13:02:03Z",
                    "refresh_rate": "7d",
                    "status": "valid",
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/api/links",
            "request": {
              "body": "root.PatchBodyWithoutSaveData",
              "name": "PatchLinksRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.Link",
            },
          },
          "RegisterLink": {
            "auth": true,
            "display-name": "Register a new link",
            "docs": "Register a new link with your Belvo account.

<div style="background-color:#f4f6f8; border-left: 6px solid #4CAF50;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px">
<strong>Note: </strong> We recommend using our <a href="https://developers.belvo.com/docs/connect-widget" target="_blank">Connect Widget</a> to handle link creation and link status updates.
</div>
",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "certificate": "1234567890abcd=",
                  "credentials_storage": "store",
                  "external_id": "56ab5706-6e00-48a4-91c9-ca55968678d9",
                  "fetch_historical": true,
                  "institution": "erebor_mx_retail",
                  "password": "password",
                  "password2": "pin",
                  "private_key": "1234567890abcd=",
                  "token": "1234ab",
                  "username": "username",
                  "username2": "secondusername",
                  "username3": "thirdusername",
                  "username_type": "001",
                },
                "response": {
                  "body": {
                    "access_mode": "recurrent",
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "bcef7f35-67f2-4b19-b009-cb38795faf09",
                    "external_id": "56ab5706-6e00-48a4-91c9-ca55968678d9",
                    "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "institution": "erebor_mx_retail",
                    "institution_user_id": "sooE7XJWEKypZJR603ecaWYk-8Ap0oD8Nr1pBQ4eG9c=",
                    "last_accessed_at": "2019-09-27T13:02:03Z",
                    "refresh_rate": "7d",
                    "status": "valid",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/api/links",
            "request": {
              "body": {
                "properties": {
                  "access_mode": "optional<root.EnumLinkAccessModeRequest>",
                  "certificate": {
                    "docs": "For certain fiscal institutions, it is possible to log in using a certificate and a private key, which enables a faster connection to the institution.

Belvo supports a base64 encoded \`certificate\`. If the \`certificate\` parameter is used, you *must* also provide the \`private_key\` parameter.
",
                    "type": "optional<string>",
                  },
                  "credentials_storage": {
                    "docs": "Indicates whether or not to store credentials (and the duration for which to store the credentials). By default, this is set to \`store\`. For links where \`access_mode=recurrent\`, this must be set to \`store\`.

Choose either:
  - \`store\` to store credentials
  - \`nostore\` to not store credentials
  - \`30d\` to store credentials only for 30 days
",
                    "type": "optional<string>",
                  },
                  "external_id": {
                    "docs": "An additional identifier for the link, provided by you, to store in the Belvo database. **Cannot** include any Personal Identifiable Information (PII). **Must** be at least three characters long.

If we identify that the identifier contains PII, we will force a \`null\` value. For more information, see our [Link creation article](https://developers.belvo.com/docs/link-creation-best-practices#adding-your-own-identifier).",
                    "type": "optional<string>",
                  },
                  "fetch_historical": {
                    "docs": "Indicates whether or not to retrieve historical information for the link or not. For links where \`access_mode=single\`, the default is \`false\`. For links where \`access_mode=recurrent\` this is hardcoded to \`true\`.
",
                    "type": "optional<boolean>",
                  },
                  "institution": {
                    "docs": "The Belvo name for the institution.",
                    "type": "string",
                  },
                  "password": {
                    "docs": "The end-user's password used to log in to the institution.

ℹ️ **Note**: You must send through a password for all institutions except for IMSS (\`imss_mx_employment\`).
",
                    "type": "optional<string>",
                  },
                  "password2": {
                    "docs": "The end-user's second password used to log in to the institution.

ℹ️ This is only required by some institutions. To know which institutions require a second password, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the \`form_fields\` array in the response.
",
                    "type": "optional<string>",
                  },
                  "private_key": {
                    "docs": "For certain fiscal institutions, it is possible to log in using a certificate and a private key, which enables a faster connection to the institution.

Belvo supports a base64 encoded \`private_key\`. If the \`private_key\` parameter is used, you *must* also provide the \`certificate\` parameter.
",
                    "type": "optional<string>",
                  },
                  "token": {
                    "docs": "The MFA token required by the bank to log in.

We do not recommend sending the authentication token in the same request as registering the user. See our [Handling multi-factor authentication](https://developers.belvo.com/docs/handling-2-factor-authentication) article for more information and best practices.
",
                    "type": "optional<string>",
                  },
                  "username": {
                    "docs": "The end-user's username (or ID) used to log in to the institution.",
                    "type": "string",
                  },
                  "username2": {
                    "docs": "The end-user's second username (or email address) used to log in to the institution.

ℹ️ This is only required by some institutions. To know which institutions require a second username, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the \`form_fields\` array in the response.
",
                    "type": "optional<string>",
                  },
                  "username3": {
                    "docs": "The end-user's third username used to log in to the institution.

ℹ️ This is only required by some institutions. To know which institutions require a third username, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the \`form_fields\` array in the response.
",
                    "type": "optional<string>",
                  },
                  "username_type": {
                    "docs": "Type of document to be used as a username.

Some banking institutions accept different documents to be used as the \`username\` to login. For example, the *Cédula de Ciudadanía*, *Cédula de Extranjería*, *Pasaporte'*, and so on.

For banks that require a document to log in, you **must** provide the \`username_type\` parameter to specify which document is used when creating the link.

ℹ️ To know which institutions require the \`username_type\` parameter, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the \`form_fields\` array in the response.

For a list of standards codes, see the table below.

| Code | Description |
|-----------|-------|
| \`001\` | Cédula de Ciudadanía |
| \`002\` | Cédula de Extranjería |
| \`003\` | Pasaporte |
| \`004\` | Tarjeta de Identidad |
| \`005\` | Registro Civil |
| \`006\` | Número Identificación Personal |
| \`020\` | NIT |
| \`021\` | NIT Persona Natural |
| \`022\` | NIT Persona Extranjera |
| \`023\` | NIT Persona Jurídica |
| \`024\` | NIT Menores |
| \`025\` | NIT Desasociado |
| \`030\` | Trj. Seguro Social Extranjero |
| \`031\` | Sociedad Extranjera sin NIT en Colombia |
| \`032\` | Fideicomiso |
| \`033\` | RIF Venezuela |
| \`034\` | CIF |
| \`035\` | Número de Identidad |
| \`036\` | RTN |
| \`037\` | Cédula de Identidad |
| \`038\` | DIMEX |
| \`039\` | CED |
| \`040\` | PAS |
| \`041\` | Documento Único de Identidad |
| \`042\` | NIT Salvadoreño |
| \`100\` | Agência e conta |
| \`101\` | Código do operador |
| \`102\` | Cartão de crédito |
| \`103\` | CPF |
",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "LinksRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Created",
              "type": "root.Link",
            },
          },
          "UpdateLink": {
            "auth": true,
            "display-name": "Update a link's credentials",
            "docs": "Update the credentials of a specific link. If the successfully updated link is a recurrent one, we automatically trigger an update of the link. If we find fresh data, you'll [receive historical update](https://developers.belvo.com/docs/webhooks) webhooks.
<div style="background-color:#f4f6f8; border-left: 6px solid #4CAF50;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px"> <strong>Note: </strong> We recommend using our <a href="https://developers.belvo.com/docs/connect-widget" target="_blank">Connect Widget</a> to handle updating <code>invalid</code> or <code>token_required</code> links. </div>
",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.NotFoundError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "certificate": "1234567890abcd=",
                  "password": "password",
                  "password2": "pin",
                  "private_key": "1234567890abcd=",
                  "token": "1234ab",
                  "username_type": "001",
                },
                "response": {
                  "body": {
                    "access_mode": "recurrent",
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "bcef7f35-67f2-4b19-b009-cb38795faf09",
                    "external_id": "56ab5706-6e00-48a4-91c9-ca55968678d9",
                    "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "institution": "erebor_mx_retail",
                    "institution_user_id": "sooE7XJWEKypZJR603ecaWYk-8Ap0oD8Nr1pBQ4eG9c=",
                    "last_accessed_at": "2019-09-27T13:02:03Z",
                    "refresh_rate": "7d",
                    "status": "valid",
                  },
                },
              },
            ],
            "method": "PUT",
            "path": "/api/links/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`link.id\` you want to update.",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "certificate": {
                    "docs": "For certain fiscal institutions, it is possible to log in using a certificate and a private key, which enables a faster connection to the institution.

Belvo supports a base64 encoded \`certificate\`. If the \`certificate\` parameter is used, you *must* also provide the \`private_key\` parameter.
",
                    "type": "optional<string>",
                  },
                  "password": {
                    "docs": "The end-user's password used to log in to the institution.",
                    "type": "string",
                  },
                  "password2": {
                    "docs": "The end-user's second password used to log in to the institution.

ℹ️ This is only required by some institutions. To know which institutions require a second password, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the \`form_fields\` array in the response.
",
                    "type": "optional<string>",
                  },
                  "private_key": {
                    "docs": "For certain fiscal institutions, it is possible to log in using a certificate and a private key, which enables a faster connection to the institution.

Belvo supports a base64 encoded \`private_key\`. If the \`private_key\` parameter is used, you *must* also provide the \`certificate\` parameter.
",
                    "type": "optional<string>",
                  },
                  "token": {
                    "docs": "The MFA token required by the bank to log in.
",
                    "type": "optional<string>",
                  },
                  "username_type": {
                    "docs": "Type of document to be used as a username.

  Some banking institutions accept different documents to be used as the \`username\` to login. For example, the *Cédula de Ciudadanía*, *Cédula de Extranjería*, *Pasaporte'*, and so on.

  For banks that require a document to log in, you **must** provide the \`username_type\` parameter to specify which document is used when creating the link.

  ℹ️ To know which institutions require the \`username_type\` parameter, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the \`form_fields\` array in the response.

  For a list of standards codes, see the table below.

| Code | Description |
|-----------|-------|
| \`001\` | Cédula de Ciudadanía |
| \`002\` | Cédula de Extranjería |
| \`003\` | Pasaporte |
| \`004\` | Tarjeta de Identidad |
| \`005\` | Registro Civil |
| \`006\` | Número Identificación Personal |
| \`020\` | NIT |
| \`021\` | NIT Persona Natural |
| \`022\` | NIT Persona Extranjera |
| \`023\` | NIT Persona Jurídica |
| \`024\` | NIT Menores |
| \`025\` | NIT Desasociado |
| \`030\` | Trj. Seguro Social Extranjero |
| \`031\` | Sociedad Extranjera sin NIT en Colombia |
| \`032\` | Fideicomiso |
| \`033\` | RIF Venezuela |
| \`034\` | CIF |
| \`035\` | Número de Identidad |
| \`036\` | RTN |
| \`037\` | Cédula de Identidad |
| \`038\` | DIMEX |
| \`039\` | CED |
| \`040\` | PAS |
| \`041\` | Documento Único de Identidad |
| \`042\` | NIT Salvadoreño |
| \`100\` | Agência e conta |
| \`101\` | Código do operador |
| \`102\` | Cartão de crédito |
| \`103\` | CPF |
",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "LinksPutRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.Link",
            },
          },
        },
      },
    },
    "owners.yml": {
      "docs": "An **owner** represents the person who has access to a Link and is the owner of all the accounts inside the Link.

You can use this endpoint in order to get useful information about your client, such as:

- their full name
- key contact information
- information about the ID document they used when opening the account

### **🔦 Filterable fields**

Please see the table below for an alphabetized list of fields that you can filter your responses by. For more information on how to use filters, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) article.

| Field         | Available Filters                 |
| ------------- | --------------------------------- |
| \`created_at \` | \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`email\`       | \`=\`                               |
| \`id\`          | \`=\`, \`in\`                         |
| \`link\`        | \`=\`, \`in\`                         |

\`\`\`curl cURL
# Filtering results so that you get the emails of one link:
https://sandbox.belvo.com/api/owners/?email=filtering@belvo.com

\`\`\`
\`\`\`javascript Node
// Filtering results so that you get the emails of one link:
client.owners.list({
  filters: {
    email: "filtering@belvo.com"
  }
})

\`\`\`
\`\`\`python Python
# Filtering results so that you get the emails of one link:
client.Owners.list(email="filtering@belvo.com")

\`\`\`
\`\`\`ruby Ruby
# Filtering results so that you get the emails of one link:
client.owners.list(params: {
  email: "filtering@belvo.com"
})

})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Owners",
        "endpoints": {
          "DestroyOwner": {
            "auth": true,
            "display-name": "Delete an owner",
            "docs": "Delete a specific owner from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/owners/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`owner.id\` that you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailOwner": {
            "auth": true,
            "display-name": "Get an owner's details",
            "docs": "Get the details of a specific owner.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "address": "Carrer de la Llacuna, 162, 08018 Barcelona",
                    "collected_at": "2019-09-27T13:01:41Z",
                    "created_at": "2022-02-09T08:45:50Z",
                    "display_name": "John Doe",
                    "document_id": {
                      "document_number": "235578435-S",
                      "document_type": "CPF",
                    },
                    "email": "johndoe@belvo.com",
                    "first_name": "first_name",
                    "id": "c749315b-eec2-435d-a458-06912878564f",
                    "internal_identification": "7e5838e4",
                    "last_name": "last_name",
                    "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "phone_number": "+52-XXX-XXX-XXXX",
                    "second_last_name": "second_last_name",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/owners/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`owner.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailOwnerRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.Owner",
            },
          },
          "ListOwners": {
            "auth": true,
            "display-name": "List all owners",
            "docs": "Get a paginated list of all existing owners in your Belvo account. We return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "created_at__gt": "2022-05-05",
                  "created_at__gte": "2022-05-04",
                  "created_at__lt": "2022-04-01",
                  "created_at__lte": "2022-03-30",
                  "created_at__range": "2022-03-03,2022-05-04",
                  "display_name__icontains": "Daniela",
                  "email": "lopes.d@gmail.com",
                  "fields": "link,balance,account",
                  "id": "73694155-b871-41ec-94e3-37d17ff62b5d",
                  "id__in": "73694155-b871-41ec-94e3-37d17ff62b5d,40968d42-7d89-49e3-9931-78baa8e0544e",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "link__in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "address": "Carrer de la Llacuna, 162, 08018 Barcelona",
                        "collected_at": "2019-09-27T13:01:41Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "display_name": "John Doe",
                        "document_id": {
                          "document_number": "235578435-S",
                          "document_type": "CPF",
                        },
                        "email": "johndoe@belvo.com",
                        "first_name": "first_name",
                        "id": "c749315b-eec2-435d-a458-06912878564f",
                        "internal_identification": "7e5838e4",
                        "last_name": "last_name",
                        "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "phone_number": "+52-XXX-XXX-XXXX",
                        "second_last_name": "second_last_name",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/owners",
            "request": {
              "name": "ListOwnersRequest",
              "query-parameters": {
                "created_at__gt": {
                  "docs": "Return owners that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return owners that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return owners that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return owners that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return owners that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "display_name__icontains": {
                  "docs": "Return owners whose full display name partially matches your query. For example, \`mar\` will return results for Mark, Maria, Neymar, Remarque, and so on.",
                  "type": "optional<string>",
                },
                "email": {
                  "docs": "Returns owners whose email address match your query.",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "id": {
                  "docs": "Return information only for this \`owner.id\`.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "Return information only for these \`owner.id\`s.",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "Return information only for this \`link.id\`.",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return balances only for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.OwnersPaginatedResponse",
            },
          },
          "PatchOwners": {
            "auth": true,
            "display-name": "Complete an owners request",
            "docs": "Used to resume an Owner retrieve session that was paused because an MFA token was required by the institution.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "683005d6-f45c-4adb-b289-f1a12f50f80c",
                  "save_data": true,
                  "session": "6e7b283c6efa449c9c028a16b5c249fa",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "address": "Carrer de la Llacuna, 162, 08018 Barcelona",
                      "collected_at": "2019-09-27T13:01:41Z",
                      "created_at": "2022-02-09T08:45:50Z",
                      "display_name": "John Doe",
                      "document_id": {
                        "document_number": "235578435-S",
                        "document_type": "CPF",
                      },
                      "email": "johndoe@belvo.com",
                      "first_name": "first_name",
                      "id": "c749315b-eec2-435d-a458-06912878564f",
                      "internal_identification": "7e5838e4",
                      "last_name": "last_name",
                      "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                      "phone_number": "+52-XXX-XXX-XXXX",
                      "second_last_name": "second_last_name",
                    },
                  ],
                },
              },
            ],
            "method": "PATCH",
            "path": "/api/owners",
            "request": {
              "body": "root.PatchBody",
              "name": "PatchOwnersRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<root.Owner>",
            },
          },
          "RetrieveOwners": {
            "auth": true,
            "display-name": "Retrieve owners for a link",
            "docs": "Retrieve owner information from a specific link.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "2ccd5e15-194a-4a19-a45a-e7223c7e6717",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "address": "Carrer de la Llacuna, 162, 08018 Barcelona",
                      "collected_at": "2019-09-27T13:01:41Z",
                      "created_at": "2022-02-09T08:45:50Z",
                      "display_name": "John Doe",
                      "document_id": {
                        "document_number": "235578435-S",
                        "document_type": "CPF",
                      },
                      "email": "johndoe@belvo.com",
                      "first_name": "first_name",
                      "id": "c749315b-eec2-435d-a458-06912878564f",
                      "internal_identification": "7e5838e4",
                      "last_name": "last_name",
                      "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                      "phone_number": "+52-XXX-XXX-XXXX",
                      "second_last_name": "second_last_name",
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/api/owners",
            "request": {
              "body": "root.StandardRequest",
              "name": "RetrieveOwnersRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<root.Owner>",
            },
          },
        },
      },
    },
    "paymentInstitutions.yml": {
      "docs": "A **payment institution** is an entity that Belvo can access information from. You can see a complete list of institutions available for payments by making a List request to this endpoint.
",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Payment Institutions",
        "endpoints": {
          "DetailPaymentInstitution": {
            "auth": true,
            "display-name": "Get details about a payment institution",
            "docs": "Get the details about a specific payment institution",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "a3b92311-1888-449f-acaa-49ae28d68fcd",
                },
                "response": {
                  "body": {
                    "active": true,
                    "country": "BRA",
                    "display_name": "Wakanda National Bank",
                    "form_fields": [
                      {
                        "label": "Document",
                        "length": 6,
                        "name": "username",
                        "optional": false,
                        "placeholder": "Username",
                        "type": "text",
                        "validation": "^.{1,}$",
                        "validation_message": "Invalid client number",
                        "values": [
                          {
                            "code": "001",
                            "label": "Cédula de Ciudadanía",
                            "placeholder": "DEF4444908M22",
                            "validation": "^.{1,}$",
                            "validation_message": "Invalid document number",
                          },
                        ],
                      },
                    ],
                    "icon_logo": "https://belvo-api-media.s3.amazonaws.com/logos/wakandanational_icon_logo.png",
                    "id": "bbaceead-7b96-46d8-9354-38dec9707004",
                    "legal_entity_name": "Wakanda Bank, National Association",
                    "logo": "https://belvo-api-media.s3.amazonaws.com/logos/wakandanational_logo.png",
                    "name": "wakanda_national",
                    "primary_color": "#fdbc24",
                    "text_logo": "https://belvo-api-media.s3.amazonaws.com/logos/wakandanational_text_logo.png",
                    "website": "https://www.wakandanational.com",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/institutions/{id}",
            "path-parameters": {
              "id": {
                "docs": "The payment \`institution.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.PaymentInstitution",
            },
          },
          "ListPaymentInstitutions": {
            "auth": true,
            "display-name": "List all payment institutions",
            "docs": "List all available payment institutions.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "country": "COL",
                  "country__in": "COL,BRA",
                  "created_at": "2022-09-15",
                  "created_at__gt": "2022-09-15",
                  "created_at__gte": "2022-09-15",
                  "created_at__lt": "2022-09-15",
                  "created_at__lte": "2022-09-15",
                  "created_at__range": "2022-09-15,2022-09-20",
                  "page": 1,
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://belvo.com/payments/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "active": true,
                        "country": "BRA",
                        "display_name": "Wakanda National Bank",
                        "form_fields": [
                          {
                            "label": "Document",
                            "length": 6,
                            "name": "username",
                            "optional": false,
                            "placeholder": "Username",
                            "type": "text",
                            "validation": "^.{1,}$",
                            "validation_message": "Invalid client number",
                          },
                        ],
                        "icon_logo": "https://belvo-api-media.s3.amazonaws.com/logos/wakandanational_icon_logo.png",
                        "id": "bbaceead-7b96-46d8-9354-38dec9707004",
                        "legal_entity_name": "Wakanda Bank, National Association",
                        "logo": "https://belvo-api-media.s3.amazonaws.com/logos/wakandanational_logo.png",
                        "name": "wakanda_national",
                        "primary_color": "#fdbc24",
                        "text_logo": "https://belvo-api-media.s3.amazonaws.com/logos/wakandanational_text_logo.png",
                        "website": "https://www.wakandanational.com",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/institutions",
            "request": {
              "name": "ListPaymentInstitutionsRequest",
              "query-parameters": {
                "country": {
                  "docs": "Return institutions only for this country.",
                  "type": "optional<string>",
                },
                "country__in": {
                  "docs": "Return institutions only for one of these countries.",
                  "type": "optional<string>",
                },
                "created_at": {
                  "docs": "Return results only for this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__gt": {
                  "docs": "Return results only after this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return results only for this date and after (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return results only before this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return results only for this date and before (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return results between this date range (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.PaymentsInstitutionsPaginatedResponse",
            },
          },
        },
      },
    },
    "paymentIntents.yml": {
      "docs": "
A **payment intent** is a single point of access to create payments using any payment method offered by Belvo.

A payment intent captures all payment information (such as the amount to be charged, the description of the payment, the provider, and so on) and guides your customers through the payment flow.
",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Payment Intents",
        "endpoints": {
          "CreatePaymentIntent": {
            "auth": true,
            "display-name": "Create a new payment intent",
            "docs": "Create a payment intent.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.InternalServerError",
            ],
            "method": "POST",
            "path": "/payments/payment-intents",
            "request": {
              "body": {
                "properties": {
                  "allowed_payment_method_types": {
                    "docs": "A list of payment method types allowed in this payment intent. For PSE, this value must be set to \`pse\`.",
                    "type": "list<root.EnumPaymentLinkAllowedPaymentMethod>",
                  },
                  "amount": {
                    "docs": "Amount to be paid by your customer. For PSE, you can only send whole numbers. For example: \`350000\`.

**Note:** You can send through this value either as a string or an integer. Regardless of the type you choose to send the \`amount\` as, Belvo returns a string with two decimal points, separated by a period ( \`.\`). For example, \`350000.00\`.
",
                    "type": "CreatePaymentIntentPseAmount",
                  },
                  "customer": {
                    "docs": "Belvo's unique ID to reference the customer.
",
                    "type": "string",
                  },
                  "description": {
                    "docs": "The description of the payment.
",
                    "type": "string",
                  },
                  "metadata": {
                    "docs": "Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number for the payment intent.

⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.",
                    "type": "optional<map<string, unknown>>",
                  },
                  "payment_method_details": "root.PSE",
                  "provider": "root.EnumPaymentLinkProvider",
                },
              },
              "headers": undefined,
              "name": "CreatePaymentIntentPse",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK (Created)",
              "type": "root.PaymentIntentPse",
            },
          },
          "DetailPaymentIntent": {
            "auth": true,
            "display-name": "Get details about a payment intent",
            "docs": "Get the details about a specific payment intent.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "method": "GET",
            "path": "/payments/payment-intents/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`payment-intent.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.PaymentIntentPse",
            },
          },
          "ListPaymentIntents": {
            "auth": true,
            "display-name": "List all payment intents",
            "docs": "List all payment intents associated with your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "amount": "1000.00",
                  "amount__gt": "1000.00",
                  "amount__gte": "1000.00",
                  "amount__lt": "1000.00",
                  "amount__lte": "1000.00",
                  "created_at": "2022-09-15",
                  "created_at__gt": "2022-09-15",
                  "created_at__gte": "2022-09-15",
                  "created_at__lt": "2022-09-15",
                  "created_at__lte": "2022-09-15",
                  "created_at__range": "2022-09-15,2022-09-20",
                  "customer": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d",
                  "customer__in": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264",
                  "id__in": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264",
                  "page": 1,
                  "payment_method_type": "pse",
                  "provider": "payments_way",
                  "status": "SUCCEEDED",
                  "status__in": "PROCESSING,SUCCEEDED",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://api.belvo.com/payments/{endpoint}/?page=2",
                    "previous": "previous",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/payment-intents",
            "request": {
              "name": "ListPaymentIntentsRequest",
              "query-parameters": {
                "amount": {
                  "docs": "Return results only for this value.",
                  "type": "optional<string>",
                },
                "amount__gt": {
                  "docs": "Return results only for more than this amount.",
                  "type": "optional<string>",
                },
                "amount__gte": {
                  "docs": "Return results only for and more than this amount.",
                  "type": "optional<string>",
                },
                "amount__lt": {
                  "docs": "Return results only for less than this amount.",
                  "type": "optional<string>",
                },
                "amount__lte": {
                  "docs": "Return results only for this amount or less.",
                  "type": "optional<string>",
                },
                "created_at": {
                  "docs": "Return results only for this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__gt": {
                  "docs": "Return results only after this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return results only for this date and after (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return results only before this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return results only for this date and before (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return results between this date range (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "customer": {
                  "docs": "The \`customer.id\` you want to get results for.",
                  "type": "optional<string>",
                },
                "customer__in": {
                  "docs": "One or more \`customer.id\`s (comma separated) that you want to get results for.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "One or more \`payment-intent.id\`s (comma separated) that you want to get results for.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "payment_method_type": {
                  "docs": "Return results only for this value.",
                  "type": "optional<string>",
                },
                "provider": {
                  "docs": "Return results only for this value.",
                  "type": "optional<string>",
                },
                "status": {
                  "docs": "Return results only for this value.",
                  "type": "optional<string>",
                },
                "status__in": {
                  "docs": "Return results for listed status.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.PaymentIntentPaginatedResponse",
            },
          },
          "PatchPaymentIntent": {
            "auth": true,
            "display-name": "Complete a payment intent",
            "docs": "Complete a new payment intent.

During the payment intent flow, you need to fill in the payment intent with required information about your customer (their institution, bank account, and login credentials). This is done by sending PATCH requests with the information that Belvo asked you display in each \`next_step\` object. If you need more information on how to complete a payment intent, check our <a href="https://developers.belvo.com/docs/colombia-pse#payment-intents" target="_blank">PSE payment initiation</a> guides for  🇨🇴 Colombia.",
            "errors": [
              "root.BadRequestError",
              "root.NotFoundError",
            ],
            "method": "PATCH",
            "path": "/payments/payment-intents/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`payment-intent.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "confirm": {
                    "docs": "Boolean that indicates whether this request confirms the payment intent. 

**Note:** You'll need to send this parameter set to \`true\` when the payment intent next_step returns \`ready_to_confirm: true\`, meaning the payment intent is ready to be confirmed.",
                    "type": "optional<boolean>",
                  },
                  "payment_method_details": "root.PatchPaymentIntentsBodyPse",
                },
              },
              "headers": undefined,
              "name": "PatchPaymentIntentPse",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK (Created)",
              "type": "root.PaymentIntentPse",
            },
          },
        },
      },
      "types": {
        "CreatePaymentIntentPseAmount": {
          "discriminated": false,
          "docs": "Amount to be paid by your customer. For PSE, you can only send whole numbers. For example: \`350000\`.

**Note:** You can send through this value either as a string or an integer. Regardless of the type you choose to send the \`amount\` as, Belvo returns a string with two decimal points, separated by a period ( \`.\`). For example, \`350000.00\`.
",
          "union": [
            "string",
            "integer",
          ],
        },
      },
    },
    "paymentLinks.yml": {
      "docs": "This is a Payment link.
",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Payment Links",
        "endpoints": {
          "CreatePaymentlink": {
            "auth": true,
            "display-name": "Create a payment link",
            "docs": "Create a new payment link to start a hosted-widget payment.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "request": {
                  "allowed_payment_method_types": [
                    "open_finance",
                  ],
                  "amount": "1234.12",
                  "customer": "06dc2f14-1217-4480-9b36-550a944a39d1",
                  "description": "Shoe payment",
                  "expires_in": "7d",
                  "payment_method_details": {
                    "open_finance": {
                      "beneficiary_bank_account": "a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc",
                      "callback_url": "https://www.acmecorp.com/checkout/3487321",
                    },
                  },
                  "provider": "belvo",
                },
                "response": {
                  "body": {
                    "access_token": "YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU",
                    "callback_urls": {
                      "cancel": "https://www.acmecorp.com/checkout/3487548/cancel",
                      "success": "https://www.acmecorp.com/checkout/3487548/success",
                    },
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "62053a72-e2d5-4c95-a578-6b16616900ac",
                    "expires_at": "2023-02-09T08:45:50Z",
                    "expires_in": "7d",
                    "id": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                    "payment_url": "https://pay.belvo.io/YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU",
                    "status": "ACTIVE",
                    "updated_at": "2022-02-09T08:45:50Z",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/payments/payment-links",
            "request": {
              "body": "CreatePaymentlinkRequest",
            },
            "response": {
              "docs": "OK (Created)",
              "type": "CreatePaymentlinkResponse",
            },
          },
          "DetailCreatePaymentlink": {
            "auth": true,
            "display-name": "Get details about a payment link",
            "docs": "Get the details about a payment link.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "access_token": "YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU",
                },
                "response": {
                  "body": {
                    "access_token": "YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU",
                    "callback_urls": {
                      "cancel": "https://www.acmecorp.com/checkout/3487548/cancel",
                      "success": "https://www.acmecorp.com/checkout/3487548/success",
                    },
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "62053a72-e2d5-4c95-a578-6b16616900ac",
                    "expires_at": "2023-02-09T08:45:50Z",
                    "expires_in": "7d",
                    "id": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                    "payment_url": "https://pay.belvo.io/YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU",
                    "status": "ACTIVE",
                    "updated_at": "2022-02-09T08:45:50Z",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/payment-links/{access_token}",
            "path-parameters": {
              "access_token": {
                "docs": "The \`access_token\` of the payment link you want to get detailed information about. 

**Note:** You can retrieve the \`access_token\` for a payment link by making a [GET List all payment links](https://developers.belvo.com/reference/listpaymentlinks) request.",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK (Created)",
              "type": "DetailCreatePaymentlinkResponse",
            },
          },
          "ListPaymentLinks": {
            "auth": true,
            "display-name": "List all payment links",
            "docs": "List all payment links associated with your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "created_at": "2022-09-15",
                  "created_at__gt": "2022-09-15",
                  "created_at__gte": "2022-09-15",
                  "created_at__lt": "2022-09-15",
                  "created_at__lte": "2022-09-15",
                  "created_at__range": "2022-09-15,2022-09-20",
                  "page": 1,
                  "page_size": 100,
                  "search": "trai",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://api.belvo.com/payments/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "access_token": "YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU",
                        "callback_urls": {
                          "cancel": "https://www.acmecorp.com/checkout/3487548/cancel",
                          "success": "https://www.acmecorp.com/checkout/3487548/success",
                        },
                        "created_at": "2022-02-09T08:45:50Z",
                        "created_by": "62053a72-e2d5-4c95-a578-6b16616900ac",
                        "expires_at": "2023-02-09T08:45:50Z",
                        "expires_in": "7d",
                        "id": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                        "payment_intent": "b7dd85b1-671e-45c7-aba6-b4b37a8fc0c2",
                        "payment_url": "https://pay.belvo.io/YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU",
                        "status": "ACTIVE",
                        "updated_at": "2022-02-09T08:45:50Z",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/payment-links",
            "request": {
              "name": "ListPaymentLinksRequest",
              "query-parameters": {
                "created_at": {
                  "docs": "Return results only for this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__gt": {
                  "docs": "Return results only after this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return results only for this date and after (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return results only before this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return results only for this date and before (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return results between this date range (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "ordering": {
                  "docs": "Return results in a specified time order. Can be either:

  - \`created_at\` returns payment links from newest to oldest (in ascending order).
  - \`-created_at\` returns payment links from oldest to newest (in descending order).",
                  "type": "optional<ListPaymentLinksRequestOrdering>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page.

ℹ️ The minimum number of results returned per page is 1 and the maximum is 100. If you enter a value greater than 100, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
                "search": {
                  "docs": "Return results for one or more payment links that match the description you searched for. 

**Note:** This filter supports both full and partial search queries, with a minimum of three characters required. For example, searching for \`trai\` may match the following values:

  - \`Awesome training sneakers\` 
  - \`Training equipment\`",
                  "type": "optional<string>",
                },
                "status": {
                  "docs": "Return payment links with this status. Can be either \`ACTIVE\` or \`INACTIVE\`.",
                  "type": "optional<ListPaymentLinksRequestStatus>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.PaymentLinkPaginatedResponse",
            },
          },
        },
      },
      "types": {
        "CreatePaymentlinkRequest": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.CreatePaymentLinkOfpi",
            "root.CreatePaymentLinkPse",
          ],
        },
        "CreatePaymentlinkResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.PaymentLinkOfpi",
            "root.PaymentLinkPse",
          ],
        },
        "DetailCreatePaymentlinkResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.PaymentLinkOfpi",
            "root.PaymentLinkPse",
          ],
        },
        "ListPaymentLinksRequestOrdering": {
          "enum": [
            {
              "name": "Ascending",
              "value": "created_at",
            },
            {
              "name": "Descending",
              "value": "-created_at",
            },
          ],
        },
        "ListPaymentLinksRequestStatus": {
          "enum": [
            "ACTIVE",
            "INACTIVE",
          ],
        },
      },
    },
    "paymentTransactions.yml": {
      "docs": "Each time you receive an inflow payment from your customer, a **transaction** is created in the Belvo database.

You can use the Payment Transactions resource in order to get useful information about a transaction as well as the specific charge associated with it.
",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Payment Transactions",
        "endpoints": {
          "DetailPaymentTransactions": {
            "auth": true,
            "display-name": "Get details about a payment transaction",
            "docs": "Get the details about a specific payment transaction.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "a3b92311-1888-449f-acaa-49ae28d68fcd",
                },
                "response": {
                  "body": {
                    "amount": "1020.00",
                    "beneficiary": "a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc",
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                    "currency": "BRL",
                    "customer": "9eebd63b-3339-44a9-8a5a-72bb6cb2f310",
                    "description": "Training shoes",
                    "id": "fd0f3303-cafb-47ea-9753-21155cb144ab",
                    "payer": {
                      "payer": {
                        "key": "value",
                      },
                    },
                    "payment_intent": "004a28bb-fac2-4172-884b-5b6ea15314ad",
                    "transaction_type": "INFLOW",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/transactions/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`transaction.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.PaymentTransaction",
            },
          },
          "ListPaymentTransactions": {
            "auth": true,
            "display-name": "List all payment transactions",
            "docs": "List all payment transactions associated with your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "amount": "1000.00",
                  "amount__gt": "1000.00",
                  "amount__gte": "1000.00",
                  "amount__lt": "1000.00",
                  "amount__lte": "1000.00",
                  "amount__range": "1001.00,2000.00",
                  "beneficiary": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d",
                  "beneficiary__in": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264",
                  "charge": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d",
                  "charge__in": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264",
                  "created_at": "2022-09-15",
                  "created_at__gt": "2022-09-15",
                  "created_at__gte": "2022-09-15",
                  "created_at__lt": "2022-09-15",
                  "created_at__lte": "2022-09-15",
                  "created_at__range": "2022-09-15,2022-09-20",
                  "currency": "COP",
                  "description": "Training shoes",
                  "id__in": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264",
                  "page": 1,
                  "payer": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d",
                  "payer__in": "24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264",
                  "transaction__type": "INFLOW",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://api.belvo.com/payments/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "amount": "1020.00",
                        "beneficiary": "a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc",
                        "created_at": "2022-02-09T08:45:50Z",
                        "created_by": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                        "currency": "BRL",
                        "customer": "9eebd63b-3339-44a9-8a5a-72bb6cb2f310",
                        "description": "Training shoes",
                        "id": "fd0f3303-cafb-47ea-9753-21155cb144ab",
                        "payer": {},
                        "payment_intent": "004a28bb-fac2-4172-884b-5b6ea15314ad",
                        "transaction_type": "INFLOW",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/transactions",
            "request": {
              "name": "ListPaymentTransactionsRequest",
              "query-parameters": {
                "amount": {
                  "docs": "Return results only for this value.",
                  "type": "optional<string>",
                },
                "amount__gt": {
                  "docs": "Return results only for more than this amount.",
                  "type": "optional<string>",
                },
                "amount__gte": {
                  "docs": "Return results only for and more than this amount.",
                  "type": "optional<string>",
                },
                "amount__lt": {
                  "docs": "Return results only for less than this amount.",
                  "type": "optional<string>",
                },
                "amount__lte": {
                  "docs": "Return results only for this amount or less.",
                  "type": "optional<string>",
                },
                "amount__range": {
                  "docs": "Return results between this amount range",
                  "type": "optional<string>",
                },
                "beneficiary": {
                  "docs": "The \`beneficiary.id\` you want to get results for.",
                  "type": "optional<string>",
                },
                "beneficiary__in": {
                  "docs": "One or more \`beneficiary.id\`s (comma separated) that you want to get results for.",
                  "type": "optional<string>",
                },
                "charge": {
                  "docs": "The \`charge.id\` you want to get results for.",
                  "type": "optional<string>",
                },
                "charge__in": {
                  "docs": "One or more \`charge.id\`s (comma separated) that you want to get results for.",
                  "type": "optional<string>",
                },
                "created_at": {
                  "docs": "Return results only for this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__gt": {
                  "docs": "Return results only after this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return results only for this date and after (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return results only before this date (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return results only for this date and before (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return results between this date range (in \`YYYY-MM-DD\` format).",
                  "type": "optional<string>",
                },
                "currency": {
                  "docs": "Return results for a matched value type.",
                  "type": "optional<string>",
                },
                "description": {
                  "docs": "Return results for a matched value type.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "One or more payment \`transaction.id\`s (comma separated) that you want to get results for.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "payer": {
                  "docs": "The payer's \`bank-account.id\` you want to get results for.",
                  "type": "optional<string>",
                },
                "payer__in": {
                  "docs": "One or more payer \`bank-account.id\`s (comma separated) that you want to get results for.",
                  "type": "optional<string>",
                },
                "transaction__type": {
                  "docs": "Return results for a matched value type.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.PaymentsTransactionsPaginatedResponse",
            },
          },
        },
      },
    },
    "paymentWebhooks.yml": {
      "docs": "Registering a webhook will let you know about any relevant updates that occur during the payment process. To set up a webhook, you need to make a [POST Register a new payment webhook](https://api.belvo.com/payments/webhooks/) request, providing some key details such as the name of the webhook and a URL where webhook events should be sent to.

",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Payment Webhooks",
        "endpoints": {
          "DeletePaymentWebhooks": {
            "auth": true,
            "display-name": "Delete a payment webhook",
            "docs": "Delete a specific payment webhook from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/payments/webhooks/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`webhook.id\` that you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailPaymentWebhooks": {
            "auth": true,
            "display-name": "Get details about a payment webhook",
            "docs": "Get the details about a specific payment webhook.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "a3b92311-1888-449f-acaa-49ae28d68fcd",
                },
                "response": {
                  "body": {
                    "auth_header": "Authorization",
                    "auth_token": "*******",
                    "created_at": "2022-02-09T08:45:50Z",
                    "created_by": "38322582-7c76-4775-abe8-0fb2bdeb8204",
                    "id": "32ab6809-6253-4fb0-be0f-94cce6ebb692",
                    "name": {
                      "key": "value",
                    },
                    "url": "https://mycompany.com/security/webhook",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/webhooks/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`webhook.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.PaymentWebhook",
            },
          },
          "ListPaymentWebhooks": {
            "auth": true,
            "display-name": "List all payment webhooks",
            "docs": "List all payment webhooks associated with your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://api.belvo.com/payments/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "auth_header": "Authorization",
                        "auth_token": "*******",
                        "created_at": "2022-02-09T08:45:50Z",
                        "created_by": "38322582-7c76-4775-abe8-0fb2bdeb8204",
                        "id": "32ab6809-6253-4fb0-be0f-94cce6ebb692",
                        "name": {
                          "key": "value",
                        },
                        "url": "https://mycompany.com/security/webhook",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/webhooks",
            "response": {
              "docs": "OK",
              "type": "root.PaymentsWebhooksPaginatedResponse",
            },
          },
          "RegisterPaymentWebhook": {
            "auth": true,
            "display-name": "Register a new payment webhook",
            "docs": "Register a new payments webhook for your Belvo account.
",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "request": {
                  "auth_header": "Authorization",
                  "auth_token": "Bearer hv7alD71j0dzXf09iKfg7u",
                  "name": "Your webhook name",
                  "url": "https://mycompany.com/security/webhook",
                },
                "response": {
                  "body": [
                    {
                      "auth_header": "Authorization",
                      "auth_token": "*******",
                      "created_at": "2022-02-09T08:45:50Z",
                      "created_by": "38322582-7c76-4775-abe8-0fb2bdeb8204",
                      "id": "32ab6809-6253-4fb0-be0f-94cce6ebb692",
                      "name": {
                        "key": "value",
                      },
                      "url": "https://mycompany.com/security/webhook",
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/payments/webhooks",
            "request": {
              "body": {
                "properties": {
                  "auth_header": {
                    "docs": "The authentication header for the request. **Must** be set to \`Authorization\`.",
                    "type": "optional<string>",
                  },
                  "auth_token": {
                    "docs": "The authentication token you need to send webhook events. Can be either:


  - \`Bearer\` and a token (for Bearer authentication). 
  - \`Basic\` and a base64-encoded username:password string (for Basic authentication).",
                    "type": "optional<string>",
                  },
                  "name": {
                    "docs": "The name you want to provide to identify the webhook.",
                    "type": "string",
                  },
                  "url": {
                    "docs": "The URL where webhook events should be sent to.",
                    "type": "string",
                  },
                },
              },
              "headers": undefined,
              "name": "PaymentWebhookRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Ok",
              "type": "list<root.PaymentWebhook>",
            },
          },
        },
      },
    },
    "receivableTransactions.yml": {
      "docs": "With our receivable transactions resource, you can gain access to every transaction processed by the end user (business) conducted through a POS terminal. For each transaction, we return the:

- gross and net amounts
- type of card used
- fees applied to the transaction
- and more!",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Receivable Transactions",
        "endpoints": {
          "DestroyReceivableTransaction": {
            "auth": true,
            "display-name": "Delete a receivable transaction",
            "docs": "Delete a specific receivable transaction from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/receivables/transactions/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`transaction.id\` that you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailReceivableTransaction": {
            "auth": true,
            "display-name": "Get a receivable transaction's details",
            "docs": "Get the details of a specific receivable transaction.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "account": {
                      "id": "a7a3104c-5a3c-4536-81e1-14523097f645",
                      "institution": {
                        "name": "erebor_mx_retail",
                        "type": "bank",
                      },
                    },
                    "collected_at": "2020-04-23T21:32:55Z",
                    "created_at": "2020-04-23T21:30:20Z",
                    "currency": "BRL",
                    "fees": [
                      {
                        "type": "TRANSACTION_FEE",
                        "value": 2.21,
                      },
                    ],
                    "gross_amount": 106.7,
                    "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "institution_transaction_id": "134532345",
                    "net_amount": 104.58,
                    "number_of_installments": {
                      "paid": 1,
                      "total": 2,
                    },
                    "status": "APPROVED",
                    "type": "MASTERCARD_CREDIT",
                    "value_date": "2022-01-16",
                    "value_hour": "19:47",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/receivables/transactions/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`transaction.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailReceivableTransactionRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.ReceivablesTransaction",
            },
          },
          "ListReceivableTransactions": {
            "auth": true,
            "display-name": "List all receivable transactions",
            "docs": "Get a paginated list of all the existing receivable transactions in your Belvo account. We return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "account": "d979df3a-5d0f-4cc9-9bd4-b75c28b45963",
                  "account__in": "24ccab1d-3a86-4136-a6eb-e04bf52b356f,beb2b197-3cf7-428d-bef3-f415c0d57509",
                  "created_at__gt": "2022-05-05",
                  "created_at__gte": "2022-05-04",
                  "created_at__lt": "2022-04-01",
                  "created_at__lte": "2022-03-30",
                  "created_at__range": "2022-03-03,2022-05-04",
                  "fields": "link,balance,account",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "link__in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                  "value_date": "2022-05-05",
                  "value_date__gt": "2022-05-06",
                  "value_date__gte": "2022-05-04",
                  "value_date__lt": "2022-03-02",
                  "value_date__lte": "2022-03-01",
                  "value_date__range": "2022-03-01,2022-05-06",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "account": {
                          "id": "a7a3104c-5a3c-4536-81e1-14523097f645",
                          "institution": {
                            "name": "erebor_mx_retail",
                          },
                        },
                        "collected_at": "2020-04-23T21:32:55Z",
                        "created_at": "2020-04-23T21:30:20Z",
                        "currency": "BRL",
                        "fees": [
                          {
                            "value": 2.21,
                          },
                        ],
                        "gross_amount": 106.7,
                        "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "institution_transaction_id": "134532345",
                        "net_amount": 104.58,
                        "number_of_installments": {
                          "paid": 1,
                          "total": 2,
                        },
                        "status": "APPROVED",
                        "type": "MASTERCARD_CREDIT",
                        "value_date": "2022-01-16",
                        "value_hour": "19:47",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/receivables/transactions",
            "request": {
              "name": "ListReceivableTransactionsRequest",
              "query-parameters": {
                "account": {
                  "docs": "The \`account.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "account__in": {
                  "docs": "Return receivable transactions only for these \`account.id\`s.",
                  "type": "optional<string>",
                },
                "created_at__gt": {
                  "docs": "Return receivable transactions that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return receivable transactions that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return receivable transactions that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return receivable transactions that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return receivable transactions that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return information for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
                "value_date": {
                  "docs": "Return receivable transactions for exactly this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__gt": {
                  "docs": "Return receivable transactions for after this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__gte": {
                  "docs": "Return receivable transactions for this date or later (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__lt": {
                  "docs": "Return receivable transactions for before this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__lte": {
                  "docs": "Return receivable transactions for this date or earlier (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__range": {
                  "docs": "Return receivable transactions for this date range (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.ReceivablesTransactionsPaginatedResponse",
            },
          },
          "RetrieveReceivableTransactions": {
            "auth": true,
            "display-name": "Retrieve receivable transactions for a link",
            "docs": "Retrieve all receivable transactions for an existing link.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "date_from": "2020-08-05",
                  "date_to": "2020-10-05",
                  "link": "2ccd5e15-194a-4a19-a45a-e7223c7e6717",
                  "token": "1234ab",
                },
                "response": {
                  "body": {
                    "account": {
                      "id": "a7a3104c-5a3c-4536-81e1-14523097f645",
                      "institution": {
                        "name": "erebor_mx_retail",
                        "type": "bank",
                      },
                    },
                    "collected_at": "2020-04-23T21:32:55Z",
                    "created_at": "2020-04-23T21:30:20Z",
                    "currency": "BRL",
                    "fees": [
                      {
                        "type": "TRANSACTION_FEE",
                        "value": 2.21,
                      },
                    ],
                    "gross_amount": 106.7,
                    "id": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "institution_transaction_id": "134532345",
                    "net_amount": 104.58,
                    "number_of_installments": {
                      "paid": 1,
                      "total": 2,
                    },
                    "status": "APPROVED",
                    "type": "MASTERCARD_CREDIT",
                    "value_date": "2022-01-16",
                    "value_hour": "19:47",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/receivables/transactions",
            "request": {
              "body": {
                "properties": {
                  "date_from": {
                    "docs": "The date from which you want to start getting transactions for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
                    "type": "string",
                  },
                  "date_to": {
                    "docs": "The date you want to stop getting transactions for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
                    "type": "string",
                  },
                  "link": {
                    "docs": "The \`link.id\` that you want to get information for.",
                    "type": "string",
                  },
                  "save_data": {
                    "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                    "type": "optional<boolean>",
                  },
                  "token": {
                    "docs": "The OTP token generated by the bank.",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "ReceivableTransactionRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "root.ReceivablesTransaction",
            },
          },
        },
      },
    },
    "recurringExpenses.yml": {
      "docs": "Belvo's Recurring Expenses API allows you to identify a user's regular payments for subscription services, such as Netflix or gym memberships, as well as utility payments, such as electricity or phone bills. We return information for up to 365 days.

<div style="background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px">
    <strong>Info: </strong> The recurring expenses resource is <b>only</b> available for Checking and Savings accounts associated with banking links.
 </div>

 ### **🔦 Filterable fields**

Please see the table below for an alphabetized list of fields that you can filter your responses by. For more information on how to use filters, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) article.

| Field     | Available Filters |
| --------- | ----------------- |
| \`account\` | \`=\`, \`in\`         |
| \`id\`      | \`=\`, \`in\`         |
| \`link\`    | \`=\`, \`in\`         |

\`\`\`curl cURL
# Filtering results so that you get the recurring expenses of one account:
https://sandbox.belvo.com/api/recurring-expenses/?account=89c91f42-df34-4c5d-a4f1-6e1e40438af4

\`\`\`
\`\`\`javascript Node
// Filtering results so that you get the recurring expenses of one account:
client. recurringExpenses.list({
  filters: {
    account: "89c91f42-df34-4c5d-a4f1-6e1e40438af4"
  }
})

\`\`\`
\`\`\`python Python
# Filtering results so that you get the recurring expenses of one account:
client. RecurringExpenses.list(account="89c91f42-df34-4c5d-a4f1-6e1e40438af4")

\`\`\`
\`\`\`ruby Ruby
# Filtering results so that you get the recurring expenses of one account:
client. recurring_expenses.list(params: {
  account: "89c91f42-df34-4c5d-a4f1-6e1e40438af4"
})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Recurring Expenses",
        "endpoints": {
          "DestroyRecurringExpense": {
            "auth": true,
            "display-name": "Delete a recurring expense",
            "docs": "Delete a specific recurring expense from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/recurring-expenses/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`recurring-expenses.id\` that you want to delete",
                "type": "string",
              },
            },
          },
          "DetailRecurringExpense": {
            "auth": true,
            "display-name": "Get a recurring expense's details",
            "docs": "Get the details of a specific recurring expense.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": [
                    {
                      "account": {
                        "balance": {
                          "current": 5874.13,
                        },
                        "balance_type": "ASSET",
                        "bank_product_id": "bank_product_id",
                        "category": "CHECKING_ACCOUNT",
                        "collected_at": "2019-09-27T13:01:41Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "credit_data": {
                          "collected_at": "2019-09-27T13:01:41Z",
                          "credit_limit": 192000,
                          "cutting_date": "2019-12-11",
                          "interest_rate": 4,
                          "minimum_payment": 2400.3,
                          "next_payment_date": "2019-12-13",
                          "no_interest_payment": 2690.83,
                        },
                        "currency": "MXN",
                        "funds_data": [
                          {
                            "collected_at": "2020-04-23T21:32:55Z",
                          },
                        ],
                        "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                        "institution": {
                          "name": "erebor_mx_retail",
                        },
                        "internal_identification": "internal_identification",
                        "last_accessed_at": "2021-03-09T10:28:40Z",
                        "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "loan_data": {
                          "collected_at": "2022-02-09T08:45:50Z",
                          "contract_end_date": "2027-10-01",
                          "monthly_payment": 1000,
                          "outstanding_balance": 182000,
                          "principal": 192000,
                        },
                        "name": "Cuenta Perfiles- M.N. - MXN-666",
                        "number": "4057068115181",
                        "public_identification_name": "CLABE",
                        "public_identification_value": "150194683119900273",
                        "receivables_data": {
                          "anticipated": 1393.46,
                          "available": 800.37,
                          "collected_at": "2022-02-09T08:45:50Z",
                          "current": 2193.83,
                        },
                        "type": "Cuentas de efectivo",
                      },
                      "average_transaction_amount": 32.9,
                      "category": "Bills & Utilities",
                      "days_since_last_transaction": 5,
                      "frequency": "MONTHLY",
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "median_transaction_amount": 32.9,
                      "name": "Netflix",
                      "payment_type": "SUBSCRIPTION",
                      "transactions": [
                        {
                          "amount": 2145.45,
                          "description": "Netflix.com/march",
                          "value_date": "2019-10-23",
                        },
                      ],
                    },
                  ],
                },
              },
            ],
            "method": "GET",
            "path": "/api/recurring-expenses/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`recurring-expenses.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailRecurringExpenseRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "list<root.RecurringExpenses>",
            },
          },
          "ListRecurringExpenses": {
            "auth": true,
            "display-name": "List all recurring expenses",
            "docs": "Get a paginated list of all recurring expenses in your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "account": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "account_in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,d3d941ab-4ca5-43c1-8b23-db329ee4cb7e",
                  "fields": "link,balance,account",
                  "id": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73",
                  "id__in": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "link__in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "account": {
                          "balance": {
                            "current": 5874.13,
                          },
                          "balance_type": "ASSET",
                          "category": "CHECKING_ACCOUNT",
                          "collected_at": "2019-09-27T13:01:41Z",
                          "created_at": "2022-02-09T08:45:50Z",
                          "currency": "MXN",
                          "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                          "last_accessed_at": "2021-03-09T10:28:40Z",
                          "loan_data": {
                            "collected_at": "2022-02-09T08:45:50Z",
                            "contract_end_date": "2027-10-01",
                            "monthly_payment": 1000,
                            "outstanding_balance": 182000,
                            "principal": 192000,
                          },
                          "name": "Cuenta Perfiles- M.N. - MXN-666",
                          "number": "4057068115181",
                          "public_identification_name": "CLABE",
                          "public_identification_value": "150194683119900273",
                          "type": "Cuentas de efectivo",
                        },
                        "average_transaction_amount": 32.9,
                        "category": "Bills & Utilities",
                        "days_since_last_transaction": 5,
                        "frequency": "MONTHLY",
                        "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                        "median_transaction_amount": 32.9,
                        "name": "Netflix",
                        "payment_type": "SUBSCRIPTION",
                        "transactions": [
                          {
                            "amount": 2145.45,
                            "description": "Netflix.com/march",
                            "value_date": "2019-10-23",
                          },
                        ],
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/recurring-expenses",
            "request": {
              "name": "ListRecurringExpensesRequest",
              "query-parameters": {
                "account": {
                  "docs": "The \`account.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "account_in": {
                  "docs": "Return recurring expenses for these \`accound.id\`s.",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "id": {
                  "docs": "Return information for this \`recurring-expense.id\`.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "Return information for these \`recurring-expense.id\`s.",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return information for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.RecurringExpensesPaginatedResponse",
            },
          },
          "PatchRecurringExpenses": {
            "auth": true,
            "display-name": "Complete a recurring expenses request",
            "docs": "Used to resume an Recurring Expenses retrieve session that was paused because an MFA token was required by the institution.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "683005d6-f45c-4adb-b289-f1a12f50f80c",
                  "save_data": true,
                  "session": "6e7b283c6efa449c9c028a16b5c249fa",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "account": {
                        "balance": {
                          "current": 5874.13,
                        },
                        "balance_type": "ASSET",
                        "bank_product_id": "bank_product_id",
                        "category": "CHECKING_ACCOUNT",
                        "collected_at": "2019-09-27T13:01:41Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "credit_data": {
                          "collected_at": "2019-09-27T13:01:41Z",
                          "credit_limit": 192000,
                          "cutting_date": "2019-12-11",
                          "interest_rate": 4,
                          "minimum_payment": 2400.3,
                          "next_payment_date": "2019-12-13",
                          "no_interest_payment": 2690.83,
                        },
                        "currency": "MXN",
                        "funds_data": [
                          {
                            "collected_at": "2020-04-23T21:32:55Z",
                          },
                        ],
                        "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                        "institution": {
                          "name": "erebor_mx_retail",
                        },
                        "internal_identification": "internal_identification",
                        "last_accessed_at": "2021-03-09T10:28:40Z",
                        "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "loan_data": {
                          "collected_at": "2022-02-09T08:45:50Z",
                          "contract_end_date": "2027-10-01",
                          "monthly_payment": 1000,
                          "outstanding_balance": 182000,
                          "principal": 192000,
                        },
                        "name": "Cuenta Perfiles- M.N. - MXN-666",
                        "number": "4057068115181",
                        "public_identification_name": "CLABE",
                        "public_identification_value": "150194683119900273",
                        "receivables_data": {
                          "anticipated": 1393.46,
                          "available": 800.37,
                          "collected_at": "2022-02-09T08:45:50Z",
                          "current": 2193.83,
                        },
                        "type": "Cuentas de efectivo",
                      },
                      "average_transaction_amount": 32.9,
                      "category": "Bills & Utilities",
                      "days_since_last_transaction": 5,
                      "frequency": "MONTHLY",
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "median_transaction_amount": 32.9,
                      "name": "Netflix",
                      "payment_type": "SUBSCRIPTION",
                      "transactions": [
                        {
                          "amount": 2145.45,
                          "description": "Netflix.com/march",
                          "value_date": "2019-10-23",
                        },
                      ],
                    },
                  ],
                },
              },
            ],
            "method": "PATCH",
            "path": "/api/recurring-expenses",
            "request": {
              "body": "root.PatchBody",
              "name": "PatchRecurringExpensesRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when save_data=false)",
              "type": "list<root.RecurringExpenses>",
            },
          },
          "RetrieveRecurringExpenses": {
            "auth": true,
            "display-name": "Retrieve recurring expenses for a link",
            "docs": "Retrieve recurring expense insights for <b>checking and savings accounts</b> from a specific link. You can receive insights for a period of up to 365 days, depending on the transaction history available for each [bank](https://developers.belvo.com/docs/institution).",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "date_from": "2022-08-01",
                  "date_to": "2022-12-30",
                  "link": "2ccd5e15-194a-4a19-a45a-e7223c7e6717",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "account": {
                        "balance": {
                          "current": 5874.13,
                        },
                        "balance_type": "ASSET",
                        "bank_product_id": "bank_product_id",
                        "category": "CHECKING_ACCOUNT",
                        "collected_at": "2019-09-27T13:01:41Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "credit_data": {
                          "collected_at": "2019-09-27T13:01:41Z",
                          "credit_limit": 192000,
                          "cutting_date": "2019-12-11",
                          "interest_rate": 4,
                          "minimum_payment": 2400.3,
                          "next_payment_date": "2019-12-13",
                          "no_interest_payment": 2690.83,
                        },
                        "currency": "MXN",
                        "funds_data": [
                          {
                            "collected_at": "2020-04-23T21:32:55Z",
                          },
                        ],
                        "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                        "institution": {
                          "name": "erebor_mx_retail",
                        },
                        "internal_identification": "internal_identification",
                        "last_accessed_at": "2021-03-09T10:28:40Z",
                        "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "loan_data": {
                          "collected_at": "2022-02-09T08:45:50Z",
                          "contract_end_date": "2027-10-01",
                          "monthly_payment": 1000,
                          "outstanding_balance": 182000,
                          "principal": 192000,
                        },
                        "name": "Cuenta Perfiles- M.N. - MXN-666",
                        "number": "4057068115181",
                        "public_identification_name": "CLABE",
                        "public_identification_value": "150194683119900273",
                        "receivables_data": {
                          "anticipated": 1393.46,
                          "available": 800.37,
                          "collected_at": "2022-02-09T08:45:50Z",
                          "current": 2193.83,
                        },
                        "type": "Cuentas de efectivo",
                      },
                      "average_transaction_amount": 32.9,
                      "category": "Bills & Utilities",
                      "days_since_last_transaction": 5,
                      "frequency": "MONTHLY",
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "median_transaction_amount": 32.9,
                      "name": "Netflix",
                      "payment_type": "SUBSCRIPTION",
                      "transactions": [
                        {
                          "amount": 2145.45,
                          "description": "Netflix.com/march",
                          "value_date": "2019-10-23",
                        },
                      ],
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/api/recurring-expenses",
            "request": {
              "body": {
                "properties": {
                  "date_from": {
                    "docs": "The date from which you want to start getting recurring expenses for, in \`YYYY-MM-DD\` format, within the last 365 days. When you use this parameter, you must also send \`date_to\`.



⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
                    "type": "optional<string>",
                  },
                  "date_to": {
                    "docs": "The date you want to stop getting recurring expenses for, in \`YYYY-MM-DD\` format, within the last 365 days. When you use this parameter, you must also send \`date_from\`.



⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
                    "type": "optional<string>",
                  },
                  "link": {
                    "docs": "The \`link.id\` that you want to get information for.",
                    "type": "string",
                  },
                  "save_data": {
                    "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                    "type": "optional<boolean>",
                  },
                  "token": {
                    "docs": "The OTP token generated by the bank.",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "RecurringExpensesRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when save_data=false)",
              "type": "list<root.RecurringExpenses>",
            },
          },
        },
      },
    },
    "riskInsights.yml": {
      "docs": "Belvo's Risk Insights endpoint exposes a set of features that can be used to improve your company's credit risk and opportunity decisions. This set of features can be used as building blocks to create or iterate on your credit score using transactional banking data to improve the predictive power of your models. You can use these components as you require and make the most sense for your specific use case. 

We take up to 90 days of transactional data from the user's checking, savings, loans, and credit card accounts to calculate the risk insights.

If you need to know the currency of the account, do a GET Details to the Accounts endpoint (using the account ID you receive from in the accounts array of the response).

### **🔦 Filterable fields**

Please see the table below for an alphabetized list of fields that you can filter your responses by. For more information on how to use filters, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) article.

| Field  | Available Filters |
| ------ | ----------------- |
| \`id\`   | \`=\`, \`in\`         |
| \`link\` | \`=\`, \`in\`         |

\`\`\`curl cURL
# Filtering results so that you get the risk insights of one link:
https://sandbox.belvo.com/api/risk-insights/?link=89c91f42-df34-4c5d-a4f1-6e1e40438af4

\`\`\`
\`\`\`javascript Node
// Filtering results so that you get the risk insights of one link:
client. riskInsights.list({
  filters: {
    account: "89c91f42-df34-4c5d-a4f1-6e1e40438af4"
  }
})

\`\`\`
\`\`\`python Python
# Filtering results so that you get the risk insights of one link:
client. RiskInsights.list(link="89c91f42-df34-4c5d-a4f1-6e1e40438af4")

\`\`\`
\`\`\`ruby Ruby
# Filtering results so that you get the risk insights of one link:
client. risk_insights.list(params: {
  link: "89c91f42-df34-4c5d-a4f1-6e1e40438af4"
})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Risk Insights",
        "endpoints": {
          "DestroyRiskInsights": {
            "auth": true,
            "display-name": "Delete a risk insight",
            "docs": "Delete a specific risk insight from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/risk-insights/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`risk-insights.id\` that you want to delete",
                "type": "string",
              },
            },
          },
          "DetailRiskInsights": {
            "auth": true,
            "display-name": "Get a risk insight's details",
            "docs": "Get the details of a specific risk insight.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": [
                    {
                      "accounts": [
                        "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                      ],
                      "balances_metrics": {
                        "balance_threshold_x": 267,
                        "closing_balance": 24.19,
                        "days_balance_below_0_1m": 0,
                        "days_balance_below_0_1w": 0,
                        "days_balance_below_0_3m": 0,
                        "days_balance_below_x_1m": 3,
                        "days_balance_below_x_1w": 3,
                        "days_balance_below_x_3m": 3,
                        "max_balance_1m": 3062.11,
                        "max_balance_1w": 3062.11,
                        "max_balance_3m": 3062.11,
                        "min_balance_1m": 0.51,
                        "min_balance_1w": 0.51,
                        "min_balance_3m": 0.51,
                      },
                      "cashflow_metrics": {
                        "positive_to_negative_ratio_1m": 0.98,
                        "positive_to_negative_ratio_1w": 0.98,
                        "positive_to_negative_ratio_3m": 0.98,
                        "sum_negative_1m": 10237.03,
                        "sum_negative_1w": 10237.03,
                        "sum_negative_3m": 10237.03,
                        "sum_positive_1m": 10022.01,
                        "sum_positive_1w": 10022.01,
                        "sum_positive_3m": 10022.01,
                      },
                      "created_at": "2022-02-01T20:25:47Z",
                      "credit_cards_metrics": {
                        "num_accounts": 2,
                        "sum_credit_limit": 600.5,
                        "sum_credit_used": 200.5,
                      },
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                      "loans_metrics": {
                        "num_accounts": 5,
                        "sum_loans_monthly_payment": 400,
                        "sum_loans_outstanding_principal": 2000,
                        "sum_loans_principal": 5000,
                      },
                      "transactions_metrics": {
                        "max_incoming_amount_1m": 3030,
                        "max_incoming_amount_1w": 3030,
                        "max_incoming_amount_3m": 3030,
                        "max_outgoing_amount_1m": 3027.44,
                        "max_outgoing_amount_1w": 3027.44,
                        "max_outgoing_amount_3m": 3027.44,
                        "mean_incoming_amount_1m": 3030,
                        "mean_incoming_amount_1w": 3030,
                        "mean_incoming_amount_3m": 3030,
                        "mean_outgoing_amount_1m": 3027.44,
                        "mean_outgoing_amount_1w": 3027.44,
                        "mean_outgoing_amount_3m": 3027.44,
                        "num_incoming_transactions_1m": 20,
                        "num_incoming_transactions_1w": 20,
                        "num_incoming_transactions_3m": 20,
                        "num_outgoing_transactions_1m": 19,
                        "num_outgoing_transactions_1w": 19,
                        "num_outgoing_transactions_3m": 19,
                        "num_transactions_1m": 39,
                        "num_transactions_1w": 39,
                        "num_transactions_3m": 39,
                        "sum_incoming_amount_1m": 10022.01,
                        "sum_incoming_amount_1w": 10022.01,
                        "sum_incoming_amount_3m": 10022.01,
                        "sum_outgoing_amount_1m": 10237.03,
                        "sum_outgoing_amount_1w": 10237.03,
                        "sum_outgoing_amount_3m": 10237.03,
                      },
                    },
                  ],
                },
              },
            ],
            "method": "GET",
            "path": "/api/risk-insights/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`risk-insights.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailRiskInsightsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "list<root.RiskInsights>",
            },
          },
          "ListRiskInsights": {
            "auth": true,
            "display-name": "List all risk insights",
            "docs": "Get a paginated list of all risk insight analyses in your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "id": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73",
                  "id__in": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "link__in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "accounts": [
                          "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                        ],
                        "balances_metrics": {
                          "balance_threshold_x": 267,
                          "closing_balance": 24.19,
                          "days_balance_below_0_1m": 0,
                          "days_balance_below_0_1w": 0,
                          "days_balance_below_0_3m": 0,
                          "days_balance_below_x_1m": 3,
                          "days_balance_below_x_1w": 3,
                          "days_balance_below_x_3m": 3,
                          "max_balance_1m": 3062.11,
                          "max_balance_1w": 3062.11,
                          "max_balance_3m": 3062.11,
                          "min_balance_1m": 0.51,
                          "min_balance_1w": 0.51,
                          "min_balance_3m": 0.51,
                        },
                        "cashflow_metrics": {
                          "positive_to_negative_ratio_1m": 0.98,
                          "positive_to_negative_ratio_1w": 0.98,
                          "positive_to_negative_ratio_3m": 0.98,
                          "sum_negative_1m": 10237.03,
                          "sum_negative_1w": 10237.03,
                          "sum_negative_3m": 10237.03,
                          "sum_positive_1m": 10022.01,
                          "sum_positive_1w": 10022.01,
                          "sum_positive_3m": 10022.01,
                        },
                        "created_at": "2022-02-01T20:25:47Z",
                        "credit_cards_metrics": {
                          "num_accounts": 2,
                          "sum_credit_limit": 600.5,
                          "sum_credit_used": 200.5,
                        },
                        "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                        "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "loans_metrics": {
                          "num_accounts": 5,
                          "sum_loans_monthly_payment": 400,
                          "sum_loans_outstanding_principal": 2000,
                          "sum_loans_principal": 5000,
                        },
                        "transactions_metrics": {
                          "max_incoming_amount_1m": 3030,
                          "max_incoming_amount_1w": 3030,
                          "max_incoming_amount_3m": 3030,
                          "max_outgoing_amount_1m": 3027.44,
                          "max_outgoing_amount_1w": 3027.44,
                          "max_outgoing_amount_3m": 3027.44,
                          "mean_incoming_amount_1m": 3030,
                          "mean_incoming_amount_1w": 3030,
                          "mean_incoming_amount_3m": 3030,
                          "mean_outgoing_amount_1m": 3027.44,
                          "mean_outgoing_amount_1w": 3027.44,
                          "mean_outgoing_amount_3m": 3027.44,
                          "num_incoming_transactions_1m": 20,
                          "num_incoming_transactions_1w": 20,
                          "num_incoming_transactions_3m": 20,
                          "num_outgoing_transactions_1m": 19,
                          "num_outgoing_transactions_1w": 19,
                          "num_outgoing_transactions_3m": 19,
                          "num_transactions_1m": 39,
                          "num_transactions_1w": 39,
                          "num_transactions_3m": 39,
                          "sum_incoming_amount_1m": 10022.01,
                          "sum_incoming_amount_1w": 10022.01,
                          "sum_incoming_amount_3m": 10022.01,
                          "sum_outgoing_amount_1m": 10237.03,
                          "sum_outgoing_amount_1w": 10237.03,
                          "sum_outgoing_amount_3m": 10237.03,
                        },
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/risk-insights",
            "request": {
              "name": "ListRiskInsightsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "id": {
                  "docs": "Return information for this \`risk-insight.id\`.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "Return information for these \`risk-insight.id\`s.",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return information for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.RiskInsightsPaginatedResponse",
            },
          },
          "PatchRiskInsights": {
            "auth": true,
            "display-name": "Complete a risk insights request",
            "docs": "Used to resume an Risk insights retrieve session that was paused because an MFA token was required by the institution.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "683005d6-f45c-4adb-b289-f1a12f50f80c",
                  "save_data": true,
                  "session": "6e7b283c6efa449c9c028a16b5c249fa",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "accounts": [
                        "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                      ],
                      "balances_metrics": {
                        "balance_threshold_x": 267,
                        "closing_balance": 24.19,
                        "days_balance_below_0_1m": 0,
                        "days_balance_below_0_1w": 0,
                        "days_balance_below_0_3m": 0,
                        "days_balance_below_x_1m": 3,
                        "days_balance_below_x_1w": 3,
                        "days_balance_below_x_3m": 3,
                        "max_balance_1m": 3062.11,
                        "max_balance_1w": 3062.11,
                        "max_balance_3m": 3062.11,
                        "min_balance_1m": 0.51,
                        "min_balance_1w": 0.51,
                        "min_balance_3m": 0.51,
                      },
                      "cashflow_metrics": {
                        "positive_to_negative_ratio_1m": 0.98,
                        "positive_to_negative_ratio_1w": 0.98,
                        "positive_to_negative_ratio_3m": 0.98,
                        "sum_negative_1m": 10237.03,
                        "sum_negative_1w": 10237.03,
                        "sum_negative_3m": 10237.03,
                        "sum_positive_1m": 10022.01,
                        "sum_positive_1w": 10022.01,
                        "sum_positive_3m": 10022.01,
                      },
                      "created_at": "2022-02-01T20:25:47Z",
                      "credit_cards_metrics": {
                        "num_accounts": 2,
                        "sum_credit_limit": 600.5,
                        "sum_credit_used": 200.5,
                      },
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                      "loans_metrics": {
                        "num_accounts": 5,
                        "sum_loans_monthly_payment": 400,
                        "sum_loans_outstanding_principal": 2000,
                        "sum_loans_principal": 5000,
                      },
                      "transactions_metrics": {
                        "max_incoming_amount_1m": 3030,
                        "max_incoming_amount_1w": 3030,
                        "max_incoming_amount_3m": 3030,
                        "max_outgoing_amount_1m": 3027.44,
                        "max_outgoing_amount_1w": 3027.44,
                        "max_outgoing_amount_3m": 3027.44,
                        "mean_incoming_amount_1m": 3030,
                        "mean_incoming_amount_1w": 3030,
                        "mean_incoming_amount_3m": 3030,
                        "mean_outgoing_amount_1m": 3027.44,
                        "mean_outgoing_amount_1w": 3027.44,
                        "mean_outgoing_amount_3m": 3027.44,
                        "num_incoming_transactions_1m": 20,
                        "num_incoming_transactions_1w": 20,
                        "num_incoming_transactions_3m": 20,
                        "num_outgoing_transactions_1m": 19,
                        "num_outgoing_transactions_1w": 19,
                        "num_outgoing_transactions_3m": 19,
                        "num_transactions_1m": 39,
                        "num_transactions_1w": 39,
                        "num_transactions_3m": 39,
                        "sum_incoming_amount_1m": 10022.01,
                        "sum_incoming_amount_1w": 10022.01,
                        "sum_incoming_amount_3m": 10022.01,
                        "sum_outgoing_amount_1m": 10237.03,
                        "sum_outgoing_amount_1w": 10237.03,
                        "sum_outgoing_amount_3m": 10237.03,
                      },
                    },
                  ],
                },
              },
            ],
            "method": "PATCH",
            "path": "/api/risk-insights",
            "request": {
              "body": "root.PatchBody",
              "name": "PatchRiskInsightsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when save_data=false)",
              "type": "list<root.RiskInsights>",
            },
          },
          "RetrieveRiskInsights": {
            "auth": true,
            "display-name": "Retrieve risk insights for a link",
            "docs": "Request the risk insights for a given link ID.

If you need to know the currency of the account, just do a GET Details to the accounts endpoint (using the ID you receive from the accounts response).",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "2ccd5e15-194a-4a19-a45a-e7223c7e6717",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "accounts": [
                        "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                      ],
                      "balances_metrics": {
                        "balance_threshold_x": 267,
                        "closing_balance": 24.19,
                        "days_balance_below_0_1m": 0,
                        "days_balance_below_0_1w": 0,
                        "days_balance_below_0_3m": 0,
                        "days_balance_below_x_1m": 3,
                        "days_balance_below_x_1w": 3,
                        "days_balance_below_x_3m": 3,
                        "max_balance_1m": 3062.11,
                        "max_balance_1w": 3062.11,
                        "max_balance_3m": 3062.11,
                        "min_balance_1m": 0.51,
                        "min_balance_1w": 0.51,
                        "min_balance_3m": 0.51,
                      },
                      "cashflow_metrics": {
                        "positive_to_negative_ratio_1m": 0.98,
                        "positive_to_negative_ratio_1w": 0.98,
                        "positive_to_negative_ratio_3m": 0.98,
                        "sum_negative_1m": 10237.03,
                        "sum_negative_1w": 10237.03,
                        "sum_negative_3m": 10237.03,
                        "sum_positive_1m": 10022.01,
                        "sum_positive_1w": 10022.01,
                        "sum_positive_3m": 10022.01,
                      },
                      "created_at": "2022-02-01T20:25:47Z",
                      "credit_cards_metrics": {
                        "num_accounts": 2,
                        "sum_credit_limit": 600.5,
                        "sum_credit_used": 200.5,
                      },
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                      "loans_metrics": {
                        "num_accounts": 5,
                        "sum_loans_monthly_payment": 400,
                        "sum_loans_outstanding_principal": 2000,
                        "sum_loans_principal": 5000,
                      },
                      "transactions_metrics": {
                        "max_incoming_amount_1m": 3030,
                        "max_incoming_amount_1w": 3030,
                        "max_incoming_amount_3m": 3030,
                        "max_outgoing_amount_1m": 3027.44,
                        "max_outgoing_amount_1w": 3027.44,
                        "max_outgoing_amount_3m": 3027.44,
                        "mean_incoming_amount_1m": 3030,
                        "mean_incoming_amount_1w": 3030,
                        "mean_incoming_amount_3m": 3030,
                        "mean_outgoing_amount_1m": 3027.44,
                        "mean_outgoing_amount_1w": 3027.44,
                        "mean_outgoing_amount_3m": 3027.44,
                        "num_incoming_transactions_1m": 20,
                        "num_incoming_transactions_1w": 20,
                        "num_incoming_transactions_3m": 20,
                        "num_outgoing_transactions_1m": 19,
                        "num_outgoing_transactions_1w": 19,
                        "num_outgoing_transactions_3m": 19,
                        "num_transactions_1m": 39,
                        "num_transactions_1w": 39,
                        "num_transactions_3m": 39,
                        "sum_incoming_amount_1m": 10022.01,
                        "sum_incoming_amount_1w": 10022.01,
                        "sum_incoming_amount_3m": 10022.01,
                        "sum_outgoing_amount_1m": 10237.03,
                        "sum_outgoing_amount_1w": 10237.03,
                        "sum_outgoing_amount_3m": 10237.03,
                      },
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/api/risk-insights",
            "request": {
              "body": "root.StandardRequest",
              "name": "RetrieveRiskInsightsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when save_data=false)",
              "type": "list<root.RiskInsights>",
            },
          },
        },
      },
    },
    "secretKeys.yml": {
      "docs": "# Get your Payments API keys

In order to use Belvo's Payments API, you need to first request your secret keys (see the code example below):


\`\`\`curl
POST https://api.belvo.com/payments/secret-keys/
Authorization: Basic username:password
\`\`\`

Where:

- \`username\` is the username you use to log in to the Belvo dashboard (in plain text).
- \`password\` is the password you use to log in to the Belvo dashboard (in plain text).


If you have entered your credentials correctly, you will receive a **201 Response** with your secret keys:


\`\`\`json
{
    "id": "Your Belvo secretID",
    "password": "Your Belvo secretPassword"
}

\`\`\`
",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Secret Keys",
        "endpoints": {
          "CreateSecretKeys": {
            "auth": true,
            "display-name": "Request API keys",
            "docs": "Request API keys to use with Belvo's Payments API.

You will need to send through the username and password (in plain text) you use to login to the Belvo dashboard in the Authorization header.

For example:

  \`\`\`curl
  POST https://api.belvo.com/payments/secret-keys/
  Authorization: Basic username:password
  \`\`\`
",
            "errors": [
              "root.BadRequestError",
              "root.RequestTimeoutError",
            ],
            "examples": [
              {
                "response": {
                  "body": [
                    {
                      "created_at": "2022-02-09T08:45:50Z",
                      "id": "fc6694b5-ced2-47db-8d14-f15c9e942f31",
                      "last_used": "2022-02-09T08:45:50Z",
                      "password": "******",
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/payments/secret-keys",
            "response": {
              "docs": "Ok",
              "type": "list<root.SecretKeys>",
            },
          },
          "ListSecretKeys": {
            "auth": true,
            "display-name": "List all secret keys",
            "docs": "Get a paginated list of all existing secret keys in your Belvo account. We return up to 100 results per page.


  **Note**: We only return the ID of the secret keys.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://api.belvo.com/payments/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "created_at": "2022-02-09T08:45:50Z",
                        "id": "fc6694b5-ced2-47db-8d14-f15c9e942f31",
                        "last_used": "2022-02-09T08:45:50Z",
                        "password": "******",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/payments/secret-keys",
            "response": {
              "docs": "OK",
              "type": "root.SecretKeysPaginatedResponse",
            },
          },
        },
      },
    },
    "taxComplianceStatus.yml": {
      "docs": "A **tax compliance status** indicates about whether a person or business is complying with their tax obligations at the moment of the request. The information is extracted from SAT's _Opinion de cumplimiento de Obligaciones Fiscales_ document.

### **🔦 Filterable fields**

Please see the table below for an alphabetized list of fields that you can filter your responses by. For more information on how to use filters, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) article.

| Field         | Available Filters                 |
| ------------- | --------------------------------- |
| \`created_at \` | \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`id\`          | \`=\`, \`in\`                         |
| \`link\`        | \`=\`, \`in\`                         |

\`\`\`curl cURL
# Filtering results so that you get Tax Compliance Status from one link:
https://api.belvo.com/api/tax-compliance-status/?link=link-id

# Filtering results so that you get Tax Compliance Status from one link:
https://api.belvo.com/api/tax-compliance-status/?link=link-id1,link-id2
\`\`\`
\`\`\`javascript Node
//  Filtering results so that you get the Tax Compliance Status from one link:
client.taxComplianceStatus.list({
  filters: {
    link: "link-id"
  }
})

//  Filtering results so that you get the Tax Compliance Status from two links:
client.taxComplianceStatus.list({
  filters: {
    link__in: "link-id-1, link-id-2"
  }
})

\`\`\`
\`\`\`python Python
# Filtering results so that you get the Tax Compliance Status from one link:
client.TaxComplianceStatus.list(link="link-id")

# Filtering results so that you get the Tax Compliance Status from two links:
client.TaxComplianceStatus.list(link__in="link-id1,link-id2")
\`\`\`
\`\`\`ruby Ruby
# Filtering results so that you get the Tax Compliance Status from one link:
client.tax_compliance_status.list(params: {
  link: "link-id"
})


# Filtering results so that you get the Tax Compliance Status from two link:
client.tax_compliance_status.list(params: {
  link__in: "link-id1, link-id1"
})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Tax compliance status",
        "endpoints": {
          "DestroyTaxComplianceStatus": {
            "auth": true,
            "display-name": "Delete a tax compliance status",
            "docs": "Delete a specific Tax compliance status from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/tax-compliance-status/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`tax-compliance-status.id\` that you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailTaxComplianceStatus": {
            "auth": true,
            "display-name": "Get a tax compliance status's details",
            "docs": "Get the details of a specific Tax compliance status.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "collected_at": "2022-02-09T08:45:50Z",
                    "created_at": "2022-02-09T08:45:50Z",
                    "id": "91106968-1abd-4d64-85c1-4e73d96fb997",
                    "internal_identification": "20NE1234567",
                    "outcome": "POSITIVE",
                    "pdf": "=PDF-STRING=",
                    "rfc": "KDFC211118IS0",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/tax-compliance-status/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`tax-compliance-status.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailTaxComplianceStatusRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.TaxComplianceStatus",
            },
          },
          "ListTaxComplianceStatus": {
            "auth": true,
            "display-name": "List all tax compliance statuses",
            "docs": "Get a paginated list of all existing Tax compliance statuses in your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "created_at__gt": "2022-05-05",
                  "created_at__gte": "2022-05-04",
                  "created_at__lt": "2022-04-01",
                  "created_at__lte": "2022-03-30",
                  "created_at__range": "2022-03-03,2022-05-04",
                  "fields": "link,balance,account",
                  "id": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73",
                  "id__in": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "link__in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "collected_at": "2022-02-09T08:45:50Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "id": "91106968-1abd-4d64-85c1-4e73d96fb997",
                        "internal_identification": "20NE1234567",
                        "outcome": "POSITIVE",
                        "pdf": "=PDF-STRING=",
                        "rfc": "KDFC211118IS0",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/tax-compliance-status",
            "request": {
              "name": "ListTaxComplianceStatusRequest",
              "query-parameters": {
                "created_at__gt": {
                  "docs": "Return tax compliance statuses that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return tax compliance statuses that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return tax compliance statuses that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return tax compliance statuses that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return tax compliance statuses that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "id": {
                  "docs": "Return information for this \`tax-compliance-status.id\`.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "Return information for these \`tax-compliance-status.id\`s.",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return information for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.TaxComplianceStatusPaginatedResponse",
            },
          },
          "RetrieveTaxComplianceStatus": {
            "auth": true,
            "display-name": "Retrieve tax compliance statuses for a link",
            "docs": "Retrieve the Tax compliance status information for a specific fiscal link.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "d4617561-1c01-4b2f-83b6-a594f7b3bc57",
                  "save_data": true,
                },
                "response": {
                  "body": {
                    "collected_at": "2022-02-09T08:45:50Z",
                    "created_at": "2022-02-09T08:45:50Z",
                    "id": "91106968-1abd-4d64-85c1-4e73d96fb997",
                    "internal_identification": "20NE1234567",
                    "outcome": "POSITIVE",
                    "pdf": "=PDF-STRING=",
                    "rfc": "KDFC211118IS0",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/api/tax-compliance-status",
            "request": {
              "body": {
                "properties": {
                  "attach_pdf": {
                    "docs": "When set to \`true\`, you will receive the PDF in binary format in the response.",
                    "type": "optional<boolean>",
                  },
                  "link": {
                    "docs": "The fiscal \`link.id\` to use.",
                    "type": "string",
                  },
                  "save_data": {
                    "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "TaxComplianceStatusRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "root.TaxComplianceStatus",
            },
          },
        },
      },
    },
    "taxDeclarations.yml": {
      "docs": "Our Tax declarations endpoint lets you retrieve the electronic representation of the tax declaration document emitted by a country's tax authority.

At the moment, the Tax Declaration resource is available for:

- 🇨🇴 Colombia (DIAN)",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Tax declarations",
        "endpoints": {
          "DestroyTaxDeclaration": {
            "auth": true,
            "display-name": "Delete a tax declration",
            "docs": "Delete a specific Tax declaration from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/tax-declarations/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`tax-declration.id\` that you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailTaxDeclaration": {
            "auth": true,
            "display-name": "Get a tax declaration's details",
            "docs": "Get the details of a specific Tax declaration.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "annual_income_statement": {
                      "annual_totals": {
                        "total_applicable_deductions": 0,
                        "total_exempt_income": 115004000,
                        "total_exemptions_and_deductions": 0,
                        "total_ordinary_net_income": 0,
                      },
                      "gross_income": {
                        "capital_income": 0,
                        "earned_income": 115004000,
                        "fee_based_income": 0,
                        "non_labor_income": 0,
                      },
                      "net_income": {
                        "capital_income": 0,
                        "earned_income": 115004000,
                        "fee_based_income": 0,
                        "non_labor_income": 0,
                      },
                      "non_taxable_income": {
                        "capital_income": 0,
                        "earned_income": 115004000,
                        "fee_based_income": 0,
                        "non_labor_income": 0,
                      },
                    },
                    "collected_at": "2020-04-23T21:32:55Z",
                    "created_at": "2020-04-23T21:30:20Z",
                    "date_issued": "2022-09-02",
                    "document_information": {
                      "form_number": "2117680087604",
                      "name": "Declaracion de Renta y Complementario o de Ingresos y Patrimonio para Personas Juridicas y Asimiladas y Personas Naturales y Asimiladas no Residentes y Sucesiones Iliquidas de Causantes no Residentes",
                      "type": "110",
                      "year": 2021,
                    },
                    "equity_statement": {
                      "total_debts": 77626000,
                      "total_gross_equity": 4648000,
                      "total_net_equity": 0,
                    },
                    "id": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                    "link": "8a95ca1a-1a7a-4ce0-8599-f8ff1dc792ac",
                    "pdf": "==BINARY-STRING==",
                    "pension_income_statement": {
                      "net_pension_income": 0,
                      "net_taxable_pension_income": 0,
                    },
                    "tax_assessment": {
                      "balance_payable": 0,
                      "balance_refundable": 84000,
                      "fortuitous_profit_tax": 0,
                      "net_income_tax": 9144000,
                      "previous_year_balance": 1514000,
                      "total_payment": 0,
                      "total_tax_due": 9144000,
                      "total_tax_on_taxable_net_income": 9144000,
                      "total_withheld_tax": 7714000,
                    },
                    "tax_payer_information": {
                      "document_id": {
                        "document_number": "7113223466",
                        "document_type": "NIT",
                      },
                      "first_last_name": "Restrepo",
                      "first_name": "Carlos",
                      "main_economic_activity": "0010",
                      "other_names": "Alberto",
                      "reporting_id": {
                        "reporting_type": "sectional_address_code",
                        "reporting_value": "32",
                      },
                      "second_last_name": "Vives",
                    },
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/tax-declarations/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`tax-declaration.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailTaxDeclarationRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "DetailTaxDeclarationResponse",
            },
          },
          "ListTaxDeclarations": {
            "auth": true,
            "display-name": "List all tax declarations",
            "docs": "Get a paginated list of all existing tax declarations in your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "created_at__gt": "2022-05-05",
                  "created_at__gte": "2022-05-04",
                  "created_at__lt": "2022-04-01",
                  "created_at__lte": "2022-03-30",
                  "created_at__range": "2022-03-03,2022-05-04",
                  "fields": "link,balance,account",
                  "id": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73",
                  "id__in": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "link__in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                  "year": "2021",
                  "year__gt": "2020",
                  "year__gte": "2019",
                  "year__lt": "2018",
                  "year__lte": "2017",
                  "year__range": "2017,2021",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "annual_income_statement": {
                          "annual_totals": {
                            "total_applicable_deductions": 0,
                            "total_exempt_income": 115004000,
                            "total_exemptions_and_deductions": 0,
                            "total_ordinary_net_income": 0,
                          },
                          "gross_income": {
                            "capital_income": 0,
                            "earned_income": 115004000,
                            "fee_based_income": 0,
                            "non_labor_income": 0,
                          },
                          "net_income": {
                            "capital_income": 0,
                            "earned_income": 115004000,
                            "fee_based_income": 0,
                            "non_labor_income": 0,
                          },
                          "non_taxable_income": {
                            "capital_income": 0,
                            "earned_income": 115004000,
                            "fee_based_income": 0,
                            "non_labor_income": 0,
                          },
                        },
                        "collected_at": "2020-04-23T21:32:55Z",
                        "created_at": "2020-04-23T21:30:20Z",
                        "date_issued": "2022-09-02",
                        "document_information": {
                          "form_number": "2117680087604",
                          "name": "Declaracion de Renta y Complementario o de Ingresos y Patrimonio para Personas Juridicas y Asimiladas y Personas Naturales y Asimiladas no Residentes y Sucesiones Iliquidas de Causantes no Residentes",
                          "type": "110",
                          "year": 2021,
                        },
                        "equity_statement": {
                          "total_debts": 77626000,
                          "total_gross_equity": 4648000,
                          "total_net_equity": 0,
                        },
                        "id": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                        "link": "8a95ca1a-1a7a-4ce0-8599-f8ff1dc792ac",
                        "pdf": "==BINARY-STRING==",
                        "pension_income_statement": {
                          "net_pension_income": 0,
                          "net_taxable_pension_income": 0,
                        },
                        "tax_assessment": {
                          "balance_payable": 0,
                          "balance_refundable": 84000,
                          "fortuitous_profit_tax": 0,
                          "net_income_tax": 9144000,
                          "previous_year_balance": 1514000,
                          "total_payment": 0,
                          "total_tax_due": 9144000,
                          "total_tax_on_taxable_net_income": 9144000,
                          "total_withheld_tax": 7714000,
                        },
                        "tax_payer_information": {
                          "document_id": {
                            "document_number": "7113223466",
                            "document_type": "NIT",
                          },
                          "first_last_name": "Restrepo",
                          "first_name": "Carlos",
                          "main_economic_activity": "0010",
                          "other_names": "Alberto",
                          "reporting_id": {
                            "reporting_type": "sectional_address_code",
                            "reporting_value": "32",
                          },
                          "second_last_name": "Vives",
                        },
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/tax-declarations",
            "request": {
              "name": "ListTaxDeclarationsRequest",
              "query-parameters": {
                "created_at__gt": {
                  "docs": "Return tax declarations that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return tax declarations that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return tax declarations that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return tax declarations that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return tax declarations that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "id": {
                  "docs": "Return information for this \`tax-declaration.id\`.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "Return information for these \`tax-declaration.id\`s.",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return information for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
                "year": {
                  "docs": "Return tax declarations for this year (\`YYYY\`).",
                  "type": "optional<string>",
                },
                "year__gt": {
                  "docs": "Return tax declarations for after this year (\`YYYY\`).",
                  "type": "optional<string>",
                },
                "year__gte": {
                  "docs": "Return tax declarations for this year or after (\`YYYY\`).",
                  "type": "optional<string>",
                },
                "year__lt": {
                  "docs": "Return tax declarations for before this year (\`YYYY\`).",
                  "type": "optional<string>",
                },
                "year__lte": {
                  "docs": "Return tax declarations for this year or earlier (\`YYYY\`).",
                  "type": "optional<string>",
                },
                "year__range": {
                  "docs": "Return tax declarations between these two years (\`YYYY\`).",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "ListTaxDeclarationsResponse",
            },
          },
          "RetrieveTaxDeclarations": {
            "auth": true,
            "display-name": "Retrieve tax declarations for a link",
            "docs": "Retrieve tax declaration information for a specific fiscal link.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "attach_pdf": false,
                  "link": "d4617561-1c01-4b2f-83b6-a594f7b3bc57",
                  "save_data": true,
                  "year_from": "2018",
                  "year_to": "2019",
                },
                "response": {
                  "body": [
                    {
                      "annual_costs_and_deductions_statement": {
                        "administration_expenses": 3266000,
                        "costs": 1881843000,
                        "distribution_and_sales_expenses": 0,
                        "financial_expenses": 0,
                        "total_costs_and_deductible_expenses": 191449000,
                      },
                      "annual_income_statement": {
                        "dividends": 0,
                        "gross_income_from_ordinary_activities": 210043000,
                        "other_income": 0,
                        "returns_rebates_and_discounts_on_sales": 0,
                        "total_gross_income": 210043000,
                        "total_net_income": 210043000,
                      },
                      "collected_at": "2020-04-23T21:32:55Z",
                      "created_at": "2020-04-23T21:30:20Z",
                      "date_issued": "2022-09-02",
                      "document_information": {
                        "form_number": "2117680087604",
                        "name": "Declaracion de Renta y Complementario o de Ingresos y Patrimonio para Personas Juridicas y Asimiladas y Personas Naturales y Asimiladas no Residentes y Sucesiones Iliquidas de Causantes no Residentes",
                        "type": "110",
                        "year": 2021,
                      },
                      "equity_statement": {
                        "accounts_documents_and_finance_leases_receivable": 0,
                        "cash_and_cash_equivalents": 4648000,
                        "debts": 207030000,
                        "inventory": 0,
                        "investments_and_derivative_financial_instruments": 77626000,
                        "property_plant_and_equipment_investment_properties": 0,
                        "total_gross_equity": 220860000,
                        "total_net_equity": 13830000,
                      },
                      "id": "1c83ead8-6665-429c-a17a-ddc76cb3a95e",
                      "link": "8a95ca1a-1a7a-4ce0-8599-f8ff1dc792ac",
                      "pdf": "==BINARY-STRING==",
                      "tax_assessment": {
                        "fortuitous_profit_tax": 0,
                        "net_income_tax": 5764000,
                        "net_income_taxable": 18594000,
                        "total_balance_in_favor": 1889000,
                        "total_balance_payable": 0,
                        "total_payment": 0,
                        "total_tax_due": 5764000,
                        "total_tax_on_taxable_net_income": 5764000,
                        "total_withholdings_for_the_taxable_year_to_be_declared": 7361000,
                      },
                      "tax_payer_information": {
                        "company_name": "Trusty Spanners",
                        "document_id": {
                          "document_number": "8312224477",
                          "document_type": "NIT",
                        },
                        "first_last_name": "Restrepo",
                        "first_name": "Carlos",
                        "main_economic_activity": "0032",
                        "other_names": "Alberto",
                        "reporting_id": {
                          "reporting_type": "sectional_address_code",
                          "reporting_value": "32",
                        },
                        "second_last_name": "Vives",
                      },
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/api/tax-declarations",
            "request": {
              "body": {
                "properties": {
                  "attach_pdf": {
                    "docs": "When this is set to \`true\`, you will receive the PDF as a binary string in the response.",
                    "type": "optional<boolean>",
                  },
                  "link": {
                    "docs": "The fiscal \`link.id\` you want specific tax declaration information for.",
                    "type": "string",
                  },
                  "save_data": {
                    "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                    "type": "optional<boolean>",
                  },
                  "year_from": {
                    "docs": "The starting year you want to get tax declaration for, in \`YYYY\` format.
",
                    "type": "string",
                  },
                  "year_to": {
                    "docs": "The year you want to stop getting tax declaration for, in \`YYYY\` format.
",
                    "type": "string",
                  },
                },
              },
              "headers": undefined,
              "name": "TaxDeclarationsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<RetrieveTaxDeclarationsResponseItem>",
            },
          },
        },
      },
      "types": {
        "DetailTaxDeclarationResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.TaxDeclarationIndividual",
            "root.TaxDeclarationBusiness",
          ],
        },
        "ListTaxDeclarationsResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.TaxDeclarationIndividualPaginated",
            "root.TaxDeclarationBusinessPaginated",
          ],
        },
        "RetrieveTaxDeclarationsResponseItem": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.TaxDeclarationBusiness",
            "root.TaxDeclarationIndividual",
          ],
        },
      },
    },
    "taxRetentions.yml": {
      "docs": "A **tax retention** is the amount of money that the payer must deduct from the total amount of a purchase invoice, according to the fiscal institution’s regulations.

With Belvo’s Tax Retentions resource, you can quickly and easily consult information regarding a user’s tax retentions over a given period or for a specific invoice. This is particularly useful when you want to aid your user in their tax returns as for each invoice you receive the:

- invoice amount
- amount that is exempt from taxation
- total amount that is taxed
- breakdown of all the taxes applied to the invoice


### **🔦 Filterable fields**

Please see the table below for an alphabetized list of fields that you can filter your responses by. For more information on how to use filters, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) article.

| Field         | Available Filters                 |
| ------------- | --------------------------------- |
| \`created_at \` | \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`link\`        | \`=\`, \`in\`                         |

\`\`\`curl cURL
# Filtering results so that you get Tax Retentions from one link:
https://sandbox.belvo.com/api/tax-retentions/?link=link-id

# Filtering results so that you get Tax Retentions from two links 
https://api.belvo.com/api/tax-retentions/?link=link-id1,link-id2
\`\`\`
\`\`\`javascript Node
//  Filtering results so that you get the Tax Retentions from one link:
client.taxRetentions.list({
  filters: {
    link: "link-id"
  }
})

//  Filtering results so that you get the Tax Retentions from two links:
client.taxRetentions.list({
  filters: {
    link__in: "link-id-1, link-id-2"
  }
})

\`\`\`
\`\`\`python Python
# Filtering results so that you get the Tax Retentions from one link:
client.TaxRetentions.list(link="link-id")

# Filtering results so that you get the Tax Retentions from two links:
client.TaxRetentions.list(link__in="link-id1,link-id2")
\`\`\`
\`\`\`ruby Ruby
# Filtering results so that you get the Tax Retentions from one link:
client.tax_retentions.list(params: {
  link: "link-id"
})


# Filtering results so that you get the Tax Retentions from two link:
client.tax_retentions.list(params: {
  link__in: "link-id1, link-id1"
})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Tax retentions",
        "endpoints": {
          "DestroyTaxRetention": {
            "auth": true,
            "display-name": "Delete a tax retention",
            "docs": "Delete a specific tax retention from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/tax-retentions/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`tax-retention.id\` that you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailTaxRetentions": {
            "auth": true,
            "display-name": "Get a tax retention's details",
            "docs": "Get the details of a specific tax retention.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "cancelled_at": "2024-01-15T09:30:00Z",
                    "certified_at": "2019-01-03T21:10:41Z",
                    "code": 25,
                    "collected_at": "2022-02-09T08:45:50Z",
                    "created_at": "2022-02-09T08:46:20Z",
                    "id": "c749315b-eec2-435d-a458-06912878564f",
                    "invoice_identification": "def404af-5eef-4112-aa99-d1ec8493b89a",
                    "issued_at": "2019-01-03T21:10:40Z",
                    "link": "19697249-01b8-443e-a451-76bfc5fbeebf",
                    "receiver_id": "GYGK3207809L1",
                    "receiver_name": "ACME LTD",
                    "receiver_nationality": "NATIONAL",
                    "retention_breakdown": [
                      {
                        "base_amount": 0.03,
                        "payment_status": "PAID",
                        "retained_amount": 0,
                        "tax_type": "01",
                      },
                    ],
                    "sender_id": "JKUF980404P0",
                    "sender_name": "Roberto Nunez Batman",
                    "total_exempt_amount": 1000.8,
                    "total_invoice_amount": 53249.8,
                    "total_retained_amount": 1550.7,
                    "total_taxable_amount": 43249,
                    "version": "1.0",
                    "xml": "=XML-STRING=",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/tax-retentions/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`tax-retention.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailTaxRetentionsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.TaxRetentions",
            },
          },
          "ListTaxRetentions": {
            "auth": true,
            "display-name": "List all tax retentions",
            "docs": "Get a paginated list of all existing tax retentions in your Belvo account. We return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "created_at__gt": "2022-05-05",
                  "created_at__gte": "2022-05-04",
                  "created_at__lt": "2022-04-01",
                  "created_at__lte": "2022-03-30",
                  "created_at__range": "2022-03-03,2022-05-04",
                  "fields": "link,balance,account",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "link__in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "cancelled_at": "2024-01-15T09:30:00Z",
                        "certified_at": "2019-01-03T21:10:41Z",
                        "code": 25,
                        "collected_at": "2022-02-09T08:45:50Z",
                        "created_at": "2022-02-09T08:46:20Z",
                        "id": "c749315b-eec2-435d-a458-06912878564f",
                        "invoice_identification": "def404af-5eef-4112-aa99-d1ec8493b89a",
                        "issued_at": "2019-01-03T21:10:40Z",
                        "link": "19697249-01b8-443e-a451-76bfc5fbeebf",
                        "receiver_id": "GYGK3207809L1",
                        "receiver_name": "ACME LTD",
                        "receiver_nationality": "NATIONAL",
                        "retention_breakdown": [
                          {
                            "base_amount": 0.03,
                            "retained_amount": 0,
                            "tax_type": "01",
                          },
                        ],
                        "sender_id": "JKUF980404P0",
                        "sender_name": "Roberto Nunez Batman",
                        "total_exempt_amount": 1000.8,
                        "total_invoice_amount": 53249.8,
                        "total_retained_amount": 1550.7,
                        "total_taxable_amount": 43249,
                        "version": "1.0",
                        "xml": "=XML-STRING=",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/tax-retentions",
            "request": {
              "name": "ListTaxRetentionsRequest",
              "query-parameters": {
                "created_at__gt": {
                  "docs": "Return tax retentions that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return tax retentions that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return tax retentions that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return tax retentions that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return tax retentions that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return information for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.TaxRetentionsPaginatedResponse",
            },
          },
          "RetrieveTaxRetentions": {
            "auth": true,
            "display-name": "Retrieve tax retentions for a link",
            "docs": "Retrieve tax retention information from a specific link. The maximum number of tax retentions that can be returned for a period is 500.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "date_from": "2020-01-01",
                  "date_to": "2020-02-01",
                  "link": "9e432f18-36ca-4bd6-a3f3-1971e58dc1e8",
                  "type": "OUTFLOW",
                },
                "response": {
                  "body": [
                    {
                      "cancelled_at": "2024-01-15T09:30:00Z",
                      "certified_at": "2019-01-03T21:10:41Z",
                      "code": 25,
                      "collected_at": "2022-02-09T08:45:50Z",
                      "created_at": "2022-02-09T08:46:20Z",
                      "id": "c749315b-eec2-435d-a458-06912878564f",
                      "invoice_identification": "def404af-5eef-4112-aa99-d1ec8493b89a",
                      "issued_at": "2019-01-03T21:10:40Z",
                      "link": "19697249-01b8-443e-a451-76bfc5fbeebf",
                      "receiver_id": "GYGK3207809L1",
                      "receiver_name": "ACME LTD",
                      "receiver_nationality": "NATIONAL",
                      "retention_breakdown": [
                        {
                          "base_amount": 0.03,
                          "retained_amount": 0,
                          "tax_type": "01",
                        },
                      ],
                      "sender_id": "JKUF980404P0",
                      "sender_name": "Roberto Nunez Batman",
                      "total_exempt_amount": 1000.8,
                      "total_invoice_amount": 53249.8,
                      "total_retained_amount": 1550.7,
                      "total_taxable_amount": 43249,
                      "version": "1.0",
                      "xml": "=XML-STRING=",
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/api/tax-retentions",
            "request": {
              "body": {
                "properties": {
                  "attach_xml": {
                    "docs": "When set to \`true\`, you will receive the XML tax retention in the response.",
                    "type": "optional<boolean>",
                  },
                  "date_from": {
                    "docs": "The date from which you want to start getting tax retentions for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.
",
                    "type": "string",
                  },
                  "date_to": {
                    "docs": "The date you want to stop getting tax retentions for, in \`YYYY-MM-DD\` format.

⚠️ The number of days between \`date_from\` and \`date_to\` cannot be over 365.
",
                    "type": "string",
                  },
                  "link": {
                    "docs": "The \`link.id\` that you want to get information for.
",
                    "type": "string",
                  },
                  "save_data": {
                    "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                    "type": "optional<boolean>",
                  },
                  "type": "root.EnumTaxRetentionType",
                },
              },
              "headers": undefined,
              "name": "TaxRetentionsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<root.TaxRetentions>",
            },
          },
        },
      },
    },
    "taxReturns.yml": {
      "docs": "A **tax return** is the representation of the tax return document sent every year by a person or a business to the tax authority in the country.

The tax return data structure will be different depending on if it is related to a person or a business (you will find examples for both in the endpoints below).

### **🔦 Filterable fields**

| Field                                   | Available Filters                      |
| --------------------------------------- | -------------------------------------- |
| \`created_at \`                           | \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\`      |
| \`id\`                                    | \`=\`, \`in\`                              |
| \`ejercicio\`                             | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`tipo_declaracion\`                      | \`=\`, \`in\`                              |
| \`link\`                                  | \`=\`, \`in\`                              |

\`\`\`curl cURL
# Filtering results so that you get Tax Returns from one link:
https://api.belvo.com/api/tax-returns/?link=link-id

# Filtering results so that you get Tax Returns from two links and are of type normal:
https://api.belvo.com/api/tax-returns/?link__in=link-id1,link-id2&tipo_declaracion=Normal,
\`\`\`
\`\`\`javascript Node
//  Filtering results so that you get the Tax Returns from one link:
client.taxReturns.list({
  filters: {
    link: "link-id"
  }
})

//  Filtering results so that you get the Tax Returns from two links and are of type normal:
client.taxReturns.list({
  filters: {
    link__in: "link-id-1, link-id-2",
    tipo_declaracion: "Normal"
  }
})

\`\`\`
\`\`\`python Python
# Filtering results so that you get the Tax Return from one link:
client.TaxReturns.list(link="link-id")

# Filtering results so that you get the Tax Returns from two links and are of type normal:
client.TaxReturns.list(link__in="link-id1,link-id2", tipo_declaracion: "Normal")
\`\`\`
\`\`\`ruby Ruby
# Filtering results so that you get the Tax Return from one link:
client.tax_returns.list(params: {
  link: "link-id"
})


# Filtering results so that you get the Tax Returns from two links and are of type normal:
client.tax_returns.list(params: {
  link__in: "link-id1, link-id1",
  tipo_declaracion: "Normal"
})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Tax returns",
        "endpoints": {
          "DestroyTaxReturn": {
            "auth": true,
            "display-name": "Delete a tax return",
            "docs": "Delete a specific tax return from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/tax-returns/{id}",
            "path-parameters": {
              "id": {
                "docs": "The ID of the tax return you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailTaxReturn": {
            "auth": true,
            "display-name": "Get a tax return's details",
            "docs": "Get the details of a specific tax return.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "collected_at": "2019-09-27T13:01:41Z",
                    "created_at": "2022-02-09T08:45:50Z",
                    "datos_informativos": {
                      "datos_informativos": {
                        "key": "value",
                      },
                    },
                    "deducciones_personales": {
                      "deducciones_personales": {
                        "key": "value",
                      },
                    },
                    "determinacion_impuesto": {
                      "determinacion_impuesto": {
                        "key": "value",
                      },
                    },
                    "dividendos": {
                      "dividendos": {
                        "key": "value",
                      },
                    },
                    "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                    "informacion_general": {
                      "informacion_general": {
                        "key": "value",
                      },
                    },
                    "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                    "pdf": "=PDF-STRING=",
                    "receipt_pdf": "=PDF-STRING=",
                    "retenciones": {
                      "retenciones": {
                        "key": "value",
                      },
                    },
                    "servicios_profesionales": {
                      "servicios_profesionales": {
                        "key": "value",
                      },
                    },
                    "sueldos_salarios": {
                      "sueldos_salarios": {
                        "key": "value",
                      },
                    },
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/tax-returns/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`tax-return.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailTaxReturnRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "DetailTaxReturnResponse",
            },
          },
          "ListTaxReturns": {
            "auth": true,
            "display-name": "List all tax returns",
            "docs": "Get a paginated list of all existing tax returns in your Belvo account. By default, we return up to 100 results per page. The results will include a mix of both monthly and yearly tax returns.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "created_at__gt": "2022-05-05",
                  "created_at__gte": "2022-05-04",
                  "created_at__lt": "2022-04-01",
                  "created_at__lte": "2022-03-30",
                  "created_at__range": "2022-03-03,2022-05-04",
                  "ejercicio": "2018",
                  "ejercicio__gt": "2019",
                  "ejercicio__gte": "2017",
                  "ejercicio__lt": "2020",
                  "ejercicio__lte": "2021",
                  "ejercicio__range": "2015,2021",
                  "fields": "link,balance,account",
                  "id": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73",
                  "id__in": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "link__in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                  "tipo_declaracion": "Normal",
                  "tipo_declaracion__in": "Normal,Commercial",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "collected_at": "2019-09-27T13:01:41Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                        "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "pdf": "=PDF-STRING=",
                        "receipt_pdf": "=PDF-STRING=",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/tax-returns",
            "request": {
              "name": "ListTaxReturnsRequest",
              "query-parameters": {
                "created_at__gt": {
                  "docs": "Return tax returns that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return tax returns that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return tax returns that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return tax returns that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return tax returns that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "ejercicio": {
                  "docs": "Return tax returns for exactly this year (\`YYYY\`).",
                  "type": "optional<string>",
                },
                "ejercicio__gt": {
                  "docs": "Return tax returns for after this year (\`YYYY\`).",
                  "type": "optional<string>",
                },
                "ejercicio__gte": {
                  "docs": "Return tax returns for this year or later (\`YYYY\`).",
                  "type": "optional<string>",
                },
                "ejercicio__lt": {
                  "docs": "Return tax returns for before this year (\`YYYY\`).",
                  "type": "optional<string>",
                },
                "ejercicio__lte": {
                  "docs": "Return tax returns for this year and earlier (\`YYYY\`).",
                  "type": "optional<string>",
                },
                "ejercicio__range": {
                  "docs": "Return tax returns for this range of years (\`YYYY\`).",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "id": {
                  "docs": "Return information for this \`tax-return.id\`.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "Return information for these \`tax-return.id\`s.",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return information for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
                "tipo_declaracion": {
                  "docs": "Return tax returns with this declaration type.",
                  "type": "optional<string>",
                },
                "tipo_declaracion__in": {
                  "docs": "Return tax returns with these declaration types.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "ListTaxReturnsResponse",
            },
          },
          "RetrieveTaxReturns": {
            "auth": true,
            "display-name": "Retrieve tax returns for a link",
            "docs": "Retrieve tax return information for a specific fiscal link.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "attach_pdf": false,
                  "date_from": "2018-01-01",
                  "date_to": "2019-01-01",
                  "link": "d4617561-1c01-4b2f-83b6-a594f7b3bc57",
                  "save_data": true,
                  "type": "type",
                },
                "response": {
                  "body": [
                    {
                      "collected_at": "2019-09-27T13:01:41Z",
                      "created_at": "2022-02-09T08:45:50Z",
                      "datos_informativos": {
                        "datos_informativos": {
                          "key": "value",
                        },
                      },
                      "deducciones_personales": {
                        "deducciones_personales": {
                          "key": "value",
                        },
                      },
                      "determinacion_impuesto": {
                        "determinacion_impuesto": {
                          "key": "value",
                        },
                      },
                      "dividendos": {
                        "dividendos": {
                          "key": "value",
                        },
                      },
                      "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                      "informacion_general": {
                        "informacion_general": {
                          "key": "value",
                        },
                      },
                      "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                      "pdf": "=PDF-STRING=",
                      "receipt_pdf": "=PDF-STRING=",
                      "retenciones": {
                        "retenciones": {
                          "key": "value",
                        },
                      },
                      "servicios_profesionales": {
                        "servicios_profesionales": {
                          "key": "value",
                        },
                      },
                      "sueldos_salarios": {
                        "sueldos_salarios": {
                          "key": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/api/tax-returns",
            "request": {
              "body": "RetrieveTaxReturnsRequestBody",
              "name": "RetrieveTaxReturnsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<RetrieveTaxReturnsResponseItem>",
            },
          },
        },
      },
      "types": {
        "DetailTaxReturnResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.TaxReturnPersonal",
            "root.TaxReturnPersonalMonthly",
            "root.TaxReturnBusiness",
            "root.TaxReturnBusinessMonthly",
          ],
        },
        "ListTaxReturnsResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.TaxReturnsPersonalPaginated",
            "root.TaxReturnsPersonalMonthlyPaginated",
            "root.TaxReturnsBusinessPaginated",
            "root.TaxReturnsBusinessMonthlyPaginated",
          ],
        },
        "RetrieveTaxReturnsRequestBody": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.TaxReturnsMonthlyRequest",
            "root.TaxReturnsYearlyRequest",
          ],
        },
        "RetrieveTaxReturnsResponseItem": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.TaxReturnPersonal",
            "root.TaxReturnPersonalMonthly",
            "root.TaxReturnBusiness",
            "root.TaxReturnBusinessMonthly",
          ],
        },
      },
    },
    "taxStatus.yml": {
      "docs": "Our **Tax status** endpoint lets you retrieve information about a person's or business's tax situation, according to the country's tax authority. 

- For SAT (Mexico), this information is extracted from the _Constancia de situación fiscal_ document.
- For DIAN (Colombia), this information is extracted from the _Registro Único Tributario_ document.



### **🔦 Filterable fields**

Please see the table below for an alphabetized list of fields that you can filter your responses by. For more information on how to use filters, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) article.

| Field         | Available Filters                 |
| ------------- | --------------------------------- |
| \`created_at \` | \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`id\`          | \`=\`, \`in\`                         |
| \`link\`        | \`=\`, \`in\`                         |

\`\`\`curl cURL
# Filtering results so that you get institutions from just one link:
https://api.belvo.com/api/institutions/?link=link
\`\`\`
\`\`\`javascript Node
//  Filtering results so that you get institutions from just one link:
client.taxstatus.list({
  filters: {
    link: "link_id"
  }
})

\`\`\`
\`\`\`python Python
# Filtering results so that you get institutions from just one link:
client.TaxStatus.list(link="link")
\`\`\`
\`\`\`ruby Ruby
# Filtering results so that you get institutions from just one link:
client.tax_status.list(params: {
  link: "link"
})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Tax status",
        "endpoints": {
          "DestroyTaxStatus": {
            "auth": true,
            "display-name": "Delete a tax status",
            "docs": "Delete a specific tax status from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/tax-status/{id}",
            "path-parameters": {
              "id": {
                "docs": "the \`tax-status.id\` that you want to delete",
                "type": "string",
              },
            },
          },
          "DetailTaxStatus": {
            "auth": true,
            "display-name": "Get a tax status's details",
            "docs": "Get the details of a specific tax status.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "address": {
                      "between_street": [
                        {},
                      ],
                      "exterior_number": "432",
                      "interior_number": "PLANTA BAJA",
                      "locality": "none",
                      "municipality": "CDMX DC",
                      "postal_code": "21255",
                      "state": "Federal",
                      "street": "LA MALINCHE",
                      "street_type": "CALLE",
                      "suburb": "BUENAVENTURA",
                    },
                    "collected_at": "2020-04-23T21:32:55Z",
                    "created_at": "2022-02-09T08:45:50Z",
                    "digital_stamp": "||2020/04/26|GHTF980303F7|CONSTANCIA DE SITUACIÓN FISCAL|2044441088666600000034||",
                    "digital_stamp_chain": "EtenSA9t1adG7bn+Jj23kj43JK+XbMPxdOppwabhXD+pXseSqYowWWDna0mpUk3264lkj2345j23faNZB852dCDt9KAjow=",
                    "economic_activity": [
                      {
                        "economic_activity": "Asalariado",
                        "end_date": "end_date",
                        "initial_date": "2020-12-06",
                        "order": "2",
                        "percentage": "1",
                      },
                    ],
                    "id": "21e9e25b-10a8-48a5-9e6a-4072b364b53f",
                    "id_cif": "12345678901",
                    "link": "c2280c05-cbeb-4a29-ae53-8f837a77995b",
                    "obligations": [
                      {
                        "end_date": "end_date",
                        "expiration": "Conjuntamente con la declaración anual del ejercicio.",
                        "initial_date": "2020-12-06",
                        "obligation": "Declaración informativa de IVA con la anual de ISR",
                      },
                    ],
                    "official_name": "John Doe",
                    "pdf": "=PDF-STRING=",
                    "place_and_date_of_issuance": "TLALPAN , CIUDAD DE MEXICO A 19 DE MARZO DE 2020",
                    "regimes": [
                      {
                        "end_date": "end_date",
                        "initial_date": "2020-12-06",
                        "regimen": "Régimen de Ingresos por Dividendos (socios y accionistas)",
                      },
                    ],
                    "tax_payer_information": {
                      "commercial_name": "Jar Jar Transport",
                      "curp": "curp",
                      "email": "john_doe@gmail.com",
                      "first_last_name": "DOE",
                      "last_status_change_date": "last_status_change_date",
                      "name": "JOHN",
                      "phone": "1234567890",
                      "rfc": "BEMP12345G58",
                      "second_last_name": "SCHMOE",
                      "social_name": "John Doe SA DE CV",
                      "start_operations_date": "start_operations_date",
                      "status_padron": "status_padron",
                    },
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/tax-status/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`tax-status.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailTaxStatusRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "DetailTaxStatusResponse",
            },
          },
          "ListTaxStatus": {
            "auth": true,
            "display-name": "List all tax statuses",
            "docs": "Get a paginated list of all existing tax status in your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "created_at__gt": "2022-05-05",
                  "created_at__gte": "2022-05-04",
                  "created_at__lt": "2022-04-01",
                  "created_at__lte": "2022-03-30",
                  "created_at__range": "2022-03-03,2022-05-04",
                  "fields": "link,balance,account",
                  "id": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73",
                  "id__in": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "link__in": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "address": {
                          "postal_code": "21255",
                        },
                        "collected_at": "2020-04-23T21:32:55Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "digital_stamp": "||2020/04/26|GHTF980303F7|CONSTANCIA DE SITUACIÓN FISCAL|2044441088666600000034||",
                        "digital_stamp_chain": "EtenSA9t1adG7bn+Jj23kj43JK+XbMPxdOppwabhXD+pXseSqYowWWDna0mpUk3264lkj2345j23faNZB852dCDt9KAjow=",
                        "economic_activity": [
                          {},
                        ],
                        "id": "21e9e25b-10a8-48a5-9e6a-4072b364b53f",
                        "id_cif": "12345678901",
                        "link": "c2280c05-cbeb-4a29-ae53-8f837a77995b",
                        "obligations": [
                          {},
                        ],
                        "official_name": "John Doe",
                        "pdf": "=PDF-STRING=",
                        "place_and_date_of_issuance": "TLALPAN , CIUDAD DE MEXICO A 19 DE MARZO DE 2020",
                        "regimes": [
                          {
                            "initial_date": "2020-12-06",
                            "regimen": "Régimen de Ingresos por Dividendos (socios y accionistas)",
                          },
                        ],
                        "tax_payer_information": {
                          "rfc": "BEMP12345G58",
                        },
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/tax-status",
            "request": {
              "name": "ListTaxStatusRequest",
              "query-parameters": {
                "created_at__gt": {
                  "docs": "Return tax statuses that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return tax statuses that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return tax statuses that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return tax statuses that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return tax statuses that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "id": {
                  "docs": "Return information for this \`tax-status.id\`.",
                  "type": "optional<string>",
                },
                "id__in": {
                  "docs": "Return information for these \`tax-status.id\`s.",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "link__in": {
                  "docs": "Return information for these \`link.id\`s.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.TaxStatusPaginatedResponse",
            },
          },
          "RetrieveTaxStatus": {
            "auth": true,
            "display-name": "Retrieve tax statuses for a link",
            "docs": "Retrieve tax status information for a specific fiscal link.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "d4617561-1c01-4b2f-83b6-a594f7b3bc57",
                  "save_data": true,
                },
                "response": {
                  "body": {
                    "address": {
                      "between_street": [
                        {},
                      ],
                      "exterior_number": "432",
                      "interior_number": "PLANTA BAJA",
                      "locality": "none",
                      "municipality": "CDMX DC",
                      "postal_code": "21255",
                      "state": "Federal",
                      "street": "LA MALINCHE",
                      "street_type": "CALLE",
                      "suburb": "BUENAVENTURA",
                    },
                    "collected_at": "2020-04-23T21:32:55Z",
                    "created_at": "2022-02-09T08:45:50Z",
                    "digital_stamp": "||2020/04/26|GHTF980303F7|CONSTANCIA DE SITUACIÓN FISCAL|2044441088666600000034||",
                    "digital_stamp_chain": "EtenSA9t1adG7bn+Jj23kj43JK+XbMPxdOppwabhXD+pXseSqYowWWDna0mpUk3264lkj2345j23faNZB852dCDt9KAjow=",
                    "economic_activity": [
                      {
                        "economic_activity": "Asalariado",
                        "end_date": "end_date",
                        "initial_date": "2020-12-06",
                        "order": "2",
                        "percentage": "1",
                      },
                    ],
                    "id": "21e9e25b-10a8-48a5-9e6a-4072b364b53f",
                    "id_cif": "12345678901",
                    "link": "c2280c05-cbeb-4a29-ae53-8f837a77995b",
                    "obligations": [
                      {
                        "end_date": "end_date",
                        "expiration": "Conjuntamente con la declaración anual del ejercicio.",
                        "initial_date": "2020-12-06",
                        "obligation": "Declaración informativa de IVA con la anual de ISR",
                      },
                    ],
                    "official_name": "John Doe",
                    "pdf": "=PDF-STRING=",
                    "place_and_date_of_issuance": "TLALPAN , CIUDAD DE MEXICO A 19 DE MARZO DE 2020",
                    "regimes": [
                      {
                        "end_date": "end_date",
                        "initial_date": "2020-12-06",
                        "regimen": "Régimen de Ingresos por Dividendos (socios y accionistas)",
                      },
                    ],
                    "tax_payer_information": {
                      "commercial_name": "Jar Jar Transport",
                      "curp": "curp",
                      "email": "john_doe@gmail.com",
                      "first_last_name": "DOE",
                      "last_status_change_date": "last_status_change_date",
                      "name": "JOHN",
                      "phone": "1234567890",
                      "rfc": "BEMP12345G58",
                      "second_last_name": "SCHMOE",
                      "social_name": "John Doe SA DE CV",
                      "start_operations_date": "start_operations_date",
                      "status_padron": "status_padron",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/api/tax-status",
            "request": {
              "body": {
                "properties": {
                  "attach_pdf": {
                    "docs": "When set to \`true\`, you will receive the PDF in binary format in the response.",
                    "type": "optional<boolean>",
                  },
                  "link": {
                    "docs": "The fiscal \`link.id\` to use.",
                    "type": "string",
                  },
                  "save_data": {
                    "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "TaxStatusRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "RetrieveTaxStatusResponse",
            },
          },
        },
      },
      "types": {
        "DetailTaxStatusResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.TaxStatusSat",
            "root.TaxStatusDian",
          ],
        },
        "RetrieveTaxStatusResponse": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "root.TaxStatusSat",
            "root.TaxStatusDian",
          ],
        },
      },
    },
    "transactions.yml": {
      "docs": "A **transaction** contains the detailed information of each movement inside an account. For example, a purchase at a store or a restaurant.

### **🔦 Filterable fields**

Please see the table below for an alphabetized list of fields that you can filter your responses by. For more information on how to use filters, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) article.

| Field                         | Available Filters                      |
| ----------------------------- | -------------------------------------- |
| \`account\`                     | \`=\`, \`in\`                              |
| \`account**balance**available\` | \`=\`, \`lt\`, \`lte\`, \`range\`              |
| \`account**balance**current\`   | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`account_type\`                | \`=\`, \`in\`                              |
| \`accounting_date\`             | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`amount\`                      | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |
| \`credit_card_data__bill_name\` | \`=\`, \`in\`                              |
| \`created_at \`                 | \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\`      |
| \`currency\`                    | \`=\`, \`in\`                              |
| \`id\`                          | \`=\`, \`in\`                              |
| \`institution\`                 | \`=\`, \`in\`                              |
| \`link\`                        | \`=\`, \`in\`                              |
| \`reference\`                   | \`=\`, \`in\`                              |
| \`status\`                      | \`=\`, \`in\`                              |
| \`type\`                        | \`=\`, \`in\`                              |
| \`value_date\`                  | \`=\`, \`gt\`, \`gte\`, \`lt\`, \`lte\`, \`range\` |

\`\`\`curl cURL
# Filtering results to have transactions just from one link
https://api.belvo.com/api/transactions/?link=link_id

# Filtering results to have transactions just form one link and between a date range
https://api.belvo.com/api/transactions/?link=link_id&value_date__range=2020-10-01,2020-12-01

\`\`\`
\`\`\`javascript Node
// Filtering results to have transactions just from one link

client.transactions.list({
  filters: {
    link: "link_id"
  }
})

// Filtering results to have transactions just form one link and between a date range
client.transactions.list({
  filters: {
    link: "link_id",
    value_date__range: "2020-10-01,2020-12-01"
  }
})

\`\`\`
\`\`\`python Python
# Filtering results to have links just from two institutions
client.Transactions.list(link="link_id")

# Filtering results from one institution and a certain status
client.Transactions.list(link="link_id", value_date__range="2020-10-01,2020-12-01")

\`\`\`
\`\`\`ruby Ruby
# Filtering results to have links just from two institutions
client.transactions.list(params: {
  link: "link_id"
})

# Filtering results from one institution and a certain status
client.transactions.list(params: {
  link: "link_id",
  value_date__range: "2020-10-01,2020-12-01"
})
\`\`\`",
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "display-name": "Transactions",
        "endpoints": {
          "DestroyTransaction": {
            "auth": true,
            "display-name": "Delete a transaction",
            "docs": "Delete a specific transaction from your Belvo account.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
              },
            ],
            "method": "DELETE",
            "path": "/api/transactions/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`transaction.id\` that you want to delete.",
                "type": "string",
              },
            },
          },
          "DetailTransaction": {
            "auth": true,
            "display-name": "Get a transaction's details",
            "docs": "Get the details of a specific transaction.",
            "errors": [
              "root.UnauthorizedError",
              "root.NotFoundError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "id",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "response": {
                  "body": {
                    "account": {
                      "balance": {
                        "available": 5621.12,
                        "current": 5874.13,
                      },
                      "balance_type": "ASSET",
                      "bank_product_id": "bank_product_id",
                      "category": "CHECKING_ACCOUNT",
                      "collected_at": "2019-09-27T13:01:41Z",
                      "created_at": "2022-02-09T08:45:50Z",
                      "credit_data": {
                        "collected_at": "2019-09-27T13:01:41Z",
                        "credit_limit": 192000,
                        "cutting_date": "2019-12-11",
                        "end_date": "end_date",
                        "interest_rate": 4,
                        "last_payment_date": "last_payment_date",
                        "minimum_payment": 2400.3,
                        "monthly_payment": 1.1,
                        "next_payment_date": "2019-12-13",
                        "no_interest_payment": 2690.83,
                      },
                      "currency": "MXN",
                      "funds_data": [
                        {
                          "collected_at": "2020-04-23T21:32:55Z",
                        },
                      ],
                      "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                      "institution": {
                        "name": "erebor_mx_retail",
                        "type": "bank",
                      },
                      "internal_identification": "internal_identification",
                      "last_accessed_at": "2021-03-09T10:28:40Z",
                      "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                      "loan_data": {
                        "collected_at": "2022-02-09T08:45:50Z",
                        "contract_amount": 202000,
                        "contract_end_date": "2027-10-01",
                        "contract_number": "890ASLDJF87SD00",
                        "contract_start_date": "2020-03-01",
                        "credit_limit": 1.1,
                        "cutting_date": "cutting_date",
                        "cutting_day": "cutting_day",
                        "fees": [
                          {
                            "type": "OPERATION_FEE",
                            "value": 5.6,
                          },
                        ],
                        "interest_rate": 1.1,
                        "interest_rates": [
                          {
                            "name": "jurosEfetivo",
                            "value": 7.85,
                          },
                        ],
                        "last_payment_date": "last_payment_date",
                        "last_period_balance": 1.1,
                        "limit_day": "limit_day",
                        "loan_type": "Consignado",
                        "monthly_payment": 1000,
                        "no_interest_payment": 1.1,
                        "number_of_installments_outstanding": 48,
                        "number_of_installments_total": 60,
                        "outstanding_balance": 182000,
                        "outstanding_principal": 142023,
                        "payment_day": "27",
                        "principal": 192000,
                      },
                      "name": "Cuenta Perfiles- M.N. - MXN-666",
                      "number": "4057068115181",
                      "public_identification_name": "CLABE",
                      "public_identification_value": "150194683119900273",
                      "receivables_data": {
                        "anticipated": 1393.46,
                        "available": 800.37,
                        "collected_at": "2022-02-09T08:45:50Z",
                        "current": 2193.83,
                      },
                      "type": "Cuentas de efectivo",
                    },
                    "accounting_date": "2019-10-23T13:01:41Z",
                    "amount": 2145.45,
                    "balance": 16907.96,
                    "category": "Income & Payments",
                    "collected_at": "2019-11-28T10:27:44Z",
                    "created_at": "2022-02-09T08:45:50Z",
                    "credit_card_data": {
                      "bill_amount": 300,
                      "bill_name": "apr-2020",
                      "bill_status": "PAID",
                      "collected_at": "2019-09-27T13:01:41Z",
                      "previous_bill_total": "9614.30",
                    },
                    "currency": "BRL",
                    "description": "SEVEN BUDDHAS RFC:XXXXXXXXXX",
                    "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                    "internal_identification": "TXpRMU9UQTROMWhZV2xSU1FUazJSMDl",
                    "merchant": {
                      "logo": "https://logo.clearbit.com/asesor-contable.es",
                      "merchant_name": "Merchants R Us Global",
                      "website": "https://merchants-r-us.com",
                    },
                    "observations": "OPTIONAL OBSERVATIONS",
                    "reference": "8703",
                    "status": "PROCESSED",
                    "subcategory": "Freelance",
                    "type": "INFLOW",
                    "value_date": "2019-10-23",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/transactions/{id}",
            "path-parameters": {
              "id": {
                "docs": "The \`transaction.id\` you want to get detailed information about.",
                "type": "string",
              },
            },
            "request": {
              "name": "DetailTransactionRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.Transaction",
            },
          },
          "ListTransactions": {
            "auth": true,
            "display-name": "List all transactions",
            "docs": "Get a paginated list of all existing transactions in your Belvo account. By default, we return up to 100 results per page.",
            "errors": [
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "account": "d979df3a-5d0f-4cc9-9bd4-b75c28b45963",
                  "account__balance__available": "4000.00",
                  "account__balance__available__lt": "6000.00",
                  "account__balance__available__lte": "5999.00",
                  "account__balance__available__range": "3000.00,4350.00",
                  "account__balance__current": "4000.00",
                  "account__balance__current__gt": "4020.00",
                  "account__balance__current__gte": "4019.00",
                  "account__balance__current__lt": "3000.00",
                  "account__balance__current__lte": "2999.00",
                  "account__balance__current__range": "2999.00,4000.00",
                  "account__in": "24ccab1d-3a86-4136-a6eb-e04bf52b356f,beb2b197-3cf7-428d-bef3-f415c0d57509",
                  "account_type": "Cuentas de efectivo",
                  "account_type__in": "Cuentas de efectivo,Depositos Ahorro",
                  "accounting_date": "2022-05-05",
                  "accounting_date__gt": "2022-05-06",
                  "accounting_date__gte": "2022-05-04",
                  "accounting_date__lt": "2022-03-02",
                  "accounting_date__lte": "2022-03-01",
                  "accounting_date__range": "2022-03-01,2022-05-06",
                  "amount": "1000.00",
                  "amount__gt": "520.00",
                  "amount__gte": "519.00",
                  "amount__lt": "540.00",
                  "amount__lte": "541.00",
                  "amount__range": "519.00,541.00",
                  "collected_at": "2022-05-01",
                  "collected_at__gt": "2022-05-05",
                  "collected_at__gte": "2022-05-04",
                  "collected_at__lt": "2022-04-01",
                  "collected_at__lte": "2022-03-30",
                  "collected_at__range": "2022-03-03,2022-05-04",
                  "created_at": "2022-05-01",
                  "created_at__gt": "2022-05-05",
                  "created_at__gte": "2022-05-04",
                  "created_at__lt": "2022-04-01",
                  "created_at__lte": "2022-03-30",
                  "created_at__range": "2022-03-03,2022-05-04",
                  "credit_card_data__bill_name__in": "maio-2022,feb-2022",
                  "currency": "COP",
                  "currency__in": "COP,MXN",
                  "fields": "link,balance,account",
                  "link": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4",
                  "omit": "link,balance",
                  "page": 1,
                  "page_size": 100,
                  "reference": "085904452810319225",
                  "reference__in": "085904452810319225,8703",
                  "status": "PENDING",
                  "status__in": "PENDING,PROCESSED",
                  "type": "OUTFLOW",
                  "type__in": "INFLOW,OUTFLOW",
                  "value_date": "2022-05-05",
                  "value_date__gt": "2022-05-06",
                  "value_date__gte": "2022-05-04",
                  "value_date__lt": "2022-03-02",
                  "value_date__lte": "2022-03-01",
                  "value_date__range": "2022-03-01,2022-05-06",
                },
                "response": {
                  "body": {
                    "count": 130,
                    "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
                    "previous": "previous",
                    "results": [
                      {
                        "account": {
                          "balance": {
                            "current": 5874.13,
                          },
                          "balance_type": "ASSET",
                          "category": "CHECKING_ACCOUNT",
                          "collected_at": "2019-09-27T13:01:41Z",
                          "created_at": "2022-02-09T08:45:50Z",
                          "currency": "MXN",
                          "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                          "last_accessed_at": "2021-03-09T10:28:40Z",
                          "loan_data": {
                            "collected_at": "2022-02-09T08:45:50Z",
                            "contract_end_date": "2027-10-01",
                            "monthly_payment": 1000,
                            "outstanding_balance": 182000,
                            "principal": 192000,
                          },
                          "name": "Cuenta Perfiles- M.N. - MXN-666",
                          "number": "4057068115181",
                          "public_identification_name": "CLABE",
                          "public_identification_value": "150194683119900273",
                          "type": "Cuentas de efectivo",
                        },
                        "accounting_date": "2019-10-23T13:01:41Z",
                        "amount": 2145.45,
                        "balance": 16907.96,
                        "category": "Income & Payments",
                        "collected_at": "2019-11-28T10:27:44Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "currency": "BRL",
                        "description": "SEVEN BUDDHAS RFC:XXXXXXXXXX",
                        "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                        "internal_identification": "TXpRMU9UQTROMWhZV2xSU1FUazJSMDl",
                        "merchant": {
                          "merchant_name": "Merchants R Us Global",
                        },
                        "observations": "OPTIONAL OBSERVATIONS",
                        "reference": "8703",
                        "status": "PROCESSED",
                        "subcategory": "Freelance",
                        "type": "INFLOW",
                        "value_date": "2019-10-23",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/api/transactions",
            "request": {
              "name": "ListTransactionsRequest",
              "query-parameters": {
                "account": {
                  "docs": "The \`account.id\` you want to filter by.

ℹ️ We highly recommend adding the \`account.id\` filter in order to improve your performance.
",
                  "type": "optional<string>",
                },
                "account__balance__available": {
                  "docs": "Return transactions that have a \`account.balance.available\` matching exactly this value.",
                  "type": "optional<string>",
                },
                "account__balance__available__lt": {
                  "docs": "Return transactions that have a \`account.balance.available\` less than this value.",
                  "type": "optional<string>",
                },
                "account__balance__available__lte": {
                  "docs": "Return transactions that have a \`account.balance.available\` less than or equal to this value.",
                  "type": "optional<string>",
                },
                "account__balance__available__range": {
                  "docs": "Return transactions that have a \`account.balance.available\` within a range of two values.",
                  "type": "optional<string>",
                },
                "account__balance__current": {
                  "docs": "Return transactions that have a \`account.balance.current\` matching exactly this value.",
                  "type": "optional<string>",
                },
                "account__balance__current__gt": {
                  "docs": "Return transactions that have a \`account.balance.current\` greater than this value.",
                  "type": "optional<string>",
                },
                "account__balance__current__gte": {
                  "docs": "Return transactions that have a \`account.balance.current\` greater than or equal to this value.",
                  "type": "optional<string>",
                },
                "account__balance__current__lt": {
                  "docs": "Return transactions that have a \`account.balance.current\` less than this value.",
                  "type": "optional<string>",
                },
                "account__balance__current__lte": {
                  "docs": "Return transactions that have a \`account.balance.current\` less than or equal to this value.",
                  "type": "optional<string>",
                },
                "account__balance__current__range": {
                  "docs": "Return transactions that have a \`account.balance.current\` within a range of two values.",
                  "type": "optional<string>",
                },
                "account__in": {
                  "docs": "Return transactions only for these \`account.id\`s.",
                  "type": "optional<string>",
                },
                "account_type": {
                  "docs": "Return information only for transactions matching this account type, as designated by the institution.",
                  "type": "optional<string>",
                },
                "account_type__in": {
                  "docs": "Return information only for transactions matching these account types, as designated by the institution.",
                  "type": "optional<string>",
                },
                "accounting_date": {
                  "docs": "Return transactions that were processed by the institution on exactly this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "accounting_date__gt": {
                  "docs": "Return transactions that were processed by the institution after this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "accounting_date__gte": {
                  "docs": "Return transactions that were processed by the institution on this date or later (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "accounting_date__lt": {
                  "docs": "Return transactions that were processed by the institution before this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "accounting_date__lte": {
                  "docs": "Return transactions that were processed by the institution on this date or earlier (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "accounting_date__range": {
                  "docs": "Return transactions that were processed by the institution in this date range (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "amount": {
                  "docs": "Return transactions matching exactly this value.",
                  "type": "optional<string>",
                },
                "amount__gt": {
                  "docs": "Return transactions greater than this value.",
                  "type": "optional<string>",
                },
                "amount__gte": {
                  "docs": "Return transactions greater than or equal to this value.",
                  "type": "optional<string>",
                },
                "amount__lt": {
                  "docs": "Return transactions less than this value.",
                  "type": "optional<string>",
                },
                "amount__lte": {
                  "docs": "Return transactions less than or equal to this value.",
                  "type": "optional<string>",
                },
                "amount__range": {
                  "docs": "Return transactions between these two values.",
                  "type": "optional<string>",
                },
                "collected_at": {
                  "docs": "Return transactions that were retrieved from the institution on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "collected_at__gt": {
                  "docs": "Return transactions that were retrieved from the institution after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "collected_at__gte": {
                  "docs": "Return transactions that were retrieved from the institution after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "collected_at__lt": {
                  "docs": "Return transactions that were retrieved from the institution before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "collected_at__lte": {
                  "docs": "Return transactions that were retrieved from the institution before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "collected_at__range": {
                  "docs": "Return transactions that were retrieved from the institution between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at": {
                  "docs": "Return transactions that were last updated in Belvo's database on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gt": {
                  "docs": "Return transactions that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__gte": {
                  "docs": "Return transactions that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lt": {
                  "docs": "Return transactions that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__lte": {
                  "docs": "Return transactions that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "created_at__range": {
                  "docs": "Return transactions that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
                  "type": "optional<string>",
                },
                "credit_card_data__bill_name__in": {
                  "docs": "Return transactions for one of these bill names.",
                  "type": "optional<string>",
                },
                "currency": {
                  "docs": "Return transactions in only this three-letter currency code.",
                  "type": "optional<string>",
                },
                "currency__in": {
                  "docs": "Return transactions in one of these three-letter currency codes.",
                  "type": "optional<string>",
                },
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "link": {
                  "docs": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`account.id\` filter as well in order to improve your performance.
",
                  "type": "string",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "page": {
                  "docs": "A page number within the paginated result set.",
                  "type": "optional<integer>",
                },
                "page_size": {
                  "docs": "Indicates how many results to return per page. By default we return 100 results per page.

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
                  "type": "optional<integer>",
                },
                "reference": {
                  "docs": "Returns transactions with this institution-assigned reference number.",
                  "type": "optional<string>",
                },
                "reference__in": {
                  "docs": "Returns transactions with these institution-assigned reference numbers.",
                  "type": "optional<string>",
                },
                "status": {
                  "docs": "Return transactions with this status. Can be either \`PENDING\`, \`PROCESSED\`, or \`UNCATEGORIZED\`.",
                  "type": "optional<string>",
                },
                "status__in": {
                  "docs": "Return transactions with these statuses. Can be either \`PENDING\`, \`PROCESSED\`, or \`UNCATEGORIZED\`.",
                  "type": "optional<string>",
                },
                "type": {
                  "docs": "Return transactions with this type. Can be either \`INFLOW\` or \`OUTFLOW\`.",
                  "type": "optional<string>",
                },
                "type__in": {
                  "docs": "Return transactions with this types. Can be either \`INFLOW\` or \`OUTFLOW\`.",
                  "type": "optional<string>",
                },
                "value_date": {
                  "docs": "Return transactions that occurred on exactly this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__gt": {
                  "docs": "Return transactions that occurred after this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__gte": {
                  "docs": "Return transactions that occurred on this date or later (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__lt": {
                  "docs": "Return transactions that occurred before this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__lte": {
                  "docs": "Return transactions that occurred on this date or earlier (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
                "value_date__range": {
                  "docs": "Return transactions for this date range (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok",
              "type": "root.TransactionsPaginatedResponse",
            },
          },
          "PatchTransactions": {
            "auth": true,
            "display-name": "Complete a transactions request",
            "docs": "Used to resume a Transaction retrieve session that was paused because an MFA token was required by the institution.",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "link": "683005d6-f45c-4adb-b289-f1a12f50f80c",
                  "save_data": true,
                  "session": "6e7b283c6efa449c9c028a16b5c249fa",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "account": {
                        "balance": {
                          "current": 5874.13,
                        },
                        "balance_type": "ASSET",
                        "bank_product_id": "bank_product_id",
                        "category": "CHECKING_ACCOUNT",
                        "collected_at": "2019-09-27T13:01:41Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "credit_data": {
                          "collected_at": "2019-09-27T13:01:41Z",
                          "credit_limit": 192000,
                          "cutting_date": "2019-12-11",
                          "interest_rate": 4,
                          "minimum_payment": 2400.3,
                          "next_payment_date": "2019-12-13",
                          "no_interest_payment": 2690.83,
                        },
                        "currency": "MXN",
                        "funds_data": [
                          {
                            "collected_at": "2020-04-23T21:32:55Z",
                          },
                        ],
                        "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                        "institution": {
                          "name": "erebor_mx_retail",
                        },
                        "internal_identification": "internal_identification",
                        "last_accessed_at": "2021-03-09T10:28:40Z",
                        "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "loan_data": {
                          "collected_at": "2022-02-09T08:45:50Z",
                          "contract_end_date": "2027-10-01",
                          "monthly_payment": 1000,
                          "outstanding_balance": 182000,
                          "principal": 192000,
                        },
                        "name": "Cuenta Perfiles- M.N. - MXN-666",
                        "number": "4057068115181",
                        "public_identification_name": "CLABE",
                        "public_identification_value": "150194683119900273",
                        "receivables_data": {
                          "anticipated": 1393.46,
                          "available": 800.37,
                          "collected_at": "2022-02-09T08:45:50Z",
                          "current": 2193.83,
                        },
                        "type": "Cuentas de efectivo",
                      },
                      "accounting_date": "2019-10-23T13:01:41Z",
                      "amount": 2145.45,
                      "balance": 16907.96,
                      "category": "Income & Payments",
                      "collected_at": "2019-11-28T10:27:44Z",
                      "created_at": "2022-02-09T08:45:50Z",
                      "credit_card_data": {
                        "bill_amount": 300,
                        "bill_name": "apr-2020",
                        "bill_status": "PAID",
                        "collected_at": "2019-09-27T13:01:41Z",
                        "previous_bill_total": "9614.30",
                      },
                      "currency": "BRL",
                      "description": "SEVEN BUDDHAS RFC:XXXXXXXXXX",
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "internal_identification": "TXpRMU9UQTROMWhZV2xSU1FUazJSMDl",
                      "merchant": {
                        "logo": "https://logo.clearbit.com/asesor-contable.es",
                        "merchant_name": "Merchants R Us Global",
                        "website": "https://merchants-r-us.com",
                      },
                      "observations": "OPTIONAL OBSERVATIONS",
                      "reference": "8703",
                      "status": "PROCESSED",
                      "subcategory": "Freelance",
                      "type": "INFLOW",
                      "value_date": "2019-10-23",
                    },
                  ],
                },
              },
            ],
            "method": "PATCH",
            "path": "/api/transactions",
            "request": {
              "body": "root.PatchBody",
              "name": "PatchTransactionsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<root.Transaction>",
            },
          },
          "RetrieveTransactions": {
            "auth": true,
            "display-name": "Retrieve transactions for a link",
            "docs": "Retrieve transactions for one or more accounts from a specific link.
<div style="background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px"> <strong>Info: </strong> When retrieving transactions, it is important to understand that the available transaction data ranges depend on each institution. <br><br>
If you try to access older information than what we can access, we will return all the data we can read within that date range. For example, if you request transactions for the last year and we can only access the last six months, we will return the information corresponding to these six months of data. </div>
",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "account": "d4617561-1c01-4b2f-83b6-a594f7b3bc57",
                  "date_from": "2020-08-05",
                  "date_to": "2020-10-05",
                  "link": "2ccd5e15-194a-4a19-a45a-e7223c7e6717",
                  "token": "1234ab",
                },
                "response": {
                  "body": [
                    {
                      "account": {
                        "balance": {
                          "current": 5874.13,
                        },
                        "balance_type": "ASSET",
                        "bank_product_id": "bank_product_id",
                        "category": "CHECKING_ACCOUNT",
                        "collected_at": "2019-09-27T13:01:41Z",
                        "created_at": "2022-02-09T08:45:50Z",
                        "credit_data": {
                          "collected_at": "2019-09-27T13:01:41Z",
                          "credit_limit": 192000,
                          "cutting_date": "2019-12-11",
                          "interest_rate": 4,
                          "minimum_payment": 2400.3,
                          "next_payment_date": "2019-12-13",
                          "no_interest_payment": 2690.83,
                        },
                        "currency": "MXN",
                        "funds_data": [
                          {
                            "collected_at": "2020-04-23T21:32:55Z",
                          },
                        ],
                        "id": "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
                        "institution": {
                          "name": "erebor_mx_retail",
                        },
                        "internal_identification": "internal_identification",
                        "last_accessed_at": "2021-03-09T10:28:40Z",
                        "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                        "loan_data": {
                          "collected_at": "2022-02-09T08:45:50Z",
                          "contract_end_date": "2027-10-01",
                          "monthly_payment": 1000,
                          "outstanding_balance": 182000,
                          "principal": 192000,
                        },
                        "name": "Cuenta Perfiles- M.N. - MXN-666",
                        "number": "4057068115181",
                        "public_identification_name": "CLABE",
                        "public_identification_value": "150194683119900273",
                        "receivables_data": {
                          "anticipated": 1393.46,
                          "available": 800.37,
                          "collected_at": "2022-02-09T08:45:50Z",
                          "current": 2193.83,
                        },
                        "type": "Cuentas de efectivo",
                      },
                      "accounting_date": "2019-10-23T13:01:41Z",
                      "amount": 2145.45,
                      "balance": 16907.96,
                      "category": "Income & Payments",
                      "collected_at": "2019-11-28T10:27:44Z",
                      "created_at": "2022-02-09T08:45:50Z",
                      "credit_card_data": {
                        "bill_amount": 300,
                        "bill_name": "apr-2020",
                        "bill_status": "PAID",
                        "collected_at": "2019-09-27T13:01:41Z",
                        "previous_bill_total": "9614.30",
                      },
                      "currency": "BRL",
                      "description": "SEVEN BUDDHAS RFC:XXXXXXXXXX",
                      "id": "076c66e5-90f5-4e01-99c7-50e32f65ae42",
                      "internal_identification": "TXpRMU9UQTROMWhZV2xSU1FUazJSMDl",
                      "merchant": {
                        "logo": "https://logo.clearbit.com/asesor-contable.es",
                        "merchant_name": "Merchants R Us Global",
                        "website": "https://merchants-r-us.com",
                      },
                      "observations": "OPTIONAL OBSERVATIONS",
                      "reference": "8703",
                      "status": "PROCESSED",
                      "subcategory": "Freelance",
                      "type": "INFLOW",
                      "value_date": "2019-10-23",
                    },
                  ],
                },
              },
            ],
            "method": "POST",
            "path": "/api/transactions",
            "request": {
              "body": "root.TransactionsRequest",
              "name": "RetrieveTransactionsRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Ok (when \`save_data=false\`)",
              "type": "list<root.Transaction>",
            },
          },
          "RetrieveTransactions_async": {
            "auth": true,
            "display-name": "Retrieve transactions for a link",
            "docs": "Retrieve transactions for one or more accounts from a specific link.
<div style="background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px"> <strong>Info: </strong> When retrieving transactions, it is important to understand that the available transaction data ranges depend on each institution. <br><br>
If you try to access older information than what we can access, we will return all the data we can read within that date range. For example, if you request transactions for the last year and we can only access the last six months, we will return the information corresponding to these six months of data. </div>
",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
              "root.RequestTimeoutError",
              "root.PreconditionError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": {
                  "X-Belvo-Request-Mode": "async",
                },
                "query-parameters": {
                  "fields": "link,balance,account",
                  "omit": "link,balance",
                },
                "request": {
                  "account": "d4617561-1c01-4b2f-83b6-a594f7b3bc57",
                  "date_from": "2020-08-05",
                  "date_to": "2020-10-05",
                  "link": "2ccd5e15-194a-4a19-a45a-e7223c7e6717",
                  "token": "1234ab",
                },
                "response": {
                  "body": {
                    "request_id": "b5d0106ac9cc43d5b36199fe831f6bbe",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/api/transactions",
            "request": {
              "body": "root.TransactionsRequest",
              "headers": {
                "X-Belvo-Request-Mode": {
                  "name": "belvoRequestMode",
                  "type": "literal<"async">",
                },
              },
              "name": "RetrieveTransactionsAsyncRequest",
              "query-parameters": {
                "fields": {
                  "docs": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
                "omit": {
                  "docs": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "Accepted (when \`X-Belvo-Request-Mode\` is \`async\`)",
              "type": "root.AsynchronousAccepted202",
            },
          },
        },
      },
    },
  },
  "packageMarkerFile": {
    "errors": {
      "BadRequestError": {
        "status-code": 400,
        "type": "list<BadRequestErrorBodyItem>",
      },
      "ForbiddenError": {
        "status-code": 403,
        "type": "list<AccessToResourceDenied>",
      },
      "InternalServerError": {
        "status-code": 500,
        "type": "list<UnexpectedError>",
      },
      "NotFoundError": {
        "status-code": 404,
        "type": "list<NotFoundErrorBody>",
      },
      "PreconditionError": {
        "status-code": 428,
        "type": "list<TokenRequiredResponse>",
      },
      "RequestTimeoutError": {
        "status-code": 408,
        "type": "list<RequestTimeoutErrorBody>",
      },
      "UnauthorizedError": {
        "status-code": 401,
        "type": "list<UnauthorizedErrorBody>",
      },
    },
    "types": {
      "AccessToResourceDenied": {
        "docs": "This error occurs when you try to access Belvo's resource without the correct permissions.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`access_to_resource_denied\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#403-access_to_resource_denied" target="_blank">403 access_to_resource_denied</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`access_to_resource_denied\` errors, the description is:
  
  - \`You don't have access to this resource.\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "Account": {
        "docs": "Details regarding the account.

**Note**: For our recurring expenses resource, this account relates to the account that was analyzed to generate the recurring expenses report.
",
        "properties": {
          "balance": "AccountsBalance",
          "balance_type": {
            "docs": "Indicates whether this account is either an \`ASSET\` or a \`LIABILITY\`. You can consider the balance of an \`ASSET\` as being positive, while the balance of a \`LIABILITY\` as negative.
",
            "type": "optional<string>",
          },
          "bank_product_id": {
            "docs": "*This field has been deprecated.*

*The institution's product ID for the account type.*
",
            "type": "optional<string>",
          },
          "category": "optional<EnumAccountCategory>",
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "datetime",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "optional<datetime>",
          },
          "credit_data": "optional<AccountsCreditData>",
          "currency": {
            "docs": "The currency of the account. For example:
- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)

 Please note that other currencies other than in the list above may be returned.",
            "type": "optional<string>",
          },
          "funds_data": {
            "docs": "One or more funds that contribute to the the pension account.",
            "type": "optional<list<AccountsFundsData>>",
          },
          "id": {
            "docs": "The unique identifier created by Belvo used to reference the current account.",
            "type": "optional<string>",
          },
          "institution": "optional<InstitutionAccount>",
          "internal_identification": {
            "docs": "*This field has been deprecated.*

*The institution's internal identification for the account.*
",
            "type": "optional<string>",
          },
          "last_accessed_at": {
            "docs": "The ISO-8601 timestamp of Belvo's most recent successful access to the institution for the given link.",
            "type": "optional<datetime>",
          },
          "link": {
            "docs": "The \`link.id\` the account belongs to.",
            "type": "optional<string>",
          },
          "loan_data": "optional<AccountsLoanData>",
          "name": {
            "docs": "The account name, as given by the institution.",
            "type": "optional<string>",
          },
          "number": {
            "docs": "The account number, as designated by the institution.",
            "type": "optional<string>",
          },
          "public_identification_name": {
            "docs": "The public name for the type of identification. For example: \`"CLABE"\`.

ℹ️ For 🇧🇷 Brazilian savings and checking accounts, this field will be \`AGENCY/ACCOUNT\`.
",
            "type": "optional<string>",
          },
          "public_identification_value": {
            "docs": "The value for the \`public_identification_name\`.

ℹ️ For 🇧🇷 Brazilian savings and checking accounts, this field will be the agency and bank account number, separated by a slash.
For example: \`0444/45722-0\`.
",
            "type": "optional<string>",
          },
          "receivables_data": "optional<AccountsReceivablesData>",
          "type": {
            "docs": "The account type, as designated by the institution.",
            "type": "optional<string>",
          },
        },
      },
      "AccountsBalance": {
        "docs": "Details regarding the current and available balances for the account.
",
        "properties": {
          "available": {
            "docs": "The balance that the account owner can use.
- **💰 Checking and saving accounts**:

The available balance may be different to the \`current\` balance due to pending transactions.
- **💳 Credit cards**:

The credit amount the user still has available for the current period. The \`available\` balance may be different to the \`current\` balance due to pending transactions or future instalments.
- **🏡 Loan accounts**:

The present value required to pay off the loan, as provided by the institution.

**Note:** If the institution does not provide this value, we return \`null\`.",
            "type": "optional<double>",
          },
          "current": {
            "docs": "The current balance is calculated differently according to the type of account.

- **💰 Checking and saving accounts**:

The user's account balance at the \`collected_at\` timestamp.
- **💳 Credit cards**:

The amount the user has spent in the current card billing period (see \`credit_data.cutting_date\` for information on when the current billing period finishes).
- **🏡 Loan accounts**:

The amount remaining to pay on the users's loan (same as \`loan_data.outstanding_balance\`).",
            "type": "optional<double>",
          },
        },
      },
      "AccountsCreditData": {
        "docs": "The credit options associated with this account.",
        "properties": {
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "credit_limit": {
            "docs": "The maximum amount of credit the owner can receive.",
            "type": "optional<double>",
          },
          "cutting_date": {
            "docs": "The closing date of the credit period.",
            "type": "optional<string>",
          },
          "end_date": {
            "docs": "*This field has been deprecated.*
",
            "type": "optional<string>",
          },
          "interest_rate": {
            "docs": "The annualized interest rate of the credit.",
            "type": "optional<double>",
          },
          "last_payment_date": {
            "docs": "*This field has been deprecated.*


*The date when the last credit payment was made.*
",
            "type": "optional<string>",
          },
          "minimum_payment": {
            "docs": "The minimum amount to be paid on the \`next_payment_date\`.",
            "type": "optional<double>",
          },
          "monthly_payment": {
            "docs": "*This field has been deprecated.*

*The recurrent monthly payment, if applicable.*
",
            "type": "optional<double>",
          },
          "next_payment_date": {
            "docs": "The due date for the next payment (\`YYYY-MM-DD\`).",
            "type": "optional<string>",
          },
          "no_interest_payment": {
            "docs": "The minimum amount required to pay to avoid generating interest.",
            "type": "optional<double>",
          },
        },
      },
      "AccountsFundsData": {
        "docs": undefined,
        "properties": {
          "balance": {
            "docs": "The amount in the fund.",
            "type": "optional<double>",
          },
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "name": {
            "docs": "The pension fund name.",
            "type": "optional<string>",
          },
          "percentage": {
            "docs": "How much this fund, as a percentage, contributes to the pension account's total.",
            "type": "optional<double>",
          },
          "public_identifications": {
            "docs": "The fund's public IDs.",
            "type": "optional<list<AccountsFundsDataPublicIdentifications>>",
          },
          "type": {
            "docs": "Type of pension fund.",
            "type": "optional<string>",
          },
        },
      },
      "AccountsFundsDataPublicIdentifications": {
        "docs": undefined,
        "properties": {
          "name": {
            "docs": "The type of identification number for the fund.",
            "type": "string",
          },
          "value": {
            "docs": "The fund's identification number.",
            "type": "optional<string>",
          },
        },
      },
      "AccountsLoanData": {
        "docs": "The loan options associated with this account.",
        "properties": {
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "datetime",
          },
          "contract_amount": {
            "docs": "The initial total loan amount, calculated by the institution, when the contract was signed. This amount includes the principal + interest + taxes + fees.",
            "type": "optional<double>",
          },
          "contract_end_date": {
            "docs": "The date when the loan is expected to be completed.",
            "type": "optional<string>",
          },
          "contract_number": {
            "docs": "The contract number of the loan, as given by the institution.",
            "type": "optional<string>",
          },
          "contract_start_date": {
            "docs": "The date when the loan contract was signed (\`YYYY-MM-DD\`).",
            "type": "optional<string>",
          },
          "credit_limit": {
            "docs": "This field has been deprecated.

Please see \`principal\` instead.
",
            "type": "optional<double>",
          },
          "cutting_date": {
            "docs": "This field has been deprecated.

The closing date of the loan period.
",
            "type": "optional<string>",
          },
          "cutting_day": {
            "docs": "This field has been deprecated.

The closing day of the month for the loan.
",
            "type": "optional<string>",
          },
          "fees": {
            "docs": "Breakdown of the fees applied to the loan.",
            "type": "optional<list<optional<AccountsLoanDataFees>>>",
          },
          "interest_rate": {
            "docs": "This field has been deprecated.

Please see the \`interest_rates\` object instead.
",
            "type": "optional<double>",
          },
          "interest_rates": {
            "docs": "Breakdown of the interest applied to the loan.",
            "type": "optional<list<AccountsLoanDataInterestRate>>",
          },
          "last_payment_date": {
            "docs": "This field has been deprecated.

The date when the last loan payment was made.
",
            "type": "optional<string>",
          },
          "last_period_balance": {
            "docs": "This field has been deprecated.

Please see \`outstanding_balance\` instead.
",
            "type": "optional<double>",
          },
          "limit_day": {
            "docs": "This field has been deprecated.

Please see \`payment_day\` instead.
",
            "type": "optional<string>",
          },
          "loan_type": {
            "docs": "The type of the loan, according to the institution.",
            "type": "optional<string>",
          },
          "monthly_payment": {
            "docs": "The recurrent monthly payment, if applicable.",
            "type": "optional<double>",
          },
          "no_interest_payment": {
            "docs": "This field has been deprecated.

The minimum amount required to pay to avoid generating interest.
",
            "type": "optional<double>",
          },
          "number_of_installments_outstanding": {
            "docs": "The number of installments left to pay.",
            "type": "optional<integer>",
          },
          "number_of_installments_total": {
            "docs": "The total number of installments required to pay the loan.",
            "type": "optional<integer>",
          },
          "outstanding_balance": {
            "docs": "The amount remaining to pay in total, including interest.",
            "type": "optional<double>",
          },
          "outstanding_principal": {
            "docs": "Outstanding loan amount, that is, how much remains to pay on the principal (not including interest).
",
            "type": "optional<double>",
          },
          "payment_day": {
            "docs": "The day of the month by which the owner needs to pay the loan (\`YYYY-MM-DD\`).",
            "type": "optional<string>",
          },
          "principal": {
            "docs": "Total amount of the loan (the amount the user receives).",
            "type": "optional<double>",
          },
        },
      },
      "AccountsLoanDataFees": {
        "docs": "Breakdown of the fees applied to the loan.",
        "properties": {
          "type": "EnumLoanDataFeeType",
          "value": {
            "docs": "The total value of the fee. Same currency of the Loan.
",
            "type": "double",
          },
        },
      },
      "AccountsLoanDataInterestRate": {
        "docs": "Breakdown of the interest applied to the loan.",
        "properties": {
          "name": {
            "docs": "The name of the type of interest rate applied to the loan.",
            "type": "optional<string>",
          },
          "type": "optional<EnumLoanDataInterestRateType>",
          "value": {
            "docs": "The interest rate (in percent or currency value).",
            "type": "optional<double>",
          },
        },
      },
      "AccountsPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "An array of Account objects.",
            "type": "optional<list<optional<Account>>>",
          },
        },
      },
      "AccountsReceivablesData": {
        "docs": "Additional details regarding the receivables account, if applicable.",
        "properties": {
          "anticipated": {
            "docs": "The amount that the owner of the account received earlier than contracted.",
            "type": "optional<double>",
          },
          "available": {
            "docs": "The amount that the owner of the account will receive according to an established date.",
            "type": "optional<double>",
          },
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "datetime",
          },
          "current": {
            "docs": "The total sum of all receivables (\`available\` + \`anticipated\`)",
            "type": "optional<double>",
          },
        },
      },
      "AnnualCostsAndDeductionsStatementBusiness": {
        "docs": "Object containing the reported annual costs and applicable deductions.",
        "properties": {
          "administration_expenses": {
            "docs": "Total costs of the company related to training, company offsites, or similar.",
            "type": "double",
          },
          "costs": {
            "docs": "Total costs for the company to operate.",
            "type": "double",
          },
          "distribution_and_sales_expenses": {
            "docs": "Total costs the company incurred in order to distribute or sell their product.",
            "type": "double",
          },
          "financial_expenses": {
            "docs": "Total value of any fees incurred by the company to operate (such as bank fees).",
            "type": "double",
          },
          "total_costs_and_deductible_expenses": {
            "docs": "Total value of all costs and dedictible expenses.",
            "type": "double",
          },
        },
      },
      "AnnualIncomeStatementBusiness": {
        "docs": "Object containing the reported annual incomes, deductions, and final balances of the tax payer.",
        "properties": {
          "dividends": {
            "docs": "Total income that the company generated from dividends.",
            "type": "double",
          },
          "gross_income_from_ordinary_activities": {
            "docs": "Total gross income that the company generated from their main economic activity.",
            "type": "double",
          },
          "other_income": {
            "docs": "Total income that the company generated from activities not associated with their main economic activity.",
            "type": "double",
          },
          "returns_rebates_and_discounts_on_sales": {
            "docs": "Total value of cancelled orders, corrected invoices, or similar, that can be discounted from the \`total_gross_income\`.",
            "type": "double",
          },
          "total_gross_income": {
            "docs": "Total gross income the company generated.",
            "type": "double",
          },
          "total_net_income": {
            "docs": "Total net income of the company, taking into account \`returns_rebates_and_discounts_on_sales\`.",
            "type": "double",
          },
        },
      },
      "AnnualIncomeStatementIndividual": {
        "docs": "Object containing the reported annual incomes, deductions, and final balances of the tax payer.",
        "properties": {
          "annual_totals": "AnnualTotalsIndividual",
          "gross_income": "GrossIncomeIndividual",
          "net_income": "NetIncomeIndividual",
          "non_taxable_income": "NonTaxableIncomeIndividual",
        },
      },
      "AnnualTotalsIndividual": {
        "docs": "Object containing the tax payers total exempt, deducted, and ordinary net incomes.",
        "properties": {
          "total_applicable_deductions": {
            "docs": "Total deductions that the taxpayer can apply to their income, according to the institution.",
            "type": "double",
          },
          "total_exempt_income": {
            "docs": "Total income that is not taxable, according to the institution.",
            "type": "double",
          },
          "total_exemptions_and_deductions": {
            "docs": "Sum total of all exempt and deductions that can be applied to the taxpayer's income.",
            "type": "double",
          },
          "total_ordinary_net_income": {
            "docs": "Sum total of the taxpayer's income (gross income - exemptions - deductions).",
            "type": "double",
          },
        },
      },
      "AsynchronousAccepted202": {
        "docs": undefined,
        "properties": {
          "request_id": {
            "docs": "The unique ID for this request. We recommend you store this value to later identify which webhook event relates to an asynchronous request.",
            "type": "optional<string>",
          },
        },
      },
      "BUSINESS": {
        "docs": "Details about the OFPI payment method.",
        "properties": {
          "open_finance": "PaymentIntentPaymentMethodDetailsBodyBusinessOfpi",
        },
      },
      "BadRequestErrorBodyItem": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "InvalidAccessMode",
          "TooManySessionsError",
          "LoginError",
          "SessionExpiredError",
          "ValidationError",
          "InstitutionDownError",
          "InstitutionUnavailableError",
          "InstitutionInactiveError",
          "UnsupportedOperationError",
          "InvalidLinkError",
          "UnconfirmedLinkError",
        ],
      },
      "Balance": {
        "docs": undefined,
        "properties": {
          "account": "optional<Account>",
          "balance": {
            "docs": "The funds available in the account by the end of the \`value_date\`.",
            "type": "optional<double>",
          },
          "collected_at": {
            "docs": "This field has been deprecated.

The ISO-8601 timestamp when the data point was collected.
",
            "type": "optional<datetime>",
          },
          "current_balance": {
            "docs": "*This field has been deprecated. Please use the \`balance\` field instead.*
",
            "type": "optional<double>",
          },
          "id": {
            "docs": "Belvo's unique ID for the balance request.",
            "type": "optional<string>",
          },
          "statement": {
            "docs": "*This field has been deprecated.*

*The ID of the banking statement used to extract the \`balance\`.*
",
            "type": "optional<string>",
          },
          "value_date": {
            "docs": "The date when the \`balance\` was available, in \`YYYY-MM-DD\` format.",
            "type": "optional<string>",
          },
        },
      },
      "BalancesPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of balance objects.",
            "type": "optional<list<Balance>>",
          },
        },
      },
      "BankAccountBusinessPse": {
        "docs": undefined,
        "properties": {
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was first created in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created the bank account.",
            "type": "string",
          },
          "customer": {
            "docs": "Belvo's unique ID for the customer associated with the bank account.
For \`BUSINESS\` bank accounts, this field is \`null\`.",
            "type": "optional<string>",
          },
          "details": {
            "docs": "For PSE, this field will return an empty object.",
            "type": "map<string, unknown>",
          },
          "holder": "Business",
          "id": {
            "docs": "Belvo's unique ID for the current bank account.",
            "type": "string",
          },
          "institution": {
            "docs": "Belvo's unique ID for the institution that the bank account is created in.
For \`BUSINESS\` bank accounts that Belvo creates for organizations, this field is \`null\`.",
            "type": "optional<string>",
          },
          "metadata": {
            "docs": "Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number for the payment intent.

⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.",
            "type": "optional<map<string, unknown>>",
          },
          "number": {
            "docs": "The bank account number of the payment beneficiary.
",
            "type": "string",
          },
        },
      },
      "BankAccountDetailsOfpi": {
        "docs": undefined,
        "properties": {
          "account_type": "EnumBankAccountPixAccountTypeOfpi",
          "agency": {
            "docs": "The agency (branch number) of the institution where the account was created.",
            "type": "string",
          },
          "country": "EnumPaymentsCountry",
          "number": {
            "docs": "The bank account number.",
            "type": "string",
          },
        },
      },
      "BankAccountDetailsOfpiPix": {
        "docs": undefined,
        "properties": {
          "country": "EnumPaymentsCountry",
          "pix_key": {
            "docs": "The PIX key identifier of the bank account.",
            "type": "string",
          },
        },
      },
      "BankAccountDetailsOpenFinance": {
        "docs": undefined,
        "properties": {
          "account_type": "EnumBankAccountPixAccountTypeOfpi",
          "agency": {
            "docs": "The agency (branch number) of the institution where the account was created.",
            "type": "string",
          },
          "country": "EnumPaymentsCountry",
          "number": {
            "docs": "The bank account number.",
            "type": "string",
          },
        },
      },
      "BankAccountDetailsOpenFinancePix": {
        "docs": undefined,
        "properties": {
          "country": "EnumPaymentsCountry",
          "pix_key": {
            "docs": "The PIX key identifier of the bank account.",
            "type": "string",
          },
        },
      },
      "BankAccountHolderRequestOfpiInformation": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "BUSINESS",
          "INDIVIDUAL",
        ],
      },
      "BankAccountInformationContentPse": {
        "docs": "Information about the payer's institution",
        "properties": {
          "payer_institution": {
            "docs": "Belvo's unique identifier for the payer’s institution.",
            "type": "optional<string>",
          },
        },
      },
      "BankAccountInformationPse": {
        "docs": "Information about the payer's bank account. Belvo returns this object when the payer's bank account information is not saved in the Belvo database.",
        "properties": {
          "bank_account_information": "optional<BankAccountInformationContentPse>",
        },
      },
      "BankAccountOfpiResponse": {
        "docs": undefined,
        "properties": {
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created the bank account.",
            "type": "string",
          },
          "customer": {
            "docs": "Belvo's unique ID for the customer associated with the bank account.
For \`BUSINESS\` bank accounts, this field is \`null\`.",
            "type": "optional<string>",
          },
          "details": "BankAccountOfpiResponseDetails",
          "holder": "OFPI",
          "id": {
            "docs": "Belvo's unique ID for the current bank account.",
            "type": "string",
          },
          "institution": {
            "docs": "Belvo's unique ID for the institution that the bank account is created in.
For \`BUSINESS\` bank accounts that Belvo creates for organizations, this field is \`null\`.",
            "type": "optional<string>",
          },
        },
      },
      "BankAccountOfpiResponseDetails": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "BankAccountDetailsOfpi",
          "BankAccountDetailsOfpiPix",
        ],
      },
      "BankAccountPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of bank account objects.",
            "type": "optional<list<BankAccountPaginatedResponseResultsItem>>",
          },
        },
      },
      "BankAccountPaginatedResponseResultsItem": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "BankAccountOfpiResponse",
          "BankAccountPseResponse",
        ],
      },
      "BankAccountPseResponse": "BankAccountBusinessPse",
      "BeneficiaryBankAccountOfpi": {
        "docs": undefined,
        "properties": {
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created the bank account.",
            "type": "string",
          },
          "details": "optional<BeneficiaryBankAccountOfpiDetails>",
          "holder": "OFPI",
          "id": {
            "docs": "Belvo's unique ID for the beneficiary bank account.",
            "type": "string",
          },
          "institution": "PaymentInstitution",
        },
      },
      "BeneficiaryBankAccountOfpiDetails": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "BankAccountDetailsOpenFinance",
          "BankAccountDetailsOpenFinancePix",
        ],
      },
      "BeneficiaryBankAccountPse": {
        "docs": undefined,
        "properties": {
          "holder": "optional<Business>",
          "id": {
            "docs": "Belvo's unique ID for the beneficiary bank account.",
            "type": "optional<string>",
          },
          "institution": {
            "docs": "Belvo's unique ID for the institution that the bank account is created in.",
            "type": "optional<string>",
          },
          "number": {
            "docs": "The bank account number.",
            "type": "optional<string>",
          },
        },
      },
      "Business": {
        "docs": "Details regarding the business bank account holder.",
        "properties": {
          "Information": "optional<PSE>",
          "type": "EnumBankAccountHolderTypePse",
        },
      },
      "Categorization": {
        "docs": undefined,
        "properties": {
          "transactions": {
            "docs": "An array of enriched transaction objects.",
            "type": "optional<list<CategorizationBody>>",
          },
        },
      },
      "CategorizationBody": {
        "docs": undefined,
        "properties": {
          "account_category": "EnumCategorizationAccountCategory",
          "account_holder_id": {
            "docs": "The unique ID for the account holder in your system.",
            "type": "string",
          },
          "account_holder_type": "EnumCategorizationAccountHolderType",
          "account_id": {
            "docs": "The unique ID for the account where the transaction occurred in your system.",
            "type": "string",
          },
          "amount": {
            "docs": "The transaction amount.",
            "type": "double",
          },
          "category": "optional<EnumCategorizationTransactionCategory>",
          "currency": {
            "docs": "The currency of the account, in ISO-4217 format. For example:
- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)",
            "type": "string",
          },
          "description": {
            "docs": "The description of the transaction.",
            "type": "string",
          },
          "institution": {
            "docs": "The institution where the account is registered.

>**Note:** This is the name that you use in your system to identify an institution.",
            "type": "string",
          },
          "mcc": {
            "docs": "The four-digit ISO 18245 Merchant Category Code (MCC). We only return this value when \`account_type\` = \`CREDIT_CARD\`.",
            "type": "optional<integer>",
          },
          "merchant": "optional<CategorizationMerchantData>",
          "subcategory": "optional<EnumCategorizationTransactionSubcategory>",
          "transaction_id": {
            "docs": "The unique ID for the transaction in your system.",
            "type": "string",
          },
          "type": "EnumCategorizationTransactionType",
          "value_date": {
            "docs": "The date when the transaction occurred, in \`YYYY-MM-DD\` format.",
            "type": "string",
          },
        },
      },
      "CategorizationBodyRequest": {
        "docs": undefined,
        "properties": {
          "account_category": "EnumCategorizationAccountCategory",
          "account_holder_id": {
            "docs": "Your unique ID for the account holder.",
            "type": "string",
          },
          "account_holder_type": "EnumCategorizationAccountHolderType",
          "account_id": {
            "docs": "Your unique ID for the account where the transaction occurred.",
            "type": "string",
          },
          "amount": {
            "docs": "The transaction amount.",
            "type": "double",
          },
          "currency": {
            "docs": "The currency of the account, in ISO-4217 format. For example: - 🇧🇷 BRL (Brazilian Real) - 🇨🇴 COP (Colombian Peso) - 🇲🇽 MXN (Mexican Peso)",
            "type": "string",
          },
          "description": {
            "docs": "The description of the transaction.",
            "type": "string",
          },
          "institution": {
            "docs": "The institution where the account is registered.

>**Note:** This is the name that you use in your system to identify an institution.",
            "type": "string",
          },
          "mcc": {
            "docs": "The four-digit ISO 18245 Merchant Category Code (MCC). Only required when \`account_category\` = \`CREDIT_CARD\`.",
            "type": "optional<integer>",
          },
          "transaction_id": {
            "docs": "Your unique ID for the transaction.",
            "type": "string",
          },
          "type": "EnumCategorizationTransactionType",
          "value_date": {
            "docs": "The date when the transaction occurred, in \`YYYY-MM-DD\` format.",
            "type": "string",
          },
        },
      },
      "CategorizationMerchantData": {
        "docs": "Additional data regarding the merchant involved in the transaction.
",
        "properties": {
          "logo": {
            "docs": "The URL to the merchant's logo.",
            "type": "optional<string>",
          },
          "merchant_name": {
            "docs": "The name of the merchant.",
            "type": "optional<string>",
          },
          "website": {
            "docs": "The URL to the merchant's website.",
            "type": "optional<string>",
          },
        },
      },
      "Charge": {
        "docs": undefined,
        "properties": {
          "amount": {
            "docs": "The amount of the charge.
",
            "type": "optional<string>",
          },
          "beneficiary": {
            "docs": "Belvo's unique ID used to identify the beneficiary’s bank account.",
            "type": "string",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created the charge.",
            "type": "optional<string>",
          },
          "currency": "optional<EnumPaymentsCurrency>",
          "customer": {
            "docs": "Belvo's unique ID for the customer that the charge was created for.",
            "type": "optional<string>",
          },
          "description": {
            "docs": "The description of the payment.
",
            "type": "optional<string>",
          },
          "failure_code": {
            "docs": "Error code that explains the reason behind a payment being unsuccessful (if applicable).
",
            "type": "optional<string>",
          },
          "failure_message": {
            "docs": "Further information regarding the \`failure_code\`.
",
            "type": "optional<string>",
          },
          "id": {
            "docs": "Belvo's unique ID for the current charge.",
            "type": "string",
          },
          "metadata": {
            "docs": "Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number.

⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.",
            "type": "map<string, unknown>",
          },
          "payment_intent": {
            "docs": "The \`payment_intent.id\` associated with this charge.",
            "type": "optional<string>",
          },
          "payment_method_details": "ChargePaymentMethodDetails",
          "payment_method_information": "PSE",
          "payment_method_type": "optional<EnumPaymentLinkAllowedPaymentMethod>",
          "provider": "EnumPaymentLinkProvider",
          "status": {
            "docs": "The current status of the charge.
",
            "type": "ChargeStatus",
          },
          "transactions": {
            "docs": "An array of Transaction objects relating to the charge.",
            "type": "optional<list<PaymentTransaction>>",
          },
          "updated_at": {
            "docs": "The ISO-8601 timestamp of when the status of the charge was last updated.
",
            "type": "optional<datetime>",
          },
        },
      },
      "ChargePaymentMethodDetails": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "PSE",
          "OFPI",
        ],
      },
      "ChargePaymentMethodDetailsOfpiContent": {
        "docs": "Information about the payer of a PSE payment.",
        "properties": {
          "beneficiary_bank_account": {
            "docs": "Belvo's unique ID used to identify the beneficiary's bank account.",
            "type": "optional<string>",
          },
          "payer_institution": {
            "docs": "Unique identifier for the payer’s institution.",
            "type": "optional<string>",
          },
        },
      },
      "ChargePaymentMethodDetailsPseContent": {
        "docs": "Information about the payer of a PSE payment.",
        "properties": {
          "payer_bank_account": {
            "docs": "Belvo's unique ID used to identify the customer’s bank account.",
            "type": "optional<string>",
          },
          "payer_institution": {
            "docs": "Unique identifier for the payer’s institution.",
            "type": "optional<string>",
          },
        },
      },
      "ChargeStatus": {
        "docs": "The current status of the charge.
",
        "enum": [
          "PENDING",
          "SUCCEEDED",
          "FAILED",
        ],
      },
      "CreateBankAccountOfpi": {
        "docs": undefined,
        "properties": {
          "details": {
            "docs": "Information regarding the bank account.",
            "type": "CreateBankAccountOfpiDetails",
          },
          "holder": {
            "docs": "Information regarding the individual bank account holder.",
            "type": "OFPI",
          },
          "institution": {
            "docs": "Belvo's unique ID for the institution that the bank account is created in.",
            "type": "string",
          },
        },
      },
      "CreateBankAccountOfpiDetails": {
        "discriminated": false,
        "docs": "Information regarding the bank account.",
        "union": [
          "BankAccountDetailsOfpi",
          "BankAccountDetailsOfpiPix",
        ],
      },
      "CreateBankAccountPse": {
        "docs": undefined,
        "properties": {
          "holder": {
            "docs": "Information regarding the business bank account holder.",
            "type": "PSE",
          },
          "metadata": {
            "docs": "Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number for the payment intent.

⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.",
            "type": "optional<map<string, unknown>>",
          },
          "number": {
            "docs": "The bank account number of the payment beneficiary.
",
            "type": "string",
          },
          "providers": {
            "docs": "Information about the payment service provider, required in order to establish a connection and process requests. For PSE, the value must be \`payments_way\`.",
            "type": "PSE",
          },
        },
      },
      "CreateCustomerOfpi": {
        "docs": undefined,
        "properties": {
          "address": {
            "docs": "The customer's physical address.
",
            "type": "optional<string>",
          },
          "country": "EnumPaymentsCountry",
          "customer_type": "EnumCustomerType",
          "email": {
            "docs": "The customer's email address.
",
            "type": "string",
          },
          "identifier": {
            "docs": "The document number of the customer's ID.
",
            "type": "string",
          },
          "identifier_type": "EnumCustomerIdentifierTypeOfpi",
          "name": {
            "docs": "The full name of the customer you want to create.
",
            "type": "string",
          },
          "phone": {
            "docs": "The customer's phone number.
",
            "type": "optional<string>",
          },
        },
      },
      "CreateCustomerPse": {
        "docs": undefined,
        "properties": {
          "address": {
            "docs": "The customer's physical address.
",
            "type": "optional<string>",
          },
          "country": "EnumPaymentsCountry",
          "customer_type": "EnumCustomerType",
          "email": {
            "docs": "The customer's email address.
",
            "type": "string",
          },
          "identifier": {
            "docs": "The document number of the customer's ID.
",
            "type": "string",
          },
          "identifier_type": "EnumCustomerIdentifierTypePse",
          "name": {
            "docs": "The full name of the customer you want to create.
",
            "type": "string",
          },
          "phone": {
            "docs": "The customer's phone number.
",
            "type": "optional<string>",
          },
        },
      },
      "CreatePaymentLinkOfpi": {
        "docs": undefined,
        "properties": {
          "allowed_payment_method_types": {
            "docs": "A list of payment method types allowed in this payment intent. For OFPI, this value must be set to \`open_finance\`.",
            "type": "list<EnumPaymentLinkAllowedPaymentMethod>",
          },
          "amount": {
            "docs": "Amount to be paid by your customer. For OFPI, you can send through numbers with up to two decimal points, separated by a \`.\` period. For example: \`1234.12\`

**Note:** You can send through this value either as a string or an float. Regardless of the type you choose to send the \`amount\` as, Belvo returns a string with two decimal points, separated by a period ( \`.\`). For example, \`1234.12\`.
",
            "type": "CreatePaymentLinkOfpiAmount",
          },
          "callback_urls": "optional<PaymentLinkCallbackUrls>",
          "customer": {
            "docs": "Belvo's unique ID to reference the customer.
",
            "type": "string",
          },
          "description": {
            "docs": "The description of the payment.
",
            "type": "string",
          },
          "expires_in": {
            "docs": "The payment link expiration time. It allows the following formats to be sent through:

  - whole number + \`m\` for x amount of minutes. For example: \`15m\` for 15 minutes.
  - whole number + \`h\` for x amount of hours. For example: \`12h\` for 12 hours.
  - whole number + \`d\` for x amount of days. For example: \`30d\` for 30 days.

  ℹ️ The minimum expiration time allowed for a payment link is \`1m\` (1 minute) and the maximum is \`90d\` (90 days).",
            "type": "optional<string>",
          },
          "payment_method_details": "OFPI",
          "provider": "EnumPaymentLinkProvider",
        },
      },
      "CreatePaymentLinkOfpiAmount": {
        "discriminated": false,
        "docs": "Amount to be paid by your customer. For OFPI, you can send through numbers with up to two decimal points, separated by a \`.\` period. For example: \`1234.12\`

**Note:** You can send through this value either as a string or an float. Regardless of the type you choose to send the \`amount\` as, Belvo returns a string with two decimal points, separated by a period ( \`.\`). For example, \`1234.12\`.
",
        "union": [
          "string",
          "double",
        ],
      },
      "CreatePaymentLinkPse": {
        "docs": undefined,
        "properties": {
          "allowed_payment_method_types": {
            "docs": "A list of payment method types allowed in this payment intent. For PSE, this value must be set to \`pse\`.",
            "type": "optional<list<EnumPaymentLinkAllowedPaymentMethod>>",
          },
          "amount": {
            "docs": "Amount to be paid by your customer. For PSE, you can only send whole numbers. For example: \`350000\`.

**Note:** You can send this value either as a string or an integer. Regardless of the type you choose to send the \`amount\` as, Belvo returns a string with two decimal points, separated by a period ( \`.\`). For example, \`350000.00\`.
",
            "type": "CreatePaymentLinkPseAmount",
          },
          "callback_urls": "optional<PaymentLinkCallbackUrls>",
          "customer": {
            "docs": "Belvo's unique ID to reference the customer.
",
            "type": "string",
          },
          "description": {
            "docs": "The description of the payment.
",
            "type": "string",
          },
          "expires_in": {
            "docs": "The payment link expiration time. It allows the following formats to be sent through:

  - whole number + \`m\` for x amount of minutes. For example: \`15m\` for 15 minutes.
  - whole number + \`h\` for x amount of hours. For example: \`12h\` for 12 hours.
  - whole number + \`d\` for x amount of days. For example: \`30d\` for 30 days.

  ℹ️ The minimum expiration time allowed for a payment link is \`1m\` (1 minute) and the maximum is \`90d\` (90 days).",
            "type": "optional<string>",
          },
          "payment_method_details": "PSE",
          "provider": "EnumPaymentLinkProvider",
        },
      },
      "CreatePaymentLinkPseAmount": {
        "discriminated": false,
        "docs": "Amount to be paid by your customer. For PSE, you can only send whole numbers. For example: \`350000\`.

**Note:** You can send this value either as a string or an integer. Regardless of the type you choose to send the \`amount\` as, Belvo returns a string with two decimal points, separated by a period ( \`.\`). For example, \`350000.00\`.
",
        "union": [
          "string",
          "integer",
        ],
      },
      "CustomerOfpi": {
        "docs": undefined,
        "properties": {
          "address": {
            "docs": "The customers physical address.
",
            "type": "optional<string>",
          },
          "country": "EnumPaymentsCountry",
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created the customer.",
            "type": "string",
          },
          "customer_type": "EnumCustomerType",
          "email": {
            "docs": "The customer's email address.
",
            "type": "string",
          },
          "id": {
            "docs": "Belvo's unique ID for the current customer.",
            "type": "string",
          },
          "identifier": {
            "docs": "The document number of the customer's ID.
",
            "type": "string",
          },
          "identifier_type": "EnumCustomerIdentifierTypeOfpi",
          "name": {
            "docs": "The full name of the customer.
",
            "type": "string",
          },
          "phone": {
            "docs": "The customer's phone number.
",
            "type": "optional<string>",
          },
        },
      },
      "CustomerPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of customer objects.",
            "type": "optional<list<CustomerPaginatedResponseResultsItem>>",
          },
        },
      },
      "CustomerPaginatedResponseResultsItem": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "CustomerOfpi",
          "CustomerPse",
        ],
      },
      "CustomerPse": {
        "docs": undefined,
        "properties": {
          "address": {
            "docs": "The customers physical address.


**Note:** Apart from the first two and last two characters, all the rest of the characters are masked.
",
            "type": "optional<string>",
          },
          "country": "EnumPaymentsCountry",
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created the customer.",
            "type": "string",
          },
          "customer_type": "EnumCustomerType",
          "email": {
            "docs": "The customer's email address.
",
            "type": "string",
          },
          "id": {
            "docs": "Belvo's unique ID for the current customer.",
            "type": "string",
          },
          "identifier": {
            "docs": "The document number of the customer's ID.
",
            "type": "string",
          },
          "identifier_type": "EnumCustomerIdentifierTypePse",
          "name": {
            "docs": "The full name of the customer.
",
            "type": "string",
          },
          "phone": {
            "docs": "The customer's phone number.


**Note:** Apart from the first two and last two characters, all the rest of the characters are masked.
",
            "type": "optional<string>",
          },
        },
      },
      "DisplayConfirmationRequiredContentPse": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "payer_institution": "optional<PaymentInstitution>",
        },
      },
      "DisplayConfirmationRequiredOfpi": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "beneficiary_bank_account": "optional<BeneficiaryBankAccountOfpi>",
          "payer_identifier": {
            "docs": "The payer's ID.",
            "type": "optional<string>",
          },
          "payer_institution": "optional<PaymentInstitution>",
          "payer_name": {
            "docs": "The name of the payer.",
            "type": "optional<string>",
          },
        },
      },
      "DisplayCredentialsRequiredContentPse": {
        "docs": "Object containing form fields for the required credentials (for example, \`username\` or \`password\`) in this step.",
        "properties": {
          "payer_institution": "optional<PaymentInstitution>",
        },
      },
      "DisplayCustomerBankAccountsContentPse": {
        "docs": "Object detailing what payment method information you need to display.",
        "properties": {
          "beneficiary_bank_account": "optional<BeneficiaryBankAccountPse>",
          "customer_bank_accounts": {
            "docs": "Array of customer bank account objects.",
            "type": "optional<list<PaymentMethodInfoCustomerBankAccountsPse>>",
          },
        },
      },
      "DisplayPaymentFailed": {
        "docs": "Details regarding the payer institution.",
        "properties": {
          "payer_institution": "optional<PaymentInstitution>",
        },
      },
      "DisplayPaymentMethodInformationContentOfpi": {
        "docs": "Object detailing what payment method information you need to display.",
        "properties": {
          "institutions": {
            "docs": "An array of institution objects.",
            "type": "optional<list<PaymentInstitution>>",
          },
        },
      },
      "DisplayPaymentMethodInformationContentPse": {
        "docs": "Object detailing what payment method information you need to display.",
        "properties": {
          "customer_bank_accounts": {
            "docs": "Array of bank account objects.

**Note**: If there are no customer accounts saved in the Belvo database, we return an empty array.",
            "type": "optional<list<PaymentMethodInfoCustomerBankAccountsPse>>",
          },
          "institutions": {
            "docs": "An array of institution objects.",
            "type": "optional<list<PaymentInstitution>>",
          },
        },
      },
      "DisplayPaymentProcessing": {
        "docs": "Details regarding the payer institution.",
        "properties": {
          "payer_institution": "optional<PaymentInstitution>",
        },
      },
      "DisplayPaymentSucceeded": {
        "docs": "Details regarding the payer institution.",
        "properties": {
          "payer_institution": "optional<PaymentInstitution>",
        },
      },
      "DisplayTokenRequiredContentPse": {
        "docs": undefined,
        "properties": {
          "payer_institution": "optional<PaymentInstitution>",
        },
      },
      "DocumentIdBusiness": {
        "docs": "Object containing information about the ID document of the tax payer.",
        "properties": {
          "document_number": {
            "docs": "The number of the ID document.",
            "type": "string",
          },
          "document_type": {
            "docs": "The type of ID document.",
            "type": "string",
          },
        },
      },
      "DocumentIdIndividual": {
        "docs": "Object containing information about the ID document of the tax payer.",
        "properties": {
          "document_number": {
            "docs": "The number of the ID document.",
            "type": "string",
          },
          "document_type": {
            "docs": "The type of ID document.",
            "type": "string",
          },
        },
      },
      "DocumentInformationBusiness": {
        "docs": "Object containing detailed information about the fiscal document.",
        "properties": {
          "form_number": {
            "docs": "The institution-provided identifier for the tax declaration.",
            "type": "string",
          },
          "name": {
            "docs": "The name of the tax document.",
            "type": "string",
          },
          "type": {
            "docs": "The type of tax declaration form. For DIAN, this will be either \`110\` or \`210\`.",
            "type": "string",
          },
          "year": {
            "docs": "The year of this tax declaration.
",
            "type": "optional<integer>",
          },
        },
      },
      "DocumentInformationIndividual": {
        "docs": "Object containing detailed information about the fiscal document.",
        "properties": {
          "form_number": {
            "docs": "Institution-provided identifier for the tax declaration.",
            "type": "string",
          },
          "name": {
            "docs": "The name of the tax document.",
            "type": "string",
          },
          "type": {
            "docs": "The type of tax declaration form. For DIAN, this will be either \`110\` or \`210\`.",
            "type": "string",
          },
          "year": {
            "docs": "The year of this tax declaration.
",
            "type": "optional<integer>",
          },
        },
      },
      "EmploymentRecord": {
        "docs": "Emploment record response payload",
        "properties": {
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was initially created in Belvo's database.",
            "type": "optional<datetime>",
          },
          "employment_records": {
            "docs": "Details regarding the individual's employment history.",
            "type": "optional<list<EmploymentRecordDetail>>",
          },
          "files": {
            "docs": "Additional PDF binary files relating to the individual's employment.",
            "type": "optional<list<EmploymentRecordFile>>",
          },
          "id": {
            "docs": "The unique identifier created by Belvo for the current IMSS statement.",
            "type": "optional<string>",
          },
          "internal_identification": {
            "docs": "Unique ID for user according to the institution. For IMSS Mexico, this is the CURP.",
            "type": "optional<string>",
          },
          "link": {
            "docs": "The unique identifier created by Belvo for the current user.",
            "type": "optional<string>",
          },
          "personal_data": "optional<EmploymentRecordPersonalData>",
          "report_date": {
            "docs": "The date when the employment record report was generated, in \`YYYY-MM-DD\` format.",
            "type": "optional<string>",
          },
          "social_security_summary": "optional<EmploymentRecordSocialSecuritySummary>",
        },
      },
      "EmploymentRecordDetail": {
        "docs": "Details regarding the individual's employment history.",
        "properties": {
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "currency": {
            "docs": "The three-letter currency code in which the salary is paid.
",
            "type": "optional<string>",
          },
          "employer": {
            "docs": "The official name of the employer.
",
            "type": "optional<string>",
          },
          "employer_id": {
            "docs": "The official ID of the employer, according to the country.
",
            "type": "optional<string>",
          },
          "employment_status_updates": {
            "docs": "Details regarding any employment changes of the individual.",
            "type": "optional<list<EmploymentRecordEmploymentStatusUpdates>>",
          },
          "end_date": {
            "docs": "Date when employment finished, in \`YYYY-MM-DD\` format.
",
            "type": "optional<string>",
          },
          "monthly_salary": {
            "docs": "The monthly salary of the individual, including any additional perks.
",
            "type": "optional<double>",
          },
          "most_recent_base_salary": {
            "docs": "The most recent base salary the individual earned.

For Mexico, this is the *daily* rate that the individual earned, including the perks that the individual is entitled to throughout the year.
",
            "type": "optional<double>",
          },
          "start_date": {
            "docs": "Date when employment started, in \`YYYY-MM-DD\` format.
",
            "type": "optional<string>",
          },
          "state": {
            "docs": "In what geographical state the individual was employed, according to the country.
",
            "type": "optional<string>",
          },
          "weeks_employed": {
            "docs": "Number of weeks that the individual was employed.
",
            "type": "optional<integer>",
          },
        },
      },
      "EmploymentRecordDocumentId": {
        "docs": "Details regarding the individual's ID documents.",
        "properties": {
          "document_number": {
            "docs": "The ID document's number (as a string).
",
            "type": "optional<string>",
          },
          "document_type": "optional<EnumEmploymentRecordDocumentType>",
        },
      },
      "EmploymentRecordEmploymentStatusUpdates": {
        "docs": "Details regarding any employment changes of the individual.",
        "properties": {
          "base_salary": {
            "docs": "The base salary of the individual, current as of the \`update_date\`.
",
            "type": "optional<double>",
          },
          "event": "optional<EnumEmploymentRecordStatusUpdateEvents>",
          "update_date": {
            "docs": "The date that the employment event occured, in \`YYYY-MM-DD\` format.
",
            "type": "optional<string>",
          },
        },
      },
      "EmploymentRecordEntitlement": {
        "docs": "Details regarding the benefits the individual is entitled to.",
        "properties": {
          "entitled_to_company_benefits": {
            "docs": "Indicates whether or not the individual is entitled to company benefits.
",
            "type": "optional<boolean>",
          },
          "entitled_to_health_insurance": {
            "docs": "Indicated whether or not the individual is entitled to health insurance.
",
            "type": "optional<boolean>",
          },
          "status": "optional<EnumEmploymentRecordStatus>",
          "valid_until": {
            "docs": "Date until when the individual is covered by health insurance and/or company benefits. If \`null\` the employee is currently working and no end date is required.
",
            "type": "optional<string>",
          },
        },
      },
      "EmploymentRecordFile": {
        "docs": "Additional PDF binary files relating to the individual's employment.",
        "properties": {
          "type": {
            "docs": "The title of the document.
",
            "type": "optional<string>",
          },
          "value": {
            "docs": "The PDF binary of the file (as a string).
",
            "type": "optional<string>",
          },
        },
      },
      "EmploymentRecordPersonalData": {
        "docs": "Details regarding the personal information of the individual.",
        "properties": {
          "birth_date": {
            "docs": "The date of the birth of the individual, in \`YYYY-MM-DD\` format.
",
            "type": "optional<string>",
          },
          "document_ids": {
            "docs": "Details regarding the individual's ID documents.",
            "type": "optional<list<EmploymentRecordDocumentId>>",
          },
          "email": {
            "docs": "The email address of the individual (as provided in the initial POST request).
",
            "type": "optional<string>",
          },
          "entitlements": "optional<EmploymentRecordEntitlement>",
          "first_name": {
            "docs": "The first name of the individual.
",
            "type": "optional<string>",
          },
          "last_name": {
            "docs": "The last name of the individual.
",
            "type": "optional<string>",
          },
          "official_name": {
            "docs": "The legal name of the individual
",
            "type": "optional<string>",
          },
        },
      },
      "EmploymentRecordSocialSecuritySummary": {
        "docs": "Details regarding the individual's social security contributions.",
        "properties": {
          "weeks_contributed": {
            "docs": "Number of weeks the individual has contributed to their social security, based on the number of weeks the individual has worked according to IMSS.
",
            "type": "optional<integer>",
          },
          "weeks_redeemed": {
            "docs": "Number of weeks the individual needed to take out of their pension.
",
            "type": "optional<integer>",
          },
          "weeks_reinstated": {
            "docs": "Number of weeks the individual has paid back into their pension (*AFORE*), after having redeemed them previously.
",
            "type": "optional<integer>",
          },
        },
      },
      "EmploymentRecordsPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of employment record objects.",
            "type": "optional<list<EmploymentRecord>>",
          },
        },
      },
      "EnumAccountCategory": {
        "docs": "The type of account.
We return one of the following enum values:
  - \`CHECKING_ACCOUNT\`
  - \`CREDIT_CARD\`
  - \`INVESTMENT_ACCOUNT\`
  - \`LOAN_ACCOUNT\`
  - \`PENSION_FUND_ACCOUNT\`
  - \`RECEIVABLES_ACCOUNT\`
  - \`SAVINGS_ACCOUNT\`
  - \`UNCATEGORIZED\`
  - \`null\`
",
        "type": "optional<string>",
      },
      "EnumBankAccountHolderTypeOfpi": {
        "docs": "The type of bank account. Can be either \`INDIVIDUAL\` or \`BUSINESS\`.",
        "enum": [
          "INDIVIDUAL",
          "BUSINESS",
        ],
      },
      "EnumBankAccountHolderTypePse": "literal<"BUSINESS">",
      "EnumBankAccountPixAccountTypeOfpi": {
        "docs": "The type of bank account. Can be either:

  - \`CHECKINGS\`
  - \`SAVINGS\`
  - \`SALARY\`",
        "enum": [
          "CHECKINGS",
          "SAVINGS",
          "SALARY",
        ],
      },
      "EnumCategorizationAccountCategory": {
        "docs": "The type of account.
Can be either:
  - \`CHECKING_ACCOUNT\`
  - \`CREDIT_CARD\`
  - \`LOAN_ACCOUNT\`
  - \`SAVINGS_ACCOUNT\`",
        "enum": [
          "CHECKING_ACCOUNT",
          "CREDIT_CARD",
          "LOAN_ACCOUNT",
          "SAVINGS_ACCOUNT",
        ],
      },
      "EnumCategorizationAccountHolderType": {
        "docs": "The type of account holder.
Can be either:

  - \`INDIVIDUAL\`
  - \`BUSINESS\`",
        "enum": [
          "INDIVIDUAL",
          "BUSINESS",
        ],
      },
      "EnumCategorizationTransactionCategory": {
        "docs": "The name of the category to which this transaction belongs. For more info about this feature, check our [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions) article. 

We return one of the following enum values:

  - \`Bills & Utilities\`
  - \`Credits & Loans\`
  - \`Deposits\`
  - \`Fees & Charges\`
  - \`Food & Groceries\`
  - \`Home & Life\`
  - \`Income & Payments\`
  - \`Insurance\`
  - \`Investments & Savings\`
  - \`Online Platforms & Leisure\`
  - \`Personal Shopping\`
  - \`Taxes\`
  - \`Transfers\`
  - \`Transport & Travel\`
  - \`Unknown\`
  - \`Withdrawal & ATM\`
  - \`null\`
",
        "type": "optional<string>",
      },
      "EnumCategorizationTransactionSubcategory": {
        "docs": "The transactions subcategory. For more info about this feature, check our [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions) article. 

We return one of the following enum values:

  - \`Electricity & Energy\`
  - \`Rent\`
  - \`Telecommunications\`
  - \`Water\`
  - \`Auto\`
  - \`Credit Card\`
  - \`Instalment\`
  - \`Interest & Charges\`
  - \`Mortgage\`
  - \`Pay Advance\`
  - \`Personal\`
  - \`Adjustments\`
  - \`Bank Fees\`
  - \`Chargeback\`
  - \`Refund\`
  - \`Blocked Balances\`
  - \`Alimony\`
  - \`Alcohol & Tobacco\`
  - \`Bakery & Coffee\`
  - \`Bars & Nightclubs\`
  - \`Convenience Store\`
  - \`Delivery\`
  - \`Groceries\`
  - \`Restaurants\`
  - \`Education\`
  - \`Gyms & Fitness\`
  - \`Hair & Beauty\`
  - \`Health\`
  - \`Home Decor & Appliances\`
  - \`Laundry & Dry Cleaning\`
  - \`Pharmacies\`
  - \`Professional Services\`
  - \`Veterinary Services\`
  - \`Freelance\`
  - \`Interest\`
  - \`Retirement\`
  - \`Salary\`
  - \`Government\`
  - \`Home Insurance\`
  - \`Auto Insurance\`
  - \`Health & Life Insurance\`
  - \`Savings\`
  - \`Fixed income\`
  - \`Equity\`
  - \`Investment Funds\`
  - \`Derivatives\`
  - \`Cryptocurrencies\`
  - \`Apps, Software and Cloud Services\`
  - \`Events, Parks and Museums\`
  - \`Gambling\`
  - \`Gaming\`
  - \`Lottery\`
  - \`Movie & Audio\`
  - \`Books & News\`
  - \`Clothing & Accessories\`
  - \`Department Store\`
  - \`Electronics\`
  - \`E-commerce\`
  - \`Gifts\`
  - \`Office Supplies\`
  - \`Pet Supplies\`
  - \`Auto Tax & Fees\`
  - \`Donation\`
  - \`Government Fees\`
  - \`Income Tax\`
  - \`Real Estate Tax & Fees\`
  - \`Tax Return\`
  - \`Accommodation\`
  - \`Auto Expenses\`
  - \`Auto Rental\`
  - \`Flights\`
  - \`Gas\`
  - \`Mileage Programs\`
  - \`Parking & Tolls\`
  - \`Public Transit\`
  - \`Taxis & Rideshares\`
  - \`Other\`
  - \`null\`",
        "type": "optional<string>",
      },
      "EnumCategorizationTransactionType": {
        "docs": "The direction of the transaction.
Can be either:

  - \`INFLOW\` indicates a received transaction.
  - \`OUTFLOW\` indicates a sent transaction.",
        "enum": [
          "INFLOW",
          "OUTFLOW",
        ],
      },
      "EnumCustomerIdentifierTypeOfpi": {
        "docs": "The customer's ID document type.

- 🇧🇷 Brazil options: \`CPF\` or \`CNPJ\`.
",
        "enum": [
          "CPF",
          "CNPJ",
        ],
      },
      "EnumCustomerIdentifierTypePse": {
        "docs": "The customer's ID document type.

- 🇨🇴 Colombia options: \`CC\`, \`PP\`, \`CE\`, \`TI\`, or \`NIT\`.
",
        "enum": [
          "CC",
          "PP",
          "CE",
          "TI",
          "NIT",
        ],
      },
      "EnumCustomerType": {
        "docs": "The type of customer. Can be either:

  - \`INDIVIDUAL\`
  - \`BUSINESS\`
    

**Notes:** For 🇨🇴 Colombia's PSE, you can only create customers of type \`INDIVIDUAL\`.
",
        "enum": [
          "INDIVIDUAL",
          "BUSINESS",
        ],
      },
      "EnumEmploymentRecordDocumentType": {
        "docs": "The type of document related to the individual. We return one of the following values:

  - \`NSS\`
  - \`CURP\`
",
        "enum": [
          "NSS",
          "CURP",
        ],
      },
      "EnumEmploymentRecordStatus": {
        "docs": "Indicates whether or not the individual is currently \`EMPLOYED\` or \`UNEMPLOYED\`.
",
        "enum": [
          "EMPLOYED",
          "UNEMPLOYED",
        ],
      },
      "EnumEmploymentRecordStatusUpdateEvents": {
        "docs": "The event that caused the change in employment status or salary. We return one of the following values:
  
  - \`DISMISSED_RESIGNED\`
  - \`SALARY_MODIFICATION\`
  - \`HIRED\`
  - \`VOLUNTARY_CONTRIBUTION\`
  - \`ABSENCE\`
  - \`SICK_LEAVE\`
",
        "enum": [
          "DISMISSED_RESIGNED",
          "SALARY_MODIFICATION",
          "HIRED",
          "VOLUNTARY_CONTRIBUTION",
          "ABSENCE",
          "SICK_LEAVE",
        ],
      },
      "EnumIncomeMinimumConfidenceLevelRequest": {
        "docs": "The minimum confidence level of the incomes you want to get information for.

You can send through one of the following values:

  - \`HIGH\`
  - \`MEDIUM\`
  - \`LOW\`
",
        "enum": [
          "HIGH",
          "MEDIUM",
          "LOW",
        ],
      },
      "EnumIncomeSourceType": "literal<"BANK">",
      "EnumIncomeStreamConfidence": {
        "docs": "Belvo's level of confidence for future incomes.

We return one of the following enum values:

  - \`HIGH\`
  - \`MEDIUM\`
  - \`LOW\`
",
        "enum": [
          "HIGH",
          "MEDIUM",
          "LOW",
        ],
      },
      "EnumIncomeStreamFrequency": {
        "docs": "How often the income is received.

We return one of the following enum values:

  - \`MONTHLY\` - For transactions that occur once per month.
  - \`FORTNIGHTLY\` - For transactions that occur once every two weeks.
  - \`WEEKLY\` - For transactions that occur once per week.
  - \`IRREGULAR\` - For transactions that do not occur on a defined frequency pattern.
  - \`SINGLE\` - For transactions that occur only once and do not repeat.
",
        "enum": [
          "MONTHLY",
          "FORTNIGHTLY",
          "WEEKLY",
          "IRREGULAR",
          "SINGLE",
        ],
      },
      "EnumIncomeStreamType": {
        "docs": "The type of income used in the calculations.

We return one of the following enum values:

  - \`SALARY\`
  - \`GOVERNMENT\`
  - \`INTEREST\`
  - \`RENT\`
  - \`RETIREMENT\`
  - \`FREELANCE\`
  - \`ALTERNATIVE_INCOME\`
  - \`TRANSFER\`
  - \`DEPOSIT\`
  - \`UNKNOWN\`
",
        "enum": [
          "SALARY",
          "GOVERNMENT",
          "INTEREST",
          "RENT",
          "RETIREMENT",
          "FREELANCE",
          "ALTERNATIVE_INCOME",
          "TRANSFER",
          "DEPOSIT",
          "UNKNOWN",
        ],
      },
      "EnumIncomeVerificationAccountCategory": {
        "docs": "The type of account.
Can be either:
  - \`CHECKING_ACCOUNT\`
  - \`SAVINGS_ACCOUNT\`",
        "enum": [
          "CHECKING_ACCOUNT",
          "SAVINGS_ACCOUNT",
        ],
      },
      "EnumIncomeVerificationAccountHolderType": "literal<"INDIVIDUAL">",
      "EnumIncomeVerificationType": {
        "docs": "The direction of the transaction:
  
- \`INFLOW\` indicates money coming into the account.
",
        "type": "optional<literal<"INFLOW">>",
      },
      "EnumInstitutionIntegrationType": {
        "docs": "The type of technology used to access the institution. We return one of the following values:

- \`credentials\`: Uses Belvo's scraping technology, combined with user credentials, to perform requests.
- \`openbanking\`: Uses the bank's openbanking API to perform requests.
",
        "enum": [
          "credentials",
          "openbanking",
        ],
      },
      "EnumInstitutionStatus": {
        "docs": "Indicates whether Belvo's integration with the institution is currently active (\`healthy\`) or undergoing maintenance (\`down\`).
",
        "enum": [
          "healthy",
          "down",
        ],
      },
      "EnumInstitutionType": {
        "docs": "The type of institution. We return one of the following values:

  - \`bank\`
  - \`fiscal\`
  - \`employment\`
",
        "enum": [
          "bank",
          "fiscal",
          "employment",
        ],
      },
      "EnumInvestmentPortfolioInstrumentType": {
        "docs": "The instrument type. For more information about instruments, please see our [Investments DevPortal article](https://developers.belvo.com/docs/investments#instruments).

We return one of the following values:

  - \`BOND\`
  - \`DEPOSIT\`
  - \`ETF\`
  - \`FUND\`
  - \`OTHER\`
  - \`PENSION\`
  - \`STOCK\`
",
        "enum": [
          "BOND",
          "DEPOSIT",
          "ETF",
          "FUND",
          "OTHER",
          "PENSION",
          "STOCK",
        ],
      },
      "EnumInvestmentPortfolioType": {
        "docs": "The portfolio type.

We return one of the following values:

  - \`FIXED_INCOME\`
  - \`OTHER\`
  - \`PENSION\`
  - \`VARIABLE_INCOME\`
",
        "enum": [
          "FIXED_INCOME",
          "OTHER",
          "PENSION",
          "VARIABLE_INCOME",
        ],
      },
      "EnumInvoiceAllowedIncomeTypesRequest": {
        "docs": "The categories of the incomes you want to get information for. 
You can send through one or more of the following values:
  - \`SALARY\`
  - \`GOVERNMENT\`
  - \`INTEREST\`
  - \`RENT\`
  - \`RETIREMENT\`
  - \`FREELANCE\`
  - \`ALTERNATIVE_INCOME\`
  - \`TRANSFER\`
  - \`DEPOSIT\`
  - \`UNKNOWN\`",
        "enum": [
          "SALARY",
          "GOVERNMENT",
          "INTEREST",
          "RENT",
          "RETIREMENT",
          "FREELANCE",
          "ALTERNATIVE_INCOME",
          "TRANSFER",
          "DEPOSIT",
          "UNKNOWN",
        ],
      },
      "EnumInvoiceDianInvoiceType": {
        "docs": "The fiscal institution's classification of the invoice.

For Colombia's DIAN, we return one of the following values:

  - \`Factura Electrónica de Venta\`
",
        "type": "optional<literal<"Factura Electrónica de Venta">>",
      },
      "EnumInvoiceDianPaymentMethod": {
        "docs": "The payment method used for this invoice, as defined by the legal entity of the country.

For DIAN Colombia, we return one of the following values:

  - \`Contado\`
  - \`Crédito\`
  - \`null\`
",
        "type": "optional<string>",
      },
      "EnumInvoiceSatInvoiceType": {
        "docs": "The fiscal institution's classification of the invoice.

For Mexico's SAT, we return one of the following values:

  - \`Egreso\`
  - \`Ingreso\`
  - \`Nómina\`
  - \`Pago\`
  - \`Traslado\`
",
        "enum": [
          "Egreso",
          "Ingreso",
          {
            "name": "Nomina",
            "value": "Nómina",
          },
          "Pago",
          "Traslado",
        ],
      },
      "EnumInvoiceSatPaymentMethod": {
        "docs": "The payment method code used for this invoice, as defined by the legal entity of the country.

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payment-method). For Mexico, we return \`PUE\`, \`PIP\`, \`PPD\`, or \`null\`.
",
        "type": "optional<string>",
      },
      "EnumInvoiceType": {
        "docs": "The direction of the invoice (from the perspective of the Link owner).
- \`OUTFLOW\` indicates a sent invoice. - \`INFLOW\` indicates a received invoice.
",
        "type": "optional<string>",
      },
      "EnumLinkAccessModeRequest": {
        "docs": "The type of link to create.

- Use \`single\` to do ad hoc one-time POST requests for accounts, owners, and transactions.
- Use \`recurrent\` to have Belvo access information on a recurrent basis so you always have fresh account, owner, balance, and transaction data.

For more information, see our [Links](https://developers.belvo.com/docs/links-and-institutions#links) article.
",
        "enum": [
          "single",
          "recurrent",
        ],
      },
      "EnumLinkAccessModeResponse": {
        "docs": "The link type.
For more information, see our [Links](https://developers.belvo.com/docs/links-and-institutions#links) article.
We return one of the following enum values:
  - \`single\`
  - \`recurrent\`
  - \`null\`
",
        "type": "optional<string>",
      },
      "EnumLinkRefreshRate": {
        "docs": "The update refresh rate for the recurrent link. For more information, check out our [recurrent link documentation](https://developers.belvo.com/docs/links-and-institutions#recurrent-links) in our DevPortal.
We return one of the following enum values:
  - \`6h\`
  - \`12h\`
  - \`24h\`
  - \`7d\` (default)
  - \`30d\` (once a month)
  - \`null\` (for single links)
",
        "type": "optional<string>",
      },
      "EnumLinkStatus": {
        "docs": "The current status of the link. For more information, see our [Link](https://developers.belvo.com/docs/links-and-institutions#links) article in the devportal.
We return one of the following values:
  - \`valid\`
  - \`invalid\`
  - \`unconfirmed\`
  - \`token_required\`
",
        "enum": [
          "valid",
          "invalid",
          "unconfirmed",
          "token_required",
        ],
      },
      "EnumLoanDataFeeType": {
        "docs": "The type of fee. We return one of the following values:

  - \`OPERATION_FEE\`
  - \`INSURANCE_FEE\`
  - \`OTHERS\`
",
        "enum": [
          "OPERATION_FEE",
          "INSURANCE_FEE",
          "OTHERS",
        ],
      },
      "EnumLoanDataInterestRateType": {
        "docs": "The period that the interest is applied to the loan. We return one of the following values:

  - \`MONTHLY\`
  - \`YEARLY\`
",
        "enum": [
          "MONTHLY",
          "YEARLY",
        ],
      },
      "EnumPaymentIntentHolderTypePse": {
        "docs": "Type of bank account holder. For PSE, this value must be \`INDIVIDUAL\`.",
        "enum": [
          "INDIVIDUAL",
          "BUSINESS",
        ],
      },
      "EnumPaymentIntentStatus": {
        "docs": "The current status of the payment intent.
",
        "enum": [
          "REQUIRES_PAYMENT_METHOD",
          "REQUIRES_ACTION",
          "SUCCEEDED",
          "PROCESSING",
          "FAILED",
        ],
      },
      "EnumPaymentLinkAllowedPaymentMethod": {
        "docs": "Selected payment method type.

  - For 🇧🇷 Brazil's OFPI, the value must be \`open_finance\`.  
  - For 🇨🇴 Colombia's PSE, the value must be \`pse\`.",
        "enum": [
          "open_finance",
          "pse",
        ],
      },
      "EnumPaymentLinkProvider": {
        "docs": "The provider used for the payment link. 


- For 🇧🇷 Brazil's OFPI, the value must be \`belvo\`.  
- For 🇨🇴 Colombia's PSE, the value must be \`payments_way\`.
",
        "enum": [
          "belvo",
          "payments_way",
        ],
      },
      "EnumPaymentLinksStatus": {
        "docs": "The current status of the payment link. Can be either:

  - \`ACTIVE\` meaning that the payment intent's status is either \`REQUIRES_PAYMENT_METHOD\`, \`REQUIRES_ACTION\`, or \`PROCESSING\`.
  - \`INACTIVE\` meaning that the payment intent's status is either \`SUCCEEDED\` or \`FAILED\`.

**Note:** You can retrieve the complete payment intent by using our [Get details of a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) request.",
        "enum": [
          "ACTIVE",
          "INACTIVE",
        ],
      },
      "EnumPaymentTransactionType": {
        "docs": "The direction of the transaction.

  - \`INFLOW\` indicates money coming into the account.
  - \`OUTFLOW\` indicates money coming out of the account.",
        "enum": [
          "INFLOW",
          "OUTFLOW",
        ],
      },
      "EnumPaymentsCountry": {
        "docs": "The customer's country of residence.


-  BRA (🇧🇷 Brazil)
-  COL (🇨🇴 Colombia)
",
        "enum": [
          "BRA",
          "COL",
        ],
      },
      "EnumPaymentsCurrency": {
        "docs": "The currency of the amount paid.


  - 🇧🇷 BRL (Brazilian Real)
  - 🇨🇴 COP (Colombian Peso)",
        "enum": [
          "BRL",
          "COP",
        ],
      },
      "EnumReceivableTransactionFeeType": {
        "docs": "The type of fee applied to the transaction. We return one of the following values:

  - \`TRANSACTION_FEE\`",
        "type": "optional<literal<"TRANSACTION_FEE">>",
      },
      "EnumReceivableTransactionStatus": {
        "docs": "The status of the transaction. Can be either:

  - \`APPROVED\`
  - \`CANCELLED\`
  - \`REVERTED\`
  - \`UNCATEGORIZED\`",
        "enum": [
          "APPROVED",
          "CANCELLED",
          "REVERTED",
          "UNCATEGORIZED",
        ],
      },
      "EnumReceivableTransactionType": {
        "docs": "The type of transaction. For example, whether the transaction was a \`VISA_DEBIT\` or a \`MASTERCARD_CREDIT\`.

We return one of the following values:

  - \`VISA_CREDIT\`
  - \`VISA_DEBIT\`
  - \`MASTERCARD_CREDIT\`
  - \`MASTERCARD_DEBIT\`
  - \`ELO_CREDIT\`
  - \`ELO_DEBIT\`
  - \`null\`
",
        "type": "optional<string>",
      },
      "EnumRecurringExpenseCategory": {
        "docs": "The transaction category for the recurring expense. For more information on the available categories, please see our [Transaction categorization documentation](https://developers.belvo.com/docs/banking#categorizing-transactions).

- \`Online Platforms & Leisure\` (Netflix, Spotify, Gym Memberships)
- \`Bills & Utilities\` (electricity, telephone, internet)
- \`Credits & Loans\` (credit card cash advances, student loan, watercraft lease)
- \`Insurance\` (home, car, and health & life insurance)
- \`Transport & Travel\` (Uber trip, airbnb, parking)
- \`Taxes\` (service fee, donation, court taxes)
",
        "enum": [
          {
            "name": "BillsUtilities",
            "value": "Bills & Utilities",
          },
          {
            "name": "CreditsLoans",
            "value": "Credits & Loans",
          },
          "Insurance",
          {
            "name": "OnlinePlatformsLeisure",
            "value": "Online Platforms & Leisure",
          },
          {
            "name": "TransportTravel",
            "value": "Transport & Travel",
          },
          "Taxes",
        ],
      },
      "EnumRecurringExpenseFrequency": "literal<"MONTHLY">",
      "EnumRecurringExpensePaymentType": {
        "docs": "The type of recurring expense. We return one of the following values:

  - \`SUBSCRIPTION\`
  - \`REGULAR\`
",
        "enum": [
          "SUBSCRIPTION",
          "REGULAR",
        ],
      },
      "EnumTaxComplianceStatusOutcome": {
        "docs": "Indicates whether the taxpayer is complying to all their tax obligations (\`POSITIVE\`), if they are not (\`NEGATIVE\`), or have none to comply to (\`NO_OBLIGATIONS\`).",
        "enum": [
          "POSITIVE",
          "NEGATIVE",
          "NO_OBLIGATIONS",
        ],
      },
      "EnumTaxRetentionPaymentStatus": {
        "docs": "Indicates whether or not the tax has been paid or not. Can be either:
  - \`PAID\`
  - \`PROVISIONED\`
",
        "enum": [
          "PAID",
          "PROVISIONED",
        ],
      },
      "EnumTaxRetentionReceiverNationality": {
        "docs": "Whether the invoice receiver is a Mexican national or not. If the receiver is not considered a Mexican national, the retained taxes can be calculated differently. Possible values:
  - \`NATIONAL\`
  - \`FOREIGN\`
",
        "enum": [
          "NATIONAL",
          "FOREIGN",
        ],
      },
      "EnumTaxRetentionType": {
        "docs": "The type of tax retention in relation to the invoice (from the perspective of the Link owner).

- \`OUTFLOW\` relates to a tax retention for a sent invoice.
- \`INFLOW\` related to a tax retention for a received invoice.
",
        "enum": [
          "OUTFLOW",
          "INFLOW",
        ],
      },
      "EnumTransactionBillStatus": {
        "docs": "The status of the bill that the transaction appears on. Can be one of:

  - \`PAID\`: The bill has been paid in full.
  - \`CLOSED\`: The bill has been closed by the institution.
  - \`OPEN\`: The bill is currently open. (Note: This is the main bill that Belvo retrieves balance data from).
  - \`FUTURE\`: The bill is pending.
  - \`null\`: No bill status was identified.
  
ℹ️ Note: Some banks consider CLOSED as PAID.",
        "type": "optional<string>",
      },
      "EnumTransactionCategory": {
        "docs": "The name of the category to which this transaction belongs.

> **Get transaction categorization**
With [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions), we clean and categorize transactions for you, turning raw data into actionable insights. To enable this feature, just [reach out](https://belvo.com/contact/?utm_source=documentation) to us, and we'll get right to it.

We return one of the following enum values:

  - \`Bills & Utilities\`
  - \`Credits & Loans\`
  - \`Deposits\`
  - \`Fees & Charges\`
  - \`Food & Groceries\`
  - \`Home & Life\`
  - \`Income & Payments\`
  - \`Insurance\`
  - \`Investments & Savings\`
  - \`Online Platforms & Leisure\`
  - \`Personal Shopping\`
  - \`Taxes\`
  - \`Transfers\`
  - \`Transport & Travel\`
  - \`Unknown\`*
  - \`Withdrawal & ATM\`
  - \`null\`


  \\* For clients not using our Transaction Categorization product, we return \`null\` instead.
",
        "type": "optional<string>",
      },
      "EnumTransactionStatus": {
        "docs": "The status of the transaction. We return one of the following values:

  - \`PENDING\`
  - \`PROCESSED\`
  - \`UNCATEGORIZED\`
  - \`null\`
",
        "type": "optional<string>",
      },
      "EnumTransactionSubcategory": {
        "docs": "The transactions subcategory.

  > **Get transaction categorization**
  For clients not using our [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions), we return \`null\` instead. To enable this feature, just [reach out](https://belvo.com/contact/?utm_source=documentation) to us, and we'll get right to it.


We return one of the following enum values:

  - \`Electricity & Energy\`
  - \`Rent\`
  - \`Telecommunications\`
  - \`Water\`
  - \`Auto\`
  - \`Credit Card\`
  - \`Instalment\`
  - \`Interest & Charges\`
  - \`Mortgage\`
  - \`Pay Advance\`
  - \`Personal\`
  - \`Adjustments\`
  - \`Bank Fees\`
  - \`Chargeback\`
  - \`Refund\`
  - \`Blocked Balances\`
  - \`Alimony\`
  - \`Alcohol & Tobacco\`
  - \`Bakery & Coffee\`
  - \`Bars & Nightclubs\`
  - \`Convenience Store\`
  - \`Delivery\`
  - \`Groceries\`
  - \`Restaurants\`
  - \`Education\`
  - \`Gyms & Fitness\`
  - \`Hair & Beauty\`
  - \`Health\`
  - \`Home Decor & Appliances\`
  - \`Laundry & Dry Cleaning\`
  - \`Pharmacies\`
  - \`Professional Services\`
  - \`Veterinary Services\`
  - \`Freelance\`
  - \`Interest\`
  - \`Retirement\`
  - \`Salary\`
  - \`Government\`
  - \`Home Insurance\`
  - \`Auto Insurance\`
  - \`Health & Life Insurance\`
  - \`Savings\`
  - \`Fixed income\`
  - \`Equity\`
  - \`Investment Funds\`
  - \`Derivatives\`
  - \`Cryptocurrencies\`
  - \`Apps, Software and Cloud Services\`
  - \`Events, Parks and Museums\`
  - \`Gambling\`
  - \`Gaming\`
  - \`Lottery\`
  - \`Movie & Audio\`
  - \`Books & News\`
  - \`Clothing & Accessories\`
  - \`Department Store\`
  - \`Electronics\`
  - \`E-commerce\`
  - \`Gifts\`
  - \`Office Supplies\`
  - \`Pet Supplies\`
  - \`Auto Tax & Fees\`
  - \`Donation\`
  - \`Government Fees\`
  - \`Income Tax\`
  - \`Real Estate Tax & Fees\`
  - \`Tax Return\`
  - \`Accommodation\`
  - \`Auto Expenses\`
  - \`Auto Rental\`
  - \`Flights\`
  - \`Gas\`
  - \`Mileage Programs\`
  - \`Parking & Tolls\`
  - \`Public Transit\`
  - \`Taxis & Rideshares\`
  - \`Other\`
  - \`null\`",
        "type": "optional<string>",
      },
      "EnumTransactionType": {
        "docs": "The direction of the transaction:
- \`INFLOW\` indicates money coming into the account.
- \`OUTFLOW\` indicates money going out of the account.
- \`null\` when no information was present regarding the direction of the transaction.
",
        "type": "optional<string>",
      },
      "EquityStatementBusiness": {
        "docs": "Object containing the general fiscal situation of the taxpayer.",
        "properties": {
          "accounts_documents_and_finance_leases_receivable": {
            "docs": "Total of all payments the company expects to receive (for example, from partial invoices that have not been paid yet).",
            "type": "double",
          },
          "cash_and_cash_equivalents": {
            "docs": "Total cash (or cash equivalents) that the business currently holds at the end of the fiscal year.",
            "type": "double",
          },
          "debts": {
            "docs": "Total debts that the company currently has.",
            "type": "double",
          },
          "inventory": {
            "docs": "Total financial value of the company's sellable inventory.",
            "type": "double",
          },
          "investments_and_derivative_financial_instruments": {
            "docs": "Total value of all investments, stocks, or similar, that the company has.",
            "type": "double",
          },
          "property_plant_and_equipment_investment_properties": {
            "docs": "Total value of real estate, plant infrastructure, or equipment that has been purchased.",
            "type": "double",
          },
          "total_gross_equity": {
            "docs": "Total gross equity.",
            "type": "double",
          },
          "total_net_equity": {
            "docs": "The total net equity of the company (\`total_gross_equity\` - \`debts\`).",
            "type": "double",
          },
        },
      },
      "EquityStatementIndividual": {
        "docs": "Object containing the general fiscal situation of the taxpayer.",
        "properties": {
          "total_debts": {
            "docs": "The total debts of the tax_payer",
            "type": "double",
          },
          "total_gross_equity": {
            "docs": "The total gross equity of the tax payer.",
            "type": "double",
          },
          "total_net_equity": {
            "docs": "The total net equity value of the taxpayer.",
            "type": "double",
          },
        },
      },
      "EyodIncomeVerificationBodyRequest": {
        "docs": undefined,
        "properties": {
          "account_category": "EnumIncomeVerificationAccountCategory",
          "account_holder_id": {
            "docs": "Your unique ID for the account holder, in UUID format.",
            "type": "string",
          },
          "account_holder_type": "EnumIncomeVerificationAccountHolderType",
          "account_id": {
            "docs": "Your unique ID for the account where the transaction occurred.",
            "type": "string",
          },
          "amount": {
            "docs": "The income amount.",
            "type": "double",
          },
          "currency": {
            "docs": "The three-letter currency code of the income. For example:

  • 🇧🇷 BRL (Brazilian Real)
  • 🇨🇴 COP (Colombian Peso)
  • 🇲🇽 MXN (Mexican Peso)",
            "type": "string",
          },
          "description": {
            "docs": "The description of the income.",
            "type": "string",
          },
          "institution": {
            "docs": "The institution where the account is registered.

**Note:** This is the name that you use in your system to identify the institution. For example BBVA Retail.",
            "type": "string",
          },
          "transaction_id": {
            "docs": "Your unique ID for the income.",
            "type": "string",
          },
          "type": "optional<EnumIncomeVerificationType>",
          "value_date": {
            "docs": "The date when the income transaction occurred, in \`YYYY-MM-DD\` format.",
            "type": "string",
          },
        },
      },
      "GrossIncomeIndividual": {
        "docs": "Object containing the declared gross income of the tax payer.",
        "properties": {
          "capital_income": {
            "docs": "Income received from an investment (such as dividends or from renting a property).",
            "type": "double",
          },
          "earned_income": {
            "docs": "Income received from employment.",
            "type": "double",
          },
          "fee_based_income": {
            "docs": "Income received from emitted invoices (for example, income that independent contractors or freelancers receive).",
            "type": "double",
          },
          "non_labor_income": {
            "docs": "Income that cannot be classified into the other three fields (such as income from cryptocurrencies or regular transfers from parents).",
            "type": "double",
          },
        },
      },
      "HolderBankAccountInformationPse": {
        "docs": "Object with additional information about the individual that holds the bank account.",
        "properties": {
          "first_name": {
            "docs": "The account holder's first name.",
            "type": "optional<string>",
          },
          "last_name": {
            "docs": "The account holder's last name.",
            "type": "optional<string>",
          },
        },
      },
      "HolderBankAccountPse": {
        "docs": "Details regarding the bank account holder.",
        "properties": {
          "information": "optional<HolderBankAccountInformationPse>",
          "type": "optional<EnumPaymentIntentHolderTypePse>",
        },
      },
      "HolderResponseOfpiInformation": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "BUSINESS",
          "INDIVIDUAL",
        ],
      },
      "INDIVIDUAL": {
        "docs": "Details about the OFPI payment method.",
        "properties": {
          "open_finance": "PaymentIntentPaymentMethodDetailsBodyIndividualOfpi",
        },
      },
      "Income": {
        "docs": "Income insights",
        "properties": {
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was created in Belvo's database.",
            "type": "datetime",
          },
          "first_transaction_date": {
            "docs": "The date when the first transaction occurred, in \`YYYY-MM-DD\` format.
",
            "type": "optional<string>",
          },
          "id": {
            "docs": "Belvo's unique identifier for the current income.",
            "type": "string",
          },
          "income_source_type": "EnumIncomeSourceType",
          "income_streams": {
            "docs": "An array of enriched income stream objects.",
            "type": "list<IncomeStreamsBody>",
          },
          "last_transaction_date": {
            "docs": "The date when when the last transaction occurred, in \`YYYY-MM-DD\` format.
",
            "type": "string",
          },
          "link": {
            "docs": "The \`link.id\` the account belongs to.",
            "type": "string",
          },
          "monthly_average": {
            "docs": "Average amount of income received per month across all the accounts for the specific user.
",
            "type": "double",
          },
          "monthly_average_high_confidence": {
            "docs": "Average amount of income received per month for the specific user with \`HIGH\` confidence.
",
            "type": "double",
          },
          "monthly_average_irregular": {
            "docs": "Average amount of irregular income (with a frequency of \`SINGLE\` or \`IRREGULAR\`) received per month for the specific user.
",
            "type": "double",
          },
          "monthly_average_low_confidence": {
            "docs": "Average amount of income received per month for the specific user with \`LOW\` confidence.
",
            "type": "double",
          },
          "monthly_average_medium_confidence": {
            "docs": "Average amount of income received per month for the specific user with \`MEDIUM\` confidence.
",
            "type": "double",
          },
          "monthly_average_regular": {
            "docs": "Average amount of regular income (with a frequency of \`MONTHLY\`, \`FORTNIGHTLY\`, or \`WEEKLY\`) received per month for the specific user.
",
            "type": "double",
          },
          "number_of_income_streams": {
            "docs": "Number of total income streams analized.
",
            "type": "integer",
          },
          "total_high_confidence": {
            "docs": "Total amount of income for the specific user with \`HIGH\` confidence.
",
            "type": "double",
          },
          "total_income_amount": {
            "docs": "Total amount of all income received for the specific user.
",
            "type": "double",
          },
          "total_irregular_income_amount": {
            "docs": "Total amount of irregular income (with a frequency of \`SINGLE\` or \`IRREGULAR\`) for the specific user.
",
            "type": "optional<double>",
          },
          "total_low_confidence": {
            "docs": "Total amount of income for the specific user with \`LOW\` confidence.
",
            "type": "double",
          },
          "total_medium_confidence": {
            "docs": "Total amount of income for the specific user with \`MEDIUM\` confidence.
",
            "type": "double",
          },
          "total_regular_income_amount": {
            "docs": "Total amount of regular income (with a frequency of \`MONTHLY\`, \`FORTNIGHTLY\`, \`WEEKLY\`) for the specific user.
",
            "type": "double",
          },
        },
      },
      "IncomeStreamsBody": {
        "docs": "A list of income streams for the account.

For each income stream, we provide additional insights such as:
- Frequency, stability, and confidence level of the income transactions.
- Key metrics about the transaction amounts.
ℹ️ If no income sources are found, we return an empty array.
",
        "properties": {
          "account_id": {
            "docs": "Unique ID for the bank account to be verified for income streams.",
            "type": "string",
          },
          "average_income_amount": {
            "docs": "The average income transaction amount from the source.
",
            "type": "double",
          },
          "confidence": "EnumIncomeStreamConfidence",
          "currency": {
            "docs": "The three-letter currency code of the income. For example:

  • 🇧🇷 BRL (Brazilian Real)
  • 🇨🇴 COP (Colombian Peso)
  • 🇲🇽 MXN (Mexican Peso)",
            "type": "string",
          },
          "frequency": "EnumIncomeStreamFrequency",
          "full_periods": {
            "docs": "Number of period units (based on *rolling months*) with data to perform calculations.

**Note:** A *rolling month* is a period of 30 days. For example, 2023-01-15 to 2023-02-2023.
",
            "type": "integer",
          },
          "income_type": "EnumIncomeStreamType",
          "last_income_amount": {
            "docs": "The amount of the most recent income received from the source.
",
            "type": "double",
          },
          "last_income_date": {
            "docs": "The date when the most recent income from the stream was received, in \`YYYY-MM-DD\` format.
",
            "type": "string",
          },
          "last_income_description": "unknown",
          "lookback_periods": {
            "docs": "Number of period units (based on *rolling months*) used to generate insights and calculations.

**Note:** A *rolling month* is a period of 30 days. For example, 2023-01-15 to 2023-02-2023.
",
            "type": "integer",
          },
          "monthly_average": {
            "docs": "The average amount of income received from the source over \`lookback_periods\`.
",
            "type": "double",
          },
          "number_of_incomes": {
            "docs": "Number of income transactions over the \`lookback_periods\`.
",
            "type": "integer",
          },
          "periods_with_income": {
            "docs": "Number of period units (based on *rolling months*) with at least one income available.

**Note:** A *rolling month* is a period of 30 days. For example, 2023-01-15 to 2023-02-2023.
",
            "type": "integer",
          },
          "regularity": {
            "docs": "The regularity of the income basde in its frequency, with a range from 0 to 1, where 1 represents perfect regularity.

**Note:** For transactions with \`frequency\`=\`SINGLE\`, this value returns \`null\`.
",
            "type": "optional<double>",
          },
          "stability": {
            "docs": "The stability of the income based on its amount, with a range from 0 to 1, where 1 represents perfect stability.

**Note:** For transactions with \`frequency\`=\`SINGLE\`, this value returns \`null\`.
",
            "type": "optional<double>",
          },
          "trend": {
            "docs": "The income trend during a period of time calculated between last income and first income received, where:
  - a negative float means that the income trend is decreasing during the time period.
  - a positive float means that the income trend is increasing during the time period.

**Note:** For transactions with \`frequency\`=\`SINGLE\`, this value returns \`null\`.
",
            "type": "optional<double>",
          },
        },
      },
      "IncomesPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of income objects.",
            "type": "optional<list<Income>>",
          },
        },
      },
      "Institution": {
        "docs": undefined,
        "properties": {
          "country_codes": {
            "docs": "The country codes where the institution is available, for example:
- 🇧🇷 BR (Brazil)
- 🇨🇴 CO (Colombia)
- 🇲🇽 MX (Mexico)
",
            "type": "optional<list<string>>",
          },
          "display_name": {
            "docs": "The customer-facing name of the institution.",
            "type": "optional<string>",
          },
          "features": {
            "docs": "The features that the institution supports. If the institution has no special features, then Belvo returns an empty array.

Here is a list of the available features:
- \`token_required\` indicates that the institution may require a token during link creation or when making any other requests.
",
            "type": "optional<list<InstitutionsFeature>>",
          },
          "form_fields": "optional<list<InstitutionsFormField>>",
          "icon_logo": {
            "docs": "The URL of the institution's icon logo.",
            "type": "optional<string>",
          },
          "id": {
            "docs": "The ID of the institution as designated by Belvo.",
            "type": "optional<integer>",
          },
          "integration_type": "optional<EnumInstitutionIntegrationType>",
          "logo": {
            "docs": "The URL of the institution's logo.",
            "type": "optional<string>",
          },
          "name": {
            "docs": "The name of the institution, as designated by Belvo.
Please see our [Institutions](https://developers.belvo.com/docs/institution) DevPortal article for a detailed list of institution names.",
            "type": "optional<string>",
          },
          "primary_color": {
            "docs": "The primary color on the institution's website.",
            "type": "optional<string>",
          },
          "resources": {
            "docs": "A list of Belvo resources that you can use with the institution. This list includes one or more of the following resources:

  - \`ACCOUNTS\`
  - \`BALANCES\`
  - \`INCOMES\`
  - \`INVESTMENTS_PORTFOLIOS\` 
  - \`INVESTMENTS_TRANSACTIONS\` *This field has been deprecated.*
  - \`INVOICES\`
  - \`OWNERS\`
  - \`RECURRING_EXPENSES\`
  - \`RISK_INSIGHTS\`
  - \`TRANSACTIONS\`
  - \`TAX_COMPLIANCE_STATUS\`
  - \`TAX_STATUS\`
  - \`TAX_RETURNS\`
",
            "type": "optional<list<string>>",
          },
          "status": "optional<EnumInstitutionStatus>",
          "text_logo": {
            "docs": "The URL of the institution's text logo.",
            "type": "optional<string>",
          },
          "type": "optional<EnumInstitutionType>",
          "website": {
            "docs": "The URL of the institution's website.",
            "type": "optional<string>",
          },
        },
      },
      "InstitutionAccount": {
        "docs": "Details regarding the institution.",
        "properties": {
          "name": {
            "docs": "The name of the institution, as designated by Belvo.
Please see our [Institutions](https://developers.belvo.com/docs/institution) DevPortal article for a detailed list of institution names.",
            "type": "optional<string>",
          },
          "type": "optional<EnumInstitutionType>",
        },
      },
      "InstitutionDownError": {
        "docs": "This error occurs when the institution's website that you're trying to access is down due to maintenance or other issues, which means Belvo is unable to create new links or retrieve new data.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`institution_down\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-institution_down" target="_blank">400 institution_down errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`institution_down\` errors, the description is:
  
  - \`The financial institution is down, try again later\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "InstitutionFormField": {
        "docs": undefined,
        "properties": {
          "label": {
            "docs": "The label of the form field. For example:
- Document
- Clave
- Token
",
            "type": "optional<string>",
          },
          "length": {
            "docs": "Number of digits allowed when the type is \`token\`.",
            "type": "optional<integer>",
          },
          "name": {
            "docs": "The username, password, or username type field.",
            "type": "optional<string>",
          },
          "optional": {
            "docs": "It indicates whether this form field is optional.",
            "type": "optional<boolean>",
          },
          "placeholder": {
            "docs": "The placeholder text in the form field.",
            "type": "optional<string>",
          },
          "type": {
            "docs": "The input type for the form field. For example, string.",
            "type": "optional<string>",
          },
          "validation": {
            "docs": "The type of input validation used for the field.",
            "type": "optional<string>",
          },
          "validation_message": {
            "docs": "The message displayed when an invalid input is provided in the form field.",
            "type": "optional<string>",
          },
          "values": {
            "docs": "Array of additional form field values.",
            "type": "optional<list<InstitutionsFormFieldValues>>",
          },
        },
      },
      "InstitutionInactiveError": {
        "docs": "This error occurs when we (Belvo) have deactivated the institution in our API.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`institution_inactive\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-institution_inactive" target="_blank">400 institution_inactive errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`institution_inactive\` errors, the description is:
  
  - \`The institution has been temporarily deactivated\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "InstitutionUnavailableError": {
        "docs": "This error occurs when the institution's website that you're trying to access is down due to maintenance or other issues, which means Belvo is unable to create new links or retrieve new data.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`institution_unavailable\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-institution_unavailable" target="_blank">400 institution_unavailable errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error.

For \`institution_unavailable\` errors, the description is:
  
  - \`The financial institution is unavailable\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "InstitutionsFeature": {
        "docs": undefined,
        "properties": {
          "description": {
            "docs": "The description of the feature.",
            "type": "optional<string>",
          },
          "name": {
            "docs": "The name of the feature.",
            "type": "optional<string>",
          },
        },
      },
      "InstitutionsFormField": {
        "docs": undefined,
        "properties": {
          "label": {
            "docs": "The label of the form field. For example:
- Client number
- Key Bancanet
- Document
",
            "type": "optional<string>",
          },
          "name": {
            "docs": "The username, password, or username type field.",
            "type": "optional<string>",
          },
          "placeholder": {
            "docs": "The placeholder text in the form field.",
            "type": "optional<string>",
          },
          "type": {
            "docs": "The input type for the form field. For example, string.",
            "type": "optional<string>",
          },
          "validation": {
            "docs": "The type of input validation used for the field.",
            "type": "optional<string>",
          },
          "validation_message": {
            "docs": "The message displayed when an invalid input is provided in the form field.",
            "type": "optional<string>",
          },
          "values": {
            "docs": "If the form field is for documents, the institution may require additional input regarding the document type.",
            "type": "optional<list<InstitutionsFormFieldValues>>",
          },
        },
      },
      "InstitutionsFormFieldValues": {
        "docs": undefined,
        "properties": {
          "code": {
            "docs": "The code of the document.",
            "type": "optional<string>",
          },
          "label": {
            "docs": "The label for the field. For example:
- Cédula de Ciudadanía
- Cédula de Extranjería
- Pasaporte
",
            "type": "optional<string>",
          },
          "placeholder": {
            "docs": "The placeholder text in the form field.",
            "type": "optional<string>",
          },
          "validation": {
            "docs": "The type of input validation used for the field.",
            "type": "optional<string>",
          },
          "validation_message": {
            "docs": "The message displayed when an invalid input is provided in the form field.",
            "type": "optional<string>",
          },
        },
      },
      "InstitutionsPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of institution objects.",
            "type": "optional<list<Institution>>",
          },
        },
      },
      "InvalidAccessMode": {
        "docs": "This error occurs when you try to update a link from single to recurrent, but there are no login credentials stored for the user.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`invalid_access_mode_switch\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-invalid_access_mode_switch" target="_blank">400 invalid_access_mode_switch errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`invalid_access_mode_switch\` errors, the description is:
  
  - \`This link doesn't have stored credentials hence it can't be switched to recurrent mode"\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "InvalidLinkError": {
        "docs": "This error occurs when you try to access an account but the user credentials are no longer valid, prompting an error from the institution.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`invalid_link\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-invalid_link" target="_blank">400 invalid_link errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`invalid_link\` errors, the description is:
  
  - \`The link has been invalidated. You may need to update link credentials\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "InvalidPeriodError": {
        "docs": "This error occurs when you request incomes for a link within a given date range, however, the period between \`date_from\` and \`date_to\` is less than 90 days.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`invalid_period\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-invalid_period" target="_blank">400 invalid_period errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`invalid_period\` errors, the description is:
  
  - \`The number of days between date_from and date_to must be at least 90 days\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "InvestmentsPortfolio": {
        "docs": undefined,
        "properties": {
          "balance_gross": {
            "docs": "The current gross total value of the entire portfolio and all its underlying instruments, as given by the institution.
",
            "type": "optional<double>",
          },
          "balance_net": {
            "docs": "The total current value of the entire portfolio and all its underlying instruments, as given by the institution.

ℹ️ **Note:** In Brazil, this is usually calculated based on the net value (that is, not including tax).
",
            "type": "optional<double>",
          },
          "balance_type": {
            "docs": "Indicates whether this account is either an \`ASSET\` or a \`LIABILITY\`. You can consider the balance of an \`ASSET\` as being positive, while the balance of a \`LIABILITY\` as negative.
",
            "type": "optional<string>",
          },
          "currency": {
            "docs": "The currency of the portfolio. For example:


- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)


Please note that other currencies other than in the list above may be returned.
",
            "type": "string",
          },
          "id": {
            "docs": "Belvo's unique ID for the current portfolio.",
            "type": "optional<string>",
          },
          "instruments": {
            "docs": "An array of instruments that fall into the investment portfolio.",
            "type": "optional<list<optional<InvestmentsPortfolioInstrument>>>",
          },
          "name": {
            "docs": "The name of the portfolio, as given in the institution.
",
            "type": "string",
          },
          "type": "EnumInvestmentPortfolioType",
        },
      },
      "InvestmentsPortfolioInstrument": {
        "docs": undefined,
        "properties": {
          "average_acquisition_price": {
            "docs": "The average price of each share acquired in the instrument.",
            "type": "optional<double>",
          },
          "balance_gross": {
            "docs": "The total gross value of the instrument (including taxes).",
            "type": "optional<double>",
          },
          "balance_net": {
            "docs": "The total net value of the instrument (excluding taxes).",
            "type": "optional<double>",
          },
          "currency": {
            "docs": "The currency of the instrument. For example:

- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)
- 🇺🇸 USD (US Dollar)


Please note that other currencies other than in the list above may be returned.
",
            "type": "string",
          },
          "fees": {
            "docs": "An array of fees that apply to the instrument.",
            "type": "optional<list<optional<InvestmentsPortfolioInstrumentFees>>>",
          },
          "id": {
            "docs": "Belvo's unique ID for the current instrument.",
            "type": "optional<string>",
          },
          "interest_rates": {
            "docs": "An array of interest rates that apply to the instrument.",
            "type": "optional<list<optional<InvestmentsPortfolioInstrumentInterestRate>>>",
          },
          "name": {
            "docs": "The name of the instrument, as given by the institution.",
            "type": "string",
          },
          "open_date": {
            "docs": "The start date of the instrument. Only applicable for instruments of type \`bond\` or \`savings\`.",
            "type": "optional<string>",
          },
          "price": {
            "docs": "The current price of one share in the instrument.",
            "type": "optional<double>",
          },
          "profit": {
            "docs": "The current profit earned in the instrument.",
            "type": "optional<double>",
          },
          "public_id": {
            "docs": "The public identifiers for the instrument.",
            "type": "optional<list<InvestmentsPortfolioInstrumentPublicId>>",
          },
          "quantity": {
            "docs": "The total amount of shares owned in the instrument.",
            "type": "optional<double>",
          },
          "redemption_conditions": {
            "docs": "An array of conditions that apply to the instrument in order to retrieve the final value.

For example, the due date, the liquidity date, the previdencia type, and so on.
",
            "type": "optional<list<optional<InvestmentsPortfolioInstrumentRedemptionConditions>>>",
          },
          "subtype": {
            "docs": "The subtype for the instrument, as given by the institution.",
            "type": "optional<string>",
          },
          "type": "EnumInvestmentPortfolioInstrumentType",
        },
      },
      "InvestmentsPortfolioInstrumentFees": {
        "docs": undefined,
        "properties": {
          "type": {
            "docs": "The fee type incurred when making the purchase of the instrument.",
            "type": "string",
          },
          "value": {
            "docs": "The value of \`fees.type\`. The currency of the fee is the same as the currency of the instrument.",
            "type": "double",
          },
        },
      },
      "InvestmentsPortfolioInstrumentInterestRate": {
        "docs": undefined,
        "properties": {
          "index": {
            "docs": "If applicable, the index type that the \`interest_rates.value\` is calculated against.",
            "type": "optional<string>",
          },
          "type": {
            "docs": "How often the interest rate is calculated on the instrument.",
            "type": "string",
          },
          "value": {
            "docs": "The interest rate for the instrument, in percent.


ℹ️  **Note:** If the \`interest_rate.index\` is present, this value is a percentage of the index. For example, if \`interest_rate.index\` = \`CDI\` and \`interest_rate.value\` = \`90\`, then the total interest rate applied is 90% of the CDI.
",
            "type": "double",
          },
        },
      },
      "InvestmentsPortfolioInstrumentPublicId": {
        "docs": "The public identifiers for the instrument.",
        "properties": {
          "type": {
            "docs": "The type of public identifier for the instrument.",
            "type": "string",
          },
          "value": {
            "docs": "The value of the \`public_id.type\`.",
            "type": "string",
          },
        },
      },
      "InvestmentsPortfolioInstrumentRedemptionConditions": {
        "docs": undefined,
        "properties": {
          "type": {
            "docs": "The name of the redemption condition.",
            "type": "string",
          },
          "value": {
            "docs": "The value of \`redemption_conditions.type\`.",
            "type": "string",
          },
        },
      },
      "InvestmentsPortfoliosPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of investment portfolio objects.",
            "type": "optional<list<InvestmentsPortfolio>>",
          },
        },
      },
      "InvoiceDetailDian": {
        "docs": undefined,
        "properties": {
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "description": {
            "docs": "The description of the invoice item (an invoice can have one or more items).",
            "type": "optional<string>",
          },
          "pre_tax_amount": {
            "docs": "The total price for this item before tax is applied (\`quantity\` x \`unit_amount\`).",
            "type": "optional<double>",
          },
          "product_identification": {
            "docs": "The identification code of the product or the service, as defined by the legal entity in the country.
",
            "type": "optional<string>",
          },
          "quantity": {
            "docs": "The quantity of this invoice item.",
            "type": "optional<double>",
          },
          "tax_amount": {
            "docs": "The amount of tax for this invoice item (\`pre_tax_amount\` x \`tax_percentage\`).",
            "type": "optional<double>",
          },
          "tax_percentage": {
            "docs": "The tax percentage to apply.",
            "type": "optional<double>",
          },
          "tax_type": {
            "docs": "The item's tax type.",
            "type": "optional<string>",
          },
          "total_amount": {
            "docs": "The total price for this invoice item (\`pre_tax_amount\` + \`tax_amount\`).",
            "type": "optional<double>",
          },
          "unit_amount": {
            "docs": "The price of one singular item.",
            "type": "optional<double>",
          },
          "unit_code": {
            "docs": "The unit of measure, as defined by the legal entity in the country.
",
            "type": "optional<string>",
          },
          "unit_description": {
            "docs": "The description of the item, as defined by the legal entity in the country.
",
            "type": "optional<string>",
          },
        },
      },
      "InvoiceDetailRetainedTaxSat": {
        "docs": undefined,
        "properties": {
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "retained_tax_amount": {
            "docs": "The amount of retained tax.",
            "type": "optional<double>",
          },
          "tax": {
            "docs": "The type of retained tax (for example, ISR, IVA or IEPS).",
            "type": "optional<string>",
          },
          "tax_percentage": {
            "docs": "The percentage of tax retained.",
            "type": "optional<double>",
          },
          "tax_type": {
            "docs": "**Note**: This field is not applicable for SAT Mexico and will return \`null\`.
",
            "type": "optional<string>",
          },
        },
      },
      "InvoiceDetailSat": {
        "docs": undefined,
        "properties": {
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "description": {
            "docs": "The description of the invoice item (an invoice can have one or more items).",
            "type": "optional<string>",
          },
          "pre_tax_amount": {
            "docs": "The total price for this item before tax is applied (\`quantity\` x \`unit_amount\`).",
            "type": "optional<double>",
          },
          "product_identification": {
            "docs": "The identification code of the product or the service, as defined by the legal entity in the country.
- 🇲🇽 [Mexico](http://200.57.3.89/Pys/catPyS.aspx)
",
            "type": "optional<string>",
          },
          "quantity": {
            "docs": "The quantity of this invoice item.",
            "type": "optional<integer>",
          },
          "retained_taxes": {
            "docs": "The retained tax on the invoice item.",
            "type": "optional<list<InvoiceDetailRetainedTaxSat>>",
          },
          "tax_amount": {
            "docs": "The amount of tax for this invoice item (\`pre_tax_amount\` x \`tax_percentage\`).",
            "type": "optional<double>",
          },
          "tax_percentage": {
            "docs": "The tax percentage to apply.",
            "type": "optional<double>",
          },
          "tax_type": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "total_amount": {
            "docs": "The total price for this invoice item (\`pre_tax_amount\` + \`tax_amount\`).",
            "type": "optional<double>",
          },
          "unit_amount": {
            "docs": "The price of one a singular item.",
            "type": "optional<double>",
          },
          "unit_code": {
            "docs": "The unit of measure, as defined by the legal entity in the country. 
- 🇲🇽 Mexico [SAT catalog reference](https://developers.belvo.com/docs/sat-catalogs#unit-code)
",
            "type": "optional<string>",
          },
          "unit_description": {
            "docs": "The description of the item, as defined by the legal entity in the country.
- 🇲🇽 Mexico [SAT catalog reference](https://developers.belvo.com/docs/sat-catalogs#unit-code)
",
            "type": "optional<string>",
          },
        },
      },
      "InvoiceDian": {
        "docs": undefined,
        "properties": {
          "cancelation_status": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
            "type": "optional<string>",
          },
          "cancelation_update_date": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "certification_authority": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "certification_date": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "optional<datetime>",
          },
          "currency": {
            "docs": "The currency of the invoice. For example:
 
 - 🇧🇷 BRL (Brazilian Real)
 - 🇨🇴 COP (Colombian Peso)
 - 🇲🇽 MXN (Mexican Peso)
 - 🇺🇸 USD (United States Dollar)
",
            "type": "optional<string>",
          },
          "discount_amount": {
            "docs": "The total amount discounted in this invoice.
",
            "type": "optional<double>",
          },
          "exchange_rate": {
            "docs": "The exchange rate used in this invoice for the currency.
",
            "type": "optional<double>",
          },
          "expiration_date": {
            "docs": "Indicates when the invoice is set to expire.

For example: If the invoice is paid in installments, this field indicates the date when the installment is to be paid.
",
            "type": "optional<string>",
          },
          "folio": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "id": {
            "docs": "Belvo's unique identifier for the current invoice.",
            "type": "optional<string>",
          },
          "invoice_date": {
            "docs": "The date of the invoice.",
            "type": "optional<string>",
          },
          "invoice_details": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "list<InvoiceDetailDian>",
          },
          "invoice_identification": {
            "docs": "The fiscal institution's unique ID for the invoice.",
            "type": "optional<string>",
          },
          "invoice_type": "optional<EnumInvoiceDianInvoiceType>",
          "link": {
            "docs": "The \`link.id\` the invoice belongs to.",
            "type": "optional<string>",
          },
          "payment_method": "optional<EnumInvoiceDianPaymentMethod>",
          "payment_method_description": {
            "docs": "The description of the payment method used for this invoice.
",
            "type": "optional<string>",
          },
          "payment_type": {
            "docs": "The payment type code used for this invoice, as defined by the country legal entity.

For detailed information regarding DIAN's payment types, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
            "type": "optional<string>",
          },
          "payment_type_description": {
            "docs": "The description of the payment method used for this invoice.
",
            "type": "optional<string>",
          },
          "payments": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "list<InvoicesPaymentsDian>",
          },
          "payroll": "optional<InvoicesPayrollDian>",
          "place_of_issue": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "receiver_details": "optional<InvoicesReceiverDetailsDian>",
          "receiver_id": {
            "docs": "The fiscal ID of the invoice receiver.",
            "type": "optional<string>",
          },
          "receiver_name": {
            "docs": "The name of the invoice receiver.",
            "type": "optional<string>",
          },
          "receiver_tax_fraud_status": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
            "type": "optional<string>",
          },
          "sender_details": "optional<InvoiceSenderDetailsDian>",
          "sender_id": {
            "docs": "The fiscal ID of the invoice sender.",
            "type": "optional<string>",
          },
          "sender_name": {
            "docs": "The name of the invoice sender.",
            "type": "optional<string>",
          },
          "sender_tax_fraud_status": {
            "docs": "Indicates whether or not the sender is on a tax fraud list for having submitted incorrect data, having outstanding payments, or having conducted business that is in violation of the fiscal institution's regulations.
**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
            "type": "optional<string>",
          },
          "status": {
            "docs": "The status of the invoice. Can be one of:

  - *Vigente* (valid)
  - *Cancelado* (cancelled)
  - *Aprobado* (approved)",
            "type": "optional<string>",
          },
          "subtotal_amount": {
            "docs": "The pretax amount of this invoice (sum of each item's \`pre_tax_amount\`).
",
            "type": "optional<double>",
          },
          "tax_amount": {
            "docs": "The amount of tax for this invoice (sum of each item's \`tax_amount\`).
",
            "type": "optional<double>",
          },
          "total_amount": {
            "docs": "The total amount of the invoice (\`subtotal_amount\` + \`tax_amount\` - \`discount_amount\`)",
            "type": "optional<double>",
          },
          "type": "optional<EnumInvoiceType>",
          "usage": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "version": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "warnings": "optional<InvoiceWarningsDian>",
          "xml": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
        },
      },
      "InvoiceSenderDetailsDian": {
        "docs": "Details regarding the sender.
",
        "properties": {
          "address": {
            "docs": "The sender's address.
",
            "type": "optional<string>",
          },
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "country": {
            "docs": "The country where the sender pays their taxes.
",
            "type": "optional<string>",
          },
          "email": {
            "docs": "The sender's email address.
",
            "type": "optional<string>",
          },
          "phone_number": {
            "docs": "The sender's phone number.
",
            "type": "optional<string>",
          },
          "regimen": {
            "docs": "The sender's regimen type.

For detailed information regarding DIAN's regimens, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
            "type": "optional<string>",
          },
          "tax_payer_type": {
            "docs": "Indicates if the sender is a business or an individual. Can be either:
  
  - \`Persona Jurídica\`
  - \`Persona Natural\`
",
            "type": "optional<string>",
          },
          "tax_scheme": {
            "docs": "The sender's fiscal responsibilities.

For detailed information regarding DIAN's tax schemes, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
            "type": "optional<string>",
          },
        },
      },
      "InvoiceWarningsDian": {
        "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
        "properties": {
          "code": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "message": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
        },
      },
      "InvoiceWarningsSat": {
        "docs": "Object containing information about any warnings related to this invoice.
",
        "properties": {
          "code": {
            "docs": "The warning code.
",
            "type": "optional<string>",
          },
          "message": {
            "docs": "The description of the warning.
",
            "type": "optional<string>",
          },
        },
      },
      "InvoiceWithIdSat": {
        "docs": undefined,
        "properties": {
          "cancelation_status": {
            "docs": "If the invoice is cancelled, this field indicates the status of the cancellation.",
            "type": "optional<string>",
          },
          "cancelation_update_date": {
            "docs": "The date of the invoice cancelation.
",
            "type": "optional<string>",
          },
          "certification_authority": {
            "docs": "The fiscal ID of the certification provider.
",
            "type": "optional<string>",
          },
          "certification_date": {
            "docs": "The date of the fiscal certification.
",
            "type": "optional<string>",
          },
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "optional<datetime>",
          },
          "currency": {
            "docs": "The currency of the invoice. For example:
 
 - 🇧🇷 BRL (Brazilian Real)
 - 🇨🇴 COP (Colombian Peso)
 - 🇲🇽 MXN (Mexican Peso)
 - 🇺🇸 USD (United States Dollar)
",
            "type": "optional<string>",
          },
          "discount_amount": {
            "docs": "The total amount discounted in this invoice.
",
            "type": "optional<double>",
          },
          "exchange_rate": {
            "docs": "The exchange rate used in this invoice for the currency.
",
            "type": "optional<double>",
          },
          "folio": {
            "docs": "The internal control number that the taxpayer assigns to the invoice.
",
            "type": "optional<string>",
          },
          "id": {
            "docs": "Belvo's unique identifier used to reference the current invoice.",
            "type": "optional<string>",
          },
          "invoice_date": {
            "docs": "The date of the invoice.",
            "type": "optional<string>",
          },
          "invoice_details": {
            "docs": "A list of descriptions for each item (purchased product or service provided) in the invoice.
",
            "type": "list<InvoiceDetailSat>",
          },
          "invoice_identification": {
            "docs": "The fiscal institution's unique ID for the invoice.",
            "type": "optional<string>",
          },
          "invoice_type": "optional<EnumInvoiceSatInvoiceType>",
          "link": {
            "docs": "The \`link.id\` the invoice belongs to.",
            "type": "optional<string>",
          },
          "payment_method": "optional<EnumInvoiceSatPaymentMethod>",
          "payment_method_description": {
            "docs": "*This field has been deprecated.*

*The description of the payment method used for this invoice.*
",
            "type": "optional<string>",
          },
          "payment_type": {
            "docs": "The payment type code used for this invoice, as defined by the country legal entity.

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payment-type)
",
            "type": "optional<string>",
          },
          "payment_type_description": {
            "docs": "*This field has been deprecated.*
",
            "type": "optional<string>",
          },
          "payments": {
            "docs": "A list detailing all the invoice payments.
",
            "type": "list<InvoicesPaymentsSat>",
          },
          "payroll": "optional<InvoicesPayrollSat>",
          "place_of_issue": {
            "docs": "The postcode of where the invoice was issued.
",
            "type": "optional<string>",
          },
          "receiver_blacklist_status": {
            "docs": "This field has been deprecated. Please use \`receiver_tax_fraud_status\` instead.
",
            "type": "optional<string>",
          },
          "receiver_id": {
            "docs": "The fiscal ID of the invoice receiver.",
            "type": "optional<string>",
          },
          "receiver_name": {
            "docs": "The name of the invoice receiver.",
            "type": "optional<string>",
          },
          "receiver_tax_fraud_status": {
            "docs": "Indicates whether or not the receiver is on SAT's tax fraud list for having submitted incorrect data, having outstanding payments, or having conducted business that is in violation of the fiscal institution's regulations.<br><br>
SAT updates the tax fraud list every three months. <br><br>
For more information regarding the reason's a taxpayer can be put on the tax fraud list, please see [Article 69](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69.html) and [Article 69-B](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69B.html) of Mexico's Código Fiscal de la Federación. <br><br>
Possible statuses are:
- \`INVESTIGATING\` <br> The fiscal institution has identified irregularities and open an investigation regarding the taxpayer. <br> - \`DISMISSED\` <br> The fiscal institution has investigated the taxpayer and declared them innocent. <br> - \`CONFIRMED\` <br> The fiscal institution has confirmed that the taxpayer is guilty. <br> - \`OVERTURNED\` <br> The fiscal institution has reassessed a previously confirmed taxpayer and, based on new evidence, has taken the taxpayer off the tax fraud list. <br> - \`NO_TAX_FRAUD_STATUS\` <br> The receiver or sender is not found in the list (in other words, they are complying with the fiscal institution's regulations).",
            "type": "optional<string>",
          },
          "sender_blacklist_status": {
            "docs": "This field has been deprecated. Please use \`sender_tax_fraud_status\` instead.
",
            "type": "optional<string>",
          },
          "sender_id": {
            "docs": "The fiscal ID of the invoice sender",
            "type": "optional<string>",
          },
          "sender_name": {
            "docs": "The name of the invoice sender.",
            "type": "optional<string>",
          },
          "sender_tax_fraud_status": {
            "docs": "Indicates whether or not the sender is on SAT's tax fraud list for having submitted incorrect data, having outstanding payments, or having conducted business that is in violation of the fiscal institution's regulations.<br><br>
SAT updates the tax fraud list every three months. <br><br>
For more information regarding the reason's a taxpayer can be put on the tax fraud list, please see [Article 69](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69.html) and [Article 69-B](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69B.html) of Mexico's Código Fiscal de la Federación. <br><br>
Possible statuses are:
- \`INVESTIGATING\` <br> The fiscal institution has identified irregularities and open an investigation regarding the taxpayer. <br> - \`DISMISSED\` <br> The fiscal institution has investigated the taxpayer and declared them innocent. <br> - \`CONFIRMED\` <br> The fiscal institution has confirmed that the taxpayer is guilty. <br> - \`OVERTURNED\` <br> The fiscal institution has reassessed a previously confirmed taxpayer and, based on new evidence, has taken the taxpayer off the tax fraud list. <br> - \`NO_TAX_FRAUD_STATUS\` <br> The receiver or sender is not found in the list (in other words, they are complying with the fiscal institution's regulations).",
            "type": "optional<string>",
          },
          "status": {
            "docs": "The status of the invoice. Can be either *Vigente* (valid) or *Cancelado* (cancelled).",
            "type": "optional<string>",
          },
          "subtotal_amount": {
            "docs": "The pretax amount of this invoice (sum of each item's \`pre_tax_amount\`).
",
            "type": "optional<double>",
          },
          "tax_amount": {
            "docs": "The amount of tax for this invoice (sum of each item's \`tax_amount\`).
",
            "type": "optional<double>",
          },
          "total_amount": {
            "docs": "The total amount of the invoice (\`subtotal_amount\` + \`tax_amount\` - \`discount_amount\`)",
            "type": "optional<double>",
          },
          "type": "optional<EnumInvoiceType>",
          "usage": {
            "docs": "The invoice's usage code, as defined by the legal entity of the country. 

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#usage)
",
            "type": "optional<string>",
          },
          "version": {
            "docs": "The CFDI version of the invoice.
",
            "type": "optional<string>",
          },
          "warnings": "optional<InvoiceWarningsSat>",
          "xml": {
            "docs": "XML of the invoice document.
",
            "type": "optional<string>",
          },
        },
      },
      "InvoicesPaymentsDian": {
        "docs": undefined,
        "properties": {
          "amount": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<double>",
          },
          "beneficiary_account_number": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "beneficiary_rfc": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "currency": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "date": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<datetime>",
          },
          "exchange_rate": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "operation_number": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "payer_account_number": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "payer_bank_name": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "payer_rfc": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "payment_type": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "related_documents": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "list<InvoicesPaymentsRelatedDocumentsDian>",
          },
        },
      },
      "InvoicesPaymentsRelatedDocumentsDian": {
        "docs": "List of all the related deferred invoices affected by the payment.",
        "properties": {
          "amount_paid": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<double>",
          },
          "currency": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "invoice_identification": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "outstanding_balance": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<double>",
          },
          "partiality_number": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<integer>",
          },
          "payment_method": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "previous_balance": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<double>",
          },
        },
      },
      "InvoicesPaymentsRelatedDocumentsSat": {
        "docs": "List of all the related deferred invoices affected by the payment.",
        "properties": {
          "amount_paid": {
            "docs": "The amount paid in this installment.
",
            "type": "optional<double>",
          },
          "currency": {
            "docs": "The currency of the related invoice. For example:
    
- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)
  
  Please note that other currencies other than in the list above may be returned.
",
            "type": "optional<string>",
          },
          "invoice_identification": {
            "docs": "The fiscal institution's unique ID for the related deferred invoice.
",
            "type": "optional<string>",
          },
          "outstanding_balance": {
            "docs": "The amount remaining to be paid.
",
            "type": "optional<double>",
          },
          "partiality_number": {
            "docs": "The payment installment number.
",
            "type": "optional<integer>",
          },
          "payment_method": {
            "docs": "The payment method of the related invoice.
",
            "type": "optional<string>",
          },
          "previous_balance": {
            "docs": "The invoice amount before the payment.
",
            "type": "optional<double>",
          },
        },
      },
      "InvoicesPaymentsSat": {
        "docs": undefined,
        "properties": {
          "amount": {
            "docs": "The invoice amount, in the currency of the original invoice.
",
            "type": "optional<double>",
          },
          "beneficiary_account_number": {
            "docs": "The bank account number of the payment beneficiary.
",
            "type": "optional<string>",
          },
          "beneficiary_rfc": {
            "docs": "The fiscal ID of the payment beneficiary.
",
            "type": "optional<string>",
          },
          "currency": {
            "docs": "The currency of the payment. For example:

- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)

Please note that other currencies other than in the list above may be returned.
",
            "type": "optional<string>",
          },
          "date": {
            "docs": "ISO-8601 timestamp when the payment was made.
",
            "type": "optional<datetime>",
          },
          "exchange_rate": {
            "docs": "The \`currency\` to MXN currency exchange rate when the payment was made.
",
            "type": "optional<string>",
          },
          "operation_number": {
            "docs": "The fiscal institution's internal identifier for the operation.
",
            "type": "optional<string>",
          },
          "payer_account_number": {
            "docs": "The bank account number of the payment issuer.
",
            "type": "optional<string>",
          },
          "payer_bank_name": {
            "docs": "The banking institution that was used by the payment issuer.
",
            "type": "optional<string>",
          },
          "payer_rfc": {
            "docs": "The fiscal ID of the payment issuer.
",
            "type": "optional<string>",
          },
          "payment_type": {
            "docs": "Payment type code used for this invoice, as defined by the country's legal entity.

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payment-type)
",
            "type": "optional<string>",
          },
          "related_documents": {
            "docs": "A list of all the related deferred invoices affected by the payment.
",
            "type": "list<InvoicesPaymentsRelatedDocumentsSat>",
          },
        },
      },
      "InvoicesPayrollDian": {
        "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
        "properties": {
          "amount": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<double>",
          },
          "collected_at": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
            "type": "optional<datetime>",
          },
          "date_from": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "date_to": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "days": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<integer>",
          },
          "payment_date": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "type": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "version": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
        },
      },
      "InvoicesPayrollSat": {
        "docs": "Details regarding the payroll payment. Only applicable for payroll invoices.
",
        "properties": {
          "amount": {
            "docs": "The total amount of the payroll payment.
",
            "type": "double",
          },
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "date_from": {
            "docs": "The start date of the payment period.
",
            "type": "optional<string>",
          },
          "date_to": {
            "docs": "The end date of the payment period.
",
            "type": "optional<string>",
          },
          "days": {
            "docs": "The number of days covered by the payment.
",
            "type": "optional<integer>",
          },
          "payment_date": {
            "docs": "The payment date.
",
            "type": "string",
          },
          "type": {
            "docs": "The payroll type, as defined by the legal entity of the country.

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payroll-type)
",
            "type": "optional<string>",
          },
          "version": {
            "docs": "The version of the payroll object.
",
            "type": "string",
          },
        },
      },
      "InvoicesReceiverDetailsDian": {
        "docs": "Details regarding the receiver.
",
        "properties": {
          "address": {
            "docs": "The receiver's address.
",
            "type": "optional<string>",
          },
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "country": {
            "docs": "The country where the receiver pays their taxes.
",
            "type": "optional<string>",
          },
          "email": {
            "docs": "The receiver's email address.
",
            "type": "optional<string>",
          },
          "phone_number": {
            "docs": "The receiver's phone number.
",
            "type": "optional<string>",
          },
          "regimen": {
            "docs": "The receiver's regimen type.

For detailed information regarding DIAN's regimens, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
            "type": "optional<string>",
          },
          "tax_payer_type": {
            "docs": "Indicates if the receiver is a business or an individual. Can be either:
  
  - \`Persona Jurídica\`
  - \`Persona Natural\`
",
            "type": "optional<string>",
          },
          "tax_scheme": {
            "docs": "The receiver's fiscal responsibilities.

For detailed information regarding DIAN's tax schemes, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
            "type": "optional<string>",
          },
        },
      },
      "InvoicesResponsePaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of invoice objects.",
            "type": "optional<list<InvoicesResponsePaginatedResponseResultsItem>>",
          },
        },
      },
      "InvoicesResponsePaginatedResponseResultsItem": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "InvoiceWithIdSat",
          "InvoiceDian",
        ],
      },
      "LastErrorInvalidCredentials": {
        "docs": "Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when the credentials that your customer provides are incorrect.",
        "properties": {
          "error_code": {
            "docs": "A unique error code (\`invalid_credentials\`) that allows you to classify and handle the error programmatically.",
            "type": "string",
          },
          "error_message": {
            "docs": "A short description of the error.",
            "type": "string",
          },
        },
      },
      "LastErrorInvalidToken": {
        "docs": "Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when the MFA token your customer provides is invalid.",
        "properties": {
          "error_code": {
            "docs": "A unique error code (\`invalid_token\`) that allows you to classify and handle the error programmatically.",
            "type": "string",
          },
          "error_message": {
            "docs": "A short description of the error.",
            "type": "string",
          },
        },
      },
      "LastErrorLoginError": {
        "docs": "Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when something unexpected happened in the \`pse_display_credentials_required\` next step.",
        "properties": {
          "error_code": {
            "docs": "A unique error code (\`login_error\`) that allows you to classify and handle the error programmatically.",
            "type": "string",
          },
          "error_message": {
            "docs": "A short description of the error.",
            "type": "string",
          },
        },
      },
      "LastErrorPaymentError": {
        "docs": "Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when something unexpected happened during the payment intent process.",
        "properties": {
          "error_code": {
            "docs": "A unique error code (\`payment_error\`) that allows you to classify and handle the error programmatically.",
            "type": "string",
          },
          "error_message": {
            "docs": "A short description of the error.",
            "type": "string",
          },
        },
      },
      "LastErrorSessionExpired": {
        "docs": "Information about the error you ran into in the previous step of the payment intent, if applicable. This error occurs when you try to send a PATCH request after the session has already expired (the session expires after 10 minutes).",
        "properties": {
          "error_code": {
            "docs": "A unique error code (\`session_expired\`) that allows you to classify and handle the error programmatically.",
            "type": "string",
          },
          "error_message": {
            "docs": "A short description of the error.",
            "type": "string",
          },
        },
      },
      "LastErrorTwoFactor": {
        "docs": "Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when something unexpected happened in the \`pse_display_token_required\` next step.",
        "properties": {
          "error_code": {
            "docs": "A unique error code (\`login_two_factor_error\`) that allows you to classify and handle the error programmatically.",
            "type": "string",
          },
          "error_message": {
            "docs": "A short description of the error.",
            "type": "string",
          },
        },
      },
      "Link": {
        "docs": undefined,
        "properties": {
          "access_mode": "optional<EnumLinkAccessModeResponse>",
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "optional<datetime>",
          },
          "created_by": {
            "docs": "The unique ID for the user that created this link.",
            "type": "optional<string>",
          },
          "external_id": {
            "docs": "The \`external_id\` you provided as an additional identifier for the link. For more information, see our [Link creation article](https://developers.belvo.com/docs/link-creation-best-practices#adding-your-own-identifier).",
            "type": "optional<string>",
          },
          "id": {
            "docs": "Belvo's unique ID for the current Link.",
            "type": "optional<string>",
          },
          "institution": {
            "docs": "Belvo's name for the institution.
",
            "type": "optional<string>",
          },
          "institution_user_id": {
            "docs": "<div style="background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px"> <strong>Info:</strong> Only applicable for links created <b>after 08-02-2022</b>. </div>

A unique 44-character string that can be used to identify a user at a given institution.

📚 Check out our [Avoiding duplicated links](https://developers.belvo.com/docs/link-creation-best-practices#avoiding-duplicated-links) DevPortal article for more information and tips on how to use it.",
            "type": "optional<string>",
          },
          "last_accessed_at": {
            "docs": "The ISO-8601 timestamp of Belvo's most recent successful access to the institution for the given link.",
            "type": "optional<datetime>",
          },
          "refresh_rate": "optional<EnumLinkRefreshRate>",
          "status": "optional<EnumLinkStatus>",
        },
      },
      "LoginError": {
        "docs": "This error can occur when:

  - the credentials that your user provides are incorrect or missing.
  - the MFA token your user provides is not supported by Belvo.
  - there is an issue with the institution that prevents logins.
  - the user's account is either locked or the user does not have permission to access their internet banking.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`login_error\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-login_error" target="_blank">400 login_error errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`login_error\` errors, the description can be one of the following:

  - \`Invalid credentials provided to login to the institution\`
  - \`A MFA token is required by the institution, but it's not supported yet by Belvo.\`
  - \`Impossible to login, something unexpected happened while logging into the institution. Try again later.\`
  - \`Login not attempted due to invalid credentials\`
  - \`Missing credentials to login to the institution\`
  - \`The user account access was forbidden by the institution\`
  - \`The user account is locked, user needs to contact the institution to unlock it\`",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "NeedsRedirectContent": {
        "docs": "Details regarding the payer institution.",
        "properties": {
          "payer_institution": "optional<PaymentInstitution>",
        },
      },
      "NeedsRedirectContentPse": {
        "docs": "Details regarding the payer institution.",
        "properties": {
          "payer_institution": "optional<InstitutionFormField>",
        },
      },
      "NetIncomeIndividual": {
        "docs": "Object containing the declared net income of the tax payer. The values are calculated as the \`gross_income\` - \`non_taxable_income\`.",
        "properties": {
          "capital_income": {
            "docs": "Income received from an investment (such as dividends or from renting a property).",
            "type": "double",
          },
          "earned_income": {
            "docs": "Income received from employment.",
            "type": "double",
          },
          "fee_based_income": {
            "docs": "Income received from emitted invoices (for example, income independent contractors or freelancers receive).",
            "type": "double",
          },
          "non_labor_income": {
            "docs": "Income that cannot be classified into the other three fields (such as income from cryptocurrencies or regular transfers from parents).",
            "type": "double",
          },
        },
      },
      "NextStepDisplayConfirmationRequiredOfpi": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "open_finance_display_confirmation_required": "optional<DisplayConfirmationRequiredOfpi>",
          "ready_to_confirm": {
            "docs": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When set to \`true\`, you need to confirm the payment by making a PATCH request sending through \`confirm: true\`.",
            "type": "optional<boolean>",
          },
        },
      },
      "NextStepDisplayConfirmationRequiredPse": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "pse_display_confirmation_required": "optional<DisplayConfirmationRequiredContentPse>",
          "ready_to_confirm": {
            "docs": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When the value is \`true\`, you'll need to make a PATCH request sending through \`confirm: true\` to confirm the payment.",
            "type": "optional<boolean>",
          },
        },
      },
      "NextStepDisplayCredentialsRequiredPse": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "pse_display_credentials_required": "optional<DisplayCredentialsRequiredContentPse>",
          "ready_to_confirm": {
            "docs": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When the value is \`true\`, you'll need to make a PATCH request sending through \`confirm: true\` to confirm the payment.",
            "type": "optional<boolean>",
          },
        },
      },
      "NextStepDisplayCustomerBankAccountsPse": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "pse_display_customer_bank_accounts": "optional<DisplayCustomerBankAccountsContentPse>",
          "ready_to_confirm": {
            "docs": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When the value is \`true\`, you'll need to make a PATCH request sending through \`confirm: true\` to confirm the payment.",
            "type": "optional<boolean>",
          },
        },
      },
      "NextStepDisplayNeedsRedirectPse": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "pse_display_needs_redirect": "optional<NeedsRedirectContentPse>",
          "ready_to_confirm": {
            "docs": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When the value is \`true\`, you'll need to make a PATCH request sending through \`confirm: true\` to confirm the payment.",
            "type": "optional<boolean>",
          },
        },
      },
      "NextStepDisplayPaymentFailed": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "open_finance_display_payment_failed": "optional<DisplayPaymentFailed>",
          "ready_to_confirm": {
            "docs": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When set to \`true\`,you need to confirm the payment by making a PATCH request sending through \`confirm: true\`.",
            "type": "optional<boolean>",
          },
        },
      },
      "NextStepDisplayPaymentMethodInformation": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "open_finance_display_payment_method_information": "optional<DisplayPaymentMethodInformationContentOfpi>",
          "ready_to_confirm": {
            "docs": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When set to \`true\`, you need to confirm the payment by making a PATCH request sending through \`confirm: true\`.",
            "type": "optional<boolean>",
          },
        },
      },
      "NextStepDisplayPaymentMethodInformationPse": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type. You'll need to send a PATCH request with the institution selected by the customer or their bank accounts (if there are accounts already saved in the Belvo database).",
        "properties": {
          "pse_display_payment_method_information": "optional<DisplayPaymentMethodInformationContentPse>",
          "ready_to_confirm": {
            "docs": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When the value is \`true\`, you'll need to make a PATCH request sending through \`confirm: true\` to confirm the payment.",
            "type": "optional<boolean>",
          },
        },
      },
      "NextStepDisplayPaymentProcessing": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "open_finance_display_payment_processing": "optional<DisplayPaymentProcessing>",
          "ready_to_confirm": {
            "docs": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When set to \`true\`, you need to confirm the payment by making a PATCH request sending through \`confirm: true\`.",
            "type": "optional<boolean>",
          },
        },
      },
      "NextStepDisplayPaymentSucceeded": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "open_finance_display_payment_succeeded": "optional<DisplayPaymentSucceeded>",
          "ready_to_confirm": {
            "docs": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When set to \`true\`, you need to confirm the payment by making a PATCH request sending through \`confirm: true\`.",
            "type": "optional<boolean>",
          },
        },
      },
      "NextStepDisplayTokenRequiredPse": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "pse_display_token_required": "optional<DisplayTokenRequiredContentPse>",
          "ready_to_confirm": {
            "docs": "Boolean that indicates whether the payment intent is ready to be confirmed. This value will return: 

  - \`false\` when a customer wants to pay for the very first time. This is so because you still need to input information about your customer in the following steps to process a payment successfully. 
  - \`true\` when a customer wants to pay and this is not their first time. This is so because the payment intent has all the information needed about the customer to process a payment. 


**Note:** When the value is \`true\`, you'll need to confirm the payment intent. You can do this by making a PATCH request sending through the parameter \`confirm: true\`.",
            "type": "optional<boolean>",
          },
        },
      },
      "NextStepNeedsRedirect": {
        "docs": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
        "properties": {
          "open_finance_display_needs_redirect": "optional<NeedsRedirectContent>",
          "ready_to_confirm": {
            "docs": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When set to \`true\`, you need to confirm the payment by making a PATCH request sending through \`confirm: true\`.",
            "type": "optional<boolean>",
          },
        },
      },
      "NonTaxableIncomeIndividual": {
        "docs": "Object containing the declared non-taxable income of the tax payer.",
        "properties": {
          "capital_income": {
            "docs": "Income received from an investment (such as dividends or from renting a property).",
            "type": "double",
          },
          "earned_income": {
            "docs": "Income received from employment.",
            "type": "double",
          },
          "fee_based_income": {
            "docs": "Income received from emitted invoices (for example, income independent contractors or freelancers receive).",
            "type": "double",
          },
          "non_labor_income": {
            "docs": "Income that cannot be classified into the other three fields (such as income from cryptocurrencies or regular transfers from parents).",
            "type": "double",
          },
        },
      },
      "NotFoundErrorBody": {
        "docs": undefined,
        "properties": {
          "code": {
            "docs": "A unique error code (\`not_found\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#404-not_found" target="_blank">404 not_found errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`not_found\` errors, the description is:
  
  - \`Not found\`",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "OFPB": {
        "docs": "Details about the organization's bank account that will receive the payment.",
        "properties": {
          "beneficiary_bank_account": {
            "docs": "Belvo's unique ID used to identify the beneficiary's bank account.",
            "type": "string",
          },
          "callback_url": {
            "docs": "The URL to your application that your customer will be directed to once they confirm the payment in their bank application.",
            "type": "optional<string>",
          },
        },
      },
      "OFPI": {
        "docs": "Details about the payment method.",
        "properties": {
          "open_finance": "optional<ChargePaymentMethodDetailsOfpiContent>",
        },
      },
      "Owner": {
        "docs": undefined,
        "properties": {
          "address": {
            "docs": "The accounts owners registered address.",
            "type": "optional<string>",
          },
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "optional<datetime>",
          },
          "display_name": {
            "docs": "The full name of the owner, as provided by the bank.",
            "type": "optional<string>",
          },
          "document_id": "optional<OwnerDocumentId>",
          "email": {
            "docs": "The account owner's registered email address.",
            "type": "optional<string>",
          },
          "first_name": {
            "docs": "*This field has been deprecated.*

*The first name of the account owner.*
",
            "type": "optional<string>",
          },
          "id": {
            "docs": "Belvo's unique identifier used to reference the current owner.",
            "type": "optional<string>",
          },
          "internal_identification": {
            "docs": "The institution's internal identifier for the owner.",
            "type": "optional<string>",
          },
          "last_name": {
            "docs": "*This field has been deprecated.*

*The last name of the account owner.*
",
            "type": "optional<string>",
          },
          "link": {
            "docs": "Belvo's unique ID for the current Link.",
            "type": "optional<string>",
          },
          "phone_number": {
            "docs": "The account owner's registered phone number.",
            "type": "optional<string>",
          },
          "second_last_name": {
            "docs": "*This field has been deprecated.*

*The second last name of the account owner.*
",
            "type": "optional<string>",
          },
        },
      },
      "OwnerDocumentId": {
        "docs": "Information regarding the identification document the owner provided to the bank.",
        "properties": {
          "document_number": {
            "docs": "The document's identification number.",
            "type": "optional<string>",
          },
          "document_type": {
            "docs": "The type of document the owner provided to the institution to open the account. Common document types are:

🇧🇷 Brazil
- \`CPF\` (*Cadastro de Pessoas Físicas*)
- \`CNPJ\`(*Cadastro Nacional de Pessoas Jurídicas*)

🇨🇴 Colombia
- \`CC\`(*Cédula de Ciudadanía*)
- \`NIT\` (*Número de Identificación Tributaria*)

🇲🇽 Mexico
- \`CURP\` (*Clave Única de Registro de Población*)
- \`NISS\` (*Número de Seguridad Social*)
",
            "type": "optional<string>",
          },
        },
      },
      "OwnersPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of owner objects.",
            "type": "optional<list<Owner>>",
          },
        },
      },
      "PSE": {
        "docs": "Object with payment method details to create a payment intent.",
        "properties": {
          "pse": "PSE",
        },
      },
      "PaginatedResponseLink": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": "optional<list<Link>>",
        },
      },
      "PatchBody": {
        "docs": "A JSON object containing a session UUID and a MFA token",
        "properties": {
          "link": {
            "docs": "The \`link.id\` you want to resume. Must be the same \`link.id\` as the one you receive in the 428 Token Required response that contains the \`session\` ID.",
            "type": "string",
          },
          "save_data": {
            "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
            "type": "optional<boolean>",
          },
          "session": {
            "docs": "The session you want to resume. You need to use the \`session\` value that is provided in the 428 Token Required response that you receive after you make your POST request.",
            "type": "string",
          },
          "token": {
            "docs": "The MFA token generated by the institution and required to continue a session.",
            "type": "optional<string>",
          },
        },
      },
      "PatchBodyWithoutSaveData": {
        "docs": "A JSON object containing a session UUID and a MFA token",
        "properties": {
          "link": {
            "docs": "The \`link.id\` you want to resume. Must be the same \`link.id\` as the one you receive in the 428 Token Required response that contains the \`session\` ID.",
            "type": "string",
          },
          "session": {
            "docs": "The session you want to resume. You need to use the \`session\` value that is provided in the 428 Token Required response that you receive after you make your POST request.",
            "type": "string",
          },
          "token": {
            "docs": "The MFA token generated by the institution and required to continue a session.",
            "type": "optional<string>",
          },
        },
      },
      "PatchPaymentIntentsBodyPse": {
        "docs": undefined,
        "properties": {
          "pse": "optional<PatchPaymentMethodDetailsPse>",
        },
      },
      "PatchPaymentMethodDetailsPse": {
        "docs": "Object with required fields to fill information in the payment intent object. The information you need to send through depends on the next step Belvo returns in the response.",
        "properties": {
          "password": {
            "docs": "The password used to log in to the institution.

**Note**: You need to send through this information after you received the \`pse_display_credentials_required\` next step in the payment intent.",
            "type": "optional<string>",
          },
          "payer_bank_account": {
            "docs": "Belvo's unique identifier for the payer’s bank account.

**Note**: You need to send through this information after you received the \`pse_display_customer_bank_accounts\` next step in the payment intent.",
            "type": "optional<string>",
          },
          "payer_institution": {
            "docs": "Belvo's unique identifier for the payer’s institution.

**Note**: You need to send through this information after you received the \`pse_display_payment_method_information\` next step in the payment intent.",
            "type": "optional<string>",
          },
          "payer_token": {
            "docs": "The MFA token generated by the institution and required to continue the payment flow.

**Note**: You need to send through this information if you received the \`pse_display_token_required\` next step in the payment intent.",
            "type": "optional<string>",
          },
          "username": {
            "docs": "The username used to log in to the institution.

**Note**: You need to send through this information after you received the \`pse_display_credentials_required\` next step in the payment intent.",
            "type": "optional<string>",
          },
        },
      },
      "PaymentInstitution": {
        "docs": undefined,
        "properties": {
          "active": {
            "docs": "Indicates whether this institution is available for use or not.",
            "type": "optional<boolean>",
          },
          "country": "optional<EnumPaymentsCountry>",
          "display_name": {
            "docs": "The customer-facing name of the institution.",
            "type": "optional<string>",
          },
          "form_fields": "optional<list<InstitutionFormField>>",
          "icon_logo": {
            "docs": "The URL of the institution's icon logo.",
            "type": "optional<string>",
          },
          "id": {
            "docs": "Belvo's unique ID to reference the institution.",
            "type": "optional<string>",
          },
          "legal_entity_name": {
            "docs": "The name of the legal entity of the institution, as registered with the relevant regulatory authority. Only applicable for 🇧🇷 Brazil OFPI.",
            "type": "optional<string>",
          },
          "logo": {
            "docs": "The URL of the institution's logo.",
            "type": "optional<string>",
          },
          "name": {
            "docs": "The name of the institution, as designated by Belvo.",
            "type": "optional<string>",
          },
          "primary_color": {
            "docs": "The primary color on the institution's website.",
            "type": "optional<string>",
          },
          "text_logo": {
            "docs": "The URL of the institution's text logo.",
            "type": "optional<string>",
          },
          "website": {
            "docs": "The URL of the institution's website.",
            "type": "optional<string>",
          },
        },
      },
      "PaymentIntentOfpi": {
        "docs": undefined,
        "properties": {
          "allowed_payment_method_types": {
            "docs": "A list of payment method types allowed in this payment intent. For OFPI, the value will be \`open_finance\`.",
            "type": "list<string>",
          },
          "amount": {
            "docs": "Amount to be paid by your customer.
",
            "type": "string",
          },
          "charges": {
            "docs": "An array of charge objects related to this paymnet intent. If no charges are associated, we return an empty array.

**Note**: The charges resource will be deprecated and removed from our API by end of Q1 2023. We recommend not using any data from this resource.",
            "type": "optional<list<Charge>>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created this payment intent.",
            "type": "string",
          },
          "currency": "EnumPaymentsCurrency",
          "customer": {
            "docs": "Belvo's unique ID for the customer related to this payment intent.",
            "type": "string",
          },
          "description": {
            "docs": "The description of the payment.
",
            "type": "string",
          },
          "failure_code": {
            "docs": "Error code that explains the reason behind a payment being unsuccessful (if applicable).
",
            "type": "optional<string>",
          },
          "failure_message": {
            "docs": "Further information regarding the \`failure_code\`.
",
            "type": "optional<string>",
          },
          "id": {
            "docs": "Belvo's unique ID for the current payment intent.",
            "type": "string",
          },
          "last_error": "LastErrorPaymentError",
          "metadata": {
            "docs": "Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number.

⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.",
            "type": "optional<map<string, unknown>>",
          },
          "next_step": "PaymentIntentOfpiNextStep",
          "payment_method_details": "PaymentIntentOfpiPaymentMethodDetails",
          "payment_method_information": "OFPI",
          "provider": "EnumPaymentLinkProvider",
          "selected_payment_method_type": "EnumPaymentLinkAllowedPaymentMethod",
          "status": "EnumPaymentIntentStatus",
          "updated_at": {
            "docs": "The ISO-8601 timestamp of when the payment intent was last updated.
",
            "type": "optional<datetime>",
          },
        },
      },
      "PaymentIntentOfpiNextStep": {
        "base-properties": {},
        "discriminant": "type",
        "docs": undefined,
        "union": {
          "open_finance_display_confirmation_required": "NextStepDisplayConfirmationRequiredOfpi",
          "open_finance_display_needs_redirect": "NextStepNeedsRedirect",
          "open_finance_display_payment_failed": "NextStepDisplayPaymentFailed",
          "open_finance_display_payment_method_information": "NextStepDisplayPaymentMethodInformation",
          "open_finance_display_payment_processing": "NextStepDisplayPaymentProcessing",
          "open_finance_display_payment_succeeded": "NextStepDisplayPaymentSucceeded",
        },
      },
      "PaymentIntentOfpiPaymentMethodDetails": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "INDIVIDUAL",
          "BUSINESS",
        ],
      },
      "PaymentIntentPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of payment intent objects.",
            "type": "optional<list<PaymentIntentPse>>",
          },
        },
      },
      "PaymentIntentPaymentMethodDetailsBodyBusinessOfpi": {
        "docs": "Payment method type selected.",
        "properties": {
          "beneficiary_bank_account": {
            "docs": "Belvo's unique ID used to identify the beneficiary's bank account.",
            "type": "string",
          },
          "callback_url": {
            "docs": "The callback URL that your user will be redirected to after confirming the payment in their banking application.",
            "type": "string",
          },
          "cpf": {
            "docs": "The customer's CPF number. Only required when the \`customer_type\` is \`BUSINESS\`.

**Note:** This value is obfuscated.",
            "type": "optional<string>",
          },
          "payer_institution": {
            "docs": "Belvo's unique ID to reference the payer's institution.",
            "type": "string",
          },
        },
      },
      "PaymentIntentPaymentMethodDetailsBodyIndividualOfpi": {
        "docs": "Payment method type selected.",
        "properties": {
          "beneficiary_bank_account": {
            "docs": "Belvo's unique ID used to identify the beneficiary's bank account.",
            "type": "string",
          },
          "callback_url": {
            "docs": "The callback URL that your user will be redirected to after confirming the payment in their banking application.",
            "type": "string",
          },
          "cpf": {
            "docs": "The customer's CPF number. Only required when the \`customer_type\` is \`BUSINESS\`.

**Note:** This value is obfuscated.",
            "type": "optional<string>",
          },
          "payer_institution": {
            "docs": "Belvo's unique ID to reference the payer's institution.",
            "type": "string",
          },
        },
      },
      "PaymentIntentPaymentMethodDetailsBodyPse": {
        "docs": "Details about the payment method type selected.",
        "properties": {
          "belvo_flow": {
            "docs": "This parameter determines the payment flow of the payment intent. By default, this is set to \`true\` and the payment intent created is processed using the Belvo's payment flow and Belvo-integrated institutions. When set to \`false\`, the payment intent process uses institutions not integrated into Belvo's flow.",
            "type": "boolean",
          },
          "beneficiary_bank_account": {
            "docs": "Belvo's unique ID used to identify the beneficiary’s bank account.",
            "type": "string",
          },
          "callback_url": {
            "docs": "The callback URL that your user will be redirected to after confirming the payment in their banking application.",
            "type": "string",
          },
          "password": {
            "docs": "The password used to log in to the institution. This value is obfuscated.",
            "type": "optional<string>",
          },
          "payer_bank_account": {
            "docs": "Belvo's unique ID used to identify the customer’s bank account.",
            "type": "optional<string>",
          },
          "payer_institution": {
            "docs": "Belvo's unique identifier for the payer’s institution.",
            "type": "optional<string>",
          },
          "username": {
            "docs": "The username used to log in to the institution. This value is obfuscated.",
            "type": "optional<string>",
          },
        },
      },
      "PaymentIntentPse": {
        "docs": undefined,
        "properties": {
          "allowed_payment_method_types": {
            "docs": "A list of payment method types allowed in this payment intent. For PSE, the value will be \`pse\`.",
            "type": "list<EnumPaymentLinkAllowedPaymentMethod>",
          },
          "amount": {
            "docs": "Amount to be paid by your customer.
",
            "type": "string",
          },
          "charges": {
            "docs": "An array of charge objects related to this paymnet intent. If no charges are associated, we return an empty array.

**Note**: The charges resource will be deprecated and removed from our API by end of Q1 2023. We recommend not using any data from this resource.",
            "type": "optional<list<Charge>>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created this payment intent.",
            "type": "string",
          },
          "currency": "EnumPaymentsCurrency",
          "customer": {
            "docs": "Belvo's unique ID for the customer related to this payment intent.",
            "type": "string",
          },
          "description": {
            "docs": "The description of the payment.
",
            "type": "string",
          },
          "failure_code": {
            "docs": "Error code that explains the reason behind a payment being unsuccessful (if applicable).
",
            "type": "optional<string>",
          },
          "failure_message": {
            "docs": "Further information regarding the \`failure_code\`.
",
            "type": "optional<string>",
          },
          "id": {
            "docs": "Belvo's unique ID for the current payment intent.",
            "type": "string",
          },
          "last_error": "PaymentIntentPseLastError",
          "metadata": {
            "docs": "Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number.

⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.",
            "type": "optional<map<string, unknown>>",
          },
          "next_step": "PaymentIntentPseNextStep",
          "payment_method_details": "PSE",
          "payment_method_information": "PSE",
          "provider": "EnumPaymentLinkProvider",
          "selected_payment_method_type": "EnumPaymentLinkAllowedPaymentMethod",
          "status": "EnumPaymentIntentStatus",
          "updated_at": {
            "docs": "The ISO-8601 timestamp of when the payment intent was last updated.
",
            "type": "optional<datetime>",
          },
        },
      },
      "PaymentIntentPseLastError": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "LastErrorInvalidCredentials",
          "LastErrorInvalidToken",
          "LastErrorLoginError",
          "LastErrorTwoFactor",
          "LastErrorPaymentError",
          "LastErrorSessionExpired",
        ],
      },
      "PaymentIntentPseNextStep": {
        "base-properties": {},
        "discriminant": "type",
        "docs": undefined,
        "union": {
          "pse_display_confirmation_required": "NextStepDisplayConfirmationRequiredPse",
          "pse_display_credentials_required": "NextStepDisplayCredentialsRequiredPse",
          "pse_display_customer_bank_accounts": "NextStepDisplayCustomerBankAccountsPse",
          "pse_display_needs_redirect": "NextStepDisplayNeedsRedirectPse",
          "pse_display_payment_method_information": "NextStepDisplayPaymentMethodInformationPse",
          "pse_display_token_required": "NextStepDisplayTokenRequiredPse",
        },
      },
      "PaymentLinkCallbackUrls": {
        "docs": undefined,
        "properties": {
          "cancel": {
            "docs": "The URL that the user should be redirected to if they decide to cancel the payment process or if an error occurs.

**Note:** Not required if your integration only generates payment links through the [Belvo Dashboard](https://dashboard.belvo.com/).",
            "type": "optional<string>",
          },
          "success": {
            "docs": "The URL that the user should be redirected to when they complete the payment process successfully.

**Note:** Not required if your integration only generates payment links through the [Belvo Dashboard](https://dashboard.belvo.com/).",
            "type": "optional<string>",
          },
        },
      },
      "PaymentLinkCallbackUrlsResponse": {
        "docs": "The URLs that the user should be redirected to.

**Note:** This field will return an empty object if your integration only generates payment links through the [Belvo Dashboard](https://dashboard.belvo.com/).",
        "properties": {
          "cancel": {
            "docs": "The URL that the user should be redirected to if they decide to cancel the payment process or if an error occurs.",
            "type": "optional<string>",
          },
          "success": {
            "docs": "The URL that the user should be redirected to when they complete the payment process successfully.",
            "type": "optional<string>",
          },
        },
      },
      "PaymentLinkListOfpi": {
        "docs": undefined,
        "properties": {
          "access_token": {
            "docs": "The Belvo-generated access token for the payment link.

**Note:** You'll need the \`access_token\` to make [Get details for a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) requests.",
            "type": "optional<string>",
          },
          "callback_urls": "PaymentLinkCallbackUrlsResponse",
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created the payment link.",
            "type": "string",
          },
          "expires_at": {
            "docs": "The ISO-8601 timestamp of when the payment link is set to expire.
",
            "type": "datetime",
          },
          "expires_in": {
            "docs": "The payment link expiration time.  ",
            "type": "string",
          },
          "id": {
            "docs": "Belvo's unique ID for the current payment link.",
            "type": "string",
          },
          "payment_intent": {
            "docs": "Belvo's unique ID for the payment intent. You can retrieve the complete payment intent by using our [Get details of a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) request.",
            "type": "optional<string>",
          },
          "payment_url": {
            "docs": "The URL for the hosted-widget that will guide your user through the payments process.",
            "type": "string",
          },
          "status": "EnumPaymentLinksStatus",
          "updated_at": {
            "docs": "The ISO-8601 timestamp of when the payment link was last updated.
",
            "type": "optional<datetime>",
          },
        },
      },
      "PaymentLinkListPse": {
        "docs": undefined,
        "properties": {
          "access_token": {
            "docs": "The Belvo-generated access token for the payment link.

**Note:** You'll need the \`access_token\` to make [Get details for a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) requests.",
            "type": "optional<string>",
          },
          "callback_urls": "PaymentLinkCallbackUrlsResponse",
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created the payment link.",
            "type": "string",
          },
          "expires_at": {
            "docs": "The ISO-8601 timestamp of when the payment link is set to expire.
",
            "type": "datetime",
          },
          "expires_in": {
            "docs": "The payment link expiration time.  ",
            "type": "string",
          },
          "id": {
            "docs": "Belvo's unique ID for the current payment link.",
            "type": "string",
          },
          "payment_intent": {
            "docs": "Belvo's unique ID for the payment intent. You can retrieve the complete payment intent by using our [Get details of a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) request.",
            "type": "optional<string>",
          },
          "payment_url": {
            "docs": "The URL for the hosted-widget that will guide your user through the payments process.",
            "type": "string",
          },
          "status": "EnumPaymentLinksStatus",
          "updated_at": {
            "docs": "The ISO-8601 timestamp of when the payment link was last updated.
",
            "type": "optional<datetime>",
          },
        },
      },
      "PaymentLinkOfpi": {
        "docs": undefined,
        "properties": {
          "access_token": {
            "docs": "The Belvo-generated access token for the payment link.

**Note:** You'll need the \`access_token\` to make [Get details for a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) requests.",
            "type": "optional<string>",
          },
          "callback_urls": "PaymentLinkCallbackUrlsResponse",
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created the payment link.",
            "type": "string",
          },
          "expires_at": {
            "docs": "The ISO-8601 timestamp of when the payment link is set to expire.
",
            "type": "datetime",
          },
          "expires_in": {
            "docs": "The payment link expiration time.  ",
            "type": "string",
          },
          "id": {
            "docs": "Belvo's unique ID for the current payment link.",
            "type": "string",
          },
          "payment_intent": "optional<PaymentIntentOfpi>",
          "payment_url": {
            "docs": "The URL for the hosted-widget that will guide your user through the payments process.",
            "type": "string",
          },
          "status": "EnumPaymentLinksStatus",
          "updated_at": {
            "docs": "The ISO-8601 timestamp of when the payment link was last updated.
",
            "type": "optional<datetime>",
          },
        },
      },
      "PaymentLinkPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of bank account objects.",
            "type": "optional<list<PaymentLinkPaginatedResponseResultsItem>>",
          },
        },
      },
      "PaymentLinkPaginatedResponseResultsItem": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "PaymentLinkListOfpi",
          "PaymentLinkListPse",
        ],
      },
      "PaymentLinkPse": {
        "docs": undefined,
        "properties": {
          "access_token": {
            "docs": "The Belvo-generated access token for the payment link.

**Note:** You'll need the \`access_token\` to make [Get details for a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) requests.",
            "type": "optional<string>",
          },
          "callback_urls": "PaymentLinkCallbackUrlsResponse",
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created the payment link.",
            "type": "string",
          },
          "expires_at": {
            "docs": "The ISO-8601 timestamp of when the payment link is set to expire.
",
            "type": "datetime",
          },
          "expires_in": {
            "docs": "The payment link expiration time. ",
            "type": "string",
          },
          "id": {
            "docs": "Belvo's unique ID for the current payment link.",
            "type": "string",
          },
          "payment_intent": "optional<PaymentIntentPse>",
          "payment_url": {
            "docs": "The URL for the hosted-widget that will guide your user through the payments process.",
            "type": "string",
          },
          "status": "EnumPaymentLinksStatus",
          "updated_at": {
            "docs": "The ISO-8601 timestamp of when the payment link was last updated.
",
            "type": "optional<datetime>",
          },
        },
      },
      "PaymentMethodInfoCustomerBankAccountsPse": {
        "docs": undefined,
        "properties": {
          "customer": {
            "docs": "Belvo's unique ID for the current customer.",
            "type": "optional<string>",
          },
          "details": "optional<PaymentMethodInformationDetailsPse>",
          "holder": "optional<HolderBankAccountPse>",
          "id": {
            "docs": "Belvo's unique ID used to identify the customer’s bank account.",
            "type": "optional<string>",
          },
          "institution": "optional<PaymentInstitution>",
          "number": {
            "docs": "The customer's bank account number. This value is obfuscated.",
            "type": "optional<string>",
          },
        },
      },
      "PaymentMethodInformationBodyOfpi": {
        "docs": "Payment method type selected.",
        "properties": {
          "end_to_end_id": {
            "docs": "A unique ID for the transaction in the Brazil's PIX payment system.",
            "type": "optional<string>",
          },
          "provider_request_id": {
            "docs": "Unique ID for the payment, as sent by the provider.",
            "type": "optional<string>",
          },
          "redirect_url": {
            "docs": "URL that redirects the user to the institution's website.",
            "type": "optional<string>",
          },
        },
      },
      "PaymentMethodInformationBodyPse": {
        "docs": "Payment method type selected.",
        "properties": {
          "bank_payment_id": {
            "docs": "Unique payment ID provided the institution.",
            "type": "optional<string>",
          },
          "end_to_end_id": {
            "docs": "A unique ID for the transaction in Colombia's Payments Way system.",
            "type": "optional<string>",
          },
          "provider_request_id": {
            "docs": "Unique ID for the payment, as sent by the provider.",
            "type": "optional<string>",
          },
          "redirect_url": {
            "docs": "URL that redirects the user to the institution's website.",
            "type": "optional<string>",
          },
        },
      },
      "PaymentMethodInformationDetailsPse": {
        "docs": undefined,
        "properties": {
          "account_type": {
            "docs": "The type of bank account. For example, \`Ahorros\` or \`Corriente\`.",
            "type": "optional<string>",
          },
          "country": "optional<EnumPaymentsCountry>",
        },
      },
      "PaymentTransaction": {
        "docs": undefined,
        "properties": {
          "amount": {
            "docs": "The transaction amount.


**Note**: The amount displayed is always positive as we indicate the direction of the transaction in \`transaction_type\` parameter.
",
            "type": "string",
          },
          "beneficiary": {
            "docs": "Belvo's unique ID used to identify the beneficiary's bank account.",
            "type": "string",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID for the user that created the payment.",
            "type": "string",
          },
          "currency": "EnumPaymentsCurrency",
          "customer": {
            "docs": "Belvo's unique ID for the customer asscociated with this transaction.",
            "type": "optional<string>",
          },
          "description": {
            "docs": "The description of the payment.
",
            "type": "string",
          },
          "id": {
            "docs": "Belvo’s unique ID to reference the transaction.",
            "type": "string",
          },
          "payer": "PaymentTransactionPayer",
          "payment_intent": {
            "docs": "The unique ID of the payment intent associated with the transaction.",
            "type": "optional<string>",
          },
          "transaction_type": "EnumPaymentTransactionType",
        },
      },
      "PaymentTransactionPayer": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "TransactionBankAccountOfpi",
          "TransactionBankAccountPse",
        ],
      },
      "PaymentWebhook": {
        "docs": undefined,
        "properties": {
          "auth_header": {
            "docs": "The authentication header for the request. **Must** be set to \`Authorization\`.",
            "type": "optional<string>",
          },
          "auth_token": {
            "docs": "The authentication token you need to send webhook events. This value is obfuscated.",
            "type": "optional<string>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the webhook was created in our database.
",
            "type": "datetime",
          },
          "created_by": {
            "docs": "Belvo's unique ID of the user that created the webhook.",
            "type": "string",
          },
          "id": {
            "docs": "Belvo's unique ID for the webhook.",
            "type": "string",
          },
          "name": "unknown",
          "url": {
            "docs": "The URL where webhook events should be sent to.",
            "type": "string",
          },
        },
      },
      "PaymentsInstitutionsPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of institution objects.",
            "type": "optional<list<PaymentInstitution>>",
          },
        },
      },
      "PaymentsTransactionsPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of transaction objects.",
            "type": "optional<list<PaymentTransaction>>",
          },
        },
      },
      "PaymentsWay": {
        "docs": undefined,
        "properties": {
          "form_id": {
            "docs": "Your unique Payments Way form ID.

**Note:** Belvo provides you with the Payments Way form ID during your onboarding process. If you don't have one yet, just reach out to us at payments-info@belvo.com and we'll give you a hand with this. 🙂",
            "type": "integer",
          },
          "terminal_id": {
            "docs": "Your unique Payments Way terminal ID.

**Note:** Belvo provides you with the Payments Way terminal ID during your onboarding process. If you don't have one yet, just reach out to us at payments-info@belvo.com and we'll give you a hand with this. 🙂",
            "type": "integer",
          },
        },
      },
      "PaymentsWebhooksPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of webhook objects.",
            "type": "optional<list<PaymentWebhook>>",
          },
        },
      },
      "PensionIncomeStatementIndividual": {
        "docs": "Object containing the tax payer's total pension income.",
        "properties": {
          "net_pension_income": {
            "docs": "The total net pension of the taxpayer.",
            "type": "double",
          },
          "net_taxable_pension_income": {
            "docs": "The total taxable pension income of the taxpayer.",
            "type": "double",
          },
        },
      },
      "ReceivablesTransaction": {
        "docs": undefined,
        "properties": {
          "account": "ReceivablesTransactionAccount",
          "collected_at": {
            "docs": "The ISO timestamp when the data point was collected.",
            "type": "datetime",
          },
          "created_at": {
            "docs": "The ISO timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "currency": {
            "docs": "The currency of the transaction. For example:
- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)

 Please note that currencies other than those listed above may be returned.",
            "type": "string",
          },
          "fees": "list<RecevablesTransactionFees>",
          "gross_amount": {
            "docs": "The total gross amount of the transaction.",
            "type": "optional<double>",
          },
          "id": {
            "docs": "Belvo's unique ID for the current receivable transaction.",
            "type": "string",
          },
          "institution_transaction_id": {
            "docs": "Internal identification number that the acquirer uses to identify the transaction.
ℹ️ **Note**: For Brazil, this number is the NSU.",
            "type": "string",
          },
          "net_amount": {
            "docs": "The net amount of the transaction.",
            "type": "optional<double>",
          },
          "number_of_installments": "optional<ReceivablesTransactionNumberOfInstallments>",
          "status": "optional<EnumReceivableTransactionStatus>",
          "type": "optional<EnumReceivableTransactionType>",
          "value_date": {
            "docs": "The date that the transactions occurred, according to the institution, in \`YYYY-MM-DD\` format.",
            "type": "string",
          },
          "value_hour": {
            "docs": "The time that the transaction occurred, according to the institution, in \`HH:MM\` format.",
            "type": "string",
          },
        },
      },
      "ReceivablesTransactionAccount": {
        "docs": "Basic information about the account associated with the transaction.",
        "properties": {
          "id": {
            "docs": "Belvo's unique ID for the account associated with the transaction.",
            "type": "string",
          },
          "institution": "InstitutionAccount",
        },
      },
      "ReceivablesTransactionNumberOfInstallments": {
        "docs": "Details regarding the number of installments for the transaction, if applicable.",
        "properties": {
          "paid": {
            "docs": "The number of payments already made to pay the cost of the transaction.",
            "type": "optional<integer>",
          },
          "total": {
            "docs": "The number of payments required to pay the cost of the transaction.",
            "type": "optional<integer>",
          },
        },
      },
      "ReceivablesTransactionsPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of receivables objects.",
            "type": "optional<list<ReceivablesTransaction>>",
          },
        },
      },
      "RecevablesTransactionFees": {
        "docs": "Details regarding the fees applied to the transaction.",
        "properties": {
          "type": "optional<EnumReceivableTransactionFeeType>",
          "value": {
            "docs": "The value of \`fees.type\`.",
            "type": "double",
          },
        },
      },
      "RecurringExpenseSourceTransaction": {
        "docs": "An array of minified transaction objects used to evaluate the recurring expense. If no transactions were found, we return an empty array.",
        "properties": {
          "amount": {
            "docs": "The transaction amount.",
            "type": "double",
          },
          "description": {
            "docs": "The description of the transaction provided by the institution. Usually, this is the text that the end user would see in the bank statement. The description can be an empty string.",
            "type": "optional<string>",
          },
          "value_date": {
            "docs": "The date when the transaction occurred, in \`YYYY-MM-DD\` format.",
            "type": "string",
          },
        },
      },
      "RecurringExpenses": {
        "docs": "Recurring expense insights.


ℹ️ If no recurring expense insights are found, we return an empty array.
",
        "properties": {
          "account": "optional<Account>",
          "average_transaction_amount": {
            "docs": "The average transaction amount of the recurring expense.",
            "type": "double",
          },
          "category": "EnumRecurringExpenseCategory",
          "days_since_last_transaction": {
            "docs": "Number of days since the last recurring expense occurred.

Based on the frequency, you can infer how many days until the next charge will occur.
",
            "type": "integer",
          },
          "frequency": "EnumRecurringExpenseFrequency",
          "id": {
            "docs": "Belvo's unique identifier used to reference the current recurring expense.",
            "type": "optional<string>",
          },
          "median_transaction_amount": {
            "docs": "The median transaction amount of the recurring expense.",
            "type": "double",
          },
          "name": {
            "docs": "The name for the recurring expense.

ℹ️ **Note**: This information is taken from the description section of a transaction and then normalized to provide you with an easy-to-read name. As such, sometimes the name will reflect the merchant the payment is made to (for example, Netflix.com), while for other recurring expenses, this could be something like "Monthly payment to John".
",
            "type": "optional<string>",
          },
          "payment_type": "optional<EnumRecurringExpensePaymentType>",
          "transactions": {
            "docs": "An array of minified transaction objects used to evaluate the recurring expense. If no transactions were found, we return an empty array.",
            "type": "list<optional<RecurringExpenseSourceTransaction>>",
          },
        },
      },
      "RecurringExpensesPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of recurring expense objects.",
            "type": "optional<list<RecurringExpenses>>",
          },
        },
      },
      "ReportingId": {
        "docs": "Object containing information about where the tax payer reports their income.",
        "properties": {
          "reporting_type": {
            "docs": "The type of reporting ID. For DIAN, this is the sectional address code (*Codigo Dirrecion Seccional*)",
            "type": "string",
          },
          "reporting_value": {
            "docs": "The value of the reporting ID.",
            "type": "string",
          },
        },
      },
      "RequestTimeoutErrorBody": {
        "docs": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`request_timeout\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#408-request_timeout" target="_blank">408 request_timeout errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`request_timeout\` errors, the description is:
  
  - \`The request timed out, you can retry asking for less data by changing your query parameters\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "RetentionBreakdown": {
        "docs": "A breakdown of the retained taxes",
        "properties": {
          "base_amount": {
            "docs": "The base amount that was used to calculate the tax retention.
",
            "type": "optional<double>",
          },
          "payment_status": "optional<EnumTaxRetentionPaymentStatus>",
          "retained_amount": {
            "docs": "The amount retained.
",
            "type": "optional<double>",
          },
          "tax_type": {
            "docs": "Optional attribute to indicate the type of tax withheld for the period or year according to the [SAT catalog](https://developers.belvo.com/docs/sat-catalogs#retention-code).
",
            "type": "optional<string>",
          },
        },
      },
      "RiskInsights": {
        "docs": undefined,
        "properties": {
          "accounts": {
            "docs": "An array of Belvo-generated account numbers (UUIDs) that were used during the risk insights analysis. If no accounts were found, we return an empty array.",
            "type": "optional<list<string>>",
          },
          "balances_metrics": "optional<RiskInsightsBalanceMetrics>",
          "cashflow_metrics": "optional<RiskInsightsCashflowMetrics>",
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "credit_cards_metrics": "optional<RiskInsightsCreditCardMetrics>",
          "id": {
            "docs": "Belvo's unique ID for the risk insights request.",
            "type": "string",
          },
          "link": {
            "docs": "The \`link.id\` the risk insights analysis belongs to.",
            "type": "string",
          },
          "loans_metrics": "optional<RiskInsightsLoansMetrics>",
          "transactions_metrics": "optional<RiskInsightsTransactionMetrics>",
        },
      },
      "RiskInsightsBalanceMetrics": {
        "docs": "Balance metrics calculated based on the user's balances from checking and savings accounts.",
        "properties": {
          "balance_threshold_x": {
            "docs": "The threshold used to compute \`days_balance_below_x_period\`. Please note, this is value is country specific (both in terms of the amount and the currency).
",
            "type": "double",
          },
          "closing_balance": {
            "docs": "The balance of all the accounts at the \`collected_at\` time.
",
            "type": "optional<double>",
          },
          "days_balance_below_0_1m": {
            "docs": "The number of days that the total balance of the account is less than or equal to 0 in the last month.
",
            "type": "optional<integer>",
          },
          "days_balance_below_0_1w": {
            "docs": "The number of days that the total balance of the account is less than or equal to 0 in the last week.
",
            "type": "optional<integer>",
          },
          "days_balance_below_0_3m": {
            "docs": "The number of days that the total balance of the account is less than or equal to 0 in the last three months.
",
            "type": "optional<integer>",
          },
          "days_balance_below_x_1m": {
            "docs": "The number of days that the total balance of the account is less than or equal to the amount specified in \`balance_threshold_x\` in the last month.
",
            "type": "optional<integer>",
          },
          "days_balance_below_x_1w": {
            "docs": "The number of days that the total balance of the account is less than or equal to the amount specified in \`balance_threshold_x\` in the last week.
",
            "type": "optional<integer>",
          },
          "days_balance_below_x_3m": {
            "docs": "The number of days that the total balance of the account is less than or equal to the amount specified in \`balance_threshold_x\` in the last three months.
",
            "type": "optional<integer>",
          },
          "max_balance_1m": {
            "docs": "The maximum balance in the period (one month).
",
            "type": "optional<double>",
          },
          "max_balance_1w": {
            "docs": "The maximum balance in the period (one week).
",
            "type": "optional<double>",
          },
          "max_balance_3m": {
            "docs": "The maximum balance in the period (three months).
",
            "type": "optional<double>",
          },
          "min_balance_1m": {
            "docs": "The minimum balance in the period (one month).
",
            "type": "optional<double>",
          },
          "min_balance_1w": {
            "docs": "The minimum balance in the period (one week).
",
            "type": "optional<double>",
          },
          "min_balance_3m": {
            "docs": "The minimum balance in the period (three months).
",
            "type": "optional<double>",
          },
        },
      },
      "RiskInsightsCashflowMetrics": {
        "docs": "Aggregated metrics calculated based on the user's transactions from checking, savings, credit, and loan accounts.

However, internal transfers (transfers between accounts belonging to the same link) are not used in the calculation.
",
        "properties": {
          "positive_to_negative_ratio_1m": {
            "docs": "The ratio between sum_positive / sum_negative  in the last month (counted from the time of the request).

ℹ️ If the ratio is greater than \`1\`, it means that the user has more income than outgoing, indicating that they spend less than they earn.
",
            "type": "optional<double>",
          },
          "positive_to_negative_ratio_1w": {
            "docs": "The ratio between sum_positive / sum_negative  in the last week (counted from the time of the request).

ℹ️ If the ratio is greater than \`1\`, it means that the user has more income than outgoing, indicating that they spend less than they earn.

**Note**: In the case that there have been no outgoing transactions, the value will be \`null\`.
",
            "type": "optional<double>",
          },
          "positive_to_negative_ratio_3m": {
            "docs": "The ratio between sum_positive / sum_negative  in the last three months (counted from the time of the request).

ℹ️ If the ratio is greater than \`1\`, it means that the user has more income than outgoing, indicating that they spend less than they earn.
",
            "type": "optional<double>",
          },
          "sum_negative_1m": {
            "docs": "Sum total of all transactions leading to a negative cashflow in the last month (counted from the time of the request).
",
            "type": "optional<double>",
          },
          "sum_negative_1w": {
            "docs": "Sum total of all transactions leading to a negative cashflow in the last week (counted from the time of the request).
",
            "type": "optional<double>",
          },
          "sum_negative_3m": {
            "docs": "Sum total of all transactions leading to a negative cashflow in the last three months (counted from the time of the request).
",
            "type": "optional<double>",
          },
          "sum_positive_1m": {
            "docs": "Sum total of all transactions leading to a positive cashflow in the last month (counted from the time of the request).
",
            "type": "optional<double>",
          },
          "sum_positive_1w": {
            "docs": "Sum total of all transactions leading to a positive cashflow in the last week (counted from the time of the request).
",
            "type": "optional<double>",
          },
          "sum_positive_3m": {
            "docs": "Sum total of all transactions leading to a positive cashflow in the last three months (counted from the time of the request).
",
            "type": "optional<double>",
          },
        },
      },
      "RiskInsightsCreditCardMetrics": {
        "docs": "Aggregated metrics calculated based on the link's credit card accounts.",
        "properties": {
          "num_accounts": {
            "docs": "Number of credit cards accounts associated to the link.
",
            "type": "integer",
          },
          "sum_credit_limit": {
            "docs": "Sum total of all credit cards' limits.
",
            "type": "optional<double>",
          },
          "sum_credit_used": {
            "docs": "Sum total of all credit used.
",
            "type": "optional<double>",
          },
        },
      },
      "RiskInsightsLoansMetrics": {
        "docs": "Aggregated metrics calculated based on the user's loan accounts.",
        "properties": {
          "num_accounts": {
            "docs": "Number of loan accounts associated with the link.
",
            "type": "integer",
          },
          "sum_loans_monthly_payment": {
            "docs": "Sum total of the monthly payments for all the link's loan accounts.
",
            "type": "optional<double>",
          },
          "sum_loans_outstanding_principal": {
            "docs": "Sum total of the outstanding principal for all the link's loan accounts.
",
            "type": "optional<double>",
          },
          "sum_loans_principal": {
            "docs": "Sum total of the principal for all of the link's loan accounts.
",
            "type": "optional<double>",
          },
        },
      },
      "RiskInsightsPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of risk insights objects.",
            "type": "optional<list<RiskInsights>>",
          },
        },
      },
      "RiskInsightsTransactionMetrics": {
        "docs": "Aggregated metrics calculated band on the user's transactions from checking, savings, credit card, and loan accounts.",
        "properties": {
          "max_incoming_amount_1m": {
            "docs": "The highest value inflow transaction in the last month.
",
            "type": "optional<double>",
          },
          "max_incoming_amount_1w": {
            "docs": "The highest value inflow transaction in the last week.
",
            "type": "optional<double>",
          },
          "max_incoming_amount_3m": {
            "docs": "The highest value inflow transaction in the last three months.
",
            "type": "optional<double>",
          },
          "max_outgoing_amount_1m": {
            "docs": "The highest value outflow transaction in the last month.
",
            "type": "optional<double>",
          },
          "max_outgoing_amount_1w": {
            "docs": "The highest value outflow transaction in the last week.
",
            "type": "optional<double>",
          },
          "max_outgoing_amount_3m": {
            "docs": "The highest value outflow transaction in the last three months.
",
            "type": "optional<double>",
          },
          "mean_incoming_amount_1m": {
            "docs": "The mean incoming value of all transactions in the last month.
",
            "type": "optional<double>",
          },
          "mean_incoming_amount_1w": {
            "docs": "The mean incoming value of all transactions in the last week.
",
            "type": "optional<double>",
          },
          "mean_incoming_amount_3m": {
            "docs": "The mean incoming value of all transactions in the last three months.
",
            "type": "optional<double>",
          },
          "mean_outgoing_amount_1m": {
            "docs": "The mean outgoing value of all transaction in the last month.
",
            "type": "optional<double>",
          },
          "mean_outgoing_amount_1w": {
            "docs": "The mean outgoing value of all transaction in the last week.
",
            "type": "optional<double>",
          },
          "mean_outgoing_amount_3m": {
            "docs": "The mean outgoing value of all transaction in the last three months.
",
            "type": "optional<double>",
          },
          "num_incoming_transactions_1m": {
            "docs": "The total number of inflow transactions for the last month.

ℹ️ **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is \`0\`.

If the account has not been open long enough to have the transaction data for a given period, we return \`null\`. For example, if the account has only been open for five days, we return values for \`_1w\` and \`_1m\`, however, the value for \`_3m\` will be \`null\`.
",
            "type": "integer",
          },
          "num_incoming_transactions_1w": {
            "docs": "The total number of inflow transactions for the last week.

ℹ️ **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is \`0\`.

If the account has not been open long enough to have the transaction data for a given period, we return \`null\`. For example, if the account has only been open for five days, we return values for \`_1w\` and \`_1m\`, however, the value for \`_3m\` will be \`null\`.
",
            "type": "integer",
          },
          "num_incoming_transactions_3m": {
            "docs": "The total number of inflow transactions for the last three months.

ℹ️ **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is \`0\`.

If the account has not been open long enough to have the transaction data for a given period, we return \`null\`. For example, if the account has only been open for five days, we return values for \`_1w\` and \`_1m\`, however, the value for \`_3m\` will be \`null\`.
",
            "type": "integer",
          },
          "num_outgoing_transactions_1m": {
            "docs": "To total number of outflow transactions in the last month.

ℹ️ **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is \`0\`.

If the account has not been open long enough to have the transaction data for a given period, we return \`null\`. For example, if the account has only been open for five days, we return values for \`_1w\` and \`_1m\`, however, the value for \`_3m\` will be \`null\`.
",
            "type": "integer",
          },
          "num_outgoing_transactions_1w": {
            "docs": "To total number of outflow transactions in the last week.

ℹ️ **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is \`0\`.

If the account has not been open long enough to have the transaction data for a given period, we return \`null\`. For example, if the account has only been open for five days, we return values for \`_1w\` and \`_1m\`, however, the value for \`_3m\` will be \`null\`.
",
            "type": "integer",
          },
          "num_outgoing_transactions_3m": {
            "docs": "To total number of outflow transactions in the last three months.

ℹ️ **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is \`0\`.

If the account has not been open long enough to have the transaction data for a given period, we return \`null\`. For example, if the account has only been open for five days, we return values for \`_1w\` and \`_1m\`, however, the value for \`_3m\` will be \`null\`.
",
            "type": "integer",
          },
          "num_transactions_1m": {
            "docs": "The total number of transactions analyzed to determine the risk insights for the last month (incoming and outgoing).
",
            "type": "integer",
          },
          "num_transactions_1w": {
            "docs": "The total number of transactions analyzed to determine the risk insights for the last week (incoming and outgoing).
",
            "type": "integer",
          },
          "num_transactions_3m": {
            "docs": "The total number of transactions analyzed to determine the risk insights for the last three months (incoming and outgoing).
",
            "type": "integer",
          },
          "sum_incoming_amount_1m": {
            "docs": "The total sum of all inflow transactions for the last month.
",
            "type": "optional<double>",
          },
          "sum_incoming_amount_1w": {
            "docs": "The total sum of all inflow transactions for the last week.
",
            "type": "optional<double>",
          },
          "sum_incoming_amount_3m": {
            "docs": "The total sum of all inflow transactions for the last three months.
",
            "type": "optional<double>",
          },
          "sum_outgoing_amount_1m": {
            "docs": "The total sum of all outflow transactions for the last month.
",
            "type": "optional<double>",
          },
          "sum_outgoing_amount_1w": {
            "docs": "The total sum of all outflow transactions for the last week.
",
            "type": "optional<double>",
          },
          "sum_outgoing_amount_3m": {
            "docs": "The total sum of all outflow transactions for the last three months.
",
            "type": "optional<double>",
          },
        },
      },
      "SecretKeys": {
        "docs": undefined,
        "properties": {
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the secret key was created.
",
            "type": "datetime",
          },
          "id": {
            "docs": "Belvo's unique ID for the Payments API \`secretId\`.",
            "type": "string",
          },
          "last_used": {
            "docs": "The ISO-8601 timestamp of when the secret key was last used.
",
            "type": "datetime",
          },
          "password": {
            "docs": "Your Payments API \`secretPassword\`. This value is obfuscated.",
            "type": "string",
          },
        },
      },
      "SecretKeysPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of secret keys objects.",
            "type": "optional<list<SecretKeys>>",
          },
        },
      },
      "SessionExpiredError": {
        "docs": "This error occurs when you try to resume a request session that has already expired. This is usually because the user took too long to provide their authentication token.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`session_expired\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-session_expired" target="_blank">400 session_expired errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`session_expired\` errors, the description is:
  
  - \`The session you are trying to resume has expired, please start again from register/retrieve endpoint\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "StandardRequest": {
        "docs": undefined,
        "properties": {
          "link": {
            "docs": "The \`link.id\` that you want to get information for.",
            "type": "string",
          },
          "save_data": {
            "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
            "type": "optional<boolean>",
          },
          "token": {
            "docs": "The OTP token generated by the bank.",
            "type": "optional<string>",
          },
        },
      },
      "TaxAssessmentBusiness": {
        "docs": "Object containing the calculated tax assessment of the tax payer. This includes the total taxable income, the income tax applied, and taxes already withheld.",
        "properties": {
          "fortuitous_profit_tax": {
            "docs": "The tax applied on your unexpected income (such as lottery wins or house sales).",
            "type": "double",
          },
          "net_income_tax": {
            "docs": "After additional deductions that you can apply, this will be the net income tax. If no further deduction are identified, this value will be the same as \`total_tax_on_taxable_net_income\`.",
            "type": "double",
          },
          "net_income_taxable": {
            "docs": "The net income on which tax can be applied.",
            "type": "double",
          },
          "total_balance_in_favor": {
            "docs": "How much the tax payer is expected to receive.",
            "type": "double",
          },
          "total_balance_payable": {
            "docs": "How much the tax payer is required to pay.",
            "type": "double",
          },
          "total_payment": {
            "docs": "The total the tax payer is required to pay, taking into account deductions and fiscal credits.",
            "type": "double",
          },
          "total_tax_due": {
            "docs": "After further deductions, this is the final calculated tax that the taxpayer is required to pay.",
            "type": "double",
          },
          "total_tax_on_taxable_net_income": {
            "docs": "The calculated total tax that can be applied on the tax payer's taxable income (total income - exemptions - deductions).",
            "type": "double",
          },
          "total_withholdings_for_the_taxable_year_to_be_declared": {
            "docs": "How much the tax payer has already paid througout the fiscal year.",
            "type": "double",
          },
        },
      },
      "TaxAssessmentIndividual": {
        "docs": "Object containing the calculated tax assessment of the tax payer. This includes the total taxable income, the income tax applied, and taxes already withheld.",
        "properties": {
          "balance_payable": {
            "docs": "How much the tax payer is required to pay.",
            "type": "double",
          },
          "balance_refundable": {
            "docs": "How much the tax payer is expected to receive. For DIAN, this will count as credit for the next fiscal year (see \`previous_year_balance\`).",
            "type": "double",
          },
          "fortuitous_profit_tax": {
            "docs": "The tax applied on your unexpected income (such as lottery wins or house sales).",
            "type": "double",
          },
          "net_income_tax": {
            "docs": "After additional deductions that you can apply, this will be the net income tax. If not further deduction are identified, this value will be the same as \`total_tax_on_taxable_net_income\`.",
            "type": "double",
          },
          "previous_year_balance": {
            "docs": "Only applicable for DIAN.


The amount the tax payer has as a "credit" fromt he previous year (this is equal to the \`balance_refundable\`) of the previous year.
",
            "type": "double",
          },
          "total_payment": {
            "docs": "The total the tax payer is required to pay, taking into account deductions and fiscal credits.",
            "type": "double",
          },
          "total_tax_due": {
            "docs": "After further deductions, this is the final calculated tax that the taxpayer is required to pay.",
            "type": "double",
          },
          "total_tax_on_taxable_net_income": {
            "docs": "The calculated total tax that can be applied on the tax payer's taxable income (total income - exemptions - deductions).",
            "type": "double",
          },
          "total_withheld_tax": {
            "docs": "The total tax already withheld in the current fiscal year.",
            "type": "double",
          },
        },
      },
      "TaxComplianceStatus": {
        "docs": undefined,
        "properties": {
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "optional<datetime>",
          },
          "id": {
            "docs": "Unique identifier created by Belvo used to reference the current Tax Compliance Status.",
            "type": "optional<string>",
          },
          "internal_identification": {
            "docs": "The institution’s internal identification number for the document.",
            "type": "optional<string>",
          },
          "outcome": "optional<EnumTaxComplianceStatusOutcome>",
          "pdf": {
            "docs": "Tax compliance status PDF as a binary.",
            "type": "optional<string>",
          },
          "rfc": {
            "docs": "The account holder's RFC (Registro Federal de Contribuyentes) number.",
            "type": "optional<string>",
          },
        },
      },
      "TaxComplianceStatusPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of tax compliance status objects.",
            "type": "optional<list<TaxComplianceStatus>>",
          },
        },
      },
      "TaxDeclarationBusiness": {
        "docs": undefined,
        "properties": {
          "annual_costs_and_deductions_statement": "AnnualCostsAndDeductionsStatementBusiness",
          "annual_income_statement": "AnnualIncomeStatementBusiness",
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "datetime",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "date_issued": {
            "docs": "The date the tax declaration was issued by the fiscal institution.",
            "type": "string",
          },
          "document_information": "DocumentInformationBusiness",
          "equity_statement": "EquityStatementBusiness",
          "id": {
            "docs": "Belvo's unique ID for the current tax declaration.",
            "type": "string",
          },
          "link": {
            "docs": "Belvo's unique ID of the user that this tax declaration is associated with.",
            "type": "string",
          },
          "pdf": {
            "docs": "The PDF of the tax declaration, as a binary string.",
            "type": "optional<string>",
          },
          "tax_assessment": "TaxAssessmentBusiness",
          "tax_payer_information": "TaxPayerInformationBusiness",
        },
      },
      "TaxDeclarationBusinessPaginated": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of Business Tax Declaration objects.",
            "type": "optional<list<TaxDeclarationBusiness>>",
          },
        },
      },
      "TaxDeclarationIndividual": {
        "docs": undefined,
        "properties": {
          "annual_income_statement": "AnnualIncomeStatementIndividual",
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "datetime",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "date_issued": {
            "docs": "The date the tax declaration was issued by the fiscal institution.",
            "type": "string",
          },
          "document_information": "DocumentInformationIndividual",
          "equity_statement": "EquityStatementIndividual",
          "id": {
            "docs": "Belvo's unique ID for the current tax declaration.",
            "type": "string",
          },
          "link": {
            "docs": "Belvo's unique ID of the user that this tax declaration is associated with.",
            "type": "string",
          },
          "pdf": {
            "docs": "The PDF of the tax declaration, as a binary string.",
            "type": "optional<string>",
          },
          "pension_income_statement": "PensionIncomeStatementIndividual",
          "tax_assessment": "TaxAssessmentIndividual",
          "tax_payer_information": "TaxPayerInformationIndividual",
        },
      },
      "TaxDeclarationIndividualPaginated": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of Individual Tax Declaration objects.",
            "type": "optional<list<TaxDeclarationIndividual>>",
          },
        },
      },
      "TaxPayerInformationBusiness": {
        "docs": "Object containing information about the tax payer.",
        "properties": {
          "company_name": {
            "docs": "The name of the company, as registered at the institution.",
            "type": "string",
          },
          "document_id": "DocumentIdBusiness",
          "first_last_name": {
            "docs": "The tax payer's first last name.",
            "type": "optional<string>",
          },
          "first_name": {
            "docs": "The tax payer's first name.",
            "type": "optional<string>",
          },
          "main_economic_activity": {
            "docs": "The main economic activity the tax payer is involved in.",
            "type": "string",
          },
          "other_names": {
            "docs": "Additional names of the tax payer.",
            "type": "optional<string>",
          },
          "reporting_id": "ReportingId",
          "second_last_name": {
            "docs": "The tax payer's second last name.",
            "type": "optional<string>",
          },
        },
      },
      "TaxPayerInformationIndividual": {
        "docs": "Object containing information about the tax payer.",
        "properties": {
          "document_id": "DocumentIdIndividual",
          "first_last_name": {
            "docs": "The tax payer's first last name.",
            "type": "string",
          },
          "first_name": {
            "docs": "The tax payer's first name.",
            "type": "string",
          },
          "main_economic_activity": {
            "docs": "The main economic activity the tax payer is involved in.",
            "type": "string",
          },
          "other_names": {
            "docs": "Additional names of the tax payer.",
            "type": "string",
          },
          "reporting_id": "ReportingId",
          "second_last_name": {
            "docs": "The tax payer's second last name.",
            "type": "string",
          },
        },
      },
      "TaxRetentions": {
        "docs": undefined,
        "properties": {
          "cancelled_at": {
            "docs": "The ISO-8601 timestamp of when the tax retention was canceled (if applicable).
",
            "type": "optional<datetime>",
          },
          "certified_at": {
            "docs": "The ISO-8601 timestamp of when the tax retention was certified.
",
            "type": "optional<datetime>",
          },
          "code": {
            "docs": "The tax retention code. For more information, see our [SAT Catalogs DevPortal article](https://developers.belvo.com/docs/sat-catalogs#retention-code).
",
            "type": "optional<integer>",
          },
          "collected_at": {
            "docs": "The ISO-8601 timestamp of when the data point was collected.
",
            "type": "optional<datetime>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
",
            "type": "optional<datetime>",
          },
          "id": {
            "docs": "Belvo's unique identifier used to reference the current tax retention statement.",
            "type": "optional<string>",
          },
          "invoice_identification": {
            "docs": "The fiscal institution's unique ID for the invoice that the tax retention relates to.
",
            "type": "optional<string>",
          },
          "issued_at": {
            "docs": "The ISO-8601 timestamp of when the tax retention was issued.
",
            "type": "optional<datetime>",
          },
          "link": {
            "docs": "The \`link.id\` the tax retention belongs to.",
            "type": "optional<string>",
          },
          "receiver_id": {
            "docs": "The fiscal ID of the invoice receiver.
",
            "type": "optional<string>",
          },
          "receiver_name": {
            "docs": "The name of the invoice receiver.
",
            "type": "optional<string>",
          },
          "receiver_nationality": "optional<EnumTaxRetentionReceiverNationality>",
          "retention_breakdown": {
            "docs": "A breakdown of the retained taxes.",
            "type": "optional<list<RetentionBreakdown>>",
          },
          "sender_id": {
            "docs": "The fiscal ID of the invoice sender.
",
            "type": "optional<string>",
          },
          "sender_name": {
            "docs": "The name of the invoice sender.
",
            "type": "optional<string>",
          },
          "total_exempt_amount": {
            "docs": "Total amount that is exempt from taxation.
",
            "type": "optional<double>",
          },
          "total_invoice_amount": {
            "docs": "The total amount of the invoice that the tax retention relates to.
",
            "type": "optional<double>",
          },
          "total_retained_amount": {
            "docs": "Total tax retained.
",
            "type": "optional<double>",
          },
          "total_taxable_amount": {
            "docs": "The total amount that can be taxed. Calculated as \`total_invoice_amount\` - \`total_exempt_amount\`.
",
            "type": "optional<double>",
          },
          "version": {
            "docs": "The CFDI version of the tax retentions.
",
            "type": "optional<string>",
          },
          "xml": {
            "docs": "The tax retention document in XML form.
",
            "type": "optional<string>",
          },
        },
      },
      "TaxRetentionsPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of tax retentions objects.",
            "type": "optional<list<TaxRetentions>>",
          },
        },
      },
      "TaxReturnBusiness": {
        "docs": undefined,
        "properties": {
          "cifras_cierre_ejercicio": {
            "docs": "Details regarding key numbers at the end of the fiscal exercise.",
            "type": "optional<map<string, unknown>>",
          },
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "conciliacion_entre_resultado_contable_fiscal": {
            "docs": "Details regarding the accounting reconciliation.",
            "type": "optional<map<string, unknown>>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "optional<datetime>",
          },
          "datos_adicionales": {
            "docs": "Additional data regarding the tax return.",
            "type": "optional<map<string, unknown>>",
          },
          "deducciones_autorizadas": {
            "docs": "Details regarding the legal entity's deductions.",
            "type": "optional<map<string, unknown>>",
          },
          "detalle_pago_r1_isr_personas_morales": {
            "docs": "Details of the tax payment.",
            "type": "optional<map<string, unknown>>",
          },
          "determinacion_del_impuesto_sobre_la_renta": {
            "docs": "Details regarding the final tax return.",
            "type": "optional<map<string, unknown>>",
          },
          "dividendos_o_utilidades_distribuidos": {
            "docs": "Details regarding distributed dividends.",
            "type": "optional<map<string, unknown>>",
          },
          "estado_posicion_financiera_balance": {
            "docs": "Details regarding balance sheet of the legal entity.",
            "type": "optional<map<string, unknown>>",
          },
          "estado_resultados": {
            "docs": "Detailed information about the legal entity's yearly profit and loss.",
            "type": "optional<map<string, unknown>>",
          },
          "id": {
            "docs": "Unique identifier created by Belvo used to reference the current Tax Return.",
            "type": "optional<string>",
          },
          "informacion_general": {
            "docs": "General information regarding the tax return (year, RFC, return type, person/company name, and so on).",
            "type": "optional<map<string, unknown>>",
          },
          "pdf": {
            "docs": "Tax return PDF as a binary.",
            "type": "optional<string>",
          },
          "receipt_pdf": {
            "docs": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
            "type": "optional<string>",
          },
        },
      },
      "TaxReturnBusinessMonthly": {
        "docs": undefined,
        "properties": {
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "optional<datetime>",
          },
          "detalle_pago_isr": {
            "docs": "Information on the monthly provisional payments for the income tax.",
            "type": "optional<map<string, unknown>>",
          },
          "detalle_pago_iva": {
            "docs": "Information on the monthly provisional payments for the VAT tax.",
            "type": "optional<map<string, unknown>>",
          },
          "determinacion_isr": {
            "docs": "Information used to calculate the provisional income tax for the period.",
            "type": "optional<map<string, unknown>>",
          },
          "determinacion_iva": {
            "docs": "Information used to calculate the provisional VAT tax for the period.",
            "type": "optional<map<string, unknown>>",
          },
          "id": {
            "docs": "Unique identifier created by Belvo used to reference the current Tax Return.",
            "type": "optional<string>",
          },
          "informacion_general": {
            "docs": "General information regarding the tax return (year, RFC, return type, person/company name, and so on).",
            "type": "optional<map<string, unknown>>",
          },
          "pdf": {
            "docs": "Tax return PDF as a binary.",
            "type": "optional<string>",
          },
          "receipt_pdf": {
            "docs": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
            "type": "optional<string>",
          },
          "type": {
            "docs": "The type of tax return. Can be either monthly or annual.",
            "type": "optional<string>",
          },
        },
      },
      "TaxReturnPersonal": {
        "docs": undefined,
        "properties": {
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "optional<datetime>",
          },
          "datos_informativos": {
            "docs": "Extra informative data on the tax return.",
            "type": "optional<map<string, unknown>>",
          },
          "deducciones_personales": {
            "docs": "List of all personal tax deductions.",
            "type": "optional<map<string, unknown>>",
          },
          "determinacion_impuesto": {
            "docs": "Details regarding the final tax return.",
            "type": "optional<map<string, unknown>>",
          },
          "dividendos": {
            "docs": "Details regarding dividends.",
            "type": "optional<map<string, unknown>>",
          },
          "id": {
            "docs": "Unique identifier created by Belvo used to reference the current Tax Return.",
            "type": "optional<string>",
          },
          "informacion_general": {
            "docs": "General information on the tax return (year, RFC, return type, person/company name, and so on).",
            "type": "optional<map<string, unknown>>",
          },
          "link": {
            "docs": "The \`link.id\` the statement belongs to",
            "type": "optional<string>",
          },
          "pdf": {
            "docs": "Tax return PDF as a binary.",
            "type": "optional<string>",
          },
          "receipt_pdf": {
            "docs": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
            "type": "optional<string>",
          },
          "retenciones": {
            "docs": "Details on the already withheld taxes.",
            "type": "optional<map<string, unknown>>",
          },
          "servicios_profesionales": {
            "docs": "Details regarding the income and tax information from professional services provided.",
            "type": "optional<map<string, unknown>>",
          },
          "sueldos_salarios": {
            "docs": "Details regarding the income information together combined with withheld taxes.",
            "type": "optional<map<string, unknown>>",
          },
        },
      },
      "TaxReturnPersonalMonthly": {
        "docs": undefined,
        "properties": {
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "optional<datetime>",
          },
          "id": {
            "docs": "Unique identifier created by Belvo used to reference the current Tax Return.",
            "type": "optional<string>",
          },
          "informacion_general": {
            "docs": "General information regarding the tax return (year, RFC, return type, person/company name, and so on).",
            "type": "optional<map<string, unknown>>",
          },
          "isr": {
            "docs": "Information used to calculate the monthly provisional payments of the income tax.",
            "type": "optional<map<string, unknown>>",
          },
          "iva": {
            "docs": "Information used to calculate the monthly provisional payments of the VAT tax.",
            "type": "optional<map<string, unknown>>",
          },
          "pdf": {
            "docs": "Tax return PDF as a binary.",
            "type": "optional<string>",
          },
          "receipt_pdf": {
            "docs": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
            "type": "optional<string>",
          },
          "type": {
            "docs": "The type of tax return. Can be either monthly or annual.",
            "type": "string",
          },
        },
      },
      "TaxReturnsBusinessMonthlyPaginated": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of Monthly Business Tax Return objects.",
            "type": "optional<list<TaxReturnBusinessMonthly>>",
          },
        },
      },
      "TaxReturnsBusinessPaginated": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of Business Tax Return objects.",
            "type": "optional<list<TaxReturnBusiness>>",
          },
        },
      },
      "TaxReturnsMonthlyRequest": {
        "docs": "Request body for monthly tax returns",
        "properties": {
          "attach_pdf": {
            "docs": "When this is set to \`true\`, you will receive the PDF as a binary string in the response.",
            "type": "optional<boolean>",
          },
          "date_from": {
            "docs": "The starting date you want to get tax returns for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
            "type": "string",
          },
          "date_to": {
            "docs": "The date you want to stop getting tax returns for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
            "type": "string",
          },
          "link": {
            "docs": "The fiscal \`link.id\` you want specific tax return information for.",
            "type": "string",
          },
          "save_data": {
            "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
            "type": "optional<boolean>",
          },
          "type": {
            "docs": "The type of tax return to return. For monthly tax returns, this field must be set to \`monthly\`.
",
            "type": "string",
          },
        },
      },
      "TaxReturnsPersonalMonthlyPaginated": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of Monthly Personal Tax Return objects.",
            "type": "optional<list<TaxReturnPersonalMonthly>>",
          },
        },
      },
      "TaxReturnsPersonalPaginated": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of Personal Tax Return objects.",
            "type": "optional<list<TaxReturnPersonal>>",
          },
        },
      },
      "TaxReturnsYearlyRequest": {
        "docs": "Request body for yearly tax returns",
        "properties": {
          "attach_pdf": {
            "docs": "When this is set to \`true\`, you will receive the PDF as a binary string in the response.",
            "type": "optional<boolean>",
          },
          "link": {
            "docs": "The fiscal \`link.id\` you want specific tax return information for.",
            "type": "string",
          },
          "save_data": {
            "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
            "type": "optional<boolean>",
          },
          "type": {
            "docs": "The type of tax return to return. For yearly tax returns this must be set to \`yearly\`.

By default, Belvo returns the yearly (annual) tax returns.
",
            "type": "string",
          },
          "year_from": {
            "docs": "The starting year you want to get tax returns for, in \`YYYY\` format.
",
            "type": "string",
          },
          "year_to": {
            "docs": "The year you want to stop getting tax returns for, in \`YYYY\` format.
",
            "type": "string",
          },
        },
      },
      "TaxStatusAddressBetweenStreetDian": {
        "docs": undefined,
        "properties": {
          "street_one": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "street_two": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
        },
      },
      "TaxStatusAddressBetweenStreetSat": {
        "docs": undefined,
        "properties": {
          "street_one": {
            "docs": "The first street that \`street\` is located between.",
            "type": "optional<string>",
          },
          "street_two": {
            "docs": "The second street that \`street\` is located between.",
            "type": "optional<string>",
          },
        },
      },
      "TaxStatusAddressDian": {
        "docs": "The tax payer's address details.",
        "properties": {
          "between_street": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<list<TaxStatusAddressBetweenStreetDian>>",
          },
          "exterior_number": {
            "docs": "The street number.",
            "type": "optional<string>",
          },
          "interior_number": {
            "docs": "Additional address information.",
            "type": "optional<string>",
          },
          "locality": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "municipality": {
            "docs": "The municipality of the address.",
            "type": "optional<string>",
          },
          "postal_code": {
            "docs": "The postcode of the address.
",
            "type": "optional<string>",
          },
          "state": {
            "docs": "The state that the address is in.",
            "type": "optional<string>",
          },
          "street": {
            "docs": "The tax payers street.",
            "type": "optional<string>",
          },
          "street_type": {
            "docs": "The \`street\` type.",
            "type": "optional<string>",
          },
          "suburb": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
        },
      },
      "TaxStatusAddressSat": {
        "docs": "The tax payer's address details.",
        "properties": {
          "between_street": {
            "docs": "Additional information about where the \`street\` is located.
",
            "type": "optional<list<TaxStatusAddressBetweenStreetSat>>",
          },
          "exterior_number": {
            "docs": "The street number.",
            "type": "optional<string>",
          },
          "interior_number": {
            "docs": "Additional address information.",
            "type": "optional<string>",
          },
          "locality": {
            "docs": "The locality of the address.
",
            "type": "optional<string>",
          },
          "municipality": {
            "docs": "The municipality of the address.",
            "type": "optional<string>",
          },
          "postal_code": {
            "docs": "The postcode of the address.
",
            "type": "optional<string>",
          },
          "state": {
            "docs": "The state that the address is in.",
            "type": "optional<string>",
          },
          "street": {
            "docs": "The tax payers street.",
            "type": "optional<string>",
          },
          "street_type": {
            "docs": "The \`street\` type.",
            "type": "optional<string>",
          },
          "suburb": {
            "docs": "The suburb of the tax payer.
",
            "type": "optional<string>",
          },
        },
      },
      "TaxStatusDian": {
        "docs": undefined,
        "properties": {
          "address": "optional<TaxStatusAddressDian>",
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "digital_stamp": {
            "docs": "The validation certificate of the document.",
            "type": "optional<string>",
          },
          "digital_stamp_chain": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "economic_activity": {
            "docs": "A list of economic activity objects.
",
            "type": "optional<list<TaxStatusEconomicActivityDian>>",
          },
          "id": {
            "docs": "Unique identifier created by Belvo used to reference the current Tax Status.",
            "type": "string",
          },
          "id_cif": {
            "docs": "The taxpayer's *Cédula de ciudadanía* (CC) ID. Only applicable for individuals.
",
            "type": "optional<string>",
          },
          "link": {
            "docs": "The \`link.id\` that the tax status is associated with.",
            "type": "string",
          },
          "obligations": {
            "docs": "Details regarding a business's obligations.

ℹ️ For non-business accounts, this field will return empty.
",
            "type": "optional<list<TaxStatusObligationsDian>>",
          },
          "official_name": {
            "docs": "The name of the business.

Note: For individuals in Colombia, this field will return \`null\`.
",
            "type": "optional<string>",
          },
          "pdf": {
            "docs": "Tax status PDF as a binary string.",
            "type": "optional<string>",
          },
          "place_and_date_of_issuance": {
            "docs": "The date when the tax status was issued. For example, \`2020-08-05/18:55:16\`.",
            "type": "optional<string>",
          },
          "regimes": {
            "docs": "A list of regimen objects.
",
            "type": "optional<list<TaxStatusRegimensDian>>",
          },
          "tax_payer_information": "optional<TaxStatusTaxPayerInformationDian>",
        },
      },
      "TaxStatusEconomicActivityDian": {
        "docs": undefined,
        "properties": {
          "economic_activity": {
            "docs": "The economic activity code, according to the fiscal institution.

For detailed information regarding DIAN's economic activities, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
            "type": "optional<string>",
          },
          "end_date": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "initial_date": {
            "docs": "The start date of the economic activity.",
            "type": "optional<string>",
          },
          "order": {
            "docs": "The order of the economic activity.",
            "type": "optional<string>",
          },
          "percentage": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
        },
      },
      "TaxStatusEconomicActivitySat": {
        "docs": undefined,
        "properties": {
          "economic_activity": {
            "docs": "The description of the economic activity.",
            "type": "optional<string>",
          },
          "end_date": {
            "docs": "The end date of the economic activity.
",
            "type": "optional<string>",
          },
          "initial_date": {
            "docs": "The start date of the economic activity.",
            "type": "optional<string>",
          },
          "order": {
            "docs": "The order of the economic activity.",
            "type": "optional<string>",
          },
          "percentage": {
            "docs": "The percentage of the economic activity.
",
            "type": "optional<string>",
          },
        },
      },
      "TaxStatusObligationsDian": {
        "docs": "Details regarding a business's obligations.

ℹ️ For non-business accounts, this field will return empty.
",
        "properties": {
          "end_date": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "expiration": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "initial_date": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "obligation": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
        },
      },
      "TaxStatusObligationsSat": {
        "docs": "Details regarding a business's obligations.

ℹ️ For non-business accounts, this field will return empty.
",
        "properties": {
          "end_date": {
            "docs": "The date when obligation ended.
",
            "type": "optional<string>",
          },
          "expiration": {
            "docs": "The deadline to fulfill the obligation, as imposed by the tax authority.
",
            "type": "optional<string>",
          },
          "initial_date": {
            "docs": "The date when obligation started.
",
            "type": "optional<string>",
          },
          "obligation": {
            "docs": "The description of the obligation.
",
            "type": "optional<string>",
          },
        },
      },
      "TaxStatusPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of tax status objects.",
            "type": "optional<list<TaxStatusPaginatedResponseResultsItem>>",
          },
        },
      },
      "TaxStatusPaginatedResponseResultsItem": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "TaxStatusSat",
          "TaxStatusDian",
        ],
      },
      "TaxStatusRegimensDian": {
        "docs": undefined,
        "properties": {
          "end_date": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "initial_date": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "regimen": {
            "docs": "The description of the regimen.",
            "type": "optional<string>",
          },
        },
      },
      "TaxStatusRegimensSat": {
        "docs": undefined,
        "properties": {
          "end_date": {
            "docs": "The end date of the regimen.
",
            "type": "optional<string>",
          },
          "initial_date": {
            "docs": "The start date of the regimen.
",
            "type": "optional<string>",
          },
          "regimen": {
            "docs": "The description of the regimen.",
            "type": "optional<string>",
          },
        },
      },
      "TaxStatusSat": {
        "docs": undefined,
        "properties": {
          "address": "optional<TaxStatusAddressSat>",
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "datetime",
          },
          "digital_stamp": {
            "docs": "The validation certificate of the document.",
            "type": "optional<string>",
          },
          "digital_stamp_chain": {
            "docs": "A data chain containing the basic structure of a fiscal digital check. For Mexico, this is the *Comprobante Fiscal Digital por Internet* (CFDI).
",
            "type": "optional<string>",
          },
          "economic_activity": {
            "docs": "A list of economic activity objects.
",
            "type": "optional<list<TaxStatusEconomicActivitySat>>",
          },
          "id": {
            "docs": "Unique identifier created by Belvo used to reference the current Tax Status.",
            "type": "string",
          },
          "id_cif": {
            "docs": "The taxpayer's *Cédula de Identificación Fiscal* (CIF) ID.
",
            "type": "optional<string>",
          },
          "link": {
            "docs": "The \`link.id\` that the tax status is associated with.",
            "type": "string",
          },
          "obligations": {
            "docs": "Details regarding a business's obligations.

ℹ️ For non-business accounts, this field will return empty.
",
            "type": "optional<list<TaxStatusObligationsSat>>",
          },
          "official_name": {
            "docs": "The name of the person or business.",
            "type": "optional<string>",
          },
          "pdf": {
            "docs": "Tax status PDF as a binary string.",
            "type": "optional<string>",
          },
          "place_and_date_of_issuance": {
            "docs": "The place and date of that the tax status was issued.",
            "type": "optional<string>",
          },
          "regimes": {
            "docs": "A list of regimen objects.
",
            "type": "optional<list<TaxStatusRegimensSat>>",
          },
          "tax_payer_information": "optional<TaxStatusTaxPayerInformationSat>",
        },
      },
      "TaxStatusTaxPayerInformationDian": {
        "docs": "Details regarding the taxpayer.",
        "properties": {
          "commercial_name": {
            "docs": "The name of the business designated for consumers and the general public.

**Note**: Only applicable for businesses.
",
            "type": "optional<string>",
          },
          "curp": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "email": {
            "docs": "Contact email address for the tax payer.",
            "type": "optional<string>",
          },
          "first_last_name": {
            "docs": "The tax payers's first last name.",
            "type": "optional<string>",
          },
          "last_status_change_date": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "name": {
            "docs": "The tax payers's first name.",
            "type": "optional<string>",
          },
          "phone": {
            "docs": "Contact phone number for the tax payer.",
            "type": "optional<string>",
          },
          "rfc": {
            "docs": "The tax payers's identification number (NIT).
",
            "type": "optional<string>",
          },
          "second_last_name": {
            "docs": "The tax payers's second last name.",
            "type": "optional<string>",
          },
          "social_name": {
            "docs": "The unique and exclusive name within the national territory that companies receive for legal or administrative purposes.
**Note**: Only applicable for businesses.",
            "type": "optional<string>",
          },
          "start_operations_date": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "type": "optional<string>",
          },
          "status_padron": {
            "docs": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
            "type": "optional<string>",
          },
        },
      },
      "TaxStatusTaxPayerInformationSat": {
        "docs": "Details regarding the taxpayer.",
        "properties": {
          "commercial_name": {
            "docs": "The name of the business designated for consumers and the general public.

**Note**: Only applicable for businesses.
",
            "type": "optional<string>",
          },
          "curp": {
            "docs": "The tax payers's *Clave Única de Registro de Población* (CURP) number.
",
            "type": "optional<string>",
          },
          "email": {
            "docs": "Contact email address for the tax payer.",
            "type": "optional<string>",
          },
          "first_last_name": {
            "docs": "The tax payers's first last name.",
            "type": "optional<string>",
          },
          "last_status_change_date": {
            "docs": "Date when \`status_padron\` was most recently updated.
",
            "type": "optional<string>",
          },
          "name": {
            "docs": "The tax payers's first name.",
            "type": "optional<string>",
          },
          "phone": {
            "docs": "Contact phone number for the tax payer.",
            "type": "optional<string>",
          },
          "rfc": {
            "docs": "The tax payers's identification number (For Mexico, this is the RFC).
",
            "type": "optional<string>",
          },
          "second_last_name": {
            "docs": "The tax payers's second last name.",
            "type": "optional<string>",
          },
          "social_name": {
            "docs": "The unique and exclusive name within the national territory that companies receive for legal or administrative purposes.
**Note**: Only applicable for businesses.",
            "type": "optional<string>",
          },
          "start_operations_date": {
            "docs": "Date when the tax payer commenced taxable commercial activities.
",
            "type": "optional<string>",
          },
          "status_padron": {
            "docs": "Status of the taxpayer in the Federal Register of Taxpayers (RFC). Can be \`ACTIVO\` or \`INACTIVO\`.",
            "type": "optional<string>",
          },
        },
      },
      "TokenRequiredResponse": {
        "docs": "MFA Token Required",
        "properties": {
          "code": {
            "docs": "A unique error code (\`token_required\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#428-token_required" target="_blank">428 token_required errors</a>.",
            "type": "optional<string>",
          },
          "expiry": {
            "docs": "Session duration time in seconds.",
            "type": "optional<integer>",
          },
          "link": {
            "docs": "Unique identifier created by Belvo, used to reference the current Link.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`token_required\` errors, the description is:
  
  - \`A MFA token is required by the institution to login\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
          "session": {
            "docs": "A 32-character unique ID of the login session (matching a regex pattern of: \`[a-f0-9]{32}\`).",
            "type": "optional<string>",
          },
          "token_generation_data": "optional<TokenRequiredResponseTokenGenerationData>",
        },
      },
      "TokenRequiredResponseTokenGenerationData": {
        "docs": "Details on how to generate the token.",
        "properties": {
          "expects_user_input": {
            "docs": "Indicates whether the user needs to provide input in order to complete the authentication.
When set to \`false\`, your user may need to:
- confirm the login on another device - scan a QR code
You will still need to make a PATCH call to complete the request.",
            "type": "optional<boolean>",
          },
          "instructions": {
            "docs": "Instructions for token generation.",
            "type": "optional<string>",
          },
          "type": {
            "docs": "Type of the data to generate the token (QR code, numeric challenge).",
            "type": "optional<string>",
          },
          "value": {
            "docs": "Value to use to generate the token.",
            "type": "optional<string>",
          },
        },
      },
      "TooManySessionsError": {
        "docs": "This error occurs when:

  - a user is attempting to log in to their institution via Belvo while also already being logged in to their institution on a web browser or mobile app.
  - you make a request for information while Belvo is scraping data from the institution for that user.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`too_many_sessions\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-too_many_sessions" target="_blank">400 too_many_sessions errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`too_many_sessions\` errors, the description is:
  
  - \`Impossible to login, a session is already opened with the institution for these credentials\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "Transaction": {
        "docs": undefined,
        "properties": {
          "account": "optional<Account>",
          "accounting_date": {
            "docs": "The ISO timestamp when the transaction was processed and accounted for by the institution.",
            "type": "optional<datetime>",
          },
          "amount": {
            "docs": "The transaction amount.
ℹ️ The amount displayed is always positive as we indicate the direction of the transaction in the \`type\` parameter.
",
            "type": "optional<double>",
          },
          "balance": {
            "docs": "The balance at the end of the transaction.",
            "type": "optional<double>",
          },
          "category": "optional<EnumTransactionCategory>",
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "created_at": {
            "docs": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "type": "optional<datetime>",
          },
          "credit_card_data": "optional<TransactionCreditCardData>",
          "currency": {
            "docs": "The three-letter currency code (ISO-4217).
",
            "type": "optional<string>",
          },
          "description": {
            "docs": "The description of transaction provided by the institution. Usually this is the text that the end user sees in the online platform.",
            "type": "optional<string>",
          },
          "id": {
            "docs": "Belvo's unique ID for the transaction.",
            "type": "optional<string>",
          },
          "internal_identification": {
            "docs": "The institution's internal identification for the transaction.
",
            "type": "optional<string>",
          },
          "merchant": "optional<TransactionMerchantData>",
          "observations": {
            "docs": "Additional observations provided by the institution on the transaction.",
            "type": "optional<string>",
          },
          "reference": {
            "docs": "The reference number of the transaction, provided by the bank.",
            "type": "optional<string>",
          },
          "status": "optional<EnumTransactionStatus>",
          "subcategory": "optional<EnumTransactionSubcategory>",
          "type": "optional<EnumTransactionType>",
          "value_date": {
            "docs": "The date when the transaction occurred, in \`YYYY-MM-DD\` format.",
            "type": "optional<string>",
          },
        },
      },
      "TransactionBankAccountBodyPse": {
        "docs": "Information about the payer's bank account. Belvo returns the bank account ID when the account is already saved in the Belvo database.",
        "properties": {
          "bank_account": {
            "docs": "Belvo's unique identifier for the payer’s bank account.",
            "type": "optional<string>",
          },
        },
      },
      "TransactionBankAccountOfpi": {
        "docs": "Object containing the payer's bank account information. For OFPI, this field will return an empty object.",
        "type": "map<string, unknown>",
      },
      "TransactionBankAccountPse": {
        "discriminated": false,
        "docs": "Object containing the payer's bank account information.",
        "union": [
          "TransactionBankAccountBodyPse",
          "BankAccountInformationPse",
        ],
      },
      "TransactionCreditCardData": {
        "docs": "Additional data provided by the institution for credit card transactions.",
        "properties": {
          "bill_amount": {
            "docs": "The aggregate bill amount, as of \`collected_at\`.",
            "type": "optional<double>",
          },
          "bill_name": {
            "docs": "The title of the monthly credit card bill the transaction belongs to. The format of the returned value is institution specific, however, some common examples are:

- diciembre-2021
- dec-2021
- dec-21
",
            "type": "optional<string>",
          },
          "bill_status": "optional<EnumTransactionBillStatus>",
          "collected_at": {
            "docs": "The ISO-8601 timestamp when the data point was collected.",
            "type": "optional<datetime>",
          },
          "previous_bill_total": {
            "docs": "The total amount of the previous month's bill, if available.",
            "type": "optional<string>",
          },
        },
      },
      "TransactionMerchantData": {
        "docs": "Additional data regarding the merchant involved in the transaction.
We only return merchant information for new transactions made from *checking* or *credit card* accounts.
> **Get merchant information**
 We retrieve the merchant information for a transaction as part of our [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions) product, turning raw data into actionable insights. To enable this product, just [reach out](https://belvo.com/contact/?utm_source=documentation) to us, and we'll get right to it.
",
        "properties": {
          "logo": {
            "docs": "The URL to the merchant's logo.",
            "type": "optional<string>",
          },
          "merchant_name": {
            "docs": "The name of the merchant.",
            "type": "optional<string>",
          },
          "website": {
            "docs": "The URL to the merchant's website.",
            "type": "optional<string>",
          },
        },
      },
      "TransactionsPaginatedResponse": {
        "docs": undefined,
        "properties": {
          "count": {
            "docs": "The total number of results in your Belvo account.",
            "type": "optional<integer>",
          },
          "next": {
            "docs": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
            "type": "optional<string>",
          },
          "previous": {
            "docs": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
            "type": "optional<string>",
          },
          "results": {
            "docs": "Array of transaction objects.",
            "type": "optional<list<Transaction>>",
          },
        },
      },
      "TransactionsRequest": {
        "docs": undefined,
        "properties": {
          "account": {
            "docs": "If provided, we return transactions only from this account.",
            "type": "optional<string>",
          },
          "date_from": {
            "docs": "The date from which you want to start getting transactions for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
            "type": "string",
          },
          "date_to": {
            "docs": "The date you want to stop getting transactions for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
            "type": "string",
          },
          "link": {
            "docs": "The \`link.id\` that you want to get information for.",
            "type": "string",
          },
          "save_data": {
            "docs": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
            "type": "optional<boolean>",
          },
          "token": {
            "docs": "The OTP token generated by the bank.",
            "type": "optional<string>",
          },
        },
      },
      "UnauthorizedErrorBody": {
        "docs": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
        "properties": {
          "code": {
            "docs": "A unique error code (\`authentication_failed\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#401-authentication_failed" target="_blank">401 authentication_failed errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`authentication_failed\` errors, the description is:

  - \`Invalid Secret Keys\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "UnconfirmedLinkError": {
        "docs": "This error occurs when you try to access a link that was paused previously (and as such is not active now).
A Link's status is set to \`unconfirmed_link\` when your user has not completed the Link creation process successfully (for example, they might not provide a valid MFA token).",
        "properties": {
          "code": {
            "docs": "A unique error code (\`unconfirmed_link\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-unconfirmed_link" target="_blank">400 unconfirmed_link errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`unconfirmed_link\` errors, the description is:
  
  - \`The link creation has not been completed yet\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "UnexpectedError": {
        "docs": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`unexpected_error\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#500-unexpected_error" target="_blank">500 unexpected_error errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`unexpected_error\` errors, the description is:
  
  - \`Belvo is unable to process the request due to an internal system issue or to an unsupported response from an institution\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "UnsupportedOperationError": {
        "docs": "This error occurs when you try to access some data operation that Belvo does not support for an institution. For example, trying to access the Balances resource for fiscal institutions.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`unsupported_operation\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-unsupported_operation" target="_blank">400 unsupported_operation errors</a>.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`unsupported_operation\` errors, the description is:
  
  - \`The resource you are trying to access is not supported by this institution\`.",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
      "ValidationError": {
        "docs": "This error occurs when you try to resume a request session that has already expired. This is usually because the user took too long to provide their authentication token.",
        "properties": {
          "code": {
            "docs": "A unique error code (\`null\`, \`does_not_exist\`, \`required\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle:
  - <a href="https://developers.belvo.com/docs/belvo-api-errors#400-blank" target="_blank">400 blank errors</a>
  - <a href="https://developers.belvo.com/docs/belvo-api-errors#400-null" target="_blank">400 null errors</a>
  - <a href="https://developers.belvo.com/docs/belvo-api-errors#400-does_not_exist" target="_blank">400 does_not_exist errors</a>
  - <a href="https://developers.belvo.com/docs/belvo-api-errors#400-required" target="_blank">400 required errors</a>",
            "type": "optional<string>",
          },
          "field": {
            "docs": "Name of the field where the error was encountered.",
            "type": "optional<string>",
          },
          "message": {
            "docs": "A short description of the error. 

For \`session_expired\` errors, the description can be (among others):
  
  - \`This field is required.\`
  - \`Object with name=narnia does not exist.\`
  - \`This field may not be null.\`
  - \`This field may not be blank.\`",
            "type": "optional<string>",
          },
          "request_id": {
            "docs": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "type": "optional<string>",
          },
        },
      },
    },
  },
  "rootApiFile": {
    "auth": "BasicAuthScheme",
    "auth-schemes": {
      "BasicAuthScheme": {
        "scheme": "basic",
      },
    },
    "default-environment": "Production",
    "display-name": "Belvo API Docs",
    "environments": {
      "Development": "https://development.belvo.com",
      "Production": "https://api.belvo.com",
      "Sandbox": "https://sandbox.belvo.com",
    },
    "error-discrimination": {
      "strategy": "status-code",
    },
    "name": "api",
  },
}
`;
