[
    {
        "lang": "JavaScript",
        "label": "JS",
        "source": "import { base } from '@uploadcare/upload-client'\n\n// fileData must be `Blob` or `File` or `Buffer`\nconst result = await base(\n  fileData,\n  {\n    publicKey: 'YOUR_PUBLIC_KEY',\n    store: 'auto',\n    metadata: {\n      subsystem: 'uploader',\n      pet: 'cat'\n    }\n  }\n)\n"
    },
    {
        "lang": "PHP",
        "label": "PHP",
        "source": "<?php\n$configuration = Uploadcare\\Configuration::create((string) $_ENV['UPLOADCARE_PUBLIC_KEY'], (string) $_ENV['UPLOADCARE_SECRET_KEY']);\n\n$uploader = new Uploadcare\\Uploader\\Uploader($configuration);\n$fileInfo = $uploader->fromPath(__DIR__ . '/squirrel.jpg', null, null, 'auto', [\n    'system' => 'php-uploader',\n    'pet' => 'cat',\n]);\necho \\sprintf(\"URL: %s, ID: %s, Mime type: %s\\n\", $fileInfo->getUrl(), $fileInfo->getUuid(), $fileInfo->getMimeType());\nforeach ($fileInfo->getMetadata() as $key => $value) {\n    echo \\sprintf(\"%s: %s\\n\", $key, $value);\n}\n"
    },
    {
        "lang": "Python",
        "label": "Python",
        "source": "from pyuploadcare import Uploadcare, File\n\nuploadcare = Uploadcare(public_key='YOUR_PUBLIC_KEY', secret_key='YOUR_SECRET_KEY')\nwith open('test1.txt', 'rb') as file_object:\n    ucare_file = uploadcare.upload(file_object)\n"
    },
    {
        "lang": "Ruby",
        "label": "Ruby",
        "source": "require 'uploadcare'\nUploadcare.config.public_key = \"YOUR_PUBLIC_KEY\"\nUploadcare.config.secret_key = \"YOUR_SECRET_KEY\"\n\nsource_file = File.open('image.png')\nuploaded_file = Uploadcare::Uploader.upload(source_file, store: auto)\n"
    },
    {
        "lang": "Swift",
        "label": "Swift",
        "source": "import Uploadcare\n\nlet uploadcare = Uploadcare(withPublicKey: \"YOUR_PUBLIC_KEY\", secretKey: \"YOUR_SECRET_KEY\")\n\nguard let url = Bundle.main.url(forResource: \"squirrel\", withExtension: \"jpg\"),\n      let data = try? Data(contentsOf: url) else { return }\nlet metadata = [\"subsystem\": \"uploader\", \"pet\": \"cat\"]\n\nlet file = try await uploadcare.uploadFile(data, withName: \"random_file_name.jpg\", store: .auto) { progress in\n  print(\"progress: \\(progress)\")\n}\nprkint(file)\n"
    },
    {
        "lang": "Kotlin",
        "label": "Kotlin",
        "source": "import com.uploadcare.android.library.api.UploadcareClient\n\nval uploadcare = UploadcareClient(publicKey = \"YOUR_PUBLIC_KEY\", secretKey = \"YOUR_SECRET_KEY\")\n\nval uri = \"content://com.android.providers.media.documents/document/image%3A1000001178\".toUri()\nval file = FileUploader(uploadcare, uri = uri, context = context).upload()\nLog.d(\"TAG\", file.toString())\n"
    }
]