components:
  schemas:
    ClientProvidedResponseMetadata:
      additionalProperties: false
      properties:
        clientRequestId:
          type: string
        timeThresholdMs:
          format: int64
          type: integer
      type: object
    DefaultMetaWrapper:
      additionalProperties: false
      properties:
        requestId:
          type: string
      type: object
    ErrorEnvelope:
      additionalProperties: false
      properties:
        HttpStatus:
          format: int64
          type: integer
        Message:
          type: string
        data: {}
        errors:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
        meta: {}
        warnings:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
      required:
        - HttpStatus
        - Message
        - meta
        - data
        - errors
        - warnings
      type: object
    ErrorMessage:
      additionalProperties: false
      properties:
        code:
          description: Error code
          type: string
        event:
          description: Event name
          type: string
        message:
          description: Error message
          type: string
      required:
        - event
        - message
        - code
      type: object
    ExtensionV1:
      additionalProperties: false
      properties:
        date_created:
          description: Date the extension was created
          format: date-time
          type: string
        id:
          description: Unique identifier for the extension
          example: 73df0106-1781-4b03-a288-e749e1a43481
          type: string
        name:
          description: Name of the extension
          example: Special Widget
          type: string
        upload_uri:
          description: URI to upload profile data to
          format: uri
          type: string
      required:
        - id
        - name
        - date_created
      type: object
    ExtensionV1EnvelopeDefaultMetaWrapper:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/ExtensionV1"
        errors:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
        meta:
          $ref: "#/components/schemas/DefaultMetaWrapper"
        warnings:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
      required:
        - meta
        - data
        - errors
        - warnings
      type: object
    Extensions-postRequest:
      additionalProperties: false
      properties:
        name:
          description: Name of the extension
          example: Special Widget
          type: string
      required:
        - name
      type: object
    ExternalSessionAiResponseMetadata:
      additionalProperties: false
      properties:
        clientProvided:
          $ref: "#/components/schemas/ClientProvidedResponseMetadata"
        requestId:
          type: string
        status:
          enum:
            - success
            - partial_success
            - failure
          type: string
        usage:
          $ref: "#/components/schemas/ExternalSessionAiResponseMetadataUsage"
      required:
        - status
        - usage
      type: object
    ExternalSessionAiResponseMetadataUsage:
      additionalProperties: false
      properties:
        credits:
          description: The credit usage for this request
          format: int64
          type: integer
        id:
          description: The id of the request
          type: string
      required:
        - id
        - credits
      type: object
    Issue:
      additionalProperties: false
      properties:
        code:
          description: Issue code
          nullable: true
          type: string
        details:
          additionalProperties: {}
          description: Any associated details
          nullable: true
          type: object
        message:
          description: Message describing the issue
          type: string
      required:
        - message
      type: object
    ListExtensionV1EnvelopeDefaultMetaWrapper:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: "#/components/schemas/ExtensionV1"
          nullable: true
          type: array
        errors:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
        meta:
          $ref: "#/components/schemas/DefaultMetaWrapper"
        warnings:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
      required:
        - meta
        - data
        - errors
        - warnings
      type: object
    ListProfileV1EnvelopeDefaultMetaWrapper:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: "#/components/schemas/ProfileV1"
          nullable: true
          type: array
        errors:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
        meta:
          $ref: "#/components/schemas/DefaultMetaWrapper"
        warnings:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
      required:
        - meta
        - data
        - errors
        - warnings
      type: object
    LiveViewConnectionInfo:
      additionalProperties: false
      properties:
        airtop_browser_url:
          description: Websocket url to connect to the airtop browser
          type: string
        token:
          description: "Token to connect to the airtop browser, use as a header: 'Authorization: Bearer <token>' "
          type: string
      required:
        - airtop_browser_url
      type: object
    ModelResponse:
      additionalProperties: false
      properties:
        modelResponse:
          type: string
      required:
        - modelResponse
      type: object
    ModelResponseExternalSessionAiResponseMetadataWrapper:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/ModelResponse"
        errors:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
        meta:
          $ref: "#/components/schemas/ExternalSessionAiResponseMetadata"
        warnings:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
      required:
        - meta
        - data
        - errors
        - warnings
      type: object
    Pagination:
      additionalProperties: false
      properties:
        currentLimit:
          format: int64
          type: integer
        currentPage:
          format: int64
          type: integer
        finalCount:
          format: int64
          type: integer
        hasMore:
          type: boolean
        initialCount:
          format: int64
          type: integer
        nextOffset:
          format: int64
          type: integer
        numberOfPages:
          format: int64
          type: integer
        totalItems:
          format: int64
          type: integer
      required:
        - currentLimit
        - currentPage
        - finalCount
        - hasMore
        - initialCount
        - nextOffset
        - numberOfPages
        - totalItems
      type: object
    ProfileInput:
      additionalProperties: false
      properties:
        name:
          description: Name of the Profile
          example: Acme corp login
          maxLength: 100
          minLength: 1
          type: string
        tags:
          description: a comma separated list of tags for this profile
          example:
            - yellow
            - orange
          items:
            type: string
          nullable: true
          type: array
          uniqueItems: true
      required:
        - name
      type: object
    ProfileV1:
      additionalProperties: false
      properties:
        name:
          description: Name of the profile
          example: Acme corp login
          maxLength: 100
          minLength: 1
          type: string
        status:
          description: Status of the profile
          type: string
        tags:
          description: a comma separated list of tags for this profile
          example:
            - blue
            - red
          items:
            type: string
          nullable: true
          type: array
          uniqueItems: true
        upload_uri:
          description: URI to upload profile data to
          format: uri
          type: string
      required:
        - name
        - tags
      type: object
    ProfileV1EnvelopeDefaultMetaWrapper:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/ProfileV1"
        errors:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
        meta:
          $ref: "#/components/schemas/DefaultMetaWrapper"
        warnings:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
      required:
        - meta
        - data
        - errors
        - warnings
      type: object
    Prompt-contentRequest:
      additionalProperties: false
      properties:
        clientRequestId:
          type: string
        costThresholdCredits:
          format: float
          type: number
        followPaginationLinks:
          default: false
          description: Whether to follow pagination links in the content and load additional results
          example: false
          type: boolean
        prompt:
          description: The prompt to submit about the content in the browser window
          example: What is the main idea of this page?
          type: string
        timeThresholdSeconds:
          format: int64
          type: integer
      required:
        - prompt
      type: object
    ScrapeModelResponse:
      additionalProperties: false
      properties:
        modelResponse:
          $ref: "#/components/schemas/ScrapeResponseOutput"
      required:
        - modelResponse
      type: object
    ScrapeModelResponseExternalSessionAiResponseMetadataWrapper:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/ScrapeModelResponse"
        errors:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
        meta:
          $ref: "#/components/schemas/ExternalSessionAiResponseMetadata"
        warnings:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
      required:
        - meta
        - data
        - errors
        - warnings
      type: object
    ScrapeResponseContent:
      additionalProperties: false
      properties:
        contentType:
          description: The mime type of content extracted from the browser window
          type: string
        text:
          description: The text content of the browser window
          type: string
      required:
        - contentType
        - text
      type: object
    ScrapeResponseOutput:
      additionalProperties: false
      properties:
        scrapedContent:
          $ref: "#/components/schemas/ScrapeResponseContent"
          description: The scraped content of the browser window
        selectedText:
          description: Any text that was highlighted in the browser window
          type: string
        title:
          description: The title of the browser page
          type: string
      required:
        - scrapedContent
        - title
      type: object
    SessionConfig:
      additionalProperties: false
      properties:
        persist_profile:
          description: Persist the profile
          example: true
          type: boolean
        persist_profile_name:
          description: Profile name to persist resulting profile (required when persist_profile is true). Must contain A-Za-z0-9 only
          example: default
          type: string
        persist_profile_tags:
          description: Profile tags
          items:
            type: string
          nullable: true
          type: array
        profile_id:
          description: Id of a profile to use with this session
          example: linkedin
          type: string
        timeoutMinutes:
          default: 10
          description: Max length of session in minutes, after which it will terminate if not already deleted
          example: 10
          format: int
          maximum: 1440
          minimum: 1
          type: integer
      type: object
    SessionConfigV1:
      additionalProperties: false
      properties:
        persist_profile:
          description: Persist the profile
          example: true
          type: boolean
        persist_profile_name:
          description: Profile name to persist resulting profile (required when persist_profile is true). Must contain A-Za-z0-9 only
          example: default
          type: string
        persist_profile_tags:
          description: Profile tags
          items:
            type: string
          nullable: true
          type: array
        profile_id:
          description: Id of a profile to use with this session
          example: linkedin
          type: string
        timeoutMinutes:
          default: 10
          description: Max length of session in minutes, after which it will terminate if not already deleted
          example: 10
          format: int
          maximum: 1440
          minimum: 1
          type: integer
      type: object
    SessionRestInputV1:
      additionalProperties: false
      properties:
        configuration:
          $ref: "#/components/schemas/SessionConfigV1"
          description: Session configuration
      type: object
    SessionWithConnectionInfo:
      additionalProperties: false
      properties:
        cdp_url:
          description: "Url to connect to chrome devtools protocol port on the airtop browser. Include the header 'Authorization: Bearer <api-key>.'"
          type: string
        cdp_ws_url:
          description: "Websocket url to connect to CDP webSocketDebuggerUrl on the airtop browser. Include the header 'Authorization: Bearer <api-key>.'"
          type: string
        chromedriver_url:
          description: "Websocket url to connect to the chromedriver on the airtop browser. Include the header 'Authorization: Bearer <api-key>.'"
          type: string
        configuration:
          $ref: "#/components/schemas/SessionConfig"
          description: Session configuration
        current_usage:
          description: Current usage in minutes
          format: int64
          type: integer
        date_created:
          description: Date the session was created
          format: date-time
          type: string
        id:
          description: UUID of the session
          example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
          format: uuid
          type: string
        last_activity:
          description: Date of the last activity
          format: date-time
          type: string
        live_view:
          $ref: "#/components/schemas/LiveViewConnectionInfo"
          description: Connection info for the live view
        status:
          description: Session status
          example: active
          type: string
        url:
          description: URL of the session
          type: string
      required:
        - id
        - status
        - configuration
      type: object
    SessionWithConnectionInfoEnvelopeDefaultMetaWrapper:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/SessionWithConnectionInfo"
        errors:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
        meta:
          $ref: "#/components/schemas/DefaultMetaWrapper"
        warnings:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
      required:
        - meta
        - data
        - errors
        - warnings
      type: object
    SessionsWithPagination:
      additionalProperties: false
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
          description: Pagination info
        sessions:
          description: List of sessions
          items:
            $ref: "#/components/schemas/SessionWithConnectionInfo"
          nullable: true
          type: array
      required:
        - sessions
        - pagination
      type: object
    SessionsWithPaginationEnvelopeDefaultMetaWrapper:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/SessionsWithPagination"
        errors:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
        meta:
          $ref: "#/components/schemas/DefaultMetaWrapper"
        warnings:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
      required:
        - meta
        - data
        - errors
        - warnings
      type: object
    StatusMessage:
      additionalProperties: false
      properties:
        event:
          description: Event name
          type: string
        eventTimeMillis:
          description: Time of the event in milliseconds since epoch
          format: int64
          type: integer
        id:
          description: ID of the session
          type: string
        status:
          description: Status of the session
          enum:
            - awaiting_capacity
            - initializing
            - running
            - ended
          type: string
      required:
        - event
        - id
        - status
        - eventTimeMillis
      type: object
    Summarize-contentRequest:
      additionalProperties: false
      properties:
        clientRequestId:
          type: string
        costThresholdCredits:
          format: float
          type: number
        prompt:
          description: The prompt to submit about the content in the browser window
          example: What is the main idea of this page?
          type: string
        timeThresholdSeconds:
          format: int64
          type: integer
      type: object
    Window:
      additionalProperties: false
      properties:
        liveViewUrl:
          description: Url for live view session
          type: string
        token:
          description: Token for authenticating to a live view session
          type: string
        windowId:
          description: Window ID for live view session
          type: string
      required:
        - liveViewUrl
        - windowId
        - token
      type: object
    WindowEnvelopeDefaultMetaWrapper:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/Window"
        errors:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
        meta:
          $ref: "#/components/schemas/DefaultMetaWrapper"
        warnings:
          items:
            $ref: "#/components/schemas/Issue"
          nullable: true
          type: array
      required:
        - meta
        - data
        - errors
        - warnings
      type: object
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
      x-fern-bearer:
        name: apiKey
info:
  title: Browser Control API
  version: 1.0.0
openapi: 3.0.3
paths:
  /auth:
    get:
      description: Auth and redirect sessions by ID
      operationId: auth-and-redirect
      parameters:
        - description: session id
          in: header
          name: x-session-id
          schema:
            description: session id
            format: uuid
            type: string
        - description: call type, e.g. CHROMEDRIVER_EXTERNAL
          in: header
          name: x-call-type
          schema:
            description: call type, e.g. CHROMEDRIVER_EXTERNAL
            type: string
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              schema:
                description: airtop api key in Bearer format
                type: string
            x-session-id:
              schema:
                description: session id
                format: uuid
                type: string
            x-target-url:
              schema:
                description: target IP/port and path (if necessary)
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Auth and redirect sessions
      tags:
        - Auth
  /extensions:
    delete:
      description: Delete an extension by ID
      operationId: extensions-delete
      parameters:
        - description: Name to search for, supports regex, case insensitive
          example: Widget
          explode: false
          in: query
          name: name
          schema:
            description: Name to search for, supports regex, case insensitive
            example: Widget
            type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Delete extensions matching name query
      tags:
        - Extensions
      x-fern-audiences:
        - beta
    get:
      description: Get extensions, searching by name
      operationId: extensions-get
      parameters:
        - description: Name to search for, supports regex, case insensitive
          example: Widget
          explode: false
          in: query
          name: name
          schema:
            description: Name to search for, supports regex, case insensitive
            example: Widget
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListExtensionV1EnvelopeDefaultMetaWrapper"
                description: List of extensions
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Get extensions
      tags:
        - Extensions
      x-fern-audiences:
        - beta
    post:
      operationId: extensions-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Extensions-postRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtensionV1EnvelopeDefaultMetaWrapper"
                description: Extension
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Create an extension
      tags:
        - Extensions
      x-fern-audiences:
        - beta
  /extensions/{id}:
    get:
      description: Get an extension by ID
      operationId: extensions-get-by-id
      parameters:
        - description: UUID of the profile to get
          example: 4a61a55c-391b-4f73-957e-ffbd29ac7cba
          in: path
          name: id
          required: true
          schema:
            description: UUID of the profile to get
            example: 4a61a55c-391b-4f73-957e-ffbd29ac7cba
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtensionV1EnvelopeDefaultMetaWrapper"
                description: Extension
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Internal Server Error
      summary: Get an extension
      tags:
        - Extensions
      x-fern-audiences:
        - beta
  /profiles:
    delete:
      description: Delete profiles matching query
      operationId: profiles-delete
      parameters:
        - description: Name to search for, supports regex, case insensitive
          example: ^Acme.*
          explode: false
          in: query
          name: name
          schema:
            description: Name to search for, supports regex, case insensitive
            example: ^Acme.*
            type: string
        - description: a comma separated list of tags to filter by (joined by OR, e.g. tag is red OR blue)
          example:
            - blue
            - red
          explode: false
          in: query
          name: tags
          schema:
            description: a comma separated list of tags to filter by (joined by OR, e.g. tag is red OR blue)
            example:
              - blue
              - red
            items:
              type: string
            nullable: true
            type: array
            uniqueItems: true
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Delete profiles matching query
      tags:
        - Profiles
      x-fern-audiences:
        - public
    get:
      description: Get profiles, searching by name or tags
      operationId: profiles-get
      parameters:
        - description: Name to search for, supports regex, case insensitive
          example: ^Acme.*
          explode: false
          in: query
          name: name
          schema:
            description: Name to search for, supports regex, case insensitive
            example: ^Acme.*
            type: string
        - description: a comma separated list of tags to filter by (joined by OR, e.g. tag is red OR blue)
          example:
            - blue
            - red
          explode: false
          in: query
          name: tags
          schema:
            description: a comma separated list of tags to filter by (joined by OR, e.g. tag is red OR blue)
            example:
              - blue
              - red
            items:
              type: string
            nullable: true
            type: array
            uniqueItems: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProfileV1EnvelopeDefaultMetaWrapper"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Get profiles
      tags:
        - Profiles
      x-fern-audiences:
        - public
    post:
      operationId: profiles-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileInput"
              description: Profile
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileV1EnvelopeDefaultMetaWrapper"
                description: created Profile
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Create a profile
      tags:
        - Profiles
      x-fern-audiences:
        - beta
  /profiles/{id}:
    get:
      description: Get a profile by ID
      operationId: profiles-get-by-id
      parameters:
        - description: name of the profile to get
          example: 4a61a55c-391b-4f73-957e-ffbd29ac7cba
          in: path
          name: id
          required: true
          schema:
            description: name of the profile to get
            example: 4a61a55c-391b-4f73-957e-ffbd29ac7cba
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileV1EnvelopeDefaultMetaWrapper"
                description: created Profile
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Internal Server Error
      summary: Get a profile
      tags:
        - Profiles
      x-fern-audiences:
        - public
  /sessions:
    get:
      description: Get a list of sessions by ID
      operationId: sessions-list
      parameters:
        - description: a comma separated list of UUIDs of the session to get
          example:
            - 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
            - e39522ce-44f0-456f-9efd-07b3d4fdd9f2
          explode: false
          in: query
          name: sessionIds
          schema:
            description: a comma separated list of UUIDs of the session to get
            example:
              - 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
              - e39522ce-44f0-456f-9efd-07b3d4fdd9f2
            items:
              type: string
            nullable: true
            type: array
        - description: status of the session to get
          example: running
          explode: false
          in: query
          name: status
          schema:
            description: status of the session to get
            enum:
              - awaiting_capacity
              - initializing
              - running
              - ended
            example: running
            format: enum
            type: string
        - description: offset for pagination
          example: 1
          explode: false
          in: query
          name: offset
          schema:
            default: -1
            description: offset for pagination
            example: 1
            format: int64
            type: integer
        - description: limit for pagination
          example: 10
          explode: false
          in: query
          name: limit
          schema:
            default: 0
            description: limit for pagination
            example: 10
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionsWithPaginationEnvelopeDefaultMetaWrapper"
                description: List of sessions
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Internal Server Error
      summary: Get a list of sessions
      tags:
        - Sessions
      x-fern-audiences:
        - public
    post:
      operationId: sessions-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionRestInputV1"
              description: Session
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionWithConnectionInfoEnvelopeDefaultMetaWrapper"
                description: Session data
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Create a session
      tags:
        - Sessions
      x-fern-audiences:
        - public
  /sessions/{id}:
    delete:
      description: Ends a session by ID. If a given session id does not exist within the organization, it is ignored.
      operationId: sessions-terminate
      parameters:
        - description: UUID of the session to delete
          example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
          in: path
          name: id
          required: true
          schema:
            description: UUID of the session to delete
            example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
            type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Ends a session
      tags:
        - Sessions
      x-fern-audiences:
        - public
    get:
      description: Get a session by ID
      operationId: sessions-getInfo
      parameters:
        - description: UUID of the session to get
          example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
          in: path
          name: id
          required: true
          schema:
            description: UUID of the session to get
            example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionWithConnectionInfoEnvelopeDefaultMetaWrapper"
                description: Session data
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Internal Server Error
      summary: Get info for a session
      tags:
        - Sessions
      x-fern-audiences:
        - public
  /sessions/{id}/events:
    get:
      description: Get a session event stream for a given session ID
      operationId: sessions-events
      parameters:
        - description: UUID of the session to get status info for
          example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
          in: path
          name: id
          required: true
          schema:
            description: UUID of the session to get status info for
            example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
            type: string
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                description: Each oneOf object in the array represents one possible Server Sent Events (SSE) message, serialized as UTF-8 text according to the SSE specification.
                oneOf:
                  - properties:
                      data:
                        $ref: "#/components/schemas/StatusMessage"
                      event:
                        const: status
                        description: The event name.
                        type: string
                      id:
                        description: The event ID.
                        type: integer
                      retry:
                        description: The retry time in milliseconds.
                        type: integer
                    required:
                      - data
                      - event
                    title: Event status
                    type: object
                  - properties:
                      data:
                        $ref: "#/components/schemas/ErrorMessage"
                      event:
                        const: error
                        description: The event name.
                        type: string
                      id:
                        description: The event ID.
                        type: integer
                      retry:
                        description: The retry time in milliseconds.
                        type: integer
                    required:
                      - data
                      - event
                    title: Event error
                    type: object
                title: Server Sent Events
                type: object
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Internal Server Error
      summary: Get a session event stream
      tags:
        - Sessions
      x-fern-audiences:
        - public
      x-fern-streaming:
        format: sse
  /sessions/{sessionId}/windows/{windowId}/get-window-info:
    get:
      operationId: get-window-info
      parameters:
        - description: UUID of the session that owns the window
          example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
          in: path
          name: sessionId
          required: true
          schema:
            description: UUID of the session that owns the window
            example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
            format: uuid
            type: string
        - description: id of the browser window, either the windowId (uuid) or targetId (simple string)
          example: 7334da2a-91b0-42c5-6156-76a5eba87430
          in: path
          name: windowId
          required: true
          schema:
            description: id of the browser window, either the windowId (uuid) or targetId (simple string)
            example: 7334da2a-91b0-42c5-6156-76a5eba87430
            type: string
        - description: Renders a navigation bar as part of the live view session
          explode: false
          in: query
          name: includeNavigationBar
          schema:
            description: Renders a navigation bar as part of the live view session
            type: boolean
        - description: By default browsers will adapt its resolution to the live view window size. This flag disables that behavior
          explode: false
          in: query
          name: disableResize
          schema:
            description: By default browsers will adapt its resolution to the live view window size. This flag disables that behavior
            type: boolean
        - description: "Ex: Screen resolution of the live view in format wxh, e.g. 1920x1080. When this value is provided the live view won't adapt it's resolution to the live view window size"
          example: 1920x1080
          explode: false
          in: query
          name: Screen resolution
          schema:
            description: "Ex: Screen resolution of the live view in format wxh, e.g. 1920x1080. When this value is provided the live view won't adapt it's resolution to the live view window size"
            example: 1920x1080
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WindowEnvelopeDefaultMetaWrapper"
                description: Window info
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Get information about a browser window in a session
      tags:
        - Windows
      x-fern-audiences:
        - public
  /sessions/{sessionId}/windows/{windowId}/prompt-content:
    post:
      operationId: prompt-content
      parameters:
        - description: The session id to submit a prompt about
          example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
          in: path
          name: sessionId
          required: true
          schema:
            description: The session id to submit a prompt about
            example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
            format: uuid
            type: string
        - description: The window id to submit a prompt about
          example: 0334da2a-91b0-42c5-6156-76a5eba87430
          in: path
          name: windowId
          required: true
          schema:
            description: The window id to submit a prompt about
            example: 0334da2a-91b0-42c5-6156-76a5eba87430
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Prompt-contentRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelResponseExternalSessionAiResponseMetadataWrapper"
          description: Created
          headers:
            content-type:
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Submit a prompt about the content in a specific browser window.
      tags:
        - Windows
      x-fern-audiences:
        - public
  /sessions/{sessionId}/windows/{windowId}/scrape-content:
    get:
      operationId: scrape-content
      parameters:
        - description: The session id to scrape
          example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
          in: path
          name: sessionId
          required: true
          schema:
            description: The session id to scrape
            example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
            format: uuid
            type: string
        - description: The window id to scrape
          example: 0334da2a-91b0-42c5-6156-76a5eba87430
          in: path
          name: windowId
          required: true
          schema:
            description: The window id to scrape
            example: 0334da2a-91b0-42c5-6156-76a5eba87430
            format: uuid
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScrapeModelResponseExternalSessionAiResponseMetadataWrapper"
          description: Created
          headers:
            content-type:
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Scrape a window
      tags:
        - Windows
      x-fern-audiences:
        - public
  /sessions/{sessionId}/windows/{windowId}/summarize-content:
    post:
      operationId: summarize-content
      parameters:
        - description: The session id to summarize
          example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
          in: path
          name: sessionId
          required: true
          schema:
            description: The session id to summarize
            example: 6aac6f73-bd89-4a76-ab32-5a6c422e8b0b
            format: uuid
            type: string
        - description: The window id to summarize
          example: 0334da2a-91b0-42c5-6156-76a5eba87430
          in: path
          name: windowId
          required: true
          schema:
            description: The window id to summarize
            example: 0334da2a-91b0-42c5-6156-76a5eba87430
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Summarize-contentRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelResponseExternalSessionAiResponseMetadataWrapper"
          description: Created
          headers:
            content-type:
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: Error
      summary: Get a summary of content in a browser window
      tags:
        - Windows
      x-fern-audiences:
        - public
servers:
  - url: https://api.airtop.ai/v1
