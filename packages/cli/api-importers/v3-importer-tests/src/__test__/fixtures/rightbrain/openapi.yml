openapi: 3.1.0
info:
  title: brain core api
  description: "\nBrain Core API. \U0001F680\n"
  version: 0.0.1
paths:
  /ping:
    get:
      summary: Root
      description: Root endpoint that returns a "Hello World" message.
      operationId: root_ping_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /org/{org_id}/iam/members:
    get:
      tags:
      - org
      summary: IAM - List Organization Members
      description: Lists all members that have been granted direct access to the organization.
      operationId: organization_iam_list_members
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:view
        - organization:view_members
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: type
        in: query
        required: false
        schema:
          anyOf:
          - enum:
            - user
            - organization
            - project
            type: string
          - type: 'null'
          title: Type
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_IAMMember_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Organization Iam List Members
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/iam/members/{member}:
    get:
      tags:
      - org
      summary: IAM - Lookup Organization Member
      description: Retrieve a specific member that has been granted direct access
        to the organization.
      operationId: organization_get_member
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:view
        - organization:view_members
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: member
        in: path
        required: true
        schema:
          type: string
          title: Member
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Organization Get Member
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - org
      summary: IAM - Update Organization Member
      description: Update the roles that a member holds on the organization.
      operationId: organization_iam_update_member_roles
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: member
        in: path
        required: true
        schema:
          type: string
          title: Member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationIAMMemberRoleUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MultipleRolesNotAllowedErrorResponse'
                - $ref: '#/components/schemas/InvalidRoleErrorResponse'
                - $ref: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                - $ref: '#/components/schemas/InvalidMemberErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MULTIPLE_ROLES_NOT_ALLOWED: '#/components/schemas/MultipleRolesNotAllowedErrorResponse'
                    INVALID_ROLE: '#/components/schemas/InvalidRoleErrorResponse'
                    INVALID_SUBJECT_TYPE: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                    INVALID_MEMBER: '#/components/schemas/InvalidMemberErrorResponse'
                title: Response 400 Organization Iam Update Member Roles
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Organization Iam Update Member Roles
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMemberErrorResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/iam/test:
    post:
      tags:
      - org
      summary: IAM - Test Organization Permissions
      description: Test the permissions that the caller (or another subject) holds
        on the organization.
      operationId: organization_iam_test_permissions
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationIAMPermissionTest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMPermissionTest'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                - $ref: '#/components/schemas/InvalidMemberErrorResponse'
                - $ref: '#/components/schemas/InvalidRoleErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    INVALID_SUBJECT_TYPE: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                    INVALID_MEMBER: '#/components/schemas/InvalidMemberErrorResponse'
                    INVALID_ROLE: '#/components/schemas/InvalidRoleErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                title: Response 400 Organization Iam Test Permissions
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Organization Iam Test Permissions
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMemberErrorResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org:
    get:
      tags:
      - org
      summary: Org List
      operationId: org_list_org_get
      security:
      - HTTPBearer: []
      parameters:
      - name: membership
        in: query
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/OrgMembership'
          default: active
          title: Membership
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - org
      summary: Org Create
      operationId: org_create_org_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}:
    post:
      tags:
      - org
      summary: Org Update
      operationId: org_update_org__org_id__post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Org Update Org  Org Id  Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - org
      summary: Org Get
      operationId: org_get_org__org_id__get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Org Get Org  Org Id  Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/join:
    post:
      tags:
      - org
      summary: Org Join
      operationId: org_join_org__org_id__join_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:join
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Org Join Org  Org Id  Join Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/invite:
    get:
      tags:
      - org
      summary: Org Invites List
      operationId: org_invites_list_org__org_id__invite_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:view_members
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: show
        in: query
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/OrgInviteShow'
          default: pending
          title: Show
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_OrganizationInvite_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Org Invites List Org  Org Id  Invite Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - org
      summary: Org Invites Create
      operationId: org_invites_create_org__org_id__invite_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:add_member
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgInviteBase'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvite'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/OrganizationInviteAlreadyExistsErrorResponse'
                - $ref: '#/components/schemas/OrganizationMemberAlreadyExistsErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    ORGANIZATION_INVITE_ALREADY_EXISTS: '#/components/schemas/OrganizationInviteAlreadyExistsErrorResponse'
                    ORGANIZATION_MEMBER_ALREADY_EXISTS: '#/components/schemas/OrganizationMemberAlreadyExistsErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                title: Response 400 Org Invites Create Org  Org Id  Invite Post
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Org Invites Create Org  Org Id  Invite Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/invite/{org_invite_id}:
    delete:
      tags:
      - org
      summary: Org Invites Delete
      operationId: org_invites_delete_org__org_id__invite__org_invite_id__delete
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:remove_member
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: org_invite_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Invite Id
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Org Invites Delete Org  Org Id  Invite  Org Invite
                  Id  Delete
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/domains:
    get:
      tags:
      - org
      summary: Org Domains List
      operationId: org_domains_list_org__org_id__domains_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_OrganizationDomain_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Org Domains List Org  Org Id  Domains Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - org
      summary: Org Domains Post
      operationId: org_domains_post_org__org_id__domains_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDomainCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDomain'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Org Domains Post Org  Org Id  Domains Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/domains/{domain_id}:
    delete:
      tags:
      - org
      summary: Org Domain Delete
      operationId: org_domain_delete_org__org_id__domains__domain_id__delete
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: domain_id
        in: path
        required: true
        schema:
          type: string
          title: Domain Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDomain'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Org Domain Delete Org  Org Id  Domains  Domain
                  Id  Delete
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/avatar:
    post:
      tags:
      - org
      summary: Org Update Avatar
      operationId: org_update_avatar_org__org_id__avatar_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_org_update_avatar_org__org_id__avatar_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Org Update Avatar Org  Org Id  Avatar Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user:
    get:
      tags:
      - user
      summary: User Get
      description: Retrieve the profile of the current user.
      operationId: user_get_user_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    post:
      tags:
      - user
      summary: User Post
      description: Update the profile of the current user.
      operationId: user_post_user_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /user/avatar:
    post:
      tags:
      - user
      summary: User Update Avatar
      operationId: user_update_avatar_user_avatar_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_user_update_avatar_user_avatar_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /org/{org_id}/project:
    get:
      tags:
      - project
      summary: List Project
      operationId: list_project_org__org_id__project_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_Project_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Project Org  Org Id  Project Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - project
      summary: Create Project
      operationId: create_project_org__org_id__project_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - organization:create_project
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Create Project Org  Org Id  Project Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}:
    get:
      tags:
      - project
      summary: Get Project
      operationId: get_project_org__org_id__project__project_id__get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithDatasources'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Project Org  Org Id  Project  Project Id  Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - project
      summary: Update Project
      operationId: update_project_org__org_id__project__project_id__post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Update Project Org  Org Id  Project  Project Id  Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/config:
    get:
      tags:
      - project
      summary: Get Project Config
      operationId: get_project_config_org__org_id__project__project_id__config_get
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfig-Output'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - project
      summary: Set Project Config
      operationId: set_project_config_org__org_id__project__project_id__config_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectConfig-Input'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfig-Output'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Set Project Config Org  Org Id  Project  Project
                  Id  Config Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/avatar:
    post:
      tags:
      - project
      summary: Project Update Avatar
      operationId: project_update_avatar_org__org_id__project__project_id__avatar_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_project_update_avatar_org__org_id__project__project_id__avatar_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Project Update Avatar Org  Org Id  Project  Project
                  Id  Avatar Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/iam/members:
    get:
      tags:
      - project
      summary: IAM - List Project Members
      description: Lists all members that have been granted direct access to the project.
      operationId: project_iam_list_members
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:view
        - project:view_members
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: type
        in: query
        required: false
        schema:
          anyOf:
          - enum:
            - user
            - organization
            - project
            type: string
          - type: 'null'
          title: Type
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_IAMMember_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Project Iam List Members
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/iam/members/{member}:
    get:
      tags:
      - project
      summary: IAM - Lookup Project Member
      description: Retrieve a specific member that has been granted direct access
        to the project.
      operationId: project_get_member
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:view
        - project:view_members
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: member
        in: path
        required: true
        schema:
          type: string
          title: Member
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Project Get Member
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - project
      summary: IAM - Update Project Member
      description: Update the roles that a member holds on the project.
      operationId: project_iam_update_member_roles
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: member
        in: path
        required: true
        schema:
          type: string
          title: Member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectIAMMemberRoleUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MultipleRolesNotAllowedErrorResponse'
                - $ref: '#/components/schemas/InvalidRoleErrorResponse'
                - $ref: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                - $ref: '#/components/schemas/InvalidMemberErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MULTIPLE_ROLES_NOT_ALLOWED: '#/components/schemas/MultipleRolesNotAllowedErrorResponse'
                    INVALID_ROLE: '#/components/schemas/InvalidRoleErrorResponse'
                    INVALID_SUBJECT_TYPE: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                    INVALID_MEMBER: '#/components/schemas/InvalidMemberErrorResponse'
                title: Response 400 Project Iam Update Member Roles
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Project Iam Update Member Roles
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMemberErrorResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/iam/test:
    post:
      tags:
      - project
      summary: IAM - Test Project Permissions
      description: Test the permissions that the caller (or another subject) holds
        on the project.
      operationId: project_iam_test_permissions
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectIAMPermissionTest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMPermissionTest'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                - $ref: '#/components/schemas/InvalidMemberErrorResponse'
                - $ref: '#/components/schemas/InvalidRoleErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    INVALID_SUBJECT_TYPE: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                    INVALID_MEMBER: '#/components/schemas/InvalidMemberErrorResponse'
                    INVALID_ROLE: '#/components/schemas/InvalidRoleErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                title: Response 400 Project Iam Test Permissions
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Project Iam Test Permissions
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMemberErrorResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/collection:
    get:
      tags:
      - collection
      summary: List Collections
      operationId: list_collections_org__org_id__project__project_id__collection_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: title
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_Collection_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Collections Org  Org Id  Project  Project
                  Id  Collection Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - collection
      summary: Create Collection
      operationId: create_collection_org__org_id__project__project_id__collection_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_collection
        - document_embedding_instance:query
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Create Collection Org  Org Id  Project  Project
                  Id  Collection Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/collection/{collection_id}:
    get:
      tags:
      - collection
      summary: Get Collection
      operationId: get_collection_org__org_id__project__project_id__collection__collection_id__get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Collection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Collection Org  Org Id  Project  Project Id  Collection  Collection
                  Id  Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - collection
      summary: Collection Edit
      description: Edit collection details
      operationId: collection_edit_org__org_id__project__project_id__collection__collection_id__post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:edit
        - document_embedding_instance:query
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Collection Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Collection Edit Org  Org Id  Project  Project
                  Id  Collection  Collection Id  Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/collection/{collection_id}/stats:
    get:
      tags:
      - collection
      summary: Collection Stats
      operationId: collection_stats_org__org_id__project__project_id__collection__collection_id__stats_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
          title: Collection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStatsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Collection Stats Org  Org Id  Project  Project
                  Id  Collection  Collection Id  Stats Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/collection/{collection_id}/chat:
    get:
      tags:
      - collection
      summary: List Chats
      operationId: list_chats_org__org_id__project__project_id__collection__collection_id__chat_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:list_chats
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Collection Id
      - name: show
        in: query
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/CollectionChatShow'
          default: viewable
          title: Show
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_Chat_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Chats Org  Org Id  Project  Project Id  Collection  Collection
                  Id  Chat Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/collection/{collection_id}/query:
    post:
      tags:
      - collection
      summary: Query Collection
      operationId: query_collection_org__org_id__project__project_id__collection__collection_id__query_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:query
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Collection Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionQuery'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Query Collection Org  Org Id  Project  Project
                  Id  Collection  Collection Id  Query Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/collection/{collection_id}/update_summary:
    post:
      tags:
      - collection
      summary: Update Summary
      description: Generate and update the summary for a collection
      operationId: update_summary_org__org_id__project__project_id__collection__collection_id__update_summary_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Collection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobResult'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Update Summary Org  Org Id  Project  Project Id  Collection  Collection
                  Id  Update Summary Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/collection/{collection_id}/add:
    post:
      tags:
      - collection
      summary: Collection Add
      description: Add an embedding instance to the collection
      operationId: collection_add_org__org_id__project__project_id__collection__collection_id__add_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:edit
        - document_embedding_instance:query
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Collection Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionEmbeddingUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Collection Add Org  Org Id  Project  Project Id  Collection  Collection
                  Id  Add Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/collection/{collection_id}/remove:
    post:
      tags:
      - collection
      summary: Collection Remove
      description: Remove an embedding instance from the collection
      operationId: collection_remove_org__org_id__project__project_id__collection__collection_id__remove_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Collection Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionEmbeddingUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Collection Remove Org  Org Id  Project  Project
                  Id  Collection  Collection Id  Remove Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/collection/{collection_id}/iam/members:
    get:
      tags:
      - collection
      summary: IAM - List Collection Members
      description: Lists all members that have been granted direct access to the collection.
      operationId: collection_iam_list_members
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:view
        - collection:view_members
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Collection Id
      - name: type
        in: query
        required: false
        schema:
          anyOf:
          - enum:
            - user
            - organization
            - project
            type: string
          - type: 'null'
          title: Type
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_IAMMember_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Collection Iam List Members
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/collection/{collection_id}/iam/members/{member}:
    get:
      tags:
      - collection
      summary: IAM - Lookup Collection Member
      description: Retrieve a specific member that has been granted direct access
        to the collection.
      operationId: collection_get_member
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:view
        - collection:view_members
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Collection Id
      - name: member
        in: path
        required: true
        schema:
          type: string
          title: Member
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Collection Get Member
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - collection
      summary: IAM - Update Collection Member
      description: Update the roles that a member holds on the collection.
      operationId: collection_iam_update_member_roles
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Collection Id
      - name: member
        in: path
        required: true
        schema:
          type: string
          title: Member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionIAMMemberRoleUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MultipleRolesNotAllowedErrorResponse'
                - $ref: '#/components/schemas/InvalidRoleErrorResponse'
                - $ref: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                - $ref: '#/components/schemas/InvalidMemberErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MULTIPLE_ROLES_NOT_ALLOWED: '#/components/schemas/MultipleRolesNotAllowedErrorResponse'
                    INVALID_ROLE: '#/components/schemas/InvalidRoleErrorResponse'
                    INVALID_SUBJECT_TYPE: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                    INVALID_MEMBER: '#/components/schemas/InvalidMemberErrorResponse'
                title: Response 400 Collection Iam Update Member Roles
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Collection Iam Update Member Roles
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMemberErrorResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/collection/{collection_id}/iam/test:
    post:
      tags:
      - collection
      summary: IAM - Test Collection Permissions
      description: Test the permissions that the caller (or another subject) holds
        on the collection.
      operationId: collection_iam_test_permissions
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Collection Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionIAMPermissionTest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMPermissionTest'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                - $ref: '#/components/schemas/InvalidMemberErrorResponse'
                - $ref: '#/components/schemas/InvalidRoleErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    INVALID_SUBJECT_TYPE: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                    INVALID_MEMBER: '#/components/schemas/InvalidMemberErrorResponse'
                    INVALID_ROLE: '#/components/schemas/InvalidRoleErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                title: Response 400 Collection Iam Test Permissions
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Collection Iam Test Permissions
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMemberErrorResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/document:
    post:
      tags:
      - document
      summary: Document Create
      operationId: document_create_org__org_id__project__project_id__document_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_document
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_document_create_org__org_id__project__project_id__document_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatusResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Document Create Org  Org Id  Project  Project
                  Id  Document Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - document
      summary: Document List
      operationId: document_list_org__org_id__project__project_id__document_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:list_documents
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: title
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Cursor
      - name: collection_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Collection Id
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 25
          title: Page Limit
      - name: source
        in: query
        required: false
        schema:
          anyOf:
          - enum:
            - upload
            - gdrive
            - onedrive
            - web_scrape
            - notion
            - confluence
            - box
            - dropbox
            - sharepoint
            type: string
          - type: 'null'
          title: Source
      - name: strategy
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Strategy
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_ChatDocument_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Document List Org  Org Id  Project  Project Id  Document
                  Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/document/upload:
    post:
      tags:
      - document
      summary: Document Upload
      operationId: document_upload_org__org_id__project__project_id__document_upload_post
      deprecated: true
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_document
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_document_upload_org__org_id__project__project_id__document_upload_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatDocument'
                title: Response Document Upload Org  Org Id  Project  Project Id  Document
                  Upload Post
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Document Upload Org  Org Id  Project  Project
                  Id  Document Upload Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/document/create/status/{group_id}:
    get:
      tags:
      - document
      summary: Task Status
      operationId: task_status_org__org_id__project__project_id__document_create_status__group_id__get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_document
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: group_id
        in: path
        required: true
        schema:
          type: string
          title: Group Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatusResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Task Status Org  Org Id  Project  Project Id  Document
                  Create Status  Group Id  Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/document/{document_id}/query:
    get:
      tags:
      - document
      summary: Document Query
      operationId: document_query_org__org_id__project__project_id__document__document_id__query_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - document:query
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Document Id
      - name: query
        in: query
        required: true
        schema:
          type: string
          title: Query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatDocumentQueryResult'
                title: Response Document Query Org  Org Id  Project  Project Id  Document  Document
                  Id  Query Get
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Document Query Org  Org Id  Project  Project Id  Document  Document
                  Id  Query Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/document/{document_id}:
    get:
      tags:
      - document
      summary: Document Fetch
      operationId: document_fetch_org__org_id__project__project_id__document__document_id__get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - document:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Document Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatDocument'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Document Fetch Org  Org Id  Project  Project Id  Document  Document
                  Id  Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - document
      summary: Document Update
      operationId: document_update_org__org_id__project__project_id__document__document_id__post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - document:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Document Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatDocumentUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatDocument'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Document Update Org  Org Id  Project  Project
                  Id  Document  Document Id  Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - document
      summary: Document Delete
      operationId: document_delete_org__org_id__project__project_id__document__document_id__delete
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - document:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Document Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Document Delete Org  Org Id  Project  Project
                  Id  Document  Document Id  Delete
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/document/{document_id}/embeddings:
    get:
      tags:
      - document
      summary: Document Embedding Query
      operationId: document_embedding_query_org__org_id__project__project_id__document__document_id__embeddings_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - document:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          title: Document Id
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 25
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_ChatDocumentEmbeddingRecord_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Document Embedding Query Org  Org Id  Project  Project
                  Id  Document  Document Id  Embeddings Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/document/{document_id}/embedding/{embedding_id}:
    get:
      tags:
      - document
      summary: Document Embedding Get
      description: Fetch an individual embedding record by its ID. Useful for examining
        the source submitted to an LLM
      operationId: document_embedding_get_org__org_id__project__project_id__document__document_id__embedding__embedding_id__get
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Document Id
      - name: embedding_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Embedding Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatDocumentEmbeddingRecord'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/document/{document_id}/iam/members:
    get:
      tags:
      - document
      summary: IAM - List Document Members
      description: Lists all members that have been granted direct access to the document.
      operationId: document_iam_list_members
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - document:view
        - document:view_members
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Document Id
      - name: type
        in: query
        required: false
        schema:
          anyOf:
          - enum:
            - user
            - organization
            - project
            type: string
          - type: 'null'
          title: Type
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_IAMMember_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Document Iam List Members
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/document/{document_id}/iam/members/{member}:
    get:
      tags:
      - document
      summary: IAM - Lookup Document Member
      description: Retrieve a specific member that has been granted direct access
        to the document.
      operationId: document_get_member
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - document:view
        - document:view_members
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Document Id
      - name: member
        in: path
        required: true
        schema:
          type: string
          title: Member
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Document Get Member
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - document
      summary: IAM - Update Document Member
      description: Update the roles that a member holds on the document.
      operationId: document_iam_update_member_roles
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - document:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Document Id
      - name: member
        in: path
        required: true
        schema:
          type: string
          title: Member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentIAMMemberRoleUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MultipleRolesNotAllowedErrorResponse'
                - $ref: '#/components/schemas/InvalidRoleErrorResponse'
                - $ref: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                - $ref: '#/components/schemas/InvalidMemberErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MULTIPLE_ROLES_NOT_ALLOWED: '#/components/schemas/MultipleRolesNotAllowedErrorResponse'
                    INVALID_ROLE: '#/components/schemas/InvalidRoleErrorResponse'
                    INVALID_SUBJECT_TYPE: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                    INVALID_MEMBER: '#/components/schemas/InvalidMemberErrorResponse'
                title: Response 400 Document Iam Update Member Roles
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Document Iam Update Member Roles
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMemberErrorResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/document/{document_id}/iam/test:
    post:
      tags:
      - document
      summary: IAM - Test Document Permissions
      description: Test the permissions that the caller (or another subject) holds
        on the document.
      operationId: document_iam_test_permissions
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - document:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Document Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentIAMPermissionTest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMPermissionTest'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                - $ref: '#/components/schemas/InvalidMemberErrorResponse'
                - $ref: '#/components/schemas/InvalidRoleErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    INVALID_SUBJECT_TYPE: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                    INVALID_MEMBER: '#/components/schemas/InvalidMemberErrorResponse'
                    INVALID_ROLE: '#/components/schemas/InvalidRoleErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                title: Response 400 Document Iam Test Permissions
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Document Iam Test Permissions
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMemberErrorResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/recent:
    get:
      tags:
      - chat
      summary: Get Recent Chats For User
      operationId: get_recent_chats_for_user_chat_recent_get
      security:
      - HTTPBearer: []
      parameters:
      - name: project_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'
                title: Response Get Recent Chats For User Chat Recent Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/{chat_id}:
    get:
      tags:
      - chat
      summary: Get Chat
      operationId: get_chat_chat__chat_id__get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - chat:view
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Chat Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Chat Chat  Chat Id  Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - chat
      summary: Update Chat
      operationId: update_chat_chat__chat_id__post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - chat:edit
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Chat Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Update Chat Chat  Chat Id  Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/{chat_id}/config:
    get:
      tags:
      - chat
      summary: Get Chat Config
      operationId: get_chat_config_chat__chat_id__config_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - chat:view
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Chat Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatConfig-Output'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Chat Config Chat  Chat Id  Config Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - chat
      summary: Set Chat Config
      operationId: set_chat_config_chat__chat_id__config_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - chat:edit
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Chat Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConfig-Input'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatConfig-Output'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Set Chat Config Chat  Chat Id  Config Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat:
    post:
      tags:
      - chat
      summary: Create Chat
      operationId: create_chat_chat_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Create Chat Chat Post
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - collection:create_chat
  /chat/{chat_id}/query:
    get:
      tags:
      - chat
      summary: Query Chat
      operationId: query_chat_chat__chat_id__query_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - chat:query
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Chat Id
      - name: query
        in: query
        required: true
        schema:
          type: string
          title: Query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatDocumentQueryResult'
                title: Response Query Chat Chat  Chat Id  Query Get
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Query Chat Chat  Chat Id  Query Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/{chat_id}/iam/members:
    get:
      tags:
      - chat
      summary: IAM - List Chat Members
      description: Lists all members that have been granted direct access to the chat.
      operationId: chat_iam_list_members
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - chat:view
        - chat:view_members
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Chat Id
      - name: type
        in: query
        required: false
        schema:
          anyOf:
          - enum:
            - user
            - organization
            - project
            type: string
          - type: 'null'
          title: Type
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_IAMMember_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Chat Iam List Members
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/{chat_id}/iam/members/{member}:
    get:
      tags:
      - chat
      summary: IAM - Lookup Chat Member
      description: Retrieve a specific member that has been granted direct access
        to the chat.
      operationId: chat_get_member
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - chat:view
        - chat:view_members
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Chat Id
      - name: member
        in: path
        required: true
        schema:
          type: string
          title: Member
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Chat Get Member
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - chat
      summary: IAM - Update Chat Member
      description: Update the roles that a member holds on the chat.
      operationId: chat_iam_update_member_roles
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - chat:view
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Chat Id
      - name: member
        in: path
        required: true
        schema:
          type: string
          title: Member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatIAMMemberRoleUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MultipleRolesNotAllowedErrorResponse'
                - $ref: '#/components/schemas/InvalidRoleErrorResponse'
                - $ref: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                - $ref: '#/components/schemas/InvalidMemberErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MULTIPLE_ROLES_NOT_ALLOWED: '#/components/schemas/MultipleRolesNotAllowedErrorResponse'
                    INVALID_ROLE: '#/components/schemas/InvalidRoleErrorResponse'
                    INVALID_SUBJECT_TYPE: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                    INVALID_MEMBER: '#/components/schemas/InvalidMemberErrorResponse'
                title: Response 400 Chat Iam Update Member Roles
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Chat Iam Update Member Roles
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMemberErrorResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/{chat_id}/iam/test:
    post:
      tags:
      - chat
      summary: IAM - Test Chat Permissions
      description: Test the permissions that the caller (or another subject) holds
        on the chat.
      operationId: chat_iam_test_permissions
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - chat:view
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Chat Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatIAMPermissionTest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMPermissionTest'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                - $ref: '#/components/schemas/InvalidMemberErrorResponse'
                - $ref: '#/components/schemas/InvalidRoleErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    INVALID_SUBJECT_TYPE: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                    INVALID_MEMBER: '#/components/schemas/InvalidMemberErrorResponse'
                    INVALID_ROLE: '#/components/schemas/InvalidRoleErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                title: Response 400 Chat Iam Test Permissions
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Chat Iam Test Permissions
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMemberErrorResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/box/{connection_id}/list-files:
    get:
      tags:
      - datasource - box
      summary: List Files
      operationId: list_files_org__org_id__project__project_id__datasource_box__connection_id__list_files_get
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: parent_id
        in: query
        required: false
        schema:
          type: string
          default: ''
          title: Parent Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/box/{connection_id}/fetch:
    post:
      tags:
      - datasource - box
      summary: Fetch
      operationId: fetch_org__org_id__project__project_id__datasource_box__connection_id__fetch_post
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_fetch_org__org_id__project__project_id__datasource_box__connection_id__fetch_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/box/authorize:
    get:
      tags:
      - datasource - box
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_box_authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Box Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/box/{connection_id}/authorize:
    get:
      tags:
      - datasource - box
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_box__connection_id__authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Box  Connection Id  Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/box/{connection_id}:
    delete:
      tags:
      - datasource - box
      summary: Delete
      operationId: delete_org__org_id__project__project_id__datasource_box__connection_id__delete
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Delete Org  Org Id  Project  Project Id  Datasource
                  Box  Connection Id  Delete
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/box/{connection_id}/runs:
    get:
      tags:
      - datasource - box
      summary: List Runs
      operationId: list_runs_org__org_id__project__project_id__datasource_box__connection_id__runs_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 25
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_DatasourceSyncRun_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Runs Org  Org Id  Project  Project Id  Datasource
                  Box  Connection Id  Runs Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/box/{connection_id}/run:
    get:
      tags:
      - datasource - box
      summary: Check Status
      operationId: check_status_org__org_id__project__project_id__datasource_box__connection_id__run_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: sync_run_id
        in: query
        required: true
        schema:
          type: string
          title: Sync Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Check Status Org  Org Id  Project  Project Id  Datasource
                  Box  Connection Id  Run Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/box/{connection_id}/config:
    get:
      tags:
      - datasource - box
      summary: Get Configuration
      operationId: get_configuration_org__org_id__project__project_id__datasource_box__connection_id__config_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceConfiguration'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Configuration Org  Org Id  Project  Project
                  Id  Datasource Box  Connection Id  Config Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - datasource - box
      summary: Set Configuration
      operationId: set_configuration_org__org_id__project__project_id__datasource_box__connection_id__config_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasourceConfiguration'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Set Configuration Org  Org Id  Project  Project
                  Id  Datasource Box  Connection Id  Config Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /datasource/box/callback:
    get:
      tags:
      - datasource - box
      summary: Callback
      operationId: callback_datasource_box_callback_get
      security:
      - HTTPBearer: []
      parameters:
      - name: code
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Code
      - name: state
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: State
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/confluence/{connection_id}/list-files:
    get:
      tags:
      - datasource - confluence
      summary: List Files
      operationId: list_files_org__org_id__project__project_id__datasource_confluence__connection_id__list_files_get
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: parent_id
        in: query
        required: false
        schema:
          type: string
          default: ''
          title: Parent Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/confluence/{connection_id}/fetch:
    post:
      tags:
      - datasource - confluence
      summary: Fetch
      operationId: fetch_org__org_id__project__project_id__datasource_confluence__connection_id__fetch_post
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_fetch_org__org_id__project__project_id__datasource_confluence__connection_id__fetch_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/confluence/authorize:
    get:
      tags:
      - datasource - confluence
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_confluence_authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Confluence Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/confluence/{connection_id}/authorize:
    get:
      tags:
      - datasource - confluence
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_confluence__connection_id__authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Confluence  Connection Id  Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/confluence/{connection_id}:
    delete:
      tags:
      - datasource - confluence
      summary: Delete
      operationId: delete_org__org_id__project__project_id__datasource_confluence__connection_id__delete
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Delete Org  Org Id  Project  Project Id  Datasource
                  Confluence  Connection Id  Delete
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/confluence/{connection_id}/runs:
    get:
      tags:
      - datasource - confluence
      summary: List Runs
      operationId: list_runs_org__org_id__project__project_id__datasource_confluence__connection_id__runs_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 25
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_DatasourceSyncRun_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Runs Org  Org Id  Project  Project Id  Datasource
                  Confluence  Connection Id  Runs Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/confluence/{connection_id}/run:
    get:
      tags:
      - datasource - confluence
      summary: Check Status
      operationId: check_status_org__org_id__project__project_id__datasource_confluence__connection_id__run_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: sync_run_id
        in: query
        required: true
        schema:
          type: string
          title: Sync Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Check Status Org  Org Id  Project  Project Id  Datasource
                  Confluence  Connection Id  Run Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/confluence/{connection_id}/config:
    get:
      tags:
      - datasource - confluence
      summary: Get Configuration
      operationId: get_configuration_org__org_id__project__project_id__datasource_confluence__connection_id__config_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceConfiguration'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Configuration Org  Org Id  Project  Project
                  Id  Datasource Confluence  Connection Id  Config Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - datasource - confluence
      summary: Set Configuration
      operationId: set_configuration_org__org_id__project__project_id__datasource_confluence__connection_id__config_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasourceConfiguration'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Set Configuration Org  Org Id  Project  Project
                  Id  Datasource Confluence  Connection Id  Config Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /datasource/confluence/callback:
    get:
      tags:
      - datasource - confluence
      summary: Callback
      operationId: callback_datasource_confluence_callback_get
      security:
      - HTTPBearer: []
      parameters:
      - name: code
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Code
      - name: state
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: State
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/dropbox/{connection_id}/list-files:
    get:
      tags:
      - datasource - dropbox
      summary: List Files
      operationId: list_files_org__org_id__project__project_id__datasource_dropbox__connection_id__list_files_get
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: parent_id
        in: query
        required: false
        schema:
          type: string
          default: ''
          title: Parent Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/dropbox/{connection_id}/fetch:
    post:
      tags:
      - datasource - dropbox
      summary: Fetch
      operationId: fetch_org__org_id__project__project_id__datasource_dropbox__connection_id__fetch_post
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_fetch_org__org_id__project__project_id__datasource_dropbox__connection_id__fetch_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/dropbox/authorize:
    get:
      tags:
      - datasource - dropbox
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_dropbox_authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Dropbox Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/dropbox/{connection_id}/authorize:
    get:
      tags:
      - datasource - dropbox
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_dropbox__connection_id__authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Dropbox  Connection Id  Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/dropbox/{connection_id}:
    delete:
      tags:
      - datasource - dropbox
      summary: Delete
      operationId: delete_org__org_id__project__project_id__datasource_dropbox__connection_id__delete
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Delete Org  Org Id  Project  Project Id  Datasource
                  Dropbox  Connection Id  Delete
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/dropbox/{connection_id}/runs:
    get:
      tags:
      - datasource - dropbox
      summary: List Runs
      operationId: list_runs_org__org_id__project__project_id__datasource_dropbox__connection_id__runs_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 25
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_DatasourceSyncRun_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Runs Org  Org Id  Project  Project Id  Datasource
                  Dropbox  Connection Id  Runs Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/dropbox/{connection_id}/run:
    get:
      tags:
      - datasource - dropbox
      summary: Check Status
      operationId: check_status_org__org_id__project__project_id__datasource_dropbox__connection_id__run_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: sync_run_id
        in: query
        required: true
        schema:
          type: string
          title: Sync Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Check Status Org  Org Id  Project  Project Id  Datasource
                  Dropbox  Connection Id  Run Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/dropbox/{connection_id}/config:
    get:
      tags:
      - datasource - dropbox
      summary: Get Configuration
      operationId: get_configuration_org__org_id__project__project_id__datasource_dropbox__connection_id__config_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceConfiguration'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Configuration Org  Org Id  Project  Project
                  Id  Datasource Dropbox  Connection Id  Config Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - datasource - dropbox
      summary: Set Configuration
      operationId: set_configuration_org__org_id__project__project_id__datasource_dropbox__connection_id__config_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasourceConfiguration'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Set Configuration Org  Org Id  Project  Project
                  Id  Datasource Dropbox  Connection Id  Config Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /datasource/dropbox/callback:
    get:
      tags:
      - datasource - dropbox
      summary: Callback
      operationId: callback_datasource_dropbox_callback_get
      security:
      - HTTPBearer: []
      parameters:
      - name: code
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Code
      - name: state
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: State
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/gdrive/{connection_id}/list-files:
    get:
      tags:
      - datasource - gdrive
      summary: List Files
      operationId: list_files_org__org_id__project__project_id__datasource_gdrive__connection_id__list_files_get
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: parent_id
        in: query
        required: false
        schema:
          type: string
          default: ''
          title: Parent Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/gdrive/{connection_id}/fetch:
    post:
      tags:
      - datasource - gdrive
      summary: Fetch
      operationId: fetch_org__org_id__project__project_id__datasource_gdrive__connection_id__fetch_post
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_fetch_org__org_id__project__project_id__datasource_gdrive__connection_id__fetch_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/gdrive/authorize:
    get:
      tags:
      - datasource - gdrive
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_gdrive_authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Gdrive Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/gdrive/{connection_id}/authorize:
    get:
      tags:
      - datasource - gdrive
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_gdrive__connection_id__authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Gdrive  Connection Id  Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/gdrive/{connection_id}:
    delete:
      tags:
      - datasource - gdrive
      summary: Delete
      operationId: delete_org__org_id__project__project_id__datasource_gdrive__connection_id__delete
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Delete Org  Org Id  Project  Project Id  Datasource
                  Gdrive  Connection Id  Delete
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/gdrive/{connection_id}/runs:
    get:
      tags:
      - datasource - gdrive
      summary: List Runs
      operationId: list_runs_org__org_id__project__project_id__datasource_gdrive__connection_id__runs_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 25
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_DatasourceSyncRun_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Runs Org  Org Id  Project  Project Id  Datasource
                  Gdrive  Connection Id  Runs Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/gdrive/{connection_id}/run:
    get:
      tags:
      - datasource - gdrive
      summary: Check Status
      operationId: check_status_org__org_id__project__project_id__datasource_gdrive__connection_id__run_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: sync_run_id
        in: query
        required: true
        schema:
          type: string
          title: Sync Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Check Status Org  Org Id  Project  Project Id  Datasource
                  Gdrive  Connection Id  Run Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/gdrive/{connection_id}/config:
    get:
      tags:
      - datasource - gdrive
      summary: Get Configuration
      operationId: get_configuration_org__org_id__project__project_id__datasource_gdrive__connection_id__config_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceConfiguration'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Configuration Org  Org Id  Project  Project
                  Id  Datasource Gdrive  Connection Id  Config Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - datasource - gdrive
      summary: Set Configuration
      operationId: set_configuration_org__org_id__project__project_id__datasource_gdrive__connection_id__config_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasourceConfiguration'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Set Configuration Org  Org Id  Project  Project
                  Id  Datasource Gdrive  Connection Id  Config Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /datasource/gdrive/callback:
    get:
      tags:
      - datasource - gdrive
      summary: Callback
      operationId: callback_datasource_gdrive_callback_get
      security:
      - HTTPBearer: []
      parameters:
      - name: code
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Code
      - name: state
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: State
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/notion/{connection_id}/list-files:
    get:
      tags:
      - datasource - notion
      summary: List Files
      operationId: list_files_org__org_id__project__project_id__datasource_notion__connection_id__list_files_get
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: parent_id
        in: query
        required: false
        schema:
          type: string
          default: ''
          title: Parent Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/notion/{connection_id}/fetch:
    post:
      tags:
      - datasource - notion
      summary: Fetch
      operationId: fetch_org__org_id__project__project_id__datasource_notion__connection_id__fetch_post
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_fetch_org__org_id__project__project_id__datasource_notion__connection_id__fetch_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/notion/authorize:
    get:
      tags:
      - datasource - notion
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_notion_authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Notion Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/notion/{connection_id}/authorize:
    get:
      tags:
      - datasource - notion
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_notion__connection_id__authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Notion  Connection Id  Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/notion/{connection_id}:
    delete:
      tags:
      - datasource - notion
      summary: Delete
      operationId: delete_org__org_id__project__project_id__datasource_notion__connection_id__delete
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Delete Org  Org Id  Project  Project Id  Datasource
                  Notion  Connection Id  Delete
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/notion/{connection_id}/runs:
    get:
      tags:
      - datasource - notion
      summary: List Runs
      operationId: list_runs_org__org_id__project__project_id__datasource_notion__connection_id__runs_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 25
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_DatasourceSyncRun_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Runs Org  Org Id  Project  Project Id  Datasource
                  Notion  Connection Id  Runs Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/notion/{connection_id}/run:
    get:
      tags:
      - datasource - notion
      summary: Check Status
      operationId: check_status_org__org_id__project__project_id__datasource_notion__connection_id__run_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: sync_run_id
        in: query
        required: true
        schema:
          type: string
          title: Sync Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Check Status Org  Org Id  Project  Project Id  Datasource
                  Notion  Connection Id  Run Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/notion/{connection_id}/config:
    get:
      tags:
      - datasource - notion
      summary: Get Configuration
      operationId: get_configuration_org__org_id__project__project_id__datasource_notion__connection_id__config_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceConfiguration'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Configuration Org  Org Id  Project  Project
                  Id  Datasource Notion  Connection Id  Config Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - datasource - notion
      summary: Set Configuration
      operationId: set_configuration_org__org_id__project__project_id__datasource_notion__connection_id__config_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasourceConfiguration'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Set Configuration Org  Org Id  Project  Project
                  Id  Datasource Notion  Connection Id  Config Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /datasource/notion/callback:
    get:
      tags:
      - datasource - notion
      summary: Callback
      operationId: callback_datasource_notion_callback_get
      security:
      - HTTPBearer: []
      parameters:
      - name: code
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Code
      - name: state
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: State
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/onedrive/{connection_id}/list-files:
    get:
      tags:
      - datasource - onedrive
      summary: List Files
      operationId: list_files_org__org_id__project__project_id__datasource_onedrive__connection_id__list_files_get
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: parent_id
        in: query
        required: false
        schema:
          type: string
          default: ''
          title: Parent Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/onedrive/{connection_id}/fetch:
    post:
      tags:
      - datasource - onedrive
      summary: Fetch
      operationId: fetch_org__org_id__project__project_id__datasource_onedrive__connection_id__fetch_post
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_fetch_org__org_id__project__project_id__datasource_onedrive__connection_id__fetch_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/onedrive/authorize:
    get:
      tags:
      - datasource - onedrive
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_onedrive_authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Onedrive Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/onedrive/{connection_id}/authorize:
    get:
      tags:
      - datasource - onedrive
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_onedrive__connection_id__authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Onedrive  Connection Id  Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/onedrive/{connection_id}:
    delete:
      tags:
      - datasource - onedrive
      summary: Delete
      operationId: delete_org__org_id__project__project_id__datasource_onedrive__connection_id__delete
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Delete Org  Org Id  Project  Project Id  Datasource
                  Onedrive  Connection Id  Delete
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/onedrive/{connection_id}/runs:
    get:
      tags:
      - datasource - onedrive
      summary: List Runs
      operationId: list_runs_org__org_id__project__project_id__datasource_onedrive__connection_id__runs_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 25
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_DatasourceSyncRun_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Runs Org  Org Id  Project  Project Id  Datasource
                  Onedrive  Connection Id  Runs Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/onedrive/{connection_id}/run:
    get:
      tags:
      - datasource - onedrive
      summary: Check Status
      operationId: check_status_org__org_id__project__project_id__datasource_onedrive__connection_id__run_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: sync_run_id
        in: query
        required: true
        schema:
          type: string
          title: Sync Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Check Status Org  Org Id  Project  Project Id  Datasource
                  Onedrive  Connection Id  Run Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/onedrive/{connection_id}/config:
    get:
      tags:
      - datasource - onedrive
      summary: Get Configuration
      operationId: get_configuration_org__org_id__project__project_id__datasource_onedrive__connection_id__config_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceConfiguration'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Configuration Org  Org Id  Project  Project
                  Id  Datasource Onedrive  Connection Id  Config Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - datasource - onedrive
      summary: Set Configuration
      operationId: set_configuration_org__org_id__project__project_id__datasource_onedrive__connection_id__config_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasourceConfiguration'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Set Configuration Org  Org Id  Project  Project
                  Id  Datasource Onedrive  Connection Id  Config Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /datasource/onedrive/callback:
    get:
      tags:
      - datasource - onedrive
      summary: Callback
      operationId: callback_datasource_onedrive_callback_get
      security:
      - HTTPBearer: []
      parameters:
      - name: code
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Code
      - name: state
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: State
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/sharepoint/{connection_id}/list-files:
    get:
      tags:
      - datasource - sharepoint
      summary: List Files
      operationId: list_files_org__org_id__project__project_id__datasource_sharepoint__connection_id__list_files_get
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: parent_id
        in: query
        required: false
        schema:
          type: string
          default: ''
          title: Parent Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/sharepoint/{connection_id}/fetch:
    post:
      tags:
      - datasource - sharepoint
      summary: Fetch
      operationId: fetch_org__org_id__project__project_id__datasource_sharepoint__connection_id__fetch_post
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_fetch_org__org_id__project__project_id__datasource_sharepoint__connection_id__fetch_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/sharepoint/authorize:
    get:
      tags:
      - datasource - sharepoint
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_sharepoint_authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Sharepoint Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/sharepoint/{connection_id}/authorize:
    get:
      tags:
      - datasource - sharepoint
      summary: Authorize
      operationId: authorize_org__org_id__project__project_id__datasource_sharepoint__connection_id__authorize_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
      - name: redirect_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect To
      responses:
        '307':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Authorize Org  Org Id  Project  Project Id  Datasource
                  Sharepoint  Connection Id  Authorize Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/sharepoint/{connection_id}:
    delete:
      tags:
      - datasource - sharepoint
      summary: Delete
      operationId: delete_org__org_id__project__project_id__datasource_sharepoint__connection_id__delete
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Delete Org  Org Id  Project  Project Id  Datasource
                  Sharepoint  Connection Id  Delete
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/sharepoint/{connection_id}/runs:
    get:
      tags:
      - datasource - sharepoint
      summary: List Runs
      operationId: list_runs_org__org_id__project__project_id__datasource_sharepoint__connection_id__runs_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 25
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_DatasourceSyncRun_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Runs Org  Org Id  Project  Project Id  Datasource
                  Sharepoint  Connection Id  Runs Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/sharepoint/{connection_id}/run:
    get:
      tags:
      - datasource - sharepoint
      summary: Check Status
      operationId: check_status_org__org_id__project__project_id__datasource_sharepoint__connection_id__run_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      - name: sync_run_id
        in: query
        required: true
        schema:
          type: string
          title: Sync Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Check Status Org  Org Id  Project  Project Id  Datasource
                  Sharepoint  Connection Id  Run Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/datasource/sharepoint/{connection_id}/config:
    get:
      tags:
      - datasource - sharepoint
      summary: Get Configuration
      operationId: get_configuration_org__org_id__project__project_id__datasource_sharepoint__connection_id__config_get
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceConfiguration'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Configuration Org  Org Id  Project  Project
                  Id  Datasource Sharepoint  Connection Id  Config Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - datasource - sharepoint
      summary: Set Configuration
      operationId: set_configuration_org__org_id__project__project_id__datasource_sharepoint__connection_id__config_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_datasource_connection
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Connection Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasourceConfiguration'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Set Configuration Org  Org Id  Project  Project
                  Id  Datasource Sharepoint  Connection Id  Config Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /datasource/sharepoint/callback:
    get:
      tags:
      - datasource - sharepoint
      summary: Callback
      operationId: callback_datasource_sharepoint_callback_get
      security:
      - HTTPBearer: []
      parameters:
      - name: code
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Code
      - name: state
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: State
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /internal/webhook/hydra/token_hook:
    post:
      tags:
      - internal
      summary: Webhook Hydra Token Hook
      operationId: webhook_hydra_token_hook_internal_webhook_hydra_token_hook_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HydraWebhookTokenHook'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /internal/project/{project_id}/register_oauth_client:
    post:
      tags:
      - internal
      summary: Register Oauth Client
      operationId: register_oauth_client_internal_project__project_id__register_oauth_client_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:edit
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthClientCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClientCreateResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Register Oauth Client Internal Project  Project
                  Id  Register Oauth Client Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /internal/webhook/kratos/signup_check:
    post:
      tags:
      - internal
      summary: Webhook Kratos Signup Check
      operationId: webhook_kratos_signup_check_internal_webhook_kratos_signup_check_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KratosWebhook'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KratosWebhookResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /internal/webhook/kratos/signup_commit:
    post:
      tags:
      - internal
      summary: Webhook Kratos Signup Commit
      operationId: webhook_kratos_signup_commit_internal_webhook_kratos_signup_commit_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KratosWebhook'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KratosWebhookResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/scrape:
    post:
      tags:
      - scrape
      summary: Enable Web Scrape
      operationId: enable_org__org_id__project__project_id__scrape_post
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/scrape/start:
    post:
      tags:
      - scrape
      summary: Initialise Web Scrape
      operationId: fetch_org__org_id__project__project_id__scrape_start_post
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteScrapeRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/scrape/run/{sync_run_id}:
    get:
      tags:
      - scrape
      summary: Check Status
      operationId: check_status_org__org_id__project__project_id__scrape_run__sync_run_id__get
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: sync_run_id
        in: path
        required: true
        schema:
          type: string
          title: Sync Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceSyncRun'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/scrape/runs:
    get:
      tags:
      - scrape
      summary: List Runs
      operationId: list_runs_org__org_id__project__project_id__scrape_runs_get
      security:
      - HTTPBearer: []
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Cursor
      - name: page_limit
        in: query
        required: false
        schema:
          type: integer
          default: 25
          title: Page Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_DatasourceSyncRun_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/compose:
    post:
      tags:
      - compose
      summary: Initialise
      operationId: initialise_org__org_id__project__project_id__compose_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_compose
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComposeInit'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Initialise Org  Org Id  Project  Project Id  Compose
                  Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/compose/generate:
    post:
      tags:
      - compose
      summary: Generate
      operationId: generate_org__org_id__project__project_id__compose_generate_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_compose
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_generate_org__org_id__project__project_id__compose_generate_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Generate Org  Org Id  Project  Project Id  Compose
                  Generate Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/compose/update_section:
    post:
      tags:
      - compose
      summary: Update Section
      operationId: update_section_org__org_id__project__project_id__compose_update_section_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_compose
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_update_section_org__org_id__project__project_id__compose_update_section_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Update Section Org  Org Id  Project  Project Id  Compose
                  Update Section Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/compose/section_talking_points:
    post:
      tags:
      - compose
      summary: Section Talking Points
      operationId: section_talking_points_org__org_id__project__project_id__compose_section_talking_points_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_compose
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_section_talking_points_org__org_id__project__project_id__compose_section_talking_points_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Section Talking Points Org  Org Id  Project  Project
                  Id  Compose Section Talking Points Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/compose/topic:
    post:
      tags:
      - compose
      summary: Topic
      operationId: topic_org__org_id__project__project_id__compose_topic_post
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_compose
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComposeTopicPoint'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Topic Org  Org Id  Project  Project Id  Compose
                  Topic Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/task:
    post:
      tags:
      - tasks
      summary: Create a Task
      description: Tasks are the core of the platform and define the prompts and models
        used to generate responses.
      operationId: createTask
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_task
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the organization.
          title: Org Id
        description: The unique identifier of the organization.
        example: 123e4567-e89b-12d3-a456-426614174000
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the project.
          title: Project Id
        description: The unique identifier of the project.
        example: 123e4567-e89b-12d3-a456-426614174001
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Create Task Org  Org Id  Project  Project Id  Task
                  Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-fern-availability: generally-available
      x-fern-audiences:
      - free
      - paid
    get:
      tags:
      - tasks
      summary: List all Tasks
      operationId: getAllTasks
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_task
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the organization.
          title: Org Id
        description: The unique identifier of the organization.
        example: 123e4567-e89b-12d3-a456-426614174000
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the project.
          title: Project Id
        description: The unique identifier of the project.
        example: 123e4567-e89b-12d3-a456-426614174001
      - name: name
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter tasks by name. Supports partial matches.
          title: Name
        description: Filter tasks by name. Supports partial matches.
      - name: page_limit
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            maximum: 100
            minimum: 1
          - type: 'null'
          description: The maximum number of items to return per page. Defaults to
            `100` if not specified.
          default: 100
          title: Page Limit
        description: The maximum number of items to return per page. Defaults to `100`
          if not specified.
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          description: A cursor for pagination. Use the `next_cursor` value from the
            previous response to get the next page of results.
          title: Cursor
        description: A cursor for pagination. Use the `next_cursor` value from the
          previous response to get the next page of results.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_Task_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Tasks Org  Org Id  Project  Project Id  Task
                  Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-fern-availability: generally-available
      x-fern-audiences:
      - free
      - paid
  /org/{org_id}/project/{project_id}/task/{task_id}:
    post:
      tags:
      - tasks
      summary: Update a Task
      operationId: editTask
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      - HTTPBearer:
        - task:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the organization.
          title: Org Id
        description: The unique identifier of the organization.
        example: 123e4567-e89b-12d3-a456-426614174000
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the project.
          title: Project Id
        description: The unique identifier of the project.
        example: 123e4567-e89b-12d3-a456-426614174001
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The specific Task to reference.
          title: Task Id
        description: The specific Task to reference.
        example: 01909843-3596-da54-4756-28af46917e74
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Update Task Org  Org Id  Project  Project Id  Task  Task
                  Id  Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-fern-availability: generally-available
      x-fern-audiences:
      - free
      - paid
    get:
      tags:
      - tasks
      summary: Fetch a Task
      operationId: getTask
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - task:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the organization.
          title: Org Id
        description: The unique identifier of the organization.
        example: 123e4567-e89b-12d3-a456-426614174000
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the project.
          title: Project Id
        description: The unique identifier of the project.
        example: 123e4567-e89b-12d3-a456-426614174001
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The specific Task to reference.
          title: Task Id
        description: The specific Task to reference.
        example: 01909843-3596-da54-4756-28af46917e74
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Task Org  Org Id  Project  Project Id  Task  Task
                  Id  Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-fern-availability: generally-available
      x-fern-audiences:
      - free
      - paid
  /org/{org_id}/project/{project_id}/task/{task_id}/run:
    post:
      tags:
      - tasks
      summary: Run a Task
      description: Run a specified Task against provided text and/or image input.
        The response is controlled by the `output_format` of the Task. Note that a
        Task must be `enabled` to be run.
      operationId: runTask
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - task:run_task
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the organization.
          title: Org Id
        description: The unique identifier of the organization.
        example: 123e4567-e89b-12d3-a456-426614174000
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the project.
          title: Project Id
        description: The unique identifier of the project.
        example: 123e4567-e89b-12d3-a456-426614174001
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The specific Task to reference.
          title: Task Id
        description: The specific Task to reference.
        example: 01909843-3596-da54-4756-28af46917e74
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_Task_Run_Parameters'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRun'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Task Run Parameters
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-fern-availability: generally-available
      x-fern-audiences:
      - free
      - paid
      x-fern-examples:
      - path-parameters:
          org_id: org_id
          project_id: project_id
          task_id: task_id
        request:
          task_input:
            description: brown hair, blue sweater
        response:
          body:
            task_revision_id: 0190a234-8dc6-6d08-aea9-928fcecad8f1
            response:
              hint: The image is not suitable for authentication and onboarding checks.
                Please ensure the photo is a clear, passport-style image with a plain
                background, good lighting, and no accessories like sunglasses.
              match: false
              rationale: The image does not meet the requirements for a passport-style
                photo. The person is wearing sunglasses, and the background is not
                plain.
              compliance: false
            run_data:
              audit:
                ip: 10.152.3.59
                ua: Vercel Edge Functions
              submitted:
                description: brown hair, blue sweater
            id: 0190a234-cb74-6342-dec6-4be8f73f0c9f
            created: '2024-07-11T14:31:21.989219'
    get:
      tags:
      - tasks
      summary: Fetch Task Runs
      description: Individual Task Runs provide an audit trail for all Task executions.
      operationId: getTaskRuns
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      - HTTPBearer:
        - task:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the organization.
          title: Org Id
        description: The unique identifier of the organization.
        example: 123e4567-e89b-12d3-a456-426614174000
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the project.
          title: Project Id
        description: The unique identifier of the project.
        example: 123e4567-e89b-12d3-a456-426614174001
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The specific Task to reference.
          title: Task Id
        description: The specific Task to reference.
        example: 01909843-3596-da54-4756-28af46917e74
      - name: page_limit
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            maximum: 100
            minimum: 1
          - type: 'null'
          description: The maximum number of items to return per page. Defaults to
            `100` if not specified.
          default: 100
          title: Page Limit
        description: The maximum number of items to return per page. Defaults to `100`
          if not specified.
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          description: A cursor for pagination. Use the `next_cursor` value from the
            previous response to get the next page of results.
          title: Cursor
        description: A cursor for pagination. Use the `next_cursor` value from the
          previous response to get the next page of results.
      - name: task_revision_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          description: The specific Task Revision to reference.
          title: Task Revision Id
        description: The specific Task Revision to reference.
        example: 0190a234-8dc6-6d08-aea9-928fcecad8f1
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_TaskRun_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Task Runs Org  Org Id  Project  Project Id  Task  Task
                  Id  Run Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-fern-availability: generally-available
      x-fern-audiences:
      - free
      - paid
  /org/{org_id}/project/{project_id}/task/{task_id}/iam/members:
    get:
      tags:
      - tasks
      summary: IAM - List Task Members
      description: Lists all members that have been granted direct access to the task.
      operationId: task_iam_list_members
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - task:view
        - task:view_members
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Task Id
      - name: type
        in: query
        required: false
        schema:
          anyOf:
          - enum:
            - user
            - organization
            - project
            type: string
          - type: 'null'
          title: Type
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_IAMMember_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Task Iam List Members
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/task/{task_id}/iam/members/{member}:
    get:
      tags:
      - tasks
      summary: IAM - Lookup Task Member
      description: Retrieve a specific member that has been granted direct access
        to the task.
      operationId: task_get_member
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - task:view
        - task:view_members
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Task Id
      - name: member
        in: path
        required: true
        schema:
          type: string
          title: Member
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Task Get Member
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - tasks
      summary: IAM - Update Task Member
      description: Update the roles that a member holds on the task.
      operationId: task_iam_update_member_roles
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - task:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Task Id
      - name: member
        in: path
        required: true
        schema:
          type: string
          title: Member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskIAMMemberRoleUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMMember'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MultipleRolesNotAllowedErrorResponse'
                - $ref: '#/components/schemas/InvalidRoleErrorResponse'
                - $ref: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                - $ref: '#/components/schemas/InvalidMemberErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MULTIPLE_ROLES_NOT_ALLOWED: '#/components/schemas/MultipleRolesNotAllowedErrorResponse'
                    INVALID_ROLE: '#/components/schemas/InvalidRoleErrorResponse'
                    INVALID_SUBJECT_TYPE: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                    INVALID_MEMBER: '#/components/schemas/InvalidMemberErrorResponse'
                title: Response 400 Task Iam Update Member Roles
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Task Iam Update Member Roles
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMemberErrorResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/task/{task_id}/iam/test:
    post:
      tags:
      - tasks
      summary: IAM - Test Task Permissions
      description: Test the permissions that the caller (or another subject) holds
        on the task.
      operationId: task_iam_test_permissions
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - task:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Task Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskIAMPermissionTest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMPermissionTest'
        '400':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                - $ref: '#/components/schemas/InvalidMemberErrorResponse'
                - $ref: '#/components/schemas/InvalidRoleErrorResponse'
                - $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    INVALID_SUBJECT_TYPE: '#/components/schemas/InvalidSubjectTypeErrorResponse'
                    INVALID_MEMBER: '#/components/schemas/InvalidMemberErrorResponse'
                    INVALID_ROLE: '#/components/schemas/InvalidRoleErrorResponse'
                    MALFORMED_RESOURCE_IDENTIFIER: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
                title: Response 400 Task Iam Test Permissions
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Task Iam Test Permissions
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMemberErrorResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /org/{org_id}/project/{project_id}/task_forwarder:
    post:
      tags:
      - task forwarders
      summary: Create a Task Forwarder
      description: A Task Forwarder will receive the output of a Task and forward
        it to the specified destination. This can be used to send data to external
        systems, or to trigger other actions based on the output of a Task.
      operationId: createTaskForwarder
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_task
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the organization.
          title: Org Id
        description: The unique identifier of the organization.
        example: 123e4567-e89b-12d3-a456-426614174000
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the project.
          title: Project Id
        description: The unique identifier of the project.
        example: 123e4567-e89b-12d3-a456-426614174001
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskForwarderCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskForwarder'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Create Task Forwarder Org  Org Id  Project  Project
                  Id  Task Forwarder Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-fern-availability: generally-available
      x-fern-audiences:
      - free
      - paid
    get:
      tags:
      - task forwarders
      summary: List all Task Forwarders
      operationId: getAllTaskForwarders
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_task
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the organization.
          title: Org Id
        description: The unique identifier of the organization.
        example: 123e4567-e89b-12d3-a456-426614174000
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the project.
          title: Project Id
        description: The unique identifier of the project.
        example: 123e4567-e89b-12d3-a456-426614174001
      - name: page_limit
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            maximum: 100
            minimum: 1
          - type: 'null'
          description: The maximum number of items to return per page. Defaults to
            `100` if not specified.
          default: 100
          title: Page Limit
        description: The maximum number of items to return per page. Defaults to `100`
          if not specified.
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          description: A cursor for pagination. Use the `next_cursor` value from the
            previous response to get the next page of results.
          title: Cursor
        description: A cursor for pagination. Use the `next_cursor` value from the
          previous response to get the next page of results.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultSet_TaskForwarder_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Tasks Org  Org Id  Project  Project Id  Task
                  Forwarder Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-fern-availability: generally-available
      x-fern-audiences:
      - free
      - paid
  /org/{org_id}/project/{project_id}/task_forwarder/{task_forwarder_id}:
    post:
      tags:
      - task forwarders
      summary: Update a Task Forwarder
      operationId: updateTaskForwarder
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_task
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the organization.
          title: Org Id
        description: The unique identifier of the organization.
        example: 123e4567-e89b-12d3-a456-426614174000
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the project.
          title: Project Id
        description: The unique identifier of the project.
        example: 123e4567-e89b-12d3-a456-426614174001
      - name: task_forwarder_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The specific Task to reference.
          title: Task Forwarder Id
        description: The specific Task to reference.
        example: 01909843-3596-da54-4756-28af46917e74
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskForwarderUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskForwarder'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Update Task Org  Org Id  Project  Project Id  Task
                  Forwarder  Task Forwarder Id  Post
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-fern-availability: generally-available
      x-fern-audiences:
      - free
      - paid
    get:
      tags:
      - task forwarders
      summary: Fetch a Task Forwarder
      operationId: getTaskForwarder
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:create_task
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the organization.
          title: Org Id
        description: The unique identifier of the organization.
        example: 123e4567-e89b-12d3-a456-426614174000
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the project.
          title: Project Id
        description: The unique identifier of the project.
        example: 123e4567-e89b-12d3-a456-426614174001
      - name: task_forwarder_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The specific Task to reference.
          title: Task Forwarder Id
        description: The specific Task to reference.
        example: 01909843-3596-da54-4756-28af46917e74
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskForwarder'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Task Forwarder Org  Org Id  Project  Project
                  Id  Task Forwarder  Task Forwarder Id  Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-fern-availability: generally-available
      x-fern-audiences:
      - free
      - paid
  /org/{org_id}/project/{project_id}/task/{task_id}/run/{task_run_id}:
    get:
      tags:
      - tasks
      summary: Fetch Task Run
      description: Fetch an individual Task Run.
      operationId: getTaskRun
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      - HTTPBearer:
        - task:edit
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the organization.
          title: Org Id
        description: The unique identifier of the organization.
        example: 123e4567-e89b-12d3-a456-426614174000
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the project.
          title: Project Id
        description: The unique identifier of the project.
        example: 123e4567-e89b-12d3-a456-426614174001
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The specific Task to reference.
          title: Task Id
        description: The specific Task to reference.
        example: 01909843-3596-da54-4756-28af46917e74
      - name: task_run_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The specific Task Run to reference.
          title: Task Run Id
        description: The specific Task Run to reference.
        example: 129c78d7-2e1f-4a77-adf3-68d69b0a3c71
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRun'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 Get Task Run Org  Org Id  Project  Project Id  Task  Task
                  Id  Run  Task Run Id  Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-fern-availability: generally-available
      x-fern-audiences:
      - free
      - paid
  /org/{org_id}/project/{project_id}/model:
    get:
      tags:
      - listings
      summary: List available LLM's
      description: All supported LLM providers and models. Not all models have the
        same functionality.
      operationId: getAllModels
      security:
      - HTTPBearer: []
      - HTTPBearer:
        - project:view
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the organization.
          title: Org Id
        description: The unique identifier of the organization.
        example: 123e4567-e89b-12d3-a456-426614174000
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: The unique identifier of the project.
          title: Project Id
        description: The unique identifier of the project.
        example: 123e4567-e89b-12d3-a456-426614174001
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatModel'
                title: Response List Available Models Org  Org Id  Project  Project
                  Id  Model Get
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedResourceIdentifierErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/MissingAuthenticationErrorResponse'
                - $ref: '#/components/schemas/PermissionCheckFailedErrorResponse'
                discriminator:
                  propertyName: reason
                  mapping:
                    MISSING_AUTHENTICATION: '#/components/schemas/MissingAuthenticationErrorResponse'
                    PERMISSION_CHECK_FAILED: '#/components/schemas/PermissionCheckFailedErrorResponse'
                title: Response 403 List Available Models Org  Org Id  Project  Project
                  Id  Model Get
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-fern-availability: generally-available
      x-fern-audiences:
      - free
      - paid
      x-fern-examples:
      - path-parameters:
          org_id: 01902fbf-6de7-a1cc-fb86-b1230a7af301
          project_id: 01902fc0-a119-26bc-827d-4138841301db
        response:
          body:
          - name: gpt-3.5-turbo
            alias: GPT 3.5 Turbo
            provider: OpenAI
            description: A fast and cost-effective model for a broad range of tasks.
              16K context window with training cut off of Sep 2021.
            supports_vision: false
          - name: gpt-4
            alias: GPT 4
            provider: OpenAI
            description: The fourth-generation model with advanced reasoning and understanding.
              8k context window with training cut off of Sep 2021.
            supports_vision: false
          - name: gpt-4-turbo
            alias: GPT 4 Turbo
            provider: OpenAI
            description: The latest GPT-4 Turbo model with vision capabilities. 128K
              context window with training cut off of Dec 2023.
            supports_vision: true
          - name: gpt-4-turbo-preview
            alias: GPT 4 Turbo Preview
            provider: OpenAI
            description: GPT-4 Turbo preview model featuring improved instruction
              following, JSON mode. 128K context window with training cut off of April
              2023. Returns a maximum of 4,096 output tokens. This is a preview model.
            supports_vision: false
          - name: gpt-4o
            alias: GPT 4o
            provider: OpenAI
            description: "GPT-4o (\"o\" for \"omni\") is OpenAI's most advanced model.\
              \ It is multimodal, it has the same high intelligence as GPT-4 Turbo\
              \ but is much more efficient \u2014 it generates text 2x faster and\
              \ is 50% cheaper."
            supports_vision: true
          - name: claude-3-5-sonnet-20240620
            alias: Claude 3.5 Sonnet
            provider: Anthropic
            description: Anthropics most intelligent model. 200K context window with
              4k max output with training cut off of June 2024.
            supports_vision: true
          - name: claude-3-haiku-20240307
            alias: Claude 3 Haiku
            provider: Anthropic
            description: Anthropics fastest and most compact model. 200K context window
              with 4k max output with training cut off of Aug 2023.
            supports_vision: true
          - name: claude-3-sonnet-20240229
            alias: Claude 3 Sonnet
            provider: Anthropic
            description: Balanced model between intelligence and speed. 200K context
              window with 4k max output with training cut off of Aug 2023.
            supports_vision: true
          - name: claude-3-opus-20240229
            alias: Claude 3 Opus
            provider: Anthropic
            description: Anthropics most powerful model. 200K context window with
              4k max output with training cut off of Aug 2023.
            supports_vision: true
          - name: gemini-1.5-pro-latest
            alias: Gemini 1.5 Pro
            provider: Google
            description: Googles latest gemini model. 100K context window and 8k max
              output with training cut off in late 2023.
            supports_vision: true
          - name: gemini-pro
            alias: Gemini 1.0 Pro
            provider: Google
            description: Googles 1.0 version gemini model. 30K context window and
              2k max output with training cut off in late 2023.
            supports_vision: false
  /org/{org_id}/project/{project_id}/guardrail:
    get:
      tags:
      - listings
      summary: List Available Guardrails
      operationId: list_available_guardrails_org__org_id__project__project_id__guardrail_get
      parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
          title: Org Id
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatGuardrail'
                title: Response List Available Guardrails Org  Org Id  Project  Project
                  Id  Guardrail Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /whoami:
    get:
      summary: Whoami
      operationId: whoami_whoami_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
components:
  schemas:
    AsyncJobResult:
      properties:
        status:
          type: string
          title: Status
        task_id:
          items:
            type: string
            format: uuid
          type: array
          title: Task Id
      type: object
      required:
      - status
      - task_id
      title: AsyncJobResult
    Body_Task_Run_Parameters:
      properties:
        task_input:
          type: object
          title: Task Input
          description: The data input to the Task. This should be relevant to the
            `user_prompt` and cover any dynamic `{...}` parameters that are referenced
            in the prompt. Not required if `image_required` is set to `true` and there
            are no dynamic parameters in the prompt.
        task_file:
          type: string
          format: binary
          title: Task File
          description: Image file to be provided to the LLM, only required when `image_required`
            is set to `true`.
      type: object
      required:
      - task_input
      title: Body_Task Run Parameters
    Body_document_create_org__org_id__project__project_id__document_post:
      properties:
        data:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          title: Data
        files:
          items:
            type: string
            format: binary
          type: array
          title: Files
          default: []
      type: object
      required:
      - data
      title: Body_document_create_org__org_id__project__project_id__document_post
    Body_document_upload_org__org_id__project__project_id__document_upload_post:
      properties:
        data:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          title: Data
        files:
          items:
            type: string
            format: binary
          type: array
          title: Files
          default: []
      type: object
      required:
      - data
      title: Body_document_upload_org__org_id__project__project_id__document_upload_post
    Body_fetch_org__org_id__project__project_id__datasource_box__connection_id__fetch_post:
      properties:
        id:
          items:
            type: string
          type: array
          title: Id
      type: object
      required:
      - id
      title: Body_fetch_org__org_id__project__project_id__datasource_box__connection_id__fetch_post
    Body_fetch_org__org_id__project__project_id__datasource_confluence__connection_id__fetch_post:
      properties:
        id:
          items:
            type: string
          type: array
          title: Id
      type: object
      required:
      - id
      title: Body_fetch_org__org_id__project__project_id__datasource_confluence__connection_id__fetch_post
    Body_fetch_org__org_id__project__project_id__datasource_dropbox__connection_id__fetch_post:
      properties:
        id:
          items:
            type: string
          type: array
          title: Id
      type: object
      required:
      - id
      title: Body_fetch_org__org_id__project__project_id__datasource_dropbox__connection_id__fetch_post
    Body_fetch_org__org_id__project__project_id__datasource_gdrive__connection_id__fetch_post:
      properties:
        id:
          items:
            type: string
          type: array
          title: Id
      type: object
      required:
      - id
      title: Body_fetch_org__org_id__project__project_id__datasource_gdrive__connection_id__fetch_post
    Body_fetch_org__org_id__project__project_id__datasource_notion__connection_id__fetch_post:
      properties:
        id:
          items:
            type: string
          type: array
          title: Id
      type: object
      required:
      - id
      title: Body_fetch_org__org_id__project__project_id__datasource_notion__connection_id__fetch_post
    Body_fetch_org__org_id__project__project_id__datasource_onedrive__connection_id__fetch_post:
      properties:
        id:
          items:
            type: string
          type: array
          title: Id
      type: object
      required:
      - id
      title: Body_fetch_org__org_id__project__project_id__datasource_onedrive__connection_id__fetch_post
    Body_fetch_org__org_id__project__project_id__datasource_sharepoint__connection_id__fetch_post:
      properties:
        id:
          items:
            type: string
          type: array
          title: Id
      type: object
      required:
      - id
      title: Body_fetch_org__org_id__project__project_id__datasource_sharepoint__connection_id__fetch_post
    Body_generate_org__org_id__project__project_id__compose_generate_post:
      properties:
        compose:
          $ref: '#/components/schemas/ComposeGenerate'
        context:
          $ref: '#/components/schemas/ComposeInit'
      type: object
      required:
      - compose
      - context
      title: Body_generate_org__org_id__project__project_id__compose_generate_post
    Body_org_update_avatar_org__org_id__avatar_post:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
      - file
      title: Body_org_update_avatar_org__org_id__avatar_post
    Body_project_update_avatar_org__org_id__project__project_id__avatar_post:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
      - file
      title: Body_project_update_avatar_org__org_id__project__project_id__avatar_post
    Body_section_talking_points_org__org_id__project__project_id__compose_section_talking_points_post:
      properties:
        context:
          $ref: '#/components/schemas/ComposeInit'
        existing_content:
          $ref: '#/components/schemas/ComposeContent'
        update_instruction:
          $ref: '#/components/schemas/ComposeSectionTalkingPoint'
      type: object
      required:
      - context
      - existing_content
      - update_instruction
      title: Body_section_talking_points_org__org_id__project__project_id__compose_section_talking_points_post
    Body_update_section_org__org_id__project__project_id__compose_update_section_post:
      properties:
        context:
          $ref: '#/components/schemas/ComposeInit'
        existing_content:
          $ref: '#/components/schemas/ComposeContent'
        update_instruction:
          $ref: '#/components/schemas/ComposeSectionUpdate'
      type: object
      required:
      - context
      - existing_content
      - update_instruction
      title: Body_update_section_org__org_id__project__project_id__compose_update_section_post
    Body_user_update_avatar_user_avatar_post:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
      - file
      title: Body_user_update_avatar_user_avatar_post
    Chat:
      properties:
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        summary:
          anyOf:
          - type: string
          - type: 'null'
          title: Summary
        collection_id:
          type: string
          format: uuid
          title: Collection Id
        created:
          type: string
          format: date-time
          title: Created
        created_by_user_id:
          type: string
          format: uuid
          title: Created By User Id
        last_message:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Message
        id:
          type: string
          format: uuid
          title: Id
        documents_have_been_modified:
          type: boolean
          title: Documents Have Been Modified
          default: false
      type: object
      required:
      - collection_id
      - created
      - created_by_user_id
      - id
      title: Chat
    ChatConfig-Input:
      properties:
        llm:
          type: string
          enum:
          - gpt-4o
          - gpt-3.5-turbo
          - gpt-4
          - gpt-4-turbo
          - gpt-4-turbo-preview
          - gpt-4-1106-preview
          - claude-3-5-sonnet-20240620
          - claude-3-haiku-20240307
          - claude-3-sonnet-20240229
          - claude-3-opus-20240229
          - gemini-1.5-pro-latest
          - gemini-pro
          title: Llm
          default: gpt-3.5-turbo
        temperature:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Temperature
          default: 0.5
        knn:
          type: integer
          exclusiveMinimum: 0.0
          title: Knn
          default: 5
        chat_system_commands:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Chat System Commands
        chat_guardrails:
          anyOf:
          - $ref: '#/components/schemas/ConversationalGuardrails'
          - type: 'null'
          description: Conversational Guardrails can be defined to run against Chat
            `input` (i.e. the users query) or on Chat `output` (i.e. the LLM output)
        query_expansion:
          type: boolean
          title: Query Expansion
          description: Enable query expansion. Uses an LLM to generate multiple rephrasing
            of the original query for better broad spectrum vector retrieval
          default: false
      type: object
      title: ChatConfig
    ChatConfig-Output:
      properties:
        llm:
          type: string
          enum:
          - gpt-4o
          - gpt-3.5-turbo
          - gpt-4
          - gpt-4-turbo
          - gpt-4-turbo-preview
          - gpt-4-1106-preview
          - claude-3-5-sonnet-20240620
          - claude-3-haiku-20240307
          - claude-3-sonnet-20240229
          - claude-3-opus-20240229
          - gemini-1.5-pro-latest
          - gemini-pro
          title: Llm
          default: gpt-3.5-turbo
        temperature:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Temperature
          default: 0.5
        knn:
          type: integer
          exclusiveMinimum: 0.0
          title: Knn
          default: 5
        chat_system_commands:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Chat System Commands
        chat_guardrails:
          anyOf:
          - $ref: '#/components/schemas/ConversationalGuardrails'
          - type: 'null'
          description: Conversational Guardrails can be defined to run against Chat
            `input` (i.e. the users query) or on Chat `output` (i.e. the LLM output)
        query_expansion:
          type: boolean
          title: Query Expansion
          description: Enable query expansion. Uses an LLM to generate multiple rephrasing
            of the original query for better broad spectrum vector retrieval
          default: false
      type: object
      title: ChatConfig
    ChatCreate:
      properties:
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        summary:
          anyOf:
          - type: string
          - type: 'null'
          title: Summary
        collection_id:
          type: string
          format: uuid
          title: Collection Id
      type: object
      required:
      - collection_id
      title: ChatCreate
    ChatDocument:
      properties:
        title:
          type: string
          title: Title
        project_id:
          type: string
          format: uuid
          title: Project Id
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        source:
          anyOf:
          - type: string
            enum:
            - upload
            - gdrive
            - onedrive
            - web_scrape
            - notion
            - confluence
            - box
            - dropbox
            - sharepoint
          - type: 'null'
          title: Source
        strategy:
          type: string
          title: Strategy
        source_meta:
          anyOf:
          - type: object
          - type: 'null'
          title: Source Meta
        connection_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Connection Id
        id:
          type: string
          format: uuid
          title: Id
        chunks:
          type: integer
          title: Chunks
        original_mime:
          type: string
          title: Original Mime
        embedding_instances:
          anyOf:
          - items:
              $ref: '#/components/schemas/ChatDocumentEmbeddingInstance'
            type: array
          - type: 'null'
          title: Embedding Instances
      type: object
      required:
      - title
      - project_id
      - strategy
      - id
      - chunks
      - original_mime
      - embedding_instances
      title: ChatDocument
    ChatDocumentEmbeddingInstance:
      properties:
        config:
          anyOf:
          - type: object
          - type: 'null'
          title: Config
          default: {}
        id:
          type: string
          format: uuid
          title: Id
        chat_document_id:
          type: string
          format: uuid
          title: Chat Document Id
        is_active:
          type: boolean
          title: Is Active
      type: object
      required:
      - id
      - chat_document_id
      - is_active
      title: ChatDocumentEmbeddingInstance
    ChatDocumentEmbeddingRecord:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        document:
          type: string
          title: Document
      type: object
      required:
      - id
      - document
      title: ChatDocumentEmbeddingRecord
    ChatDocumentQueryResult:
      properties:
        chat_document_id:
          type: string
          format: uuid
          title: Chat Document Id
        text:
          type: string
          title: Text
        score:
          type: number
          title: Score
      type: object
      required:
      - chat_document_id
      - text
      - score
      title: ChatDocumentQueryResult
    ChatDocumentUpdate:
      properties:
        title:
          type: string
          title: Title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
      type: object
      required:
      - title
      title: ChatDocumentUpdate
    ChatGuardrail:
      properties:
        id:
          anyOf:
          - type: string
            enum:
            - source_validation
            const: source_validation
          - type: string
            enum:
            - prompt_policy
            - pii_policy
          title: Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        type:
          type: string
          enum:
          - input
          - output
          title: Type
      type: object
      required:
      - id
      - name
      - description
      - type
      title: ChatGuardrail
    ChatIAMMemberRoleUpdate:
      properties:
        add:
          items:
            type: string
            enum:
            - editor
            - owner
            - viewer
          type: array
          title: Add
          description: 'A list of chat roles to grant to the member.


            Roles in this list are applied to the member AFTER any removals specified
            in `remove`.


            This may be combined with `remove_all` to replace the member''s entire
            role list.'
        remove:
          items:
            type: string
            enum:
            - editor
            - owner
            - viewer
          type: array
          title: Remove
          description: A list of chat roles to revoke from the member.
        remove_all:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Remove All
          description: Removes all existing roles from the member. This may be combined
            with `add` to replace all existing roles that the member holds.
          default: false
      type: object
      title: ChatIAMMemberRoleUpdate
    ChatIAMPermissionTest:
      properties:
        permissions:
          items:
            type: string
            enum:
            - add_editor
            - add_member
            - add_owner
            - edit
            - query
            - remove_editor
            - remove_member
            - remove_owner
            - view
            - view_members
          type: array
          title: Permissions
          description: A list of permissions to test on the chat.
        member:
          anyOf:
          - type: string
          - type: 'null'
          title: Member
      type: object
      required:
      - permissions
      title: ChatIAMPermissionTest
    ChatModel:
      properties:
        name:
          type: string
          enum:
          - gpt-4o
          - gpt-3.5-turbo
          - gpt-4
          - gpt-4-turbo
          - gpt-4-turbo-preview
          - gpt-4-1106-preview
          - claude-3-5-sonnet-20240620
          - claude-3-haiku-20240307
          - claude-3-sonnet-20240229
          - claude-3-opus-20240229
          - gemini-1.5-pro-latest
          - gemini-pro
          title: Name
          description: LLM reference name.
        alias:
          type: string
          title: Alias
          description: Human readable name for the LLM.
        provider:
          type: string
          title: Provider
          description: The company that produces the LLM.
        description:
          type: string
          title: Description
          description: Key information about the LLM.
        supports_vision:
          type: boolean
          title: Supports Vision
          description: Whether the LLM is able to see and interpret images.
          default: false
      type: object
      required:
      - name
      - alias
      - provider
      - description
      - supports_vision
      title: ChatModel
    ChatUpdate:
      properties:
        title:
          type: string
          title: Title
      type: object
      required:
      - title
      title: ChatUpdate
    Collection:
      properties:
        title:
          type: string
          title: Title
        project_id:
          type: string
          format: uuid
          title: Project Id
        id:
          type: string
          format: uuid
          title: Id
        summary:
          anyOf:
          - type: string
          - type: 'null'
          title: Summary
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
        embedding_instances:
          items:
            $ref: '#/components/schemas/ChatDocumentEmbeddingInstance'
          type: array
          title: Embedding Instances
          default: []
      type: object
      required:
      - title
      - project_id
      - id
      - created
      - modified
      title: Collection
    CollectionChatShow:
      type: string
      enum:
      - all
      - viewable
      title: CollectionChatShow
    CollectionCreate:
      properties:
        title:
          type: string
          title: Title
        document_embedding_instance_ids:
          items:
            type: string
            format: uuid
          type: array
          title: Document Embedding Instance Ids
          default: []
      type: object
      required:
      - title
      title: CollectionCreate
      description: '''Meta schema to enable passing non-standard

        properties on POST for create'
    CollectionEmbeddingUpdate:
      properties:
        embedding_instance_ids:
          items:
            type: string
            format: uuid
          type: array
          title: Embedding Instance Ids
      type: object
      required:
      - embedding_instance_ids
      title: CollectionEmbeddingUpdate
    CollectionIAMMemberRoleUpdate:
      properties:
        add:
          items:
            type: string
            enum:
            - editor
            - owner
            - viewer
          type: array
          title: Add
          description: 'A list of collection roles to grant to the member.


            Roles in this list are applied to the member AFTER any removals specified
            in `remove`.


            This may be combined with `remove_all` to replace the member''s entire
            role list.'
        remove:
          items:
            type: string
            enum:
            - editor
            - owner
            - viewer
          type: array
          title: Remove
          description: A list of collection roles to revoke from the member.
        remove_all:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Remove All
          description: Removes all existing roles from the member. This may be combined
            with `add` to replace all existing roles that the member holds.
          default: false
      type: object
      title: CollectionIAMMemberRoleUpdate
    CollectionIAMPermissionTest:
      properties:
        permissions:
          items:
            type: string
            enum:
            - add_document
            - add_editor
            - add_member
            - add_owner
            - create_chat
            - edit
            - list_chats
            - query
            - remove_document
            - remove_editor
            - remove_member
            - remove_owner
            - view
            - view_members
          type: array
          title: Permissions
          description: A list of permissions to test on the collection.
        member:
          anyOf:
          - type: string
          - type: 'null'
          title: Member
      type: object
      required:
      - permissions
      title: CollectionIAMPermissionTest
    CollectionQuery:
      properties:
        query:
          type: string
          title: Query
      type: object
      required:
      - query
      title: CollectionQuery
      description: Meta schema to define required schema parameter
    CollectionStatsResponse:
      properties:
        documents_by_source:
          items:
            $ref: '#/components/schemas/SourceRow'
          type: array
          title: Documents By Source
        number_of_chats:
          type: integer
          title: Number Of Chats
      type: object
      required:
      - documents_by_source
      - number_of_chats
      title: CollectionStatsResponse
    CollectionUpdate:
      properties:
        title:
          type: string
          title: Title
      type: object
      required:
      - title
      title: CollectionUpdate
    ComposeContent:
      properties:
        existing_content:
          type: string
          title: Existing Content
      type: object
      required:
      - existing_content
      title: ComposeContent
    ComposeGenerate:
      properties:
        structure:
          items:
            $ref: '#/components/schemas/InitialComposeSection'
          type: array
          title: Structure
      type: object
      required:
      - structure
      title: ComposeGenerate
    ComposeInit:
      properties:
        title:
          type: string
          title: Title
        topic:
          anyOf:
          - type: string
          - type: 'null'
          title: Topic
        purpose:
          anyOf:
          - type: string
          - type: 'null'
          title: Purpose
        audience:
          anyOf:
          - type: string
          - type: 'null'
          title: Audience
        num_sections:
          anyOf:
          - type: integer
          - type: 'null'
          title: Num Sections
        word_count:
          anyOf:
          - type: integer
          - type: 'null'
          title: Word Count
        voice:
          anyOf:
          - type: string
          - type: 'null'
          title: Voice
        domain:
          anyOf:
          - type: string
          - type: 'null'
          title: Domain
        tone:
          anyOf:
          - type: string
          - type: 'null'
          title: Tone
        favourable_words:
          anyOf:
          - type: string
          - type: 'null'
          title: Favourable Words
        deny_words:
          anyOf:
          - type: string
          - type: 'null'
          title: Deny Words
        keywords:
          anyOf:
          - type: string
          - type: 'null'
          title: Keywords
        cta:
          anyOf:
          - type: string
          - type: 'null'
          title: Cta
        content:
          anyOf:
          - type: string
          - type: 'null'
          title: Content
        language:
          type: string
          enum:
          - english_british
          - english_american
          - french
          - chinese
          - spanish
          - korean
          - italian
          - german
          title: Language
          default: english_british
      type: object
      required:
      - title
      title: ComposeInit
    ComposeSectionTalkingPoint:
      properties:
        section_heading:
          type: string
          title: Section Heading
      type: object
      required:
      - section_heading
      title: ComposeSectionTalkingPoint
    ComposeSectionUpdate:
      properties:
        position:
          type: integer
          title: Position
        section_title:
          type: string
          title: Section Title
        instructions:
          items:
            type: string
          type: array
          title: Instructions
        text:
          anyOf:
          - type: string
          - type: 'null'
          title: Text
      type: object
      required:
      - position
      - section_title
      - instructions
      title: ComposeSectionUpdate
    ComposeTopicPoint:
      properties:
        category:
          type: string
          title: Category
          default: blog
        title:
          type: string
          title: Title
      type: object
      required:
      - title
      title: ComposeTopicPoint
    ConversationalGuardrails:
      properties:
        input:
          items:
            $ref: '#/components/schemas/InputConversationalGuardrailDefinition'
          type: array
          title: Input
          description: List of valid Input Conversational Guardrails to enable
          default: []
        output:
          items:
            $ref: '#/components/schemas/OutputConversationalGuardrailDefinition'
          type: array
          title: Output
          description: List of valid Output Conversational Guardrails to enable
          default: []
          examples:
          - '["prompt_policy"]'
      type: object
      title: ConversationalGuardrails
    Datasource:
      properties:
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
      - name
      - id
      title: Datasource
    DatasourceConfiguration:
      properties:
        name:
          type: string
          title: Name
        private:
          type: boolean
          title: Private
        root_folder_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Root Folder Id
      type: object
      required:
      - name
      - private
      - root_folder_id
      title: DatasourceConfiguration
    DatasourceConnection:
      properties:
        private:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Private
        project_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Project Id
        datasource_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Datasource Id
        config:
          type: object
          title: Config
          default: {}
        token:
          type: string
          title: Token
          default: ''
        created_by:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Created By
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
      - id
      title: DatasourceConnection
    DatasourceConnectionPublic:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        private:
          type: boolean
          title: Private
        project_id:
          type: string
          format: uuid
          title: Project Id
        datasource_id:
          type: string
          format: uuid
          title: Datasource Id
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
        config:
          type: object
          title: Config
          default: {}
        datasource:
          $ref: '#/components/schemas/Datasource'
      type: object
      required:
      - id
      - name
      - private
      - project_id
      - datasource_id
      - created
      - modified
      - datasource
      title: DatasourceConnectionPublic
    DatasourceSyncRun:
      properties:
        task_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Task Id
        status:
          type: string
          enum:
          - pending
          - started
          - success
          - failure
          - retry
          - progress
          title: Status
          default: pending
        run_output:
          anyOf:
          - type: object
          - type: 'null'
          title: Run Output
          default: {}
        id:
          type: string
          format: uuid
          title: Id
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
        datasource_connection:
          anyOf:
          - $ref: '#/components/schemas/DatasourceConnection'
          - type: 'null'
      type: object
      required:
      - id
      - created
      - modified
      title: DatasourceSyncRun
    DocumentCreateTask:
      properties:
        task_id:
          type: string
          title: Task Id
        state:
          type: string
          enum:
          - PENDING
          - STARTED
          - SUCCESS
          - FAILURE
          - RETRY
          - PROGRESS
          title: State
        info:
          anyOf:
          - type: object
          - type: 'null'
          title: Info
      type: object
      required:
      - task_id
      - state
      title: DocumentCreateTask
    DocumentIAMMemberRoleUpdate:
      properties:
        add:
          items:
            type: string
            enum:
            - editor
            - owner
            - viewer
          type: array
          title: Add
          description: 'A list of document roles to grant to the member.


            Roles in this list are applied to the member AFTER any removals specified
            in `remove`.


            This may be combined with `remove_all` to replace the member''s entire
            role list.'
        remove:
          items:
            type: string
            enum:
            - editor
            - owner
            - viewer
          type: array
          title: Remove
          description: A list of document roles to revoke from the member.
        remove_all:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Remove All
          description: Removes all existing roles from the member. This may be combined
            with `add` to replace all existing roles that the member holds.
          default: false
      type: object
      title: DocumentIAMMemberRoleUpdate
    DocumentIAMPermissionTest:
      properties:
        permissions:
          items:
            type: string
            enum:
            - add_editor
            - add_member
            - add_owner
            - edit
            - query
            - remove_editor
            - remove_member
            - remove_owner
            - view
            - view_members
          type: array
          title: Permissions
          description: A list of permissions to test on the document.
        member:
          anyOf:
          - type: string
          - type: 'null'
          title: Member
      type: object
      required:
      - permissions
      title: DocumentIAMPermissionTest
    DocumentStatusResponse:
      properties:
        group_id:
          type: string
          title: Group Id
        task_count:
          type: integer
          title: Task Count
        tasks:
          items:
            $ref: '#/components/schemas/DocumentCreateTask'
          type: array
          title: Tasks
      type: object
      required:
      - group_id
      - task_count
      - tasks
      title: DocumentStatusResponse
    EmptyErrorDetails:
      properties: {}
      type: object
      title: EmptyErrorDetails
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HydraWebhookTokenHook:
      properties:
        session:
          $ref: '#/components/schemas/HydraWebhookTokenHookSession'
      type: object
      required:
      - session
      title: HydraWebhookTokenHook
    HydraWebhookTokenHookSession:
      properties:
        client_id:
          type: string
          title: Client Id
        id_token:
          $ref: '#/components/schemas/HydraWebhookTokenHookSessionIDTokenClaims'
      type: object
      required:
      - client_id
      - id_token
      title: HydraWebhookTokenHookSession
    HydraWebhookTokenHookSessionIDTokenClaims:
      properties:
        id_token_claims:
          type: object
          title: Id Token Claims
      type: object
      required:
      - id_token_claims
      title: HydraWebhookTokenHookSessionIDTokenClaims
    IAMMember:
      properties:
        member:
          type: string
          title: Member
          description: The member identifier string, the format of which is '<subject_type>:<subject_id>'
        roles:
          items:
            type: string
          type: array
          title: Roles
          description: 'A list of roles that the member holds on an entity.


            Some entities, such as Organizations, may contain members that exist without
            any roles.'
          default: []
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
          description: The name of the member.
        avatar_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Avatar Url
          description: If avatar of the member, if it is supported by their subject
            type.
        total_subjects:
          type: integer
          title: Total Subjects
          description: The total number of subjects that the member represents, which
            may be a value other than `1` if the member is not a User.
          default: 1
      type: object
      required:
      - member
      title: IAMMember
    IAMObjectErrorDetails:
      properties:
        type:
          type: string
          title: Type
        id:
          anyOf:
          - type: string
          - type: 'null'
          title: Id
      type: object
      required:
      - type
      title: IAMObjectErrorDetails
    IAMPermissionTest:
      properties:
        permissions:
          items:
            type: string
          type: array
          title: Permissions
        member:
          anyOf:
          - type: string
          - type: 'null'
          title: Member
      type: object
      required:
      - permissions
      title: IAMPermissionTest
    InitialComposeSection:
      properties:
        position:
          type: integer
          title: Position
        title:
          type: string
          title: Title
        ideas:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Ideas
      type: object
      required:
      - position
      - title
      title: InitialComposeSection
    InputConversationalGuardrailDefinition:
      properties:
        name:
          type: string
          enum:
          - prompt_policy
          - pii_policy
          title: Name
      type: object
      required:
      - name
      title: InputConversationalGuardrailDefinition
    InvalidMemberErrorDetails:
      properties:
        resource:
          anyOf:
          - $ref: '#/components/schemas/IAMObjectErrorDetails'
          - type: 'null'
        subject:
          anyOf:
          - $ref: '#/components/schemas/IAMObjectErrorDetails'
          - type: 'null'
      type: object
      title: InvalidMemberErrorDetails
    InvalidMemberErrorResponse:
      properties:
        message:
          type: string
          title: Message
          description: Human readable representation of the error
        reason:
          type: string
          enum:
          - INVALID_MEMBER
          const: INVALID_MEMBER
          title: Reason
          description: The machine-readable error reason.
        invalidMemberError:
          allOf:
          - $ref: '#/components/schemas/InvalidMemberErrorDetails'
          description: Metadata detailing more information about the error.
      type: object
      required:
      - message
      - reason
      - invalidMemberError
      title: InvalidMemberErrorResponse
    InvalidRoleErrorDetails:
      properties:
        resource:
          anyOf:
          - $ref: '#/components/schemas/IAMObjectErrorDetails'
          - type: 'null'
        role:
          type: string
          title: Role
      type: object
      required:
      - role
      title: InvalidRoleErrorDetails
    InvalidRoleErrorResponse:
      properties:
        message:
          type: string
          title: Message
          description: Human readable representation of the error
        reason:
          type: string
          enum:
          - INVALID_ROLE
          const: INVALID_ROLE
          title: Reason
          description: The machine-readable error reason.
        invalidRoleError:
          allOf:
          - $ref: '#/components/schemas/InvalidRoleErrorDetails'
          description: Metadata detailing more information about the error.
      type: object
      required:
      - message
      - reason
      - invalidRoleError
      title: InvalidRoleErrorResponse
    InvalidSubjectTypeErrorDetails:
      properties:
        subject:
          anyOf:
          - $ref: '#/components/schemas/IAMObjectErrorDetails'
          - type: 'null'
      type: object
      title: InvalidSubjectTypeErrorDetails
    InvalidSubjectTypeErrorResponse:
      properties:
        message:
          type: string
          title: Message
          description: Human readable representation of the error
        reason:
          type: string
          enum:
          - INVALID_SUBJECT_TYPE
          const: INVALID_SUBJECT_TYPE
          title: Reason
          description: The machine-readable error reason.
        invalidSubjectTypeError:
          allOf:
          - $ref: '#/components/schemas/InvalidSubjectTypeErrorDetails'
          description: Metadata detailing more information about the error.
      type: object
      required:
      - message
      - reason
      - invalidSubjectTypeError
      title: InvalidSubjectTypeErrorResponse
    KratosIdentity:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        traits:
          anyOf:
          - $ref: '#/components/schemas/KratosIdentityTraits'
          - type: 'null'
      additionalProperties: true
      type: object
      required:
      - id
      - traits
      title: KratosIdentity
    KratosIdentityTraits:
      properties:
        email:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Email
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        avatar_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Avatar Url
        project_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Project Id
        org_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Org Id
        sso_email_verified:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Sso Email Verified
      additionalProperties: true
      type: object
      title: KratosIdentityTraits
    KratosWebhook:
      properties:
        identity_id:
          type: string
          format: uuid
          title: Identity Id
        email:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Email
        bio:
          anyOf:
          - type: string
          - type: 'null'
          title: Bio
        flow_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Flow Id
        flow_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Flow Type
        identity:
          anyOf:
          - $ref: '#/components/schemas/KratosIdentity'
          - type: 'null'
        ctx:
          anyOf:
          - type: object
          - type: 'null'
          title: Ctx
      type: object
      required:
      - identity_id
      title: KratosWebhook
    KratosWebhookDetailedMessage:
      properties:
        id:
          type: integer
          title: Id
        text:
          type: string
          title: Text
        type:
          type: string
          enum:
          - info
          - error
          - success
          - validation
          title: Type
        context:
          anyOf:
          - {}
          - type: 'null'
          title: Context
      type: object
      required:
      - id
      - text
      - type
      title: KratosWebhookDetailedMessage
      description: 'Sourced from detailedMessage in:

        https://github.com/ory/kratos/blob/master/selfservice/hook/web_hook.go'
    KratosWebhookErrorMessage:
      properties:
        instance_ptr:
          type: string
          title: Instance Ptr
        messages:
          items:
            $ref: '#/components/schemas/KratosWebhookDetailedMessage'
          type: array
          title: Messages
          default: []
      type: object
      required:
      - instance_ptr
      title: KratosWebhookErrorMessage
      description: 'Sourced from errorMessage in:

        https://github.com/ory/kratos/blob/master/selfservice/hook/web_hook.go'
    KratosWebhookResponse:
      properties:
        messages:
          anyOf:
          - items:
              $ref: '#/components/schemas/KratosWebhookErrorMessage'
            type: array
          - type: 'null'
          title: Messages
        identity:
          anyOf:
          - type: object
          - $ref: '#/components/schemas/KratosIdentity'
          - type: 'null'
          title: Identity
      type: object
      title: KratosWebhookResponse
      description: 'Sourced from rawHookResponse in:

        https://github.com/ory/kratos/blob/master/selfservice/hook/web_hook.go'
    MalformedResourceIdentifierErrorDetails:
      properties:
        field:
          type: string
          title: Field
        value:
          title: Value
        expected_format:
          type: string
          title: Expected Format
      type: object
      required:
      - field
      - value
      - expected_format
      title: MalformedResourceIdentifierErrorDetails
    MalformedResourceIdentifierErrorResponse:
      properties:
        message:
          type: string
          title: Message
          description: Human readable representation of the error
        reason:
          type: string
          enum:
          - MALFORMED_RESOURCE_IDENTIFIER
          const: MALFORMED_RESOURCE_IDENTIFIER
          title: Reason
          description: The machine-readable error reason.
        malformedResourceIdentifierError:
          allOf:
          - $ref: '#/components/schemas/MalformedResourceIdentifierErrorDetails'
          description: Metadata detailing more information about the error.
      type: object
      required:
      - message
      - reason
      - malformedResourceIdentifierError
      title: MalformedResourceIdentifierErrorResponse
    MissingAuthenticationErrorResponse:
      properties:
        message:
          type: string
          title: Message
          description: Human readable representation of the error
        reason:
          type: string
          enum:
          - MISSING_AUTHENTICATION
          const: MISSING_AUTHENTICATION
          title: Reason
          description: The machine-readable error reason.
        missingAuthenticationError:
          allOf:
          - $ref: '#/components/schemas/EmptyErrorDetails'
          description: Metadata detailing more information about the error.
      type: object
      required:
      - message
      - reason
      - missingAuthenticationError
      title: MissingAuthenticationErrorResponse
    MultipleRolesNotAllowedErrorDetails:
      properties:
        resource:
          anyOf:
          - $ref: '#/components/schemas/IAMObjectErrorDetails'
          - type: 'null'
        roles:
          items:
            type: string
          type: array
          title: Roles
      type: object
      required:
      - roles
      title: MultipleRolesNotAllowedErrorDetails
    MultipleRolesNotAllowedErrorResponse:
      properties:
        message:
          type: string
          title: Message
          description: Human readable representation of the error
        reason:
          type: string
          enum:
          - MULTIPLE_ROLES_NOT_ALLOWED
          const: MULTIPLE_ROLES_NOT_ALLOWED
          title: Reason
          description: The machine-readable error reason.
        multipleRolesNotAllowedError:
          allOf:
          - $ref: '#/components/schemas/MultipleRolesNotAllowedErrorDetails'
          description: Metadata detailing more information about the error.
      type: object
      required:
      - message
      - reason
      - multipleRolesNotAllowedError
      title: MultipleRolesNotAllowedErrorResponse
    OAuthClientCreate:
      properties:
        name:
          anyOf:
          - type: string
            maxLength: 255
            minLength: 1
          - type: 'null'
          title: Name
        profile:
          allOf:
          - $ref: '#/components/schemas/OAuthClientProfile'
          default: user_defined
        redirect_uris:
          anyOf:
          - items:
              type: string
            type: array
            minItems: 1
          - type: 'null'
          title: Redirect Uris
      type: object
      required:
      - name
      title: OAuthClientCreate
    OAuthClientCreateResponse:
      properties:
        name:
          type: string
          title: Name
        redirect_uris:
          items:
            type: string
          type: array
          title: Redirect Uris
        client_id:
          type: string
          format: uuid
          title: Client Id
        client_secret:
          type: string
          title: Client Secret
        scope:
          type: string
          title: Scope
          default: ''
      type: object
      required:
      - name
      - redirect_uris
      - client_id
      - client_secret
      title: OAuthClientCreateResponse
    OAuthClientProfile:
      type: string
      enum:
      - rightbrain_docs
      - rightbrain_tasks
      - user_defined
      - zendesk
      title: OAuthClientProfile
    Object:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        synced:
          type: boolean
          title: Synced
          default: false
        size:
          anyOf:
          - type: string
          - type: 'null'
          title: Size
        mimeType:
          anyOf:
          - type: string
          - type: 'null'
          title: Mimetype
          default: text/plain
        createdTime:
          anyOf:
          - type: string
          - type: 'null'
          title: Createdtime
        modifiedTime:
          anyOf:
          - type: string
          - type: 'null'
          title: Modifiedtime
        type:
          anyOf:
          - $ref: '#/components/schemas/ObjectType'
          - type: 'null'
        tags:
          items:
            $ref: '#/components/schemas/ObjectTags'
          type: array
          title: Tags
          default: []
      type: object
      required:
      - id
      - name
      - type
      title: Object
    ObjectList:
      items:
        $ref: '#/components/schemas/Object'
      type: array
      title: ObjectList
    ObjectTags:
      type: string
      enum:
      - no_size
      - site
      title: ObjectTags
    ObjectType:
      type: string
      enum:
      - file
      - dir
      title: ObjectType
    Org:
      properties:
        name:
          type: string
          title: Name
        contact_email:
          type: string
          format: email
          title: Contact Email
        avatar_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Avatar Url
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
      - name
      - contact_email
      - id
      title: Org
    OrgCreate:
      properties:
        name:
          type: string
          title: Name
        contact_email:
          type: string
          format: email
          title: Contact Email
      type: object
      required:
      - name
      - contact_email
      title: OrgCreate
    OrgInviteBase:
      properties:
        email_address:
          type: string
          format: email
          title: Email Address
        roles:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Roles
      type: object
      required:
      - email_address
      title: OrgInviteBase
    OrgInviteShow:
      type: string
      enum:
      - all
      - pending
      - accepted
      title: OrgInviteShow
    OrgMembership:
      type: string
      enum:
      - active
      - joinable
      - joinable_by_domain
      - joinable_by_invite
      title: OrgMembership
    OrgUpdate:
      properties:
        contact_email:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Contact Email
      type: object
      title: OrgUpdate
    OrganizationDomain:
      properties:
        domain:
          type: string
          title: Domain
        id:
          type: string
          format: uuid
          title: Id
        status:
          type: string
          enum:
          - unverified
          - verified
          title: Status
      type: object
      required:
      - domain
      - id
      - status
      title: OrganizationDomain
    OrganizationDomainCreate:
      properties:
        domain:
          type: string
          title: Domain
      type: object
      required:
      - domain
      title: OrganizationDomainCreate
    OrganizationIAMMemberRoleUpdate:
      properties:
        add:
          items:
            type: string
            enum:
            - editor
            - owner
            - viewer
          type: array
          title: Add
          description: 'A list of organization roles to grant to the member.


            Roles in this list are applied to the member AFTER any removals specified
            in `remove`.


            This may be combined with `remove_all` to replace the member''s entire
            role list.'
        remove:
          items:
            type: string
            enum:
            - editor
            - owner
            - viewer
          type: array
          title: Remove
          description: A list of organization roles to revoke from the member.
        remove_all:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Remove All
          description: Removes all existing roles from the member. This may be combined
            with `add` to replace all existing roles that the member holds.
          default: false
      type: object
      title: OrganizationIAMMemberRoleUpdate
    OrganizationIAMPermissionTest:
      properties:
        permissions:
          items:
            type: string
            enum:
            - add_editor
            - add_member
            - add_owner
            - create_project
            - edit
            - remove_editor
            - remove_member
            - remove_owner
            - view
            - view_members
          type: array
          title: Permissions
          description: A list of permissions to test on the organization.
        member:
          anyOf:
          - type: string
          - type: 'null'
          title: Member
      type: object
      required:
      - permissions
      title: OrganizationIAMPermissionTest
    OrganizationInvite:
      properties:
        email_address:
          type: string
          format: email
          title: Email Address
        roles:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Roles
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
      - email_address
      - id
      title: OrganizationInvite
    OrganizationInviteAlreadyExistsErrorDetails:
      properties:
        organization_id:
          type: string
          title: Organization Id
        email_address:
          type: string
          title: Email Address
      type: object
      required:
      - organization_id
      - email_address
      title: OrganizationInviteAlreadyExistsErrorDetails
    OrganizationInviteAlreadyExistsErrorResponse:
      properties:
        message:
          type: string
          title: Message
          description: Human readable representation of the error
        reason:
          type: string
          enum:
          - ORGANIZATION_INVITE_ALREADY_EXISTS
          const: ORGANIZATION_INVITE_ALREADY_EXISTS
          title: Reason
          description: The machine-readable error reason.
        organizationInviteAlreadyExistsError:
          allOf:
          - $ref: '#/components/schemas/OrganizationInviteAlreadyExistsErrorDetails'
          description: Metadata detailing more information about the error.
      type: object
      required:
      - message
      - reason
      - organizationInviteAlreadyExistsError
      title: OrganizationInviteAlreadyExistsErrorResponse
    OrganizationMemberAlreadyExistsErrorDetails:
      properties:
        organization_id:
          type: string
          title: Organization Id
        member_id:
          type: string
          title: Member Id
      type: object
      required:
      - organization_id
      - member_id
      title: OrganizationMemberAlreadyExistsErrorDetails
    OrganizationMemberAlreadyExistsErrorResponse:
      properties:
        message:
          type: string
          title: Message
          description: Human readable representation of the error
        reason:
          type: string
          enum:
          - ORGANIZATION_MEMBER_ALREADY_EXISTS
          const: ORGANIZATION_MEMBER_ALREADY_EXISTS
          title: Reason
          description: The machine-readable error reason.
        organizationMemberAlreadyExistsError:
          allOf:
          - $ref: '#/components/schemas/OrganizationMemberAlreadyExistsErrorDetails'
          description: Metadata detailing more information about the error.
      type: object
      required:
      - message
      - reason
      - organizationMemberAlreadyExistsError
      title: OrganizationMemberAlreadyExistsErrorResponse
    OutputConversationalGuardrailDefinition:
      properties:
        name:
          type: string
          enum:
          - source_validation
          const: source_validation
          title: Name
      type: object
      required:
      - name
      title: OutputConversationalGuardrailDefinition
    PaginatedResultSet_ChatDocumentEmbeddingRecord_:
      properties:
        pagination:
          anyOf:
          - $ref: '#/components/schemas/PaginationDetails'
          - type: 'null'
          description: Contains pagination information for the result set.
        results:
          items:
            $ref: '#/components/schemas/ChatDocumentEmbeddingRecord'
          type: array
          title: Results
          description: The list of items returned for the current page.
      type: object
      required:
      - results
      title: PaginatedResultSet[ChatDocumentEmbeddingRecord]
      example:
        pagination:
          has_next: true
          next_cursor: 019097c5-5560-05b5-4a48-5197a269683b
          page_limit: 100
    PaginatedResultSet_ChatDocument_:
      properties:
        pagination:
          anyOf:
          - $ref: '#/components/schemas/PaginationDetails'
          - type: 'null'
          description: Contains pagination information for the result set.
        results:
          items:
            $ref: '#/components/schemas/ChatDocument'
          type: array
          title: Results
          description: The list of items returned for the current page.
      type: object
      required:
      - results
      title: PaginatedResultSet[ChatDocument]
      example:
        pagination:
          has_next: true
          next_cursor: 019097c5-5560-05b5-4a48-5197a269683b
          page_limit: 100
    PaginatedResultSet_Chat_:
      properties:
        pagination:
          anyOf:
          - $ref: '#/components/schemas/PaginationDetails'
          - type: 'null'
          description: Contains pagination information for the result set.
        results:
          items:
            $ref: '#/components/schemas/Chat'
          type: array
          title: Results
          description: The list of items returned for the current page.
      type: object
      required:
      - results
      title: PaginatedResultSet[Chat]
      example:
        pagination:
          has_next: true
          next_cursor: 019097c5-5560-05b5-4a48-5197a269683b
          page_limit: 100
    PaginatedResultSet_Collection_:
      properties:
        pagination:
          anyOf:
          - $ref: '#/components/schemas/PaginationDetails'
          - type: 'null'
          description: Contains pagination information for the result set.
        results:
          items:
            $ref: '#/components/schemas/Collection'
          type: array
          title: Results
          description: The list of items returned for the current page.
      type: object
      required:
      - results
      title: PaginatedResultSet[Collection]
      example:
        pagination:
          has_next: true
          next_cursor: 019097c5-5560-05b5-4a48-5197a269683b
          page_limit: 100
    PaginatedResultSet_DatasourceSyncRun_:
      properties:
        pagination:
          anyOf:
          - $ref: '#/components/schemas/PaginationDetails'
          - type: 'null'
          description: Contains pagination information for the result set.
        results:
          items:
            $ref: '#/components/schemas/DatasourceSyncRun'
          type: array
          title: Results
          description: The list of items returned for the current page.
      type: object
      required:
      - results
      title: PaginatedResultSet[DatasourceSyncRun]
      example:
        pagination:
          has_next: true
          next_cursor: 019097c5-5560-05b5-4a48-5197a269683b
          page_limit: 100
    PaginatedResultSet_IAMMember_:
      properties:
        pagination:
          anyOf:
          - $ref: '#/components/schemas/PaginationDetails'
          - type: 'null'
          description: Contains pagination information for the result set.
        results:
          items:
            $ref: '#/components/schemas/IAMMember'
          type: array
          title: Results
          description: The list of items returned for the current page.
      type: object
      required:
      - results
      title: PaginatedResultSet[IAMMember]
      example:
        pagination:
          has_next: true
          next_cursor: 019097c5-5560-05b5-4a48-5197a269683b
          page_limit: 100
    PaginatedResultSet_OrganizationDomain_:
      properties:
        pagination:
          anyOf:
          - $ref: '#/components/schemas/PaginationDetails'
          - type: 'null'
          description: Contains pagination information for the result set.
        results:
          items:
            $ref: '#/components/schemas/OrganizationDomain'
          type: array
          title: Results
          description: The list of items returned for the current page.
      type: object
      required:
      - results
      title: PaginatedResultSet[OrganizationDomain]
      example:
        pagination:
          has_next: true
          next_cursor: 019097c5-5560-05b5-4a48-5197a269683b
          page_limit: 100
    PaginatedResultSet_OrganizationInvite_:
      properties:
        pagination:
          anyOf:
          - $ref: '#/components/schemas/PaginationDetails'
          - type: 'null'
          description: Contains pagination information for the result set.
        results:
          items:
            $ref: '#/components/schemas/OrganizationInvite'
          type: array
          title: Results
          description: The list of items returned for the current page.
      type: object
      required:
      - results
      title: PaginatedResultSet[OrganizationInvite]
      example:
        pagination:
          has_next: true
          next_cursor: 019097c5-5560-05b5-4a48-5197a269683b
          page_limit: 100
    PaginatedResultSet_Project_:
      properties:
        pagination:
          anyOf:
          - $ref: '#/components/schemas/PaginationDetails'
          - type: 'null'
          description: Contains pagination information for the result set.
        results:
          items:
            $ref: '#/components/schemas/Project'
          type: array
          title: Results
          description: The list of items returned for the current page.
      type: object
      required:
      - results
      title: PaginatedResultSet[Project]
      example:
        pagination:
          has_next: true
          next_cursor: 019097c5-5560-05b5-4a48-5197a269683b
          page_limit: 100
    PaginatedResultSet_TaskForwarder_:
      properties:
        pagination:
          anyOf:
          - $ref: '#/components/schemas/PaginationDetails'
          - type: 'null'
          description: Contains pagination information for the result set.
        results:
          items:
            $ref: '#/components/schemas/TaskForwarder'
          type: array
          title: Results
          description: The list of items returned for the current page.
      type: object
      required:
      - results
      title: PaginatedResultSet[TaskForwarder]
      example:
        pagination:
          has_next: true
          next_cursor: 019097c5-5560-05b5-4a48-5197a269683b
          page_limit: 100
    PaginatedResultSet_TaskRun_:
      properties:
        pagination:
          anyOf:
          - $ref: '#/components/schemas/PaginationDetails'
          - type: 'null'
          description: Contains pagination information for the result set.
        results:
          items:
            $ref: '#/components/schemas/TaskRun'
          type: array
          title: Results
          description: The list of items returned for the current page.
      type: object
      required:
      - results
      title: PaginatedResultSet[TaskRun]
      example:
        pagination:
          has_next: true
          next_cursor: 019097c5-5560-05b5-4a48-5197a269683b
          page_limit: 100
    PaginatedResultSet_Task_:
      properties:
        pagination:
          anyOf:
          - $ref: '#/components/schemas/PaginationDetails'
          - type: 'null'
          description: Contains pagination information for the result set.
        results:
          items:
            $ref: '#/components/schemas/Task'
          type: array
          title: Results
          description: The list of items returned for the current page.
      type: object
      required:
      - results
      title: PaginatedResultSet[Task]
      example:
        pagination:
          has_next: true
          next_cursor: 019097c5-5560-05b5-4a48-5197a269683b
          page_limit: 100
    PaginationDetails:
      properties:
        next_cursor:
          anyOf:
          - type: string
          - type: 'null'
          title: Next Cursor
          description: A token used to retrieve the next page of results. If `null`,
            there are no more results.
        has_next:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Has Next
          description: Indicates whether there are more results available in the next
            page.
          default: false
        page_limit:
          anyOf:
          - type: integer
          - type: 'null'
          title: Page Limit
          description: The maximum number of items returned per page.
          default: 0
      type: object
      title: PaginationDetails
    PermissionCheckFailedErrorDetails:
      properties:
        subject:
          anyOf:
          - $ref: '#/components/schemas/IAMObjectErrorDetails'
          - type: 'null'
        resource:
          anyOf:
          - $ref: '#/components/schemas/IAMObjectErrorDetails'
          - type: 'null'
        permission:
          type: string
          title: Permission
      type: object
      required:
      - permission
      title: PermissionCheckFailedErrorDetails
    PermissionCheckFailedErrorResponse:
      properties:
        message:
          type: string
          title: Message
          description: Human readable representation of the error
        reason:
          type: string
          enum:
          - PERMISSION_CHECK_FAILED
          const: PERMISSION_CHECK_FAILED
          title: Reason
          description: The machine-readable error reason.
        permissionCheckFailedError:
          allOf:
          - $ref: '#/components/schemas/PermissionCheckFailedErrorDetails'
          description: Metadata detailing more information about the error.
      type: object
      required:
      - message
      - reason
      - permissionCheckFailedError
      title: PermissionCheckFailedErrorResponse
    Project:
      properties:
        name:
          type: string
          title: Name
        avatar_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Avatar Url
        id:
          type: string
          format: uuid
          title: Id
        org_id:
          type: string
          format: uuid
          title: Org Id
        tasks_oauth_client_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Tasks Oauth Client Id
      type: object
      required:
      - name
      - id
      - org_id
      title: Project
    ProjectConfig-Input:
      properties:
        llm:
          type: string
          enum:
          - gpt-4o
          - gpt-3.5-turbo
          - gpt-4
          - gpt-4-turbo
          - gpt-4-turbo-preview
          - gpt-4-1106-preview
          - claude-3-5-sonnet-20240620
          - claude-3-haiku-20240307
          - claude-3-sonnet-20240229
          - claude-3-opus-20240229
          - gemini-1.5-pro-latest
          - gemini-pro
          title: Llm
          default: gpt-3.5-turbo
        temperature:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Temperature
          default: 0.5
        knn:
          type: integer
          exclusiveMinimum: 0.0
          title: Knn
          default: 4
        chat_system_commands:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Chat System Commands
        chat_guardrails:
          anyOf:
          - $ref: '#/components/schemas/ConversationalGuardrails'
          - type: 'null'
        query_expansion:
          type: boolean
          title: Query Expansion
          description: Enable query expansion. Uses an LLM to generate multiple rephrasing
            of the original query for better broad spectrum vector retrieval
          default: false
      type: object
      title: ProjectConfig
    ProjectConfig-Output:
      properties:
        llm:
          type: string
          enum:
          - gpt-4o
          - gpt-3.5-turbo
          - gpt-4
          - gpt-4-turbo
          - gpt-4-turbo-preview
          - gpt-4-1106-preview
          - claude-3-5-sonnet-20240620
          - claude-3-haiku-20240307
          - claude-3-sonnet-20240229
          - claude-3-opus-20240229
          - gemini-1.5-pro-latest
          - gemini-pro
          title: Llm
          default: gpt-3.5-turbo
        temperature:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Temperature
          default: 0.5
        knn:
          type: integer
          exclusiveMinimum: 0.0
          title: Knn
          default: 4
        chat_system_commands:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Chat System Commands
        chat_guardrails:
          anyOf:
          - $ref: '#/components/schemas/ConversationalGuardrails'
          - type: 'null'
        query_expansion:
          type: boolean
          title: Query Expansion
          description: Enable query expansion. Uses an LLM to generate multiple rephrasing
            of the original query for better broad spectrum vector retrieval
          default: false
      type: object
      title: ProjectConfig
    ProjectCreate:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
      - name
      title: ProjectCreate
    ProjectIAMMemberRoleUpdate:
      properties:
        add:
          items:
            type: string
            enum:
            - data_creator
            - data_editor
            - data_viewer
            - editor
            - owner
            - task_creator
            - task_runner
            - viewer
          type: array
          title: Add
          description: 'A list of project roles to grant to the member.


            Roles in this list are applied to the member AFTER any removals specified
            in `remove`.


            This may be combined with `remove_all` to replace the member''s entire
            role list.'
        remove:
          items:
            type: string
            enum:
            - data_creator
            - data_editor
            - data_viewer
            - editor
            - owner
            - task_creator
            - task_runner
            - viewer
          type: array
          title: Remove
          description: A list of project roles to revoke from the member.
        remove_all:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Remove All
          description: Removes all existing roles from the member. This may be combined
            with `add` to replace all existing roles that the member holds.
          default: false
      type: object
      title: ProjectIAMMemberRoleUpdate
    ProjectIAMPermissionTest:
      properties:
        permissions:
          items:
            type: string
            enum:
            - add_editor
            - add_member
            - add_owner
            - collections_edit
            - collections_view
            - create_chat
            - create_collection
            - create_compose
            - create_datasource_connection
            - create_document
            - create_task
            - datasource_connections_edit
            - datasource_connections_view
            - documents_edit
            - documents_view
            - edit
            - edit_data
            - list_documents
            - query_data
            - remove_editor
            - remove_member
            - remove_owner
            - run_task
            - view
            - view_data
            - view_members
          type: array
          title: Permissions
          description: A list of permissions to test on the project.
        member:
          anyOf:
          - type: string
          - type: 'null'
          title: Member
      type: object
      required:
      - permissions
      title: ProjectIAMPermissionTest
    ProjectUpdate:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
      type: object
      title: ProjectUpdate
    ProjectWithDatasources:
      properties:
        name:
          type: string
          title: Name
        avatar_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Avatar Url
        id:
          type: string
          format: uuid
          title: Id
        org_id:
          type: string
          format: uuid
          title: Org Id
        tasks_oauth_client_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Tasks Oauth Client Id
        datasource_connections:
          items:
            $ref: '#/components/schemas/DatasourceConnectionPublic'
          type: array
          title: Datasource Connections
          default: []
      type: object
      required:
      - name
      - id
      - org_id
      title: ProjectWithDatasources
    SiteScrapeRequest:
      properties:
        urls:
          items:
            type: string
            minLength: 1
            format: uri
          type: array
          title: Urls
        max_crawl_depth:
          type: integer
          maximum: 7.0
          title: Max Crawl Depth
          default: 3
      type: object
      required:
      - urls
      title: SiteScrapeRequest
    SourceRow:
      properties:
        source:
          type: string
          enum:
          - upload
          - gdrive
          - onedrive
          - web_scrape
          - notion
          - confluence
          - box
          - dropbox
          - sharepoint
          title: Source
        count:
          type: integer
          title: Count
      type: object
      required:
      - source
      - count
      title: SourceRow
    Task:
      properties:
        name:
          type: string
          title: Name
          description: A name or reference for the Task.
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: A longer description of the Task for internal reference.
        enabled:
          type: boolean
          title: Enabled
          description: When `true` the Task is active and callable. `false` denotes
            the Task is not yet operational.
        id:
          type: string
          format: uuid
          title: Id
          description: The unique identifier of the Task.
        project_id:
          type: string
          format: uuid
          title: Project Id
          description: The Project that the Task belongs to.
        created:
          type: string
          format: date-time
          title: Created
          description: When the Task was created.
        modified:
          type: string
          format: date-time
          title: Modified
          description: When the Task was last updated.
        revisions:
          items:
            $ref: '#/components/schemas/TaskRevision'
          type: array
          title: Revisions
          description: Each update to a Task results in a new Revision being created.
            Task Revisions are a powerful concept that can be used to assist with
            A/B testing, comparing responses from different LLM's, etc.
      type: object
      required:
      - name
      - enabled
      - id
      - project_id
      - created
      - modified
      - revisions
      title: Task
      example:
        created: '2024-06-13T14:01:03.021673'
        description: A task to pre-triage user onboarding before IDV.
        id: 019011e6-e530-3aca-6cf7-2973387c255d
        modified: '2024-06-13T14:01:03.021673'
        name: Fintech Pre-Triage
        project_id: 019010a2-8327-2607-11d7-41bb0a8936d4
    TaskCreate:
      properties:
        system_prompt:
          title: System Prompt
          description: The system prompt that is used to set the LLM context.
        user_prompt:
          title: User Prompt
          description: The description of the Task. It is not required to mention
            the outputs in the prompt, but it can help the model to understand the
            context better. Any input strings should be referenced with the dynamic
            `{...}` syntax, this informs the model to look for those values in the
            input data.
        llm_model:
          type: string
          enum:
          - gpt-4o
          - gpt-3.5-turbo
          - gpt-4
          - gpt-4-turbo
          - gpt-4-turbo-preview
          - gpt-4-1106-preview
          - claude-3-5-sonnet-20240620
          - claude-3-haiku-20240307
          - claude-3-sonnet-20240229
          - claude-3-opus-20240229
          - gemini-1.5-pro-latest
          - gemini-pro
          title: Llm Model
          description: The LLM model to use for the Task.
        llm_config:
          allOf:
          - $ref: '#/components/schemas/TaskLLMConfig'
          description: Specific configuration parameters for the LLM model.
        output_format:
          additionalProperties:
            type: string
            enum:
            - str
            - string
            - boolean
            - bool
            - int
            - integer
            - list
          type: object
          title: Output Format
          description: This gives control over the structure of how the Task responds.
            Supports shorthand notation or an object with `type` can be specified
            for each attribute. In most instances, the LLM will be able to generate
            the desired output into the relevant property, but an optional `description`
            can be passed to provide it with additional context.
        task_forwarder_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Task Forwarder Id
          description: The unique identifier for a valid Task Forwarder. It is used
            to forward the Task output to another system or service.
        rag:
          anyOf:
          - $ref: '#/components/schemas/TaskRAG'
          - type: 'null'
          description: '**Note: This is a Paid Tier feature.** Provide additional
            domain specific input to the LLM so that it is able to reference user
            specific information when executing the Task. Examples of this could be
            a product catalogue, terms and conditions or a user manual.'
          x-fern-audiences:
          - paid
          x-fern-availability: beta
        image_required:
          type: boolean
          title: Image Required
          description: When `true` it requires an image to be sent in the Task Run
            request.
          default: false
        name:
          type: string
          title: Name
          description: A name or reference for the Task.
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: A longer description of the Task for internal reference.
        enabled:
          type: boolean
          title: Enabled
          description: When `true` the Task is active and callable. `false` denotes
            the Task is not yet operational.
      type: object
      required:
      - system_prompt
      - user_prompt
      - llm_model
      - output_format
      - name
      - enabled
      title: TaskCreate
      example:
        created: '2024-06-13T14:01:03.021673'
        description: A task to pre-triage user onboarding before IDV.
        enabled: 'true'
        id: 019011e6-e530-3aca-6cf7-2973387c255d
        image_required: 'true'
        modified: '2024-06-13T14:01:03.021673'
        name: Fintech Pre-Triage
        output_format:
          compliance: bool
          hint:
            type: str
          match:
            description: True if the provided description is a close match
            type: bool
          rationale: str
        project_id: 019010a2-8327-2607-11d7-41bb0a8936d4
        system_prompt: You are an expert software program specifically designed for
          the fintech industry that will be used for pre-triage tasks to ensure the
          best possible client UX and efficient 3rd party platform interoperability.
        user_prompt: 'Your task is to validate the uploaded image and determine whether
          it will be suitable for authentication and onboarding checks. If the image
          of the person is clear and typical of a passport style photo then set the
          compliance field to true. Provide rationale for your decision in the rationale
          field. If the compliance result is false, then provide a helpful hint for
          the customer who has submitted the photo informing them why it is unacceptable
          and some steps to remedy it, place this into the hint field. Determine whether
          the following description matches the provided image: {description}'
    TaskForwarder:
      properties:
        name:
          type: string
          title: Name
          description: A descriptive name for the Task Forwarder.
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Additional details about the Task Forwarder's purpose or configuration.
        config:
          anyOf:
          - $ref: '#/components/schemas/TaskForwarderConfig'
          - type: 'null'
          description: Configuration parameters for the Task Forwarder such as a `destination`
            URL.
        config_sensitive:
          anyOf:
          - $ref: '#/components/schemas/TaskForwarderSensitiveConfig'
          - type: 'null'
          description: Sensitive parameters for the Task Forwarder such as a `signing_key`.
        id:
          type: string
          format: uuid
          title: Id
          description: The unique identifier of the Task Forwarder.
        project_id:
          type: string
          format: uuid
          title: Project Id
          description: The Project that the Task Forwarder belongs to.
        created:
          type: string
          format: date-time
          title: Created
          description: When the Task Forwarder was created.
        modified:
          type: string
          format: date-time
          title: Modified
          description: When the Task Forwarder was last updated.
      type: object
      required:
      - name
      - id
      - project_id
      - created
      - modified
      title: TaskForwarder
      example:
        config:
          destination_url: https://eoalydnvgieppd9.m.pipedream.net
        config_sensitive:
          signing_key: sdkjhsfd2sdfkj3223.23rh
        description: Send all Task output to this API endpoint to ensure real-time
          updates of all Task Runs.
        id: 019011e6-e530-3aca-6cf7-2973387c255d
        name: Webhook Endpoint
        project_id: 019010a2-8327-2607-11d7-41bb0a8936d4
    TaskForwarderConfig:
      properties:
        destination_url:
          type: string
          title: Destination Url
          description: The URL where Task Run result will be forwarded. Must be a
            valid HTTPS URL.
      type: object
      required:
      - destination_url
      title: TaskForwarderConfig
    TaskForwarderCreate:
      properties:
        name:
          type: string
          title: Name
          description: A descriptive name for the Task Forwarder.
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Additional details about the Task Forwarder's purpose or configuration.
        config:
          anyOf:
          - $ref: '#/components/schemas/TaskForwarderConfig'
          - type: 'null'
          description: Configuration parameters for the Task Forwarder such as a `destination`
            URL.
        config_sensitive:
          anyOf:
          - $ref: '#/components/schemas/TaskForwarderSensitiveConfig'
          - type: 'null'
          description: Sensitive parameters for the Task Forwarder such as a `signing_key`.
      type: object
      required:
      - name
      title: TaskForwarderCreate
      example:
        config:
          destination_url: https://eoalydnvgieppd9.m.pipedream.net
        config_sensitive:
          signing_key: sdkjhsfd2sdfkj3223.23rh
        description: Send all Task output to this API endpoint to ensure real-time
          updates of all Task Runs.
        id: 019011e6-e530-3aca-6cf7-2973387c255d
        name: Webhook Endpoint
        project_id: 019010a2-8327-2607-11d7-41bb0a8936d4
    TaskForwarderSensitiveConfig:
      properties:
        signing_key:
          type: string
          title: Signing Key
          description: A secret key used to sign the forwarded data for verification
            purposes.
      type: object
      required:
      - signing_key
      title: TaskForwarderSensitiveConfig
    TaskForwarderUpdate:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
          description: A descriptive name for the Task Forwarder.
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Additional details about the Task Forwarder's purpose or configuration.
        config:
          anyOf:
          - $ref: '#/components/schemas/TaskForwarderConfig'
          - type: 'null'
          description: Configuration parameters for the Task Forwarder such as a `destination`
            URL.
        config_sensitive:
          anyOf:
          - $ref: '#/components/schemas/TaskForwarderSensitiveConfig'
          - type: 'null'
          description: Sensitive parameters for the Task Forwarder such as a `signing_key`.
      type: object
      title: TaskForwarderUpdate
    TaskIAMMemberRoleUpdate:
      properties:
        add:
          items:
            type: string
            enum:
            - editor
            - owner
            - viewer
          type: array
          title: Add
          description: 'A list of task roles to grant to the member.


            Roles in this list are applied to the member AFTER any removals specified
            in `remove`.


            This may be combined with `remove_all` to replace the member''s entire
            role list.'
        remove:
          items:
            type: string
            enum:
            - editor
            - owner
            - viewer
          type: array
          title: Remove
          description: A list of task roles to revoke from the member.
        remove_all:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Remove All
          description: Removes all existing roles from the member. This may be combined
            with `add` to replace all existing roles that the member holds.
          default: false
      type: object
      title: TaskIAMMemberRoleUpdate
    TaskIAMPermissionTest:
      properties:
        permissions:
          items:
            type: string
            enum:
            - add_editor
            - add_member
            - add_owner
            - edit
            - remove_editor
            - remove_member
            - remove_owner
            - run_task
            - view
            - view_members
          type: array
          title: Permissions
          description: A list of permissions to test on the task.
        member:
          anyOf:
          - type: string
          - type: 'null'
          title: Member
      type: object
      required:
      - permissions
      title: TaskIAMPermissionTest
    TaskLLMConfig:
      properties:
        temperature:
          type: number
          multipleOf: 0.1
          maximum: 1.0
          minimum: 0.0
          title: Temperature
          description: Controls randomness in the output. Lower values make the output
            more focused and deterministic, while higher values make it more creative
            and diverse.
          default: 0.2
      type: object
      title: TaskLLMConfig
    TaskRAG:
      properties:
        collection_id:
          type: string
          format: uuid
          title: Collection Id
        rag_param:
          type: string
          title: Rag Param
      type: object
      required:
      - collection_id
      - rag_param
      title: TaskRAG
    TaskRevision:
      properties:
        system_prompt:
          title: System Prompt
          description: The system prompt that is used to set the LLM context.
        user_prompt:
          title: User Prompt
          description: The description of the Task. It is not required to mention
            the outputs in the prompt, but it can help the model to understand the
            context better. Any input strings should be referenced with the dynamic
            `{...}` syntax, this informs the model to look for those values in the
            input data.
        llm_model:
          type: string
          enum:
          - gpt-4o
          - gpt-3.5-turbo
          - gpt-4
          - gpt-4-turbo
          - gpt-4-turbo-preview
          - gpt-4-1106-preview
          - claude-3-5-sonnet-20240620
          - claude-3-haiku-20240307
          - claude-3-sonnet-20240229
          - claude-3-opus-20240229
          - gemini-1.5-pro-latest
          - gemini-pro
          title: Llm Model
          description: The LLM model to use for the Task.
        llm_config:
          allOf:
          - $ref: '#/components/schemas/TaskLLMConfig'
          description: Specific configuration parameters for the LLM model.
        output_format:
          additionalProperties:
            type: string
            enum:
            - str
            - string
            - boolean
            - bool
            - int
            - integer
            - list
          type: object
          title: Output Format
          description: This gives control over the structure of how the Task responds.
            Supports shorthand notation or an object with `type` can be specified
            for each attribute. In most instances, the LLM will be able to generate
            the desired output into the relevant property, but an optional `description`
            can be passed to provide it with additional context.
        task_forwarder_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Task Forwarder Id
          description: The unique identifier for a valid Task Forwarder. It is used
            to forward the Task output to another system or service.
        rag:
          anyOf:
          - $ref: '#/components/schemas/TaskRAG'
          - type: 'null'
          description: '**Note: This is a Paid Tier feature.** Provide additional
            domain specific input to the LLM so that it is able to reference user
            specific information when executing the Task. Examples of this could be
            a product catalogue, terms and conditions or a user manual.'
          x-fern-audiences:
          - paid
          x-fern-availability: beta
        image_required:
          type: boolean
          title: Image Required
          description: When `true` it requires an image to be sent in the Task Run
            request.
          default: false
        id:
          type: string
          format: uuid
          title: Id
          description: The unique identifier of the Revision.
        created:
          type: string
          format: date-time
          title: Created
          description: When the Task was created.
        modified:
          type: string
          format: date-time
          title: Modified
          description: When the Task was last updated.
        active:
          type: boolean
          title: Active
          description: When `true` the Revision is the currently active version and
            will be activated when the Task Run is executed.
          default: false
      type: object
      required:
      - system_prompt
      - user_prompt
      - llm_model
      - output_format
      - id
      - created
      - modified
      title: TaskRevision
      example:
        created: '2024-06-13T14:01:03.021673'
        description: A task to pre-triage user onboarding before IDV.
        enabled: 'true'
        id: 019011e6-e530-3aca-6cf7-2973387c255d
        image_required: 'true'
        modified: '2024-06-13T14:01:03.021673'
        name: Fintech Pre-Triage
        output_format:
          compliance: bool
          hint:
            type: str
          match:
            description: True if the provided description is a close match
            type: bool
          rationale: str
        project_id: 019010a2-8327-2607-11d7-41bb0a8936d4
        system_prompt: You are an expert software program specifically designed for
          the fintech industry that will be used for pre-triage tasks to ensure the
          best possible client UX and efficient 3rd party platform interoperability.
        user_prompt: 'Your task is to validate the uploaded image and determine whether
          it will be suitable for authentication and onboarding checks. If the image
          of the person is clear and typical of a passport style photo then set the
          compliance field to true. Provide rationale for your decision in the rationale
          field. If the compliance result is false, then provide a helpful hint for
          the customer who has submitted the photo informing them why it is unacceptable
          and some steps to remedy it, place this into the hint field. Determine whether
          the following description matches the provided image: {description}'
    TaskRun:
      properties:
        task_revision_id:
          type: string
          format: uuid
          title: Task Revision Id
          description: The unique identifier of the Task Revision associated with
            this run.
        response:
          type: object
          title: Response
          description: The structured response from the Task execution.
        run_data:
          type: object
          title: Run Data
          description: Additional data about the Task run, including audit information
            and submitted input.
        id:
          type: string
          format: uuid
          title: Id
          description: The unique identifier of the Task Run.
        created:
          type: string
          format: date-time
          title: Created
          description: The timestamp when the Task Run was created.
      type: object
      required:
      - task_revision_id
      - response
      - run_data
      - id
      - created
      title: TaskRun
      example:
        created: '2024-07-11T14:31:21.989219'
        id: 0190a234-cb74-6342-dec6-4be8f73f0c9f
        response:
          compliance: false
          hint: The image is not suitable for authentication and onboarding checks.
            Please ensure the photo is a clear, passport-style image with a plain
            background, good lighting, and no accessories like sunglasses.
          match: false
          rationale: The image does not meet the requirements for a passport-style
            photo. The person is wearing sunglasses, and the background is not plain.
        run_data:
          audit:
            ip: 10.152.3.59
            ua: Vercel Edge Functions
          submitted:
            description: brown hair, blue sweater
        task_revision_id: 0190a234-8dc6-6d08-aea9-928fcecad8f1
    TaskUpdate:
      properties:
        system_prompt:
          anyOf:
          - {}
          - type: 'null'
          title: System Prompt
          description: The system prompt that is used to set the LLM context.
        user_prompt:
          anyOf:
          - {}
          - type: 'null'
          title: User Prompt
          description: The description of the Task. It is not required to mention
            the outputs in the prompt, but it can help the model to understand the
            context better. Any input strings should be referenced with the dynamic
            `{...}` syntax, this informs the model to look for those values in the
            input data.
        llm_model:
          anyOf:
          - type: string
            enum:
            - gpt-4o
            - gpt-3.5-turbo
            - gpt-4
            - gpt-4-turbo
            - gpt-4-turbo-preview
            - gpt-4-1106-preview
            - claude-3-5-sonnet-20240620
            - claude-3-haiku-20240307
            - claude-3-sonnet-20240229
            - claude-3-opus-20240229
            - gemini-1.5-pro-latest
            - gemini-pro
          - type: 'null'
          title: Llm Model
          description: The LLM model to use for the Task.
        llm_config:
          anyOf:
          - $ref: '#/components/schemas/TaskLLMConfig'
          - type: 'null'
          description: Specific configuration parameters for the LLM model.
        output_format:
          anyOf:
          - additionalProperties:
              type: string
              enum:
              - str
              - string
              - boolean
              - bool
              - int
              - integer
              - list
            type: object
          - type: 'null'
          title: Output Format
          description: This gives control over the structure of how the Task responds.
            Supports shorthand notation or an object with `type` can be specified
            for each attribute. In most instances, the LLM will be able to generate
            the desired output into the relevant property, but an optional `description`
            can be passed to provide it with additional context.
        task_forwarder_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Task Forwarder Id
          description: The unique identifier for a valid Task Forwarder. It is used
            to forward the Task output to another system or service.
        rag:
          anyOf:
          - $ref: '#/components/schemas/TaskRAG'
          - type: 'null'
          description: '**Note: This is a Paid Tier feature.** Provide additional
            domain specific input to the LLM so that it is able to reference user
            specific information when executing the Task. Examples of this could be
            a product catalogue, terms and conditions or a user manual.'
          x-fern-audiences:
          - paid
          x-fern-availability: beta
        image_required:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Image Required
          description: When `true` it requires an image to be sent in the Task Run
            request.
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
          description: A name or reference for the Task.
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: A longer description of the Task for internal reference.
        enabled:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Enabled
          description: When `true` the Task is active and callable. `false` denotes
            the Task is not yet operational.
      type: object
      title: TaskUpdate
    User:
      properties:
        email:
          type: string
          format: email
          title: Email
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        bio:
          anyOf:
          - type: string
          - type: 'null'
          title: Bio
        avatar_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Avatar Url
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
      - email
      - name
      - id
      title: User
    UserProfileUpdate:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        bio:
          anyOf:
          - type: string
          - type: 'null'
          title: Bio
      type: object
      title: UserProfileUpdate
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
