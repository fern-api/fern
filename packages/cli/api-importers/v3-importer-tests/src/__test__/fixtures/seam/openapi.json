{
  "openapi": "3.0.0",
  "info": { "title": "Seam Connect", "version": "1.0.0" },
  "servers": [{ "url": "https://connect.getseam.com" }],
  "tags": [
    { "name": "/access_codes", "description": "access_codes" },
    { "name": "/acs", "description": "acs" },
    { "name": "/action_attempts", "description": "action_attempts" },
    { "name": "/client_sessions", "description": "client_sessions" },
    { "name": "/connected_accounts", "description": "connected_accounts" },
    { "name": "/connect_webviews", "description": "connect_webviews" },
    { "name": "/devices", "description": "devices" },
    { "name": "/events", "description": "events" },
    { "name": "/health", "description": "health" },
    { "name": "/locks", "description": "locks" },
    { "name": "/networks", "description": "networks" },
    { "name": "/noise_sensors", "description": "noise_sensors" },
    { "name": "/phones", "description": "phones" },
    { "name": "/thermostats", "description": "thermostats" },
    { "name": "/user_identities", "description": "user_identities" },
    { "name": "/webhooks", "description": "webhooks" },
    { "name": "/workspaces", "description": "workspaces" }
  ],
  "paths": {
    "/access_codes/create": {
      "post": {
        "x-fern-sdk-group-name": ["access_codes"],
        "x-fern-sdk-method-name": "create",
        "x-fern-sdk-return-value": "access_code",
        "summary": "/access_codes/create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "access_code": {
                      "$ref": "#/components/schemas/access_code"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "access_code", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "name": { "type": "string" },
                  "starts_at": { "type": "string" },
                  "ends_at": { "type": "string" },
                  "code": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 9,
                    "pattern": "^\\d+$"
                  },
                  "sync": { "default": false, "type": "boolean" },
                  "attempt_for_offline_device": {
                    "default": true,
                    "type": "boolean"
                  },
                  "common_code_key": { "type": "string" },
                  "prefer_native_scheduling": { "type": "boolean" },
                  "use_backup_access_code_pool": { "type": "boolean" },
                  "allow_external_modification": { "type": "boolean" },
                  "is_external_modification_allowed": { "type": "boolean" },
                  "use_offline_access_code": { "type": "boolean" },
                  "is_offline_access_code": { "type": "boolean" },
                  "is_one_time_use": { "type": "boolean" },
                  "max_time_rounding": {
                    "default": "1hour",
                    "type": "string",
                    "enum": ["1hour", "1day", "1h", "1d"]
                  }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesCreatePost"
      }
    },
    "/access_codes/create_multiple": {
      "put": {
        "x-fern-ignore": true,
        "summary": "/access_codes/create_multiple",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_codes": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/access_code" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["access_codes", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "behavior_when_code_cannot_be_shared": {
                    "default": "throw",
                    "type": "string",
                    "enum": ["throw", "create_random_code"]
                  },
                  "preferred_code_length": { "type": "number" },
                  "name": { "type": "string" },
                  "starts_at": { "type": "string" },
                  "ends_at": { "type": "string" },
                  "code": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 9,
                    "pattern": "^\\d+$"
                  },
                  "attempt_for_offline_device": {
                    "default": true,
                    "type": "boolean"
                  },
                  "prefer_native_scheduling": { "type": "boolean" },
                  "use_backup_access_code_pool": { "type": "boolean" },
                  "allow_external_modification": { "type": "boolean" },
                  "is_external_modification_allowed": { "type": "boolean" },
                  "use_offline_access_code": { "type": "boolean" },
                  "is_offline_access_code": { "type": "boolean" },
                  "is_one_time_use": { "type": "boolean" },
                  "max_time_rounding": {
                    "default": "1hour",
                    "type": "string",
                    "enum": ["1hour", "1day", "1h", "1d"]
                  }
                },
                "required": ["device_ids"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesCreateMultiplePut"
      },
      "post": {
        "x-fern-sdk-group-name": ["access_codes"],
        "x-fern-sdk-method-name": "create_multiple",
        "x-fern-sdk-return-value": "access_codes",
        "summary": "/access_codes/create_multiple",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_codes": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/access_code" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["access_codes", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "behavior_when_code_cannot_be_shared": {
                    "default": "throw",
                    "type": "string",
                    "enum": ["throw", "create_random_code"]
                  },
                  "preferred_code_length": { "type": "number" },
                  "name": { "type": "string" },
                  "starts_at": { "type": "string" },
                  "ends_at": { "type": "string" },
                  "code": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 9,
                    "pattern": "^\\d+$"
                  },
                  "attempt_for_offline_device": {
                    "default": true,
                    "type": "boolean"
                  },
                  "prefer_native_scheduling": { "type": "boolean" },
                  "use_backup_access_code_pool": { "type": "boolean" },
                  "allow_external_modification": { "type": "boolean" },
                  "is_external_modification_allowed": { "type": "boolean" },
                  "use_offline_access_code": { "type": "boolean" },
                  "is_offline_access_code": { "type": "boolean" },
                  "is_one_time_use": { "type": "boolean" },
                  "max_time_rounding": {
                    "default": "1hour",
                    "type": "string",
                    "enum": ["1hour", "1day", "1h", "1d"]
                  }
                },
                "required": ["device_ids"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesCreateMultiplePost"
      }
    },
    "/access_codes/delete": {
      "post": {
        "x-fern-sdk-group-name": ["access_codes"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/access_codes/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "access_code_id": { "type": "string", "format": "uuid" },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["access_code_id"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesDeletePost"
      }
    },
    "/access_codes/generate_code": {
      "post": {
        "x-fern-sdk-group-name": ["access_codes"],
        "x-fern-sdk-method-name": "generate_code",
        "x-fern-sdk-return-value": "generated_code",
        "summary": "/access_codes/generate_code",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "generated_code": {
                      "$ref": "#/components/schemas/access_code"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["generated_code", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesGenerateCodePost"
      }
    },
    "/access_codes/get": {
      "post": {
        "x-fern-sdk-group-name": ["access_codes"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "access_code",
        "summary": "/access_codes/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_code": {
                      "$ref": "#/components/schemas/access_code"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["access_code", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "access_token": [] },
          { "user_session": [] },
          { "client_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "access_code_id": { "type": "string", "format": "uuid" },
                  "code": { "type": "string" }
                }
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesGetPost"
      }
    },
    "/access_codes/list": {
      "post": {
        "x-fern-sdk-group-name": ["access_codes"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "access_codes",
        "summary": "/access_codes/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_codes": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/access_code" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["access_codes", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "access_code_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "user_identifier_key": { "type": "string" }
                }
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesListPost"
      }
    },
    "/access_codes/pull_backup_access_code": {
      "post": {
        "x-fern-sdk-group-name": ["access_codes"],
        "x-fern-sdk-method-name": "pull_backup_access_code",
        "x-fern-sdk-return-value": "backup_access_code",
        "summary": "/access_codes/pull_backup_access_code",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "backup_access_code": {
                      "$ref": "#/components/schemas/access_code"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["backup_access_code", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_code_id": { "type": "string", "format": "uuid" }
                },
                "required": ["access_code_id"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesPullBackupAccessCodePost"
      }
    },
    "/access_codes/update": {
      "put": {
        "x-fern-ignore": true,
        "summary": "/access_codes/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "starts_at": { "type": "string" },
                  "ends_at": { "type": "string" },
                  "code": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 9,
                    "pattern": "^\\d+$"
                  },
                  "sync": { "default": false, "type": "boolean" },
                  "attempt_for_offline_device": {
                    "default": true,
                    "type": "boolean"
                  },
                  "prefer_native_scheduling": { "type": "boolean" },
                  "use_backup_access_code_pool": { "type": "boolean" },
                  "allow_external_modification": { "type": "boolean" },
                  "is_external_modification_allowed": { "type": "boolean" },
                  "use_offline_access_code": { "type": "boolean" },
                  "is_offline_access_code": { "type": "boolean" },
                  "is_one_time_use": { "type": "boolean" },
                  "max_time_rounding": {
                    "default": "1hour",
                    "type": "string",
                    "enum": ["1hour", "1day", "1h", "1d"]
                  },
                  "access_code_id": { "type": "string", "format": "uuid" },
                  "device_id": { "type": "string", "format": "uuid" },
                  "type": {
                    "type": "string",
                    "enum": ["ongoing", "time_bound"]
                  },
                  "is_managed": { "type": "boolean" }
                },
                "required": ["access_code_id"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesUpdatePut"
      },
      "patch": {
        "x-fern-ignore": true,
        "summary": "/access_codes/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "starts_at": { "type": "string" },
                  "ends_at": { "type": "string" },
                  "code": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 9,
                    "pattern": "^\\d+$"
                  },
                  "sync": { "default": false, "type": "boolean" },
                  "attempt_for_offline_device": {
                    "default": true,
                    "type": "boolean"
                  },
                  "prefer_native_scheduling": { "type": "boolean" },
                  "use_backup_access_code_pool": { "type": "boolean" },
                  "allow_external_modification": { "type": "boolean" },
                  "is_external_modification_allowed": { "type": "boolean" },
                  "use_offline_access_code": { "type": "boolean" },
                  "is_offline_access_code": { "type": "boolean" },
                  "is_one_time_use": { "type": "boolean" },
                  "max_time_rounding": {
                    "default": "1hour",
                    "type": "string",
                    "enum": ["1hour", "1day", "1h", "1d"]
                  },
                  "access_code_id": { "type": "string", "format": "uuid" },
                  "device_id": { "type": "string", "format": "uuid" },
                  "type": {
                    "type": "string",
                    "enum": ["ongoing", "time_bound"]
                  },
                  "is_managed": { "type": "boolean" }
                },
                "required": ["access_code_id"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesUpdatePatch"
      },
      "post": {
        "x-fern-sdk-group-name": ["access_codes"],
        "x-fern-sdk-method-name": "update",
        "summary": "/access_codes/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "starts_at": { "type": "string" },
                  "ends_at": { "type": "string" },
                  "code": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 9,
                    "pattern": "^\\d+$"
                  },
                  "sync": { "default": false, "type": "boolean" },
                  "attempt_for_offline_device": {
                    "default": true,
                    "type": "boolean"
                  },
                  "prefer_native_scheduling": { "type": "boolean" },
                  "use_backup_access_code_pool": { "type": "boolean" },
                  "allow_external_modification": { "type": "boolean" },
                  "is_external_modification_allowed": { "type": "boolean" },
                  "use_offline_access_code": { "type": "boolean" },
                  "is_offline_access_code": { "type": "boolean" },
                  "is_one_time_use": { "type": "boolean" },
                  "max_time_rounding": {
                    "default": "1hour",
                    "type": "string",
                    "enum": ["1hour", "1day", "1h", "1d"]
                  },
                  "access_code_id": { "type": "string", "format": "uuid" },
                  "device_id": { "type": "string", "format": "uuid" },
                  "type": {
                    "type": "string",
                    "enum": ["ongoing", "time_bound"]
                  },
                  "is_managed": { "type": "boolean" }
                },
                "required": ["access_code_id"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesUpdatePost"
      }
    },
    "/action_attempts/get": {
      "post": {
        "x-fern-sdk-group-name": ["action_attempts"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "action_attempt",
        "summary": "/action_attempts/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action_attempt_id": { "type": "string", "format": "uuid" }
                },
                "required": ["action_attempt_id"]
              }
            }
          }
        },
        "tags": ["/action_attempts"],
        "operationId": "actionAttemptsGetPost"
      }
    },
    "/action_attempts/list": {
      "post": {
        "x-fern-sdk-group-name": ["action_attempts"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "action_attempts",
        "summary": "/action_attempts/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempts": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/action_attempt" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempts", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action_attempt_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  }
                },
                "required": ["action_attempt_ids"]
              }
            }
          }
        },
        "tags": ["/action_attempts"],
        "operationId": "actionAttemptsListPost"
      }
    },
    "/client_sessions/create": {
      "put": {
        "x-fern-ignore": true,
        "summary": "/client_sessions/create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client_session": {
                      "$ref": "#/components/schemas/client_session"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["client_session", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identifier_key": { "type": "string", "minLength": 1 },
                  "connect_webview_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "connected_account_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "user_identity_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": ["/client_sessions"],
        "operationId": "clientSessionsCreatePut"
      },
      "post": {
        "x-fern-sdk-group-name": ["client_sessions"],
        "x-fern-sdk-method-name": "create",
        "x-fern-sdk-return-value": "client_session",
        "summary": "/client_sessions/create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client_session": {
                      "$ref": "#/components/schemas/client_session"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["client_session", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identifier_key": { "type": "string", "minLength": 1 },
                  "connect_webview_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "connected_account_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "user_identity_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": ["/client_sessions"],
        "operationId": "clientSessionsCreatePost"
      }
    },
    "/client_sessions/delete": {
      "post": {
        "x-fern-sdk-group-name": ["client_sessions"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/client_sessions/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_session_id": { "type": "string", "format": "uuid" }
                },
                "required": ["client_session_id"]
              }
            }
          }
        },
        "tags": ["/client_sessions"],
        "operationId": "clientSessionsDeletePost"
      }
    },
    "/client_sessions/get": {
      "post": {
        "x-fern-sdk-group-name": ["client_sessions"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "client_session",
        "summary": "/client_sessions/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client_session": {
                      "$ref": "#/components/schemas/client_session"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["client_session", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_session_id": { "type": "string" },
                  "user_identifier_key": { "type": "string" }
                }
              }
            }
          }
        },
        "tags": ["/client_sessions"],
        "operationId": "clientSessionsGetPost"
      }
    },
    "/client_sessions/get_or_create": {
      "put": {
        "x-fern-ignore": true,
        "summary": "/client_sessions/get_or_create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client_session": {
                      "$ref": "#/components/schemas/client_session"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["client_session", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identifier_key": { "type": "string", "minLength": 1 },
                  "connect_webview_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "connected_account_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "user_identity_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": ["/client_sessions"],
        "operationId": "clientSessionsGetOrCreatePut"
      },
      "post": {
        "x-fern-sdk-group-name": ["client_sessions"],
        "x-fern-sdk-method-name": "get_or_create",
        "x-fern-sdk-return-value": "client_session",
        "summary": "/client_sessions/get_or_create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client_session": {
                      "$ref": "#/components/schemas/client_session"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["client_session", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identifier_key": { "type": "string", "minLength": 1 },
                  "connect_webview_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "connected_account_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "user_identity_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": ["/client_sessions"],
        "operationId": "clientSessionsGetOrCreatePost"
      }
    },
    "/client_sessions/grant_access": {
      "post": {
        "x-fern-sdk-group-name": ["client_sessions"],
        "x-fern-sdk-method-name": "grant_access",
        "summary": "/client_sessions/grant_access",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client_session": {
                      "$ref": "#/components/schemas/client_session"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["client_session", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_session_id": { "type": "string" },
                  "user_identifier_key": { "type": "string" },
                  "connected_account_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "connect_webview_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "user_identity_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "tags": ["/client_sessions"],
        "operationId": "clientSessionsGrantAccessPost"
      },
      "patch": {
        "x-fern-ignore": true,
        "summary": "/client_sessions/grant_access",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client_session": {
                      "$ref": "#/components/schemas/client_session"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["client_session", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_session_id": { "type": "string" },
                  "user_identifier_key": { "type": "string" },
                  "connected_account_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "connect_webview_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "user_identity_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "tags": ["/client_sessions"],
        "operationId": "clientSessionsGrantAccessPatch"
      }
    },
    "/client_sessions/list": {
      "post": {
        "x-fern-sdk-group-name": ["client_sessions"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "client_sessions",
        "summary": "/client_sessions/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client_sessions": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/client_session" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["client_sessions", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_session_id": { "type": "string" },
                  "user_identifier_key": { "type": "string" },
                  "connect_webview_id": { "type": "string" },
                  "without_user_identifier_key": { "type": "boolean" },
                  "user_identity_id": { "type": "string" }
                }
              }
            }
          }
        },
        "tags": ["/client_sessions"],
        "operationId": "clientSessionsListPost"
      }
    },
    "/client_sessions/revoke": {
      "post": {
        "x-fern-sdk-group-name": ["client_sessions"],
        "x-fern-sdk-method-name": "revoke",
        "summary": "/client_sessions/revoke",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_session_id": { "type": "string", "format": "uuid" }
                },
                "required": ["client_session_id"]
              }
            }
          }
        },
        "tags": ["/client_sessions"],
        "operationId": "clientSessionsRevokePost"
      }
    },
    "/connect_webviews/create": {
      "post": {
        "x-fern-sdk-group-name": ["connect_webviews"],
        "x-fern-sdk-method-name": "create",
        "x-fern-sdk-return-value": "connect_webview",
        "summary": "/connect_webviews/create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connect_webview": {
                      "$ref": "#/components/schemas/connect_webview"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["connect_webview", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_selection_mode": {
                    "type": "string",
                    "enum": ["none", "single", "multiple"]
                  },
                  "custom_redirect_url": { "type": "string" },
                  "custom_redirect_failure_url": { "type": "string" },
                  "accepted_providers": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "akuvox",
                        "august",
                        "avigilon_alta",
                        "brivo",
                        "butterflymx",
                        "schlage",
                        "smartthings",
                        "yale",
                        "genie",
                        "doorking",
                        "salto",
                        "lockly",
                        "ttlock",
                        "linear",
                        "noiseaware",
                        "nuki",
                        "seam_relay_admin",
                        "igloo",
                        "kwikset",
                        "minut",
                        "my_2n",
                        "controlbyweb",
                        "nest",
                        "igloohome",
                        "ecobee",
                        "hubitat",
                        "four_suites",
                        "dormakaba_oracode",
                        "pti",
                        "wyze",
                        "seam_passport",
                        "visionline",
                        "assa_abloy_credential_service",
                        "seam_bridge",
                        "tedee",
                        "honeywell_resideo",
                        "latch",
                        "yale_access",
                        "hid_cm",
                        "google_nest"
                      ]
                    }
                  },
                  "provider_category": {
                    "type": "string",
                    "enum": [
                      "stable",
                      "consumer_smartlocks",
                      "thermostats",
                      "noise_sensors",
                      "access_control_systems",
                      "internal_beta"
                    ]
                  },
                  "custom_metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        { "type": "string", "maxLength": 500 },
                        { "type": "boolean" },
                        { "type": "string", "format": "null", "nullable": true }
                      ],
                      "nullable": true
                    }
                  },
                  "automatically_manage_new_devices": {
                    "default": true,
                    "type": "boolean"
                  },
                  "wait_for_device_creation": {
                    "default": false,
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "tags": ["/connect_webviews"],
        "operationId": "connectWebviewsCreatePost"
      }
    },
    "/connect_webviews/delete": {
      "post": {
        "x-fern-sdk-group-name": ["connect_webviews"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/connect_webviews/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connect_webview_id": { "type": "string", "format": "uuid" }
                },
                "required": ["connect_webview_id"]
              }
            }
          }
        },
        "tags": ["/connect_webviews"],
        "operationId": "connectWebviewsDeletePost"
      }
    },
    "/connect_webviews/get": {
      "post": {
        "x-fern-sdk-group-name": ["connect_webviews"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "connect_webview",
        "summary": "/connect_webviews/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connect_webview": {
                      "$ref": "#/components/schemas/connect_webview"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["connect_webview", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connect_webview_id": { "type": "string", "format": "uuid" }
                },
                "required": ["connect_webview_id"]
              }
            }
          }
        },
        "tags": ["/connect_webviews"],
        "operationId": "connectWebviewsGetPost"
      }
    },
    "/connect_webviews/list": {
      "post": {
        "x-fern-sdk-group-name": ["connect_webviews"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "connect_webviews",
        "summary": "/connect_webviews/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connect_webviews": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/connect_webview"
                      }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["connect_webviews", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identifier_key": { "type": "string" },
                  "custom_metadata_has": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [{ "type": "string" }, { "type": "boolean" }]
                    },
                    "description": "Returns devices where the webview's custom_metadata contains all of the provided key/value pairs."
                  },
                  "limit": {
                    "default": 500,
                    "type": "number",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": ["/connect_webviews"],
        "operationId": "connectWebviewsListPost"
      }
    },
    "/connected_accounts/delete": {
      "post": {
        "x-fern-sdk-group-name": ["connected_accounts"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/connected_accounts/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connected_account_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["connected_account_id"]
              }
            }
          }
        },
        "tags": ["/connected_accounts"],
        "operationId": "connectedAccountsDeletePost"
      }
    },
    "/connected_accounts/get": {
      "post": {
        "x-fern-sdk-group-name": ["connected_accounts"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "connected_account",
        "summary": "/connected_accounts/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connected_account": {
                      "$ref": "#/components/schemas/connected_account"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["connected_account", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "connected_account_id": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "required": ["connected_account_id"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "email": { "type": "string", "format": "email" }
                    },
                    "required": ["email"]
                  }
                ]
              }
            }
          }
        },
        "tags": ["/connected_accounts"],
        "operationId": "connectedAccountsGetPost"
      }
    },
    "/connected_accounts/list": {
      "post": {
        "x-fern-sdk-group-name": ["connected_accounts"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "connected_accounts",
        "summary": "/connected_accounts/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connected_accounts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/connected_account"
                      }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["connected_accounts", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "custom_metadata_has": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [{ "type": "string" }, { "type": "boolean" }]
                    },
                    "description": "Returns devices where the account's custom_metadata contains all of the provided key/value pairs."
                  }
                }
              }
            }
          }
        },
        "tags": ["/connected_accounts"],
        "operationId": "connectedAccountsListPost"
      }
    },
    "/connected_accounts/update": {
      "post": {
        "x-fern-sdk-group-name": ["connected_accounts"],
        "x-fern-sdk-method-name": "update",
        "x-fern-sdk-return-value": "connected_account",
        "summary": "/connected_accounts/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connected_account": {
                      "$ref": "#/components/schemas/connected_account"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["connected_account", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connected_account_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "automatically_manage_new_devices": { "type": "boolean" },
                  "custom_metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        { "type": "string", "maxLength": 500 },
                        { "type": "boolean" },
                        { "type": "string", "format": "null", "nullable": true }
                      ],
                      "nullable": true
                    }
                  }
                },
                "required": ["connected_account_id"]
              }
            }
          }
        },
        "tags": ["/connected_accounts"],
        "operationId": "connectedAccountsUpdatePost"
      }
    },
    "/devices/delete": {
      "post": {
        "x-fern-sdk-group-name": ["devices"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/devices/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesDeletePost"
      }
    },
    "/devices/get": {
      "post": {
        "x-fern-sdk-group-name": ["devices"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "device",
        "summary": "/devices/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "device": { "$ref": "#/components/schemas/device" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["device", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "name": { "type": "string" }
                }
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesGetPost"
      }
    },
    "/devices/list": {
      "post": {
        "x-fern-sdk-group-name": ["devices"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "devices",
        "summary": "/devices/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "devices": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/device" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["devices", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connected_account_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "List all devices owned by this connected account"
                  },
                  "connected_account_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "connect_webview_id": { "type": "string", "format": "uuid" },
                  "device_type": {
                    "oneOf": [
                      {
                        "type": "string",
                        "enum": [
                          "akuvox_lock",
                          "august_lock",
                          "brivo_access_point",
                          "butterflymx_panel",
                          "avigilon_alta_entry",
                          "doorking_lock",
                          "genie_door",
                          "igloo_lock",
                          "linear_lock",
                          "lockly_lock",
                          "kwikset_lock",
                          "nuki_lock",
                          "salto_lock",
                          "schlage_lock",
                          "seam_relay",
                          "smartthings_lock",
                          "wyze_lock",
                          "yale_lock",
                          "two_n_intercom",
                          "controlbyweb_device",
                          "ttlock_lock",
                          "igloohome_lock",
                          "hubitat_lock",
                          "four_suites_door",
                          "dormakaba_oracode_door",
                          "tedee_lock"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": ["noiseaware_activity_zone", "minut_sensor"]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "ecobee_thermostat",
                          "nest_thermostat",
                          "honeywell_resideo_thermostat"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": ["ios_phone", "android_phone"]
                      }
                    ]
                  },
                  "device_types": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "akuvox_lock",
                            "august_lock",
                            "brivo_access_point",
                            "butterflymx_panel",
                            "avigilon_alta_entry",
                            "doorking_lock",
                            "genie_door",
                            "igloo_lock",
                            "linear_lock",
                            "lockly_lock",
                            "kwikset_lock",
                            "nuki_lock",
                            "salto_lock",
                            "schlage_lock",
                            "seam_relay",
                            "smartthings_lock",
                            "wyze_lock",
                            "yale_lock",
                            "two_n_intercom",
                            "controlbyweb_device",
                            "ttlock_lock",
                            "igloohome_lock",
                            "hubitat_lock",
                            "four_suites_door",
                            "dormakaba_oracode_door",
                            "tedee_lock"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": ["noiseaware_activity_zone", "minut_sensor"]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "ecobee_thermostat",
                            "nest_thermostat",
                            "honeywell_resideo_thermostat"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": ["ios_phone", "android_phone"]
                        }
                      ]
                    }
                  },
                  "manufacturer": {
                    "type": "string",
                    "enum": [
                      "akuvox",
                      "august",
                      "avigilon_alta",
                      "brivo",
                      "butterflymx",
                      "doorking",
                      "four_suites",
                      "genie",
                      "igloo",
                      "keywe",
                      "kwikset",
                      "linear",
                      "lockly",
                      "nuki",
                      "philia",
                      "salto",
                      "samsung",
                      "schlage",
                      "seam",
                      "unknown",
                      "wyze",
                      "yale",
                      "minut",
                      "two_n",
                      "ttlock",
                      "nest",
                      "igloohome",
                      "ecobee",
                      "hubitat",
                      "controlbyweb",
                      "smartthings",
                      "dormakaba_oracode",
                      "tedee",
                      "honeywell_resideo"
                    ]
                  },
                  "device_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "limit": {
                    "default": 500,
                    "type": "number",
                    "nullable": true
                  },
                  "created_before": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "user_identifier_key": { "type": "string" },
                  "custom_metadata_has": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [{ "type": "string" }, { "type": "boolean" }]
                    }
                  },
                  "include_if": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "can_remotely_unlock",
                        "can_remotely_lock",
                        "can_program_offline_access_codes",
                        "can_program_online_access_codes",
                        "can_simulate_removal",
                        "can_simulate_connection",
                        "can_simulate_disconnection"
                      ]
                    }
                  },
                  "exclude_if": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "can_remotely_unlock",
                        "can_remotely_lock",
                        "can_program_offline_access_codes",
                        "can_program_online_access_codes",
                        "can_simulate_removal",
                        "can_simulate_connection",
                        "can_simulate_disconnection"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesListPost"
      }
    },
    "/devices/list_device_providers": {
      "post": {
        "x-fern-sdk-group-name": ["devices"],
        "x-fern-sdk-method-name": "list_device_providers",
        "x-fern-sdk-return-value": "device_providers",
        "summary": "/devices/list_device_providers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "device_providers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/device_provider"
                      }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["device_providers", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider_category": {
                    "type": "string",
                    "enum": [
                      "stable",
                      "consumer_smartlocks",
                      "thermostats",
                      "noise_sensors",
                      "access_control_systems"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesListDeviceProvidersPost"
      }
    },
    "/devices/update": {
      "patch": {
        "x-fern-ignore": true,
        "summary": "/devices/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "nullable": true }
                    }
                  },
                  "name": { "type": "string", "nullable": true },
                  "is_managed": { "default": true, "type": "boolean" },
                  "custom_metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        { "type": "string", "maxLength": 500 },
                        { "type": "boolean" },
                        { "type": "string", "format": "null", "nullable": true }
                      ],
                      "nullable": true
                    }
                  }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesUpdatePatch"
      },
      "post": {
        "x-fern-sdk-group-name": ["devices"],
        "x-fern-sdk-method-name": "update",
        "summary": "/devices/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "nullable": true }
                    }
                  },
                  "name": { "type": "string", "nullable": true },
                  "is_managed": { "default": true, "type": "boolean" },
                  "custom_metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        { "type": "string", "maxLength": 500 },
                        { "type": "boolean" },
                        { "type": "string", "format": "null", "nullable": true }
                      ],
                      "nullable": true
                    }
                  }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesUpdatePost"
      }
    },
    "/events/get": {
      "post": {
        "x-fern-sdk-group-name": ["events"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "event",
        "summary": "/events/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "event": { "$ref": "#/components/schemas/event" },
                    "message": { "type": "string" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event_id": { "type": "string", "format": "uuid" },
                  "event_type": { "type": "string" },
                  "device_id": { "type": "string", "format": "uuid" }
                }
              }
            }
          }
        },
        "tags": ["/events"],
        "operationId": "eventsGetPost"
      }
    },
    "/events/list": {
      "post": {
        "x-fern-sdk-group-name": ["events"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "events",
        "summary": "/events/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/event" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["events", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "since": { "type": "string" },
                  "between": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        { "type": "string" },
                        { "type": "string", "format": "date-time" }
                      ]
                    },
                    "minItems": 2,
                    "maxItems": 2
                  },
                  "device_id": { "type": "string", "format": "uuid" },
                  "device_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "access_code_id": { "type": "string", "format": "uuid" },
                  "access_code_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "event_type": {
                    "type": "string",
                    "enum": [
                      "device.accessory_keypad_connected",
                      "device.accessory_keypad_disconnected",
                      "device.connected",
                      "device.unmanaged.connected",
                      "device.disconnected",
                      "device.unmanaged.disconnected",
                      "device.converted_to_unmanaged",
                      "device.unmanaged.converted_to_managed",
                      "device.removed",
                      "device.deleted",
                      "device.tampered",
                      "device.low_battery",
                      "device.battery_status_changed",
                      "device.third_party_integration_detected",
                      "device.third_party_integration_no_longer_detected",
                      "device.salto.privacy_mode_activated",
                      "device.salto.privacy_mode_deactivated",
                      "device.connection_became_flaky",
                      "device.connection_stabilized",
                      "device.error.subscription_required",
                      "device.error.subscription_required.resolved",
                      "access_code.created",
                      "access_code.changed",
                      "access_code.scheduled_on_device",
                      "access_code.set_on_device",
                      "access_code.deleted",
                      "access_code.removed_from_device",
                      "access_code.failed_to_set_on_device",
                      "access_code.delay_in_setting_on_device",
                      "access_code.failed_to_remove_from_device",
                      "access_code.delay_in_removing_from_device",
                      "access_code.deleted_external_to_seam",
                      "access_code.modified_external_to_seam",
                      "access_code.unmanaged.converted_to_managed",
                      "access_code.unmanaged.failed_to_convert_to_managed",
                      "access_code.unmanaged.created",
                      "access_code.unmanaged.removed",
                      "lock.locked",
                      "lock.unlocked",
                      "phone.deactivated",
                      "connected_account.connected",
                      "connected_account.successful_login",
                      "connected_account.created",
                      "connected_account.deleted",
                      "connected_account.disconnected",
                      "connected_account.completed_first_sync",
                      "connected_account.completed_first_sync_after_reconnection",
                      "noise_sensor.noise_threshold_triggered",
                      "access_code.backup_access_code_pulled",
                      "acs_system.connected",
                      "acs_user.deleted",
                      "acs_credential.deleted",
                      "enrollment_automation.deleted",
                      "client_session.deleted",
                      "action_attempt.lock_door.succeeded",
                      "action_attempt.lock_door.failed",
                      "action_attempt.unlock_door.succeeded",
                      "action_attempt.unlock_door.failed"
                    ]
                  },
                  "event_types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "device.accessory_keypad_connected",
                        "device.accessory_keypad_disconnected",
                        "device.connected",
                        "device.unmanaged.connected",
                        "device.disconnected",
                        "device.unmanaged.disconnected",
                        "device.converted_to_unmanaged",
                        "device.unmanaged.converted_to_managed",
                        "device.removed",
                        "device.deleted",
                        "device.tampered",
                        "device.low_battery",
                        "device.battery_status_changed",
                        "device.third_party_integration_detected",
                        "device.third_party_integration_no_longer_detected",
                        "device.salto.privacy_mode_activated",
                        "device.salto.privacy_mode_deactivated",
                        "device.connection_became_flaky",
                        "device.connection_stabilized",
                        "device.error.subscription_required",
                        "device.error.subscription_required.resolved",
                        "access_code.created",
                        "access_code.changed",
                        "access_code.scheduled_on_device",
                        "access_code.set_on_device",
                        "access_code.deleted",
                        "access_code.removed_from_device",
                        "access_code.failed_to_set_on_device",
                        "access_code.delay_in_setting_on_device",
                        "access_code.failed_to_remove_from_device",
                        "access_code.delay_in_removing_from_device",
                        "access_code.deleted_external_to_seam",
                        "access_code.modified_external_to_seam",
                        "access_code.unmanaged.converted_to_managed",
                        "access_code.unmanaged.failed_to_convert_to_managed",
                        "access_code.unmanaged.created",
                        "access_code.unmanaged.removed",
                        "lock.locked",
                        "lock.unlocked",
                        "phone.deactivated",
                        "connected_account.connected",
                        "connected_account.successful_login",
                        "connected_account.created",
                        "connected_account.deleted",
                        "connected_account.disconnected",
                        "connected_account.completed_first_sync",
                        "connected_account.completed_first_sync_after_reconnection",
                        "noise_sensor.noise_threshold_triggered",
                        "access_code.backup_access_code_pulled",
                        "acs_system.connected",
                        "acs_user.deleted",
                        "acs_credential.deleted",
                        "enrollment_automation.deleted",
                        "client_session.deleted",
                        "action_attempt.lock_door.succeeded",
                        "action_attempt.lock_door.failed",
                        "action_attempt.unlock_door.succeeded",
                        "action_attempt.unlock_door.failed"
                      ]
                    }
                  },
                  "connected_account_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "limit": {
                    "default": 500,
                    "type": "number",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": ["/events"],
        "operationId": "eventsListPost"
      }
    },
    "/locks/get": {
      "post": {
        "x-fern-sdk-group-name": ["locks"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "device",
        "summary": "/locks/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lock": { "$ref": "#/components/schemas/device" },
                    "device": { "$ref": "#/components/schemas/device" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["lock", "device", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "name": { "type": "string" }
                }
              }
            }
          }
        },
        "tags": ["/locks"],
        "operationId": "locksGetPost"
      }
    },
    "/locks/list": {
      "post": {
        "x-fern-sdk-group-name": ["locks"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "devices",
        "summary": "/locks/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "locks": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/device" }
                    },
                    "devices": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/device" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["locks", "devices", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connected_account_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "List all devices owned by this connected account"
                  },
                  "connected_account_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "connect_webview_id": { "type": "string", "format": "uuid" },
                  "device_type": {
                    "oneOf": [
                      {
                        "type": "string",
                        "enum": [
                          "akuvox_lock",
                          "august_lock",
                          "brivo_access_point",
                          "butterflymx_panel",
                          "avigilon_alta_entry",
                          "doorking_lock",
                          "genie_door",
                          "igloo_lock",
                          "linear_lock",
                          "lockly_lock",
                          "kwikset_lock",
                          "nuki_lock",
                          "salto_lock",
                          "schlage_lock",
                          "seam_relay",
                          "smartthings_lock",
                          "wyze_lock",
                          "yale_lock",
                          "two_n_intercom",
                          "controlbyweb_device",
                          "ttlock_lock",
                          "igloohome_lock",
                          "hubitat_lock",
                          "four_suites_door",
                          "dormakaba_oracode_door",
                          "tedee_lock"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": ["noiseaware_activity_zone", "minut_sensor"]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "ecobee_thermostat",
                          "nest_thermostat",
                          "honeywell_resideo_thermostat"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": ["ios_phone", "android_phone"]
                      }
                    ]
                  },
                  "device_types": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "akuvox_lock",
                            "august_lock",
                            "brivo_access_point",
                            "butterflymx_panel",
                            "avigilon_alta_entry",
                            "doorking_lock",
                            "genie_door",
                            "igloo_lock",
                            "linear_lock",
                            "lockly_lock",
                            "kwikset_lock",
                            "nuki_lock",
                            "salto_lock",
                            "schlage_lock",
                            "seam_relay",
                            "smartthings_lock",
                            "wyze_lock",
                            "yale_lock",
                            "two_n_intercom",
                            "controlbyweb_device",
                            "ttlock_lock",
                            "igloohome_lock",
                            "hubitat_lock",
                            "four_suites_door",
                            "dormakaba_oracode_door",
                            "tedee_lock"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": ["noiseaware_activity_zone", "minut_sensor"]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "ecobee_thermostat",
                            "nest_thermostat",
                            "honeywell_resideo_thermostat"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": ["ios_phone", "android_phone"]
                        }
                      ]
                    }
                  },
                  "manufacturer": {
                    "type": "string",
                    "enum": [
                      "akuvox",
                      "august",
                      "avigilon_alta",
                      "brivo",
                      "butterflymx",
                      "doorking",
                      "four_suites",
                      "genie",
                      "igloo",
                      "keywe",
                      "kwikset",
                      "linear",
                      "lockly",
                      "nuki",
                      "philia",
                      "salto",
                      "samsung",
                      "schlage",
                      "seam",
                      "unknown",
                      "wyze",
                      "yale",
                      "minut",
                      "two_n",
                      "ttlock",
                      "nest",
                      "igloohome",
                      "ecobee",
                      "hubitat",
                      "controlbyweb",
                      "smartthings",
                      "dormakaba_oracode",
                      "tedee",
                      "honeywell_resideo"
                    ]
                  },
                  "device_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "limit": {
                    "default": 500,
                    "type": "number",
                    "nullable": true
                  },
                  "created_before": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "user_identifier_key": { "type": "string" },
                  "custom_metadata_has": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [{ "type": "string" }, { "type": "boolean" }]
                    }
                  },
                  "include_if": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "can_remotely_unlock",
                        "can_remotely_lock",
                        "can_program_offline_access_codes",
                        "can_program_online_access_codes",
                        "can_simulate_removal",
                        "can_simulate_connection",
                        "can_simulate_disconnection"
                      ]
                    }
                  },
                  "exclude_if": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "can_remotely_unlock",
                        "can_remotely_lock",
                        "can_program_offline_access_codes",
                        "can_program_online_access_codes",
                        "can_simulate_removal",
                        "can_simulate_connection",
                        "can_simulate_disconnection"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["/locks"],
        "operationId": "locksListPost"
      }
    },
    "/locks/lock_door": {
      "post": {
        "x-fern-sdk-group-name": ["locks"],
        "x-fern-sdk-method-name": "lock_door",
        "x-fern-sdk-return-value": "action_attempt",
        "summary": "/locks/lock_door",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/locks"],
        "operationId": "locksLockDoorPost"
      }
    },
    "/locks/unlock_door": {
      "post": {
        "x-fern-sdk-group-name": ["locks"],
        "x-fern-sdk-method-name": "unlock_door",
        "x-fern-sdk-return-value": "action_attempt",
        "summary": "/locks/unlock_door",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/locks"],
        "operationId": "locksUnlockDoorPost"
      }
    },
    "/networks/get": {
      "post": {
        "x-fern-sdk-group-name": ["networks"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "network",
        "summary": "/networks/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "network": { "$ref": "#/components/schemas/network" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["network", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "network_id": { "type": "string", "format": "uuid" }
                },
                "required": ["network_id"]
              }
            }
          }
        },
        "tags": ["/networks"],
        "operationId": "networksGetPost"
      }
    },
    "/networks/list": {
      "post": {
        "x-fern-sdk-group-name": ["networks"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "networks",
        "summary": "/networks/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "networks": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/network" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["networks", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "type": "object", "properties": {} }
            }
          }
        },
        "tags": ["/networks"],
        "operationId": "networksListPost"
      }
    },
    "/phones/deactivate": {
      "post": {
        "x-fern-sdk-group-name": ["phones"],
        "x-fern-sdk-method-name": "deactivate",
        "summary": "/phones/deactivate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "device_id": { "type": "string" } },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/phones"],
        "operationId": "phonesDeactivatePost"
      }
    },
    "/phones/list": {
      "post": {
        "x-fern-sdk-group-name": ["phones"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "phones",
        "summary": "/phones/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phones": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/phone" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["phones", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "owner_user_identity_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "tags": ["/phones"],
        "operationId": "phonesListPost"
      }
    },
    "/thermostats/cool": {
      "post": {
        "x-fern-sdk-group-name": ["thermostats"],
        "x-fern-sdk-method-name": "cool",
        "x-fern-sdk-return-value": "action_attempt",
        "summary": "/thermostats/cool",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "cooling_set_point_celsius": { "type": "number" },
                  "cooling_set_point_fahrenheit": { "type": "number" },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsCoolPost"
      }
    },
    "/thermostats/get": {
      "post": {
        "x-fern-sdk-group-name": ["thermostats"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "thermostat",
        "summary": "/thermostats/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "thermostat": { "$ref": "#/components/schemas/device" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["thermostat", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "name": { "type": "string" }
                }
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsGetPost"
      }
    },
    "/thermostats/heat": {
      "post": {
        "x-fern-sdk-group-name": ["thermostats"],
        "x-fern-sdk-method-name": "heat",
        "x-fern-sdk-return-value": "action_attempt",
        "summary": "/thermostats/heat",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "heating_set_point_celsius": { "type": "number" },
                  "heating_set_point_fahrenheit": { "type": "number" },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsHeatPost"
      }
    },
    "/thermostats/heat_cool": {
      "post": {
        "x-fern-sdk-group-name": ["thermostats"],
        "x-fern-sdk-method-name": "heat_cool",
        "x-fern-sdk-return-value": "action_attempt",
        "summary": "/thermostats/heat_cool",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "heating_set_point_celsius": { "type": "number" },
                  "heating_set_point_fahrenheit": { "type": "number" },
                  "cooling_set_point_celsius": { "type": "number" },
                  "cooling_set_point_fahrenheit": { "type": "number" },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsHeatCoolPost"
      }
    },
    "/thermostats/list": {
      "post": {
        "x-fern-sdk-group-name": ["thermostats"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "thermostats",
        "summary": "/thermostats/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "thermostats": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/device" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["thermostats", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "client_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connected_account_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "List all devices owned by this connected account"
                  },
                  "connected_account_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "connect_webview_id": { "type": "string", "format": "uuid" },
                  "device_type": {
                    "oneOf": [
                      {
                        "type": "string",
                        "enum": [
                          "akuvox_lock",
                          "august_lock",
                          "brivo_access_point",
                          "butterflymx_panel",
                          "avigilon_alta_entry",
                          "doorking_lock",
                          "genie_door",
                          "igloo_lock",
                          "linear_lock",
                          "lockly_lock",
                          "kwikset_lock",
                          "nuki_lock",
                          "salto_lock",
                          "schlage_lock",
                          "seam_relay",
                          "smartthings_lock",
                          "wyze_lock",
                          "yale_lock",
                          "two_n_intercom",
                          "controlbyweb_device",
                          "ttlock_lock",
                          "igloohome_lock",
                          "hubitat_lock",
                          "four_suites_door",
                          "dormakaba_oracode_door",
                          "tedee_lock"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": ["noiseaware_activity_zone", "minut_sensor"]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "ecobee_thermostat",
                          "nest_thermostat",
                          "honeywell_resideo_thermostat"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": ["ios_phone", "android_phone"]
                      }
                    ]
                  },
                  "device_types": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "akuvox_lock",
                            "august_lock",
                            "brivo_access_point",
                            "butterflymx_panel",
                            "avigilon_alta_entry",
                            "doorking_lock",
                            "genie_door",
                            "igloo_lock",
                            "linear_lock",
                            "lockly_lock",
                            "kwikset_lock",
                            "nuki_lock",
                            "salto_lock",
                            "schlage_lock",
                            "seam_relay",
                            "smartthings_lock",
                            "wyze_lock",
                            "yale_lock",
                            "two_n_intercom",
                            "controlbyweb_device",
                            "ttlock_lock",
                            "igloohome_lock",
                            "hubitat_lock",
                            "four_suites_door",
                            "dormakaba_oracode_door",
                            "tedee_lock"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": ["noiseaware_activity_zone", "minut_sensor"]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "ecobee_thermostat",
                            "nest_thermostat",
                            "honeywell_resideo_thermostat"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": ["ios_phone", "android_phone"]
                        }
                      ]
                    }
                  },
                  "manufacturer": {
                    "type": "string",
                    "enum": [
                      "akuvox",
                      "august",
                      "avigilon_alta",
                      "brivo",
                      "butterflymx",
                      "doorking",
                      "four_suites",
                      "genie",
                      "igloo",
                      "keywe",
                      "kwikset",
                      "linear",
                      "lockly",
                      "nuki",
                      "philia",
                      "salto",
                      "samsung",
                      "schlage",
                      "seam",
                      "unknown",
                      "wyze",
                      "yale",
                      "minut",
                      "two_n",
                      "ttlock",
                      "nest",
                      "igloohome",
                      "ecobee",
                      "hubitat",
                      "controlbyweb",
                      "smartthings",
                      "dormakaba_oracode",
                      "tedee",
                      "honeywell_resideo"
                    ]
                  },
                  "device_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "limit": {
                    "default": 500,
                    "type": "number",
                    "nullable": true
                  },
                  "created_before": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "user_identifier_key": { "type": "string" },
                  "custom_metadata_has": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [{ "type": "string" }, { "type": "boolean" }]
                    }
                  },
                  "include_if": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "can_remotely_unlock",
                        "can_remotely_lock",
                        "can_program_offline_access_codes",
                        "can_program_online_access_codes",
                        "can_simulate_removal",
                        "can_simulate_connection",
                        "can_simulate_disconnection"
                      ]
                    }
                  },
                  "exclude_if": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "can_remotely_unlock",
                        "can_remotely_lock",
                        "can_program_offline_access_codes",
                        "can_program_online_access_codes",
                        "can_simulate_removal",
                        "can_simulate_connection",
                        "can_simulate_disconnection"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsListPost"
      }
    },
    "/thermostats/off": {
      "post": {
        "x-fern-sdk-group-name": ["thermostats"],
        "x-fern-sdk-method-name": "off",
        "x-fern-sdk-return-value": "action_attempt",
        "summary": "/thermostats/off",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsOffPost"
      }
    },
    "/thermostats/set_fan_mode": {
      "post": {
        "x-fern-sdk-group-name": ["thermostats"],
        "x-fern-sdk-method-name": "set_fan_mode",
        "x-fern-sdk-return-value": "action_attempt",
        "summary": "/thermostats/set_fan_mode",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "fan_mode": { "type": "string", "enum": ["auto", "on"] },
                  "fan_mode_setting": {
                    "type": "string",
                    "enum": ["auto", "on"]
                  },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsSetFanModePost"
      }
    },
    "/thermostats/update": {
      "post": {
        "x-fern-sdk-group-name": ["thermostats"],
        "x-fern-sdk-method-name": "update",
        "summary": "/thermostats/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "client_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "default_climate_setting": {
                    "type": "object",
                    "properties": {
                      "automatic_heating_enabled": { "type": "boolean" },
                      "automatic_cooling_enabled": { "type": "boolean" },
                      "hvac_mode_setting": {
                        "type": "string",
                        "enum": ["off", "heat", "cool", "heat_cool"]
                      },
                      "cooling_set_point_celsius": { "type": "number" },
                      "heating_set_point_celsius": { "type": "number" },
                      "cooling_set_point_fahrenheit": { "type": "number" },
                      "heating_set_point_fahrenheit": { "type": "number" },
                      "manual_override_allowed": { "type": "boolean" }
                    }
                  }
                },
                "required": ["device_id", "default_climate_setting"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsUpdatePost"
      },
      "patch": {
        "x-fern-ignore": true,
        "summary": "/thermostats/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "client_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "default_climate_setting": {
                    "type": "object",
                    "properties": {
                      "automatic_heating_enabled": { "type": "boolean" },
                      "automatic_cooling_enabled": { "type": "boolean" },
                      "hvac_mode_setting": {
                        "type": "string",
                        "enum": ["off", "heat", "cool", "heat_cool"]
                      },
                      "cooling_set_point_celsius": { "type": "number" },
                      "heating_set_point_celsius": { "type": "number" },
                      "cooling_set_point_fahrenheit": { "type": "number" },
                      "heating_set_point_fahrenheit": { "type": "number" },
                      "manual_override_allowed": { "type": "boolean" }
                    }
                  }
                },
                "required": ["device_id", "default_climate_setting"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsUpdatePatch"
      }
    },
    "/user_identities/add_acs_user": {
      "put": {
        "x-fern-ignore": true,
        "summary": "/user_identities/add_acs_user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["user_identity_id", "acs_user_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesAddAcsUserPut"
      },
      "post": {
        "x-fern-sdk-group-name": ["user_identities"],
        "x-fern-sdk-method-name": "add_acs_user",
        "summary": "/user_identities/add_acs_user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["user_identity_id", "acs_user_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesAddAcsUserPost"
      }
    },
    "/user_identities/create": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities"],
        "x-fern-sdk-method-name": "create",
        "x-fern-sdk-return-value": "user_identity",
        "summary": "/user_identities/create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_identity": {
                      "$ref": "#/components/schemas/user_identity"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["user_identity", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_key": {
                    "type": "string",
                    "minLength": 1,
                    "nullable": true
                  },
                  "email_address": {
                    "type": "string",
                    "format": "email",
                    "nullable": true
                  },
                  "phone_number": { "type": "string", "nullable": true },
                  "full_name": {
                    "type": "string",
                    "minLength": 1,
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesCreatePost"
      }
    },
    "/user_identities/delete": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/user_identities/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" }
                },
                "required": ["user_identity_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesDeletePost"
      }
    },
    "/user_identities/get": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "user_identity",
        "summary": "/user_identities/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_identity": {
                      "$ref": "#/components/schemas/user_identity"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["user_identity", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "user_identity_id": { "type": "string", "format": "uuid" }
                    },
                    "required": ["user_identity_id"]
                  },
                  {
                    "type": "object",
                    "properties": { "user_identity_key": { "type": "string" } },
                    "required": ["user_identity_key"]
                  }
                ]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesGetPost"
      }
    },
    "/user_identities/grant_access_to_device": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities"],
        "x-fern-sdk-method-name": "grant_access_to_device",
        "summary": "/user_identities/grant_access_to_device",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "device_id": { "type": "string", "format": "uuid" }
                },
                "required": ["user_identity_id", "device_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesGrantAccessToDevicePost"
      },
      "put": {
        "x-fern-ignore": true,
        "summary": "/user_identities/grant_access_to_device",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "device_id": { "type": "string", "format": "uuid" }
                },
                "required": ["user_identity_id", "device_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesGrantAccessToDevicePut"
      }
    },
    "/user_identities/list": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "user_identities",
        "summary": "/user_identities/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_identities": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/user_identity" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["user_identities", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credential_manager_acs_system_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesListPost"
      }
    },
    "/user_identities/list_accessible_devices": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities"],
        "x-fern-sdk-method-name": "list_accessible_devices",
        "x-fern-sdk-return-value": "devices",
        "summary": "/user_identities/list_accessible_devices",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "devices": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/device" }
                    },
                    "accessible_devices": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/device" },
                      "description": "\n      ---\n      deprecated: use devices.\n      ---\n    "
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["devices", "accessible_devices", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" }
                },
                "required": ["user_identity_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesListAccessibleDevicesPost"
      }
    },
    "/user_identities/list_acs_systems": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities"],
        "x-fern-sdk-method-name": "list_acs_systems",
        "x-fern-sdk-return-value": "acs_systems",
        "summary": "/user_identities/list_acs_systems",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_systems": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/acs_system" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_systems", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" }
                },
                "required": ["user_identity_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesListAcsSystemsPost"
      }
    },
    "/user_identities/list_acs_users": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities"],
        "x-fern-sdk-method-name": "list_acs_users",
        "x-fern-sdk-return-value": "acs_users",
        "summary": "/user_identities/list_acs_users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_users": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/acs_user" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_users", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" }
                },
                "required": ["user_identity_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesListAcsUsersPost"
      }
    },
    "/user_identities/remove_acs_user": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities"],
        "x-fern-sdk-method-name": "remove_acs_user",
        "summary": "/user_identities/remove_acs_user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["user_identity_id", "acs_user_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesRemoveAcsUserPost"
      }
    },
    "/user_identities/revoke_access_to_device": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities"],
        "x-fern-sdk-method-name": "revoke_access_to_device",
        "summary": "/user_identities/revoke_access_to_device",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "device_id": { "type": "string", "format": "uuid" }
                },
                "required": ["user_identity_id", "device_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesRevokeAccessToDevicePost"
      }
    },
    "/user_identities/update": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities"],
        "x-fern-sdk-method-name": "update",
        "summary": "/user_identities/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "user_identity_key": {
                    "type": "string",
                    "minLength": 1,
                    "nullable": true
                  },
                  "email_address": {
                    "type": "string",
                    "format": "email",
                    "nullable": true
                  },
                  "phone_number": { "type": "string", "nullable": true },
                  "full_name": {
                    "type": "string",
                    "minLength": 1,
                    "nullable": true
                  }
                },
                "required": ["user_identity_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesUpdatePost"
      },
      "patch": {
        "x-fern-ignore": true,
        "summary": "/user_identities/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "user_identity_key": {
                    "type": "string",
                    "minLength": 1,
                    "nullable": true
                  },
                  "email_address": {
                    "type": "string",
                    "format": "email",
                    "nullable": true
                  },
                  "phone_number": { "type": "string", "nullable": true },
                  "full_name": {
                    "type": "string",
                    "minLength": 1,
                    "nullable": true
                  }
                },
                "required": ["user_identity_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesUpdatePatch"
      }
    },
    "/webhooks/create": {
      "post": {
        "x-fern-sdk-group-name": ["webhooks"],
        "x-fern-sdk-method-name": "create",
        "x-fern-sdk-return-value": "webhook",
        "summary": "/webhooks/create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhook": { "$ref": "#/components/schemas/webhook" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["webhook", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": { "type": "string", "format": "uri" },
                  "event_types": {
                    "default": ["*"],
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["url"]
              }
            }
          }
        },
        "tags": ["/webhooks"],
        "operationId": "webhooksCreatePost"
      }
    },
    "/webhooks/delete": {
      "post": {
        "x-fern-sdk-group-name": ["webhooks"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/webhooks/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "webhook_id": { "type": "string" } },
                "required": ["webhook_id"]
              }
            }
          }
        },
        "tags": ["/webhooks"],
        "operationId": "webhooksDeletePost"
      }
    },
    "/webhooks/get": {
      "post": {
        "x-fern-sdk-group-name": ["webhooks"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "webhook",
        "summary": "/webhooks/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhook": { "$ref": "#/components/schemas/webhook" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["webhook", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "webhook_id": { "type": "string" } },
                "required": ["webhook_id"]
              }
            }
          }
        },
        "tags": ["/webhooks"],
        "operationId": "webhooksGetPost"
      }
    },
    "/webhooks/list": {
      "post": {
        "x-fern-sdk-group-name": ["webhooks"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "webhooks",
        "summary": "/webhooks/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhooks": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/webhook" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["webhooks", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "tags": ["/webhooks"],
        "operationId": "webhooksListPost"
      },
      "get": {
        "x-fern-ignore": true,
        "summary": "/webhooks/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhooks": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/webhook" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["webhooks", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "tags": ["/webhooks"],
        "operationId": "webhooksListGet"
      }
    },
    "/webhooks/update": {
      "post": {
        "x-fern-sdk-group-name": ["webhooks"],
        "x-fern-sdk-method-name": "update",
        "summary": "/webhooks/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webhook_id": { "type": "string" },
                  "event_types": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["webhook_id", "event_types"]
              }
            }
          }
        },
        "tags": ["/webhooks"],
        "operationId": "webhooksUpdatePost"
      },
      "put": {
        "x-fern-ignore": true,
        "summary": "/webhooks/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webhook_id": { "type": "string" },
                  "event_types": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["webhook_id", "event_types"]
              }
            }
          }
        },
        "tags": ["/webhooks"],
        "operationId": "webhooksUpdatePut"
      }
    },
    "/workspaces/create": {
      "post": {
        "x-fern-sdk-group-name": ["workspaces"],
        "x-fern-sdk-method-name": "create",
        "x-fern-sdk-return-value": "workspace",
        "summary": "/workspaces/create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspace": { "$ref": "#/components/schemas/workspace" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["workspace", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [{ "pat_without_workspace": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "company_name": { "type": "string" },
                  "connect_partner_name": {
                    "type": "string",
                    "description": "\n    ---\n    deprecated: use company_name\n    ---\n  ",
                    "nullable": true
                  },
                  "is_sandbox": { "default": false, "type": "boolean" },
                  "webview_primary_button_color": { "type": "string" },
                  "webview_logo_shape": {
                    "type": "string",
                    "enum": ["circle", "square"]
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "tags": ["/workspaces"],
        "operationId": "workspacesCreatePost"
      }
    },
    "/workspaces/get": {
      "post": {
        "x-fern-sdk-group-name": ["workspaces"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "workspace",
        "summary": "/workspaces/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspace": { "$ref": "#/components/schemas/workspace" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["workspace", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "user_session": [] },
          { "client_session": [] },
          { "pat_with_workspace": [] }
        ],
        "tags": ["/workspaces"],
        "operationId": "workspacesGetPost"
      },
      "get": {
        "x-fern-ignore": true,
        "summary": "/workspaces/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspace": { "$ref": "#/components/schemas/workspace" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["workspace", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "user_session": [] },
          { "client_session": [] },
          { "pat_with_workspace": [] }
        ],
        "tags": ["/workspaces"],
        "operationId": "workspacesGetGet"
      }
    },
    "/workspaces/list": {
      "post": {
        "x-fern-sdk-group-name": ["workspaces"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "workspaces",
        "summary": "/workspaces/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspaces": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/workspace" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["workspaces", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "pat_without_workspace": [] },
          { "user_session": [] },
          { "user_session_without_workspace": [] },
          { "api_key": [] },
          { "client_session": [] }
        ],
        "tags": ["/workspaces"],
        "operationId": "workspacesListPost"
      },
      "get": {
        "x-fern-ignore": true,
        "summary": "/workspaces/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspaces": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/workspace" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["workspaces", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "pat_without_workspace": [] },
          { "user_session": [] },
          { "user_session_without_workspace": [] },
          { "api_key": [] },
          { "client_session": [] }
        ],
        "tags": ["/workspaces"],
        "operationId": "workspacesListGet"
      }
    },
    "/workspaces/reset_sandbox": {
      "post": {
        "x-fern-sdk-group-name": ["workspaces"],
        "x-fern-sdk-method-name": "reset_sandbox",
        "x-fern-sdk-return-value": "action_attempt",
        "summary": "/workspaces/reset_sandbox",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "tags": ["/workspaces"],
        "operationId": "workspacesResetSandboxPost"
      }
    },
    "/access_codes/simulate/create_unmanaged_access_code": {
      "post": {
        "x-fern-sdk-group-name": ["access_codes", "simulate"],
        "x-fern-sdk-method-name": "create_unmanaged_access_code",
        "x-fern-sdk-return-value": "access_code",
        "summary": "/access_codes/simulate/create_unmanaged_access_code",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_code": {
                      "$ref": "#/components/schemas/unmanaged_access_code"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["access_code", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "name": { "type": "string" },
                  "code": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 8,
                    "pattern": "^\\d+$"
                  }
                },
                "required": ["device_id", "name", "code"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesSimulateCreateUnmanagedAccessCodePost"
      }
    },
    "/access_codes/unmanaged/convert_to_managed": {
      "patch": {
        "x-fern-ignore": true,
        "summary": "/access_codes/unmanaged/convert_to_managed",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_code_id": { "type": "string", "format": "uuid" },
                  "is_external_modification_allowed": { "type": "boolean" },
                  "allow_external_modification": { "type": "boolean" },
                  "force": { "type": "boolean" },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["access_code_id"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesUnmanagedConvertToManagedPatch"
      },
      "post": {
        "x-fern-sdk-group-name": ["access_codes", "unmanaged"],
        "x-fern-sdk-method-name": "convert_to_managed",
        "summary": "/access_codes/unmanaged/convert_to_managed",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_code_id": { "type": "string", "format": "uuid" },
                  "is_external_modification_allowed": { "type": "boolean" },
                  "allow_external_modification": { "type": "boolean" },
                  "force": { "type": "boolean" },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["access_code_id"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesUnmanagedConvertToManagedPost"
      }
    },
    "/access_codes/unmanaged/delete": {
      "post": {
        "x-fern-sdk-group-name": ["access_codes", "unmanaged"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/access_codes/unmanaged/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_code_id": { "type": "string", "format": "uuid" },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["access_code_id"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesUnmanagedDeletePost"
      }
    },
    "/access_codes/unmanaged/get": {
      "post": {
        "x-fern-sdk-group-name": ["access_codes", "unmanaged"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "access_code",
        "summary": "/access_codes/unmanaged/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_code": {
                      "$ref": "#/components/schemas/unmanaged_access_code"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["access_code", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "access_code_id": { "type": "string", "format": "uuid" },
                  "code": { "type": "string" }
                }
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesUnmanagedGetPost"
      }
    },
    "/access_codes/unmanaged/list": {
      "post": {
        "x-fern-sdk-group-name": ["access_codes", "unmanaged"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "access_codes",
        "summary": "/access_codes/unmanaged/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_codes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/unmanaged_access_code"
                      }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["access_codes", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "user_identifier_key": { "type": "string" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesUnmanagedListPost"
      }
    },
    "/access_codes/unmanaged/update": {
      "post": {
        "x-fern-sdk-group-name": ["access_codes", "unmanaged"],
        "x-fern-sdk-method-name": "update",
        "summary": "/access_codes/unmanaged/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_code_id": { "type": "string", "format": "uuid" },
                  "is_managed": { "type": "boolean" },
                  "allow_external_modification": { "type": "boolean" },
                  "is_external_modification_allowed": { "type": "boolean" },
                  "force": { "type": "boolean" }
                },
                "required": ["access_code_id", "is_managed"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesUnmanagedUpdatePost"
      },
      "patch": {
        "x-fern-ignore": true,
        "summary": "/access_codes/unmanaged/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_code_id": { "type": "string", "format": "uuid" },
                  "is_managed": { "type": "boolean" },
                  "allow_external_modification": { "type": "boolean" },
                  "is_external_modification_allowed": { "type": "boolean" },
                  "force": { "type": "boolean" }
                },
                "required": ["access_code_id", "is_managed"]
              }
            }
          }
        },
        "tags": ["/access_codes"],
        "operationId": "accessCodesUnmanagedUpdatePatch"
      }
    },
    "/acs/access_groups/add_user": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "access_groups"],
        "x-fern-sdk-method-name": "add_user",
        "summary": "/acs/access_groups/add_user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_access_group_id": { "type": "string", "format": "uuid" },
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_access_group_id", "acs_user_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsAccessGroupsAddUserPost"
      },
      "put": {
        "x-fern-ignore": true,
        "summary": "/acs/access_groups/add_user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_access_group_id": { "type": "string", "format": "uuid" },
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_access_group_id", "acs_user_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsAccessGroupsAddUserPut"
      }
    },
    "/acs/access_groups/get": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "access_groups"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "acs_access_group",
        "summary": "/acs/access_groups/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_access_group": {
                      "$ref": "#/components/schemas/acs_access_group"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_access_group", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_access_group_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_access_group_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsAccessGroupsGetPost"
      }
    },
    "/acs/access_groups/list": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "access_groups"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "acs_access_groups",
        "summary": "/acs/access_groups/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_access_groups": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/acs_access_group"
                      }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_access_groups", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_system_id": { "type": "string", "format": "uuid" },
                  "acs_user_id": { "type": "string", "format": "uuid" }
                }
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsAccessGroupsListPost"
      }
    },
    "/acs/access_groups/list_users": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "access_groups"],
        "x-fern-sdk-method-name": "list_users",
        "x-fern-sdk-return-value": "acs_users",
        "summary": "/acs/access_groups/list_users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_users": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/acs_user" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_users", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_access_group_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_access_group_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsAccessGroupsListUsersPost"
      }
    },
    "/acs/access_groups/remove_user": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "access_groups"],
        "x-fern-sdk-method-name": "remove_user",
        "summary": "/acs/access_groups/remove_user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_access_group_id": { "type": "string", "format": "uuid" },
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_access_group_id", "acs_user_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsAccessGroupsRemoveUserPost"
      }
    },
    "/acs/credential_pools/list": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "credential_pools"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "acs_credential_pools",
        "summary": "/acs/credential_pools/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_credential_pools": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/acs_credential_pool"
                      }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_credential_pools", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_system_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_system_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialPoolsListPost"
      }
    },
    "/acs/credential_provisioning_automations/launch": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "credential_provisioning_automations"],
        "x-fern-sdk-method-name": "launch",
        "x-fern-sdk-return-value": "acs_credential_provisioning_automation",
        "summary": "/acs/credential_provisioning_automations/launch",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_credential_provisioning_automation": {
                      "$ref": "#/components/schemas/acs_credential_provisioning_automation"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_credential_provisioning_automation", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "credential_manager_acs_system_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "acs_credential_pool_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "create_credential_manager_user": { "type": "boolean" },
                  "credential_manager_acs_user_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "user_identity_id",
                  "credential_manager_acs_system_id"
                ]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialProvisioningAutomationsLaunchPost"
      }
    },
    "/acs/credentials/assign": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "credentials"],
        "x-fern-sdk-method-name": "assign",
        "summary": "/acs/credentials/assign",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_credential": {
                      "$ref": "#/components/schemas/acs_credential"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_credential", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" },
                  "acs_credential_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id", "acs_credential_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialsAssignPost"
      },
      "patch": {
        "x-fern-ignore": true,
        "summary": "/acs/credentials/assign",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_credential": {
                      "$ref": "#/components/schemas/acs_credential"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_credential", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" },
                  "acs_credential_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id", "acs_credential_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialsAssignPatch"
      }
    },
    "/acs/credentials/create": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "credentials"],
        "x-fern-sdk-method-name": "create",
        "x-fern-sdk-return-value": "acs_credential",
        "summary": "/acs/credentials/create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_credential": {
                      "$ref": "#/components/schemas/acs_credential"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_credential", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credential_manager_acs_system_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "acs_user_id": { "type": "string", "format": "uuid" },
                  "access_method": {
                    "type": "string",
                    "enum": ["code", "card", "mobile_key"]
                  },
                  "code": { "type": "string", "pattern": "^\\d+$" },
                  "is_multi_phone_sync_credential": {
                    "default": false,
                    "type": "boolean"
                  },
                  "allowed_acs_entrance_ids": {
                    "default": [],
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "visionline_metadata": {
                    "type": "object",
                    "properties": {
                      "assa_abloy_credential_service_mobile_endpoint_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "card_format": {
                        "type": "string",
                        "enum": ["TLCode", "rfid48"]
                      },
                      "card_function_type": {
                        "default": "guest",
                        "type": "string",
                        "enum": ["guest", "staff"]
                      },
                      "is_override_key": {
                        "type": "boolean",
                        "description": "\n          ---\n          deprecated: use override.\n          ---\n        "
                      },
                      "override": { "type": "boolean" },
                      "joiner_acs_credential_ids": {
                        "type": "array",
                        "items": { "type": "string", "format": "uuid" }
                      }
                    }
                  },
                  "starts_at": { "type": "string", "format": "date-time" },
                  "ends_at": { "type": "string", "format": "date-time" }
                },
                "required": ["acs_user_id", "access_method"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialsCreatePost"
      }
    },
    "/acs/credentials/delete": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "credentials"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/acs/credentials/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_credential_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_credential_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialsDeletePost"
      }
    },
    "/acs/credentials/get": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "credentials"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "acs_credential",
        "summary": "/acs/credentials/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_credential": {
                      "$ref": "#/components/schemas/acs_credential"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_credential", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_credential_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_credential_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialsGetPost"
      }
    },
    "/acs/credentials/list": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "credentials"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "acs_credentials",
        "summary": "/acs/credentials/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_credentials": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/acs_credential" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_credentials", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "acs_user_id": { "type": "string", "format": "uuid" }
                        },
                        "required": ["acs_user_id"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "acs_system_id": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "required": ["acs_system_id"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "acs_user_id": { "type": "string", "format": "uuid" },
                          "acs_system_id": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "required": ["acs_user_id", "acs_system_id"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "user_identity_id": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "required": ["user_identity_id"]
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "is_multi_phone_sync_credential": { "type": "boolean" }
                    }
                  }
                ]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialsListPost"
      }
    },
    "/acs/credentials/list_accessible_entrances": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "credentials"],
        "x-fern-sdk-method-name": "list_accessible_entrances",
        "x-fern-sdk-return-value": "acs_entrances",
        "summary": "/acs/credentials/list_accessible_entrances",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_entrances": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/acs_entrance" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_entrances", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_credential_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_credential_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialsListAccessibleEntrancesPost"
      }
    },
    "/acs/credentials/unassign": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "credentials"],
        "x-fern-sdk-method-name": "unassign",
        "summary": "/acs/credentials/unassign",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_credential": {
                      "$ref": "#/components/schemas/acs_credential"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_credential", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" },
                  "acs_credential_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id", "acs_credential_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialsUnassignPost"
      },
      "patch": {
        "x-fern-ignore": true,
        "summary": "/acs/credentials/unassign",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_credential": {
                      "$ref": "#/components/schemas/acs_credential"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_credential", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" },
                  "acs_credential_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id", "acs_credential_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialsUnassignPatch"
      }
    },
    "/acs/credentials/update": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "credentials"],
        "x-fern-sdk-method-name": "update",
        "summary": "/acs/credentials/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_credential": {
                      "$ref": "#/components/schemas/acs_credential"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_credential", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_credential_id": { "type": "string" },
                  "code": { "type": "string", "pattern": "^\\d+$" },
                  "ends_at": { "type": "string", "format": "date-time" }
                },
                "required": ["acs_credential_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialsUpdatePost"
      },
      "patch": {
        "x-fern-ignore": true,
        "summary": "/acs/credentials/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_credential": {
                      "$ref": "#/components/schemas/acs_credential"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_credential", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_credential_id": { "type": "string" },
                  "code": { "type": "string", "pattern": "^\\d+$" },
                  "ends_at": { "type": "string", "format": "date-time" }
                },
                "required": ["acs_credential_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsCredentialsUpdatePatch"
      }
    },
    "/acs/entrances/get": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "entrances"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "acs_entrance",
        "summary": "/acs/entrances/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_entrance": {
                      "$ref": "#/components/schemas/acs_entrance"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_entrance", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "access_token": [] },
          { "user_session": [] },
          { "client_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_entrance_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_entrance_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsEntrancesGetPost"
      }
    },
    "/acs/entrances/grant_access": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "entrances"],
        "x-fern-sdk-method-name": "grant_access",
        "summary": "/acs/entrances/grant_access",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_entrance_id": { "type": "string", "format": "uuid" },
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_entrance_id", "acs_user_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsEntrancesGrantAccessPost"
      }
    },
    "/acs/entrances/list": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "entrances"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "acs_entrances",
        "summary": "/acs/entrances/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_entrances": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/acs_entrance" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_entrances", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_system_id": { "type": "string", "format": "uuid" },
                  "acs_credential_id": { "type": "string", "format": "uuid" }
                }
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsEntrancesListPost"
      }
    },
    "/acs/entrances/list_credentials_with_access": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "entrances"],
        "x-fern-sdk-method-name": "list_credentials_with_access",
        "x-fern-sdk-return-value": "acs_credentials",
        "summary": "/acs/entrances/list_credentials_with_access",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_credentials": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/acs_credential" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_credentials", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_entrance_id": { "type": "string", "format": "uuid" },
                  "include_if": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": ["visionline_metadata.is_valid"]
                    }
                  }
                },
                "required": ["acs_entrance_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsEntrancesListCredentialsWithAccessPost"
      }
    },
    "/acs/systems/get": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "systems"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "acs_system",
        "summary": "/acs/systems/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_system": { "$ref": "#/components/schemas/acs_system" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_system", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_system_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_system_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsSystemsGetPost"
      }
    },
    "/acs/systems/list": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "systems"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "acs_systems",
        "summary": "/acs/systems/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_systems": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/acs_system" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_systems", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connected_account_id": { "type": "string", "format": "uuid" }
                }
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsSystemsListPost"
      }
    },
    "/acs/systems/list_compatible_credential_manager_acs_systems": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "systems"],
        "x-fern-sdk-method-name": "list_compatible_credential_manager_acs_systems",
        "x-fern-sdk-return-value": "acs_systems",
        "summary": "/acs/systems/list_compatible_credential_manager_acs_systems",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_systems": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/acs_system" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_systems", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_system_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_system_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsSystemsListCompatibleCredentialManagerAcsSystemsPost"
      }
    },
    "/acs/users/add_to_access_group": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "users"],
        "x-fern-sdk-method-name": "add_to_access_group",
        "summary": "/acs/users/add_to_access_group",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" },
                  "acs_access_group_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id", "acs_access_group_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersAddToAccessGroupPost"
      },
      "put": {
        "x-fern-ignore": true,
        "summary": "/acs/users/add_to_access_group",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" },
                  "acs_access_group_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id", "acs_access_group_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersAddToAccessGroupPut"
      }
    },
    "/acs/users/create": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "users"],
        "x-fern-sdk-method-name": "create",
        "x-fern-sdk-return-value": "acs_user",
        "summary": "/acs/users/create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_user": { "$ref": "#/components/schemas/acs_user" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_user", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_system_id": { "type": "string", "format": "uuid" },
                  "acs_access_group_ids": {
                    "default": [],
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "access_schedule": {
                    "type": "object",
                    "properties": {
                      "starts_at": { "type": "string", "format": "date-time" },
                      "ends_at": { "type": "string", "format": "date-time" }
                    },
                    "required": ["starts_at", "ends_at"]
                  },
                  "full_name": { "type": "string" },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "\n    ---\n    deprecated: use email_address.\n    ---\n    "
                  },
                  "phone_number": { "type": "string", "nullable": true },
                  "email_address": { "type": "string", "format": "email" }
                },
                "required": ["acs_system_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersCreatePost"
      }
    },
    "/acs/users/delete": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "users"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/acs/users/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersDeletePost"
      }
    },
    "/acs/users/get": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "users"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "acs_user",
        "summary": "/acs/users/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_user": { "$ref": "#/components/schemas/acs_user" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_user", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersGetPost"
      }
    },
    "/acs/users/list": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "users"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "acs_users",
        "summary": "/acs/users/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_users": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/acs_user" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_users", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "user_identity_phone_number": {
                    "type": "string",
                    "nullable": true
                  },
                  "user_identity_email_address": { "type": "string" },
                  "acs_system_id": { "type": "string", "format": "uuid" }
                }
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersListPost"
      }
    },
    "/acs/users/list_accessible_entrances": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "users"],
        "x-fern-sdk-method-name": "list_accessible_entrances",
        "x-fern-sdk-return-value": "acs_entrances",
        "summary": "/acs/users/list_accessible_entrances",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acs_entrances": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/acs_entrance" }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["acs_entrances", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersListAccessibleEntrancesPost"
      }
    },
    "/acs/users/remove_from_access_group": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "users"],
        "x-fern-sdk-method-name": "remove_from_access_group",
        "summary": "/acs/users/remove_from_access_group",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" },
                  "acs_access_group_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id", "acs_access_group_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersRemoveFromAccessGroupPost"
      }
    },
    "/acs/users/revoke_access_to_all_entrances": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "users"],
        "x-fern-sdk-method-name": "revoke_access_to_all_entrances",
        "summary": "/acs/users/revoke_access_to_all_entrances",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersRevokeAccessToAllEntrancesPost"
      }
    },
    "/acs/users/suspend": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "users"],
        "x-fern-sdk-method-name": "suspend",
        "summary": "/acs/users/suspend",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersSuspendPost"
      }
    },
    "/acs/users/unsuspend": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "users"],
        "x-fern-sdk-method-name": "unsuspend",
        "summary": "/acs/users/unsuspend",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acs_user_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersUnsuspendPost"
      }
    },
    "/acs/users/update": {
      "post": {
        "x-fern-sdk-group-name": ["acs", "users"],
        "x-fern-sdk-method-name": "update",
        "summary": "/acs/users/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_schedule": {
                    "type": "object",
                    "properties": {
                      "starts_at": { "type": "string", "format": "date-time" },
                      "ends_at": { "type": "string", "format": "date-time" }
                    },
                    "required": ["starts_at", "ends_at"]
                  },
                  "acs_user_id": { "type": "string", "format": "uuid" },
                  "full_name": { "type": "string" },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "\n    ---\n    deprecated: use email_address.\n    ---\n    "
                  },
                  "phone_number": { "type": "string", "nullable": true },
                  "email_address": { "type": "string", "format": "email" },
                  "hid_acs_system_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersUpdatePost"
      },
      "patch": {
        "x-fern-ignore": true,
        "summary": "/acs/users/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_schedule": {
                    "type": "object",
                    "properties": {
                      "starts_at": { "type": "string", "format": "date-time" },
                      "ends_at": { "type": "string", "format": "date-time" }
                    },
                    "required": ["starts_at", "ends_at"]
                  },
                  "acs_user_id": { "type": "string", "format": "uuid" },
                  "full_name": { "type": "string" },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "\n    ---\n    deprecated: use email_address.\n    ---\n    "
                  },
                  "phone_number": { "type": "string", "nullable": true },
                  "email_address": { "type": "string", "format": "email" },
                  "hid_acs_system_id": { "type": "string", "format": "uuid" }
                },
                "required": ["acs_user_id"]
              }
            }
          }
        },
        "tags": ["/acs"],
        "operationId": "acsUsersUpdatePatch"
      }
    },
    "/devices/simulate/connect": {
      "post": {
        "x-fern-sdk-group-name": ["devices", "simulate"],
        "x-fern-sdk-method-name": "connect",
        "summary": "/devices/simulate/connect",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesSimulateConnectPost"
      }
    },
    "/devices/simulate/disconnect": {
      "post": {
        "x-fern-sdk-group-name": ["devices", "simulate"],
        "x-fern-sdk-method-name": "disconnect",
        "summary": "/devices/simulate/disconnect",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesSimulateDisconnectPost"
      }
    },
    "/devices/simulate/remove": {
      "post": {
        "x-fern-sdk-group-name": ["devices", "simulate"],
        "x-fern-sdk-method-name": "remove",
        "summary": "/devices/simulate/remove",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesSimulateRemovePost"
      }
    },
    "/devices/unmanaged/get": {
      "post": {
        "x-fern-sdk-group-name": ["devices", "unmanaged"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "device",
        "summary": "/devices/unmanaged/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "device": {
                      "$ref": "#/components/schemas/unmanaged_device"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["device", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "name": { "type": "string" }
                }
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesUnmanagedGetPost"
      }
    },
    "/devices/unmanaged/list": {
      "post": {
        "x-fern-sdk-group-name": ["devices", "unmanaged"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "devices",
        "summary": "/devices/unmanaged/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "devices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/unmanaged_device"
                      }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["devices", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connected_account_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "List all devices owned by this connected account"
                  },
                  "connected_account_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "connect_webview_id": { "type": "string", "format": "uuid" },
                  "device_type": {
                    "oneOf": [
                      {
                        "type": "string",
                        "enum": [
                          "akuvox_lock",
                          "august_lock",
                          "brivo_access_point",
                          "butterflymx_panel",
                          "avigilon_alta_entry",
                          "doorking_lock",
                          "genie_door",
                          "igloo_lock",
                          "linear_lock",
                          "lockly_lock",
                          "kwikset_lock",
                          "nuki_lock",
                          "salto_lock",
                          "schlage_lock",
                          "seam_relay",
                          "smartthings_lock",
                          "wyze_lock",
                          "yale_lock",
                          "two_n_intercom",
                          "controlbyweb_device",
                          "ttlock_lock",
                          "igloohome_lock",
                          "hubitat_lock",
                          "four_suites_door",
                          "dormakaba_oracode_door",
                          "tedee_lock"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": ["noiseaware_activity_zone", "minut_sensor"]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "ecobee_thermostat",
                          "nest_thermostat",
                          "honeywell_resideo_thermostat"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": ["ios_phone", "android_phone"]
                      }
                    ]
                  },
                  "device_types": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "akuvox_lock",
                            "august_lock",
                            "brivo_access_point",
                            "butterflymx_panel",
                            "avigilon_alta_entry",
                            "doorking_lock",
                            "genie_door",
                            "igloo_lock",
                            "linear_lock",
                            "lockly_lock",
                            "kwikset_lock",
                            "nuki_lock",
                            "salto_lock",
                            "schlage_lock",
                            "seam_relay",
                            "smartthings_lock",
                            "wyze_lock",
                            "yale_lock",
                            "two_n_intercom",
                            "controlbyweb_device",
                            "ttlock_lock",
                            "igloohome_lock",
                            "hubitat_lock",
                            "four_suites_door",
                            "dormakaba_oracode_door",
                            "tedee_lock"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": ["noiseaware_activity_zone", "minut_sensor"]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "ecobee_thermostat",
                            "nest_thermostat",
                            "honeywell_resideo_thermostat"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": ["ios_phone", "android_phone"]
                        }
                      ]
                    }
                  },
                  "manufacturer": {
                    "type": "string",
                    "enum": [
                      "akuvox",
                      "august",
                      "avigilon_alta",
                      "brivo",
                      "butterflymx",
                      "doorking",
                      "four_suites",
                      "genie",
                      "igloo",
                      "keywe",
                      "kwikset",
                      "linear",
                      "lockly",
                      "nuki",
                      "philia",
                      "salto",
                      "samsung",
                      "schlage",
                      "seam",
                      "unknown",
                      "wyze",
                      "yale",
                      "minut",
                      "two_n",
                      "ttlock",
                      "nest",
                      "igloohome",
                      "ecobee",
                      "hubitat",
                      "controlbyweb",
                      "smartthings",
                      "dormakaba_oracode",
                      "tedee",
                      "honeywell_resideo"
                    ]
                  },
                  "device_ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" }
                  },
                  "limit": {
                    "default": 500,
                    "type": "number",
                    "nullable": true
                  },
                  "created_before": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "user_identifier_key": { "type": "string" },
                  "custom_metadata_has": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [{ "type": "string" }, { "type": "boolean" }]
                    }
                  },
                  "include_if": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "can_remotely_unlock",
                        "can_remotely_lock",
                        "can_program_offline_access_codes",
                        "can_program_online_access_codes",
                        "can_simulate_removal",
                        "can_simulate_connection",
                        "can_simulate_disconnection"
                      ]
                    }
                  },
                  "exclude_if": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "can_remotely_unlock",
                        "can_remotely_lock",
                        "can_program_offline_access_codes",
                        "can_program_online_access_codes",
                        "can_simulate_removal",
                        "can_simulate_connection",
                        "can_simulate_disconnection"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesUnmanagedListPost"
      }
    },
    "/devices/unmanaged/update": {
      "patch": {
        "x-fern-ignore": true,
        "summary": "/devices/unmanaged/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "is_managed": { "type": "boolean", "enum": [true] }
                },
                "required": ["device_id", "is_managed"]
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesUnmanagedUpdatePatch"
      },
      "post": {
        "x-fern-sdk-group-name": ["devices", "unmanaged"],
        "x-fern-sdk-method-name": "update",
        "summary": "/devices/unmanaged/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "is_managed": { "type": "boolean", "enum": [true] }
                },
                "required": ["device_id", "is_managed"]
              }
            }
          }
        },
        "tags": ["/devices"],
        "operationId": "devicesUnmanagedUpdatePost"
      }
    },
    "/noise_sensors/noise_thresholds/create": {
      "post": {
        "x-fern-sdk-group-name": ["noise_sensors", "noise_thresholds"],
        "x-fern-sdk-method-name": "create",
        "x-fern-sdk-return-value": "noise_threshold",
        "summary": "/noise_sensors/noise_thresholds/create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "noise_threshold": {
                      "$ref": "#/components/schemas/noise_threshold"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "noise_threshold", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "sync": { "default": false, "type": "boolean" },
                  "name": { "type": "string" },
                  "starts_daily_at": { "type": "string" },
                  "ends_daily_at": { "type": "string" },
                  "noise_threshold_decibels": { "type": "number" },
                  "noise_threshold_nrs": { "type": "number" }
                },
                "required": ["device_id", "starts_daily_at", "ends_daily_at"]
              }
            }
          }
        },
        "tags": ["/noise_sensors"],
        "operationId": "noiseSensorsNoiseThresholdsCreatePost"
      }
    },
    "/noise_sensors/noise_thresholds/delete": {
      "post": {
        "x-fern-sdk-group-name": ["noise_sensors", "noise_thresholds"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/noise_sensors/noise_thresholds/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noise_threshold_id": { "type": "string", "format": "uuid" },
                  "device_id": { "type": "string", "format": "uuid" },
                  "sync": { "default": false, "type": "boolean" }
                },
                "required": ["noise_threshold_id", "device_id"]
              }
            }
          }
        },
        "tags": ["/noise_sensors"],
        "operationId": "noiseSensorsNoiseThresholdsDeletePost"
      }
    },
    "/noise_sensors/noise_thresholds/get": {
      "post": {
        "x-fern-sdk-group-name": ["noise_sensors", "noise_thresholds"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "noise_threshold",
        "summary": "/noise_sensors/noise_thresholds/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "noise_threshold": {
                      "$ref": "#/components/schemas/noise_threshold"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["noise_threshold", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noise_threshold_id": { "type": "string", "format": "uuid" }
                },
                "required": ["noise_threshold_id"]
              }
            }
          }
        },
        "tags": ["/noise_sensors"],
        "operationId": "noiseSensorsNoiseThresholdsGetPost"
      }
    },
    "/noise_sensors/noise_thresholds/list": {
      "post": {
        "x-fern-sdk-group-name": ["noise_sensors", "noise_thresholds"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "noise_thresholds",
        "summary": "/noise_sensors/noise_thresholds/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "noise_thresholds": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/noise_threshold"
                      }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["noise_thresholds", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "is_programmed": { "type": "boolean" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/noise_sensors"],
        "operationId": "noiseSensorsNoiseThresholdsListPost"
      }
    },
    "/noise_sensors/noise_thresholds/update": {
      "put": {
        "x-fern-ignore": true,
        "summary": "/noise_sensors/noise_thresholds/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noise_threshold_id": { "type": "string", "format": "uuid" },
                  "device_id": { "type": "string", "format": "uuid" },
                  "sync": { "default": false, "type": "boolean" },
                  "name": { "type": "string" },
                  "starts_daily_at": { "type": "string" },
                  "ends_daily_at": { "type": "string" },
                  "noise_threshold_decibels": { "type": "number" },
                  "noise_threshold_nrs": { "type": "number" }
                },
                "required": ["noise_threshold_id", "device_id"]
              }
            }
          }
        },
        "tags": ["/noise_sensors"],
        "operationId": "noiseSensorsNoiseThresholdsUpdatePut"
      },
      "post": {
        "x-fern-sdk-group-name": ["noise_sensors", "noise_thresholds"],
        "x-fern-sdk-method-name": "update",
        "summary": "/noise_sensors/noise_thresholds/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noise_threshold_id": { "type": "string", "format": "uuid" },
                  "device_id": { "type": "string", "format": "uuid" },
                  "sync": { "default": false, "type": "boolean" },
                  "name": { "type": "string" },
                  "starts_daily_at": { "type": "string" },
                  "ends_daily_at": { "type": "string" },
                  "noise_threshold_decibels": { "type": "number" },
                  "noise_threshold_nrs": { "type": "number" }
                },
                "required": ["noise_threshold_id", "device_id"]
              }
            }
          }
        },
        "tags": ["/noise_sensors"],
        "operationId": "noiseSensorsNoiseThresholdsUpdatePost"
      },
      "patch": {
        "x-fern-ignore": true,
        "summary": "/noise_sensors/noise_thresholds/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action_attempt": {
                      "$ref": "#/components/schemas/action_attempt"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["action_attempt", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noise_threshold_id": { "type": "string", "format": "uuid" },
                  "device_id": { "type": "string", "format": "uuid" },
                  "sync": { "default": false, "type": "boolean" },
                  "name": { "type": "string" },
                  "starts_daily_at": { "type": "string" },
                  "ends_daily_at": { "type": "string" },
                  "noise_threshold_decibels": { "type": "number" },
                  "noise_threshold_nrs": { "type": "number" }
                },
                "required": ["noise_threshold_id", "device_id"]
              }
            }
          }
        },
        "tags": ["/noise_sensors"],
        "operationId": "noiseSensorsNoiseThresholdsUpdatePatch"
      }
    },
    "/noise_sensors/simulate/trigger_noise_threshold": {
      "post": {
        "x-fern-sdk-group-name": ["noise_sensors", "simulate"],
        "x-fern-sdk-method-name": "trigger_noise_threshold",
        "summary": "/noise_sensors/simulate/trigger_noise_threshold",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/noise_sensors"],
        "operationId": "noiseSensorsSimulateTriggerNoiseThresholdPost"
      }
    },
    "/phones/simulate/create_sandbox_phone": {
      "post": {
        "x-fern-sdk-group-name": ["phones", "simulate"],
        "x-fern-sdk-method-name": "create_sandbox_phone",
        "x-fern-sdk-return-value": "phone",
        "summary": "/phones/simulate/create_sandbox_phone",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phone": { "$ref": "#/components/schemas/phone" },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["phone", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "custom_sdk_installation_id": { "type": "string" },
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "phone_metadata": {
                    "default": {},
                    "type": "object",
                    "properties": {
                      "operating_system": {
                        "default": "android",
                        "type": "string",
                        "enum": ["android", "ios"]
                      },
                      "os_version": { "default": "10", "type": "string" },
                      "device_manufacturer": {
                        "default": "Samsung",
                        "type": "string"
                      },
                      "device_model": {
                        "default": "Samsung Galaxy S10",
                        "type": "string"
                      }
                    }
                  },
                  "assa_abloy_metadata": {
                    "default": {},
                    "type": "object",
                    "properties": {
                      "ble_capability": { "default": true, "type": "boolean" },
                      "hce_capability": { "default": false, "type": "boolean" },
                      "nfc_capability": { "default": false, "type": "boolean" },
                      "application_version": {
                        "default": "1.0.0",
                        "type": "string"
                      },
                      "seos_applet_version": {
                        "default": "1.0.0",
                        "type": "string"
                      },
                      "seos_tsm_endpoint_id": { "default": 1, "type": "number" }
                    }
                  }
                },
                "required": ["user_identity_id"]
              }
            }
          }
        },
        "tags": ["/phones"],
        "operationId": "phonesSimulateCreateSandboxPhonePost"
      }
    },
    "/thermostats/climate_setting_schedules/create": {
      "post": {
        "x-fern-sdk-group-name": ["thermostats", "climate_setting_schedules"],
        "x-fern-sdk-method-name": "create",
        "x-fern-sdk-return-value": "climate_setting_schedule",
        "summary": "/thermostats/climate_setting_schedules/create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "climate_setting_schedule": {
                      "$ref": "#/components/schemas/climate_setting_schedule"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["climate_setting_schedule", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schedule_type": {
                    "default": "time_bound",
                    "type": "string",
                    "enum": ["time_bound"]
                  },
                  "device_id": { "type": "string" },
                  "name": { "type": "string" },
                  "schedule_starts_at": { "type": "string" },
                  "schedule_ends_at": { "type": "string" },
                  "automatic_heating_enabled": { "type": "boolean" },
                  "automatic_cooling_enabled": { "type": "boolean" },
                  "hvac_mode_setting": {
                    "type": "string",
                    "enum": ["off", "heat", "cool", "heat_cool"]
                  },
                  "cooling_set_point_celsius": { "type": "number" },
                  "heating_set_point_celsius": { "type": "number" },
                  "cooling_set_point_fahrenheit": { "type": "number" },
                  "heating_set_point_fahrenheit": { "type": "number" },
                  "manual_override_allowed": { "type": "boolean" }
                },
                "required": [
                  "device_id",
                  "schedule_starts_at",
                  "schedule_ends_at"
                ]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsClimateSettingSchedulesCreatePost"
      }
    },
    "/thermostats/climate_setting_schedules/delete": {
      "put": {
        "x-fern-ignore": true,
        "summary": "/thermostats/climate_setting_schedules/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "climate_setting_schedule_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": ["climate_setting_schedule_id"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsClimateSettingSchedulesDeletePut"
      },
      "post": {
        "x-fern-sdk-group-name": ["thermostats", "climate_setting_schedules"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/thermostats/climate_setting_schedules/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "climate_setting_schedule_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": ["climate_setting_schedule_id"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsClimateSettingSchedulesDeletePost"
      }
    },
    "/thermostats/climate_setting_schedules/get": {
      "post": {
        "x-fern-sdk-group-name": ["thermostats", "climate_setting_schedules"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "climate_setting_schedule",
        "summary": "/thermostats/climate_setting_schedules/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "climate_setting_schedule": {
                      "$ref": "#/components/schemas/climate_setting_schedule"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["climate_setting_schedule", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "climate_setting_schedule_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "device_id": { "type": "string", "format": "uuid" }
                }
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsClimateSettingSchedulesGetPost"
      }
    },
    "/thermostats/climate_setting_schedules/list": {
      "post": {
        "x-fern-sdk-group-name": ["thermostats", "climate_setting_schedules"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "climate_setting_schedules",
        "summary": "/thermostats/climate_setting_schedules/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "climate_setting_schedules": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/climate_setting_schedule"
                      }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["climate_setting_schedules", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "api_key": [] },
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": { "type": "string", "format": "uuid" },
                  "user_identifier_key": { "type": "string" }
                },
                "required": ["device_id"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsClimateSettingSchedulesListPost"
      }
    },
    "/thermostats/climate_setting_schedules/update": {
      "put": {
        "x-fern-ignore": true,
        "summary": "/thermostats/climate_setting_schedules/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "climate_setting_schedule": {
                      "$ref": "#/components/schemas/climate_setting_schedule"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["climate_setting_schedule", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "climate_setting_schedule_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "schedule_type": {
                    "default": "time_bound",
                    "type": "string",
                    "enum": ["time_bound"]
                  },
                  "name": { "type": "string" },
                  "schedule_starts_at": { "type": "string" },
                  "schedule_ends_at": { "type": "string" },
                  "automatic_heating_enabled": { "type": "boolean" },
                  "automatic_cooling_enabled": { "type": "boolean" },
                  "hvac_mode_setting": {
                    "type": "string",
                    "enum": ["off", "heat", "cool", "heat_cool"]
                  },
                  "cooling_set_point_celsius": { "type": "number" },
                  "heating_set_point_celsius": { "type": "number" },
                  "cooling_set_point_fahrenheit": { "type": "number" },
                  "heating_set_point_fahrenheit": { "type": "number" },
                  "manual_override_allowed": { "type": "boolean" }
                },
                "required": ["climate_setting_schedule_id"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsClimateSettingSchedulesUpdatePut"
      },
      "post": {
        "x-fern-sdk-group-name": ["thermostats", "climate_setting_schedules"],
        "x-fern-sdk-method-name": "update",
        "summary": "/thermostats/climate_setting_schedules/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "climate_setting_schedule": {
                      "$ref": "#/components/schemas/climate_setting_schedule"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["climate_setting_schedule", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "climate_setting_schedule_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "schedule_type": {
                    "default": "time_bound",
                    "type": "string",
                    "enum": ["time_bound"]
                  },
                  "name": { "type": "string" },
                  "schedule_starts_at": { "type": "string" },
                  "schedule_ends_at": { "type": "string" },
                  "automatic_heating_enabled": { "type": "boolean" },
                  "automatic_cooling_enabled": { "type": "boolean" },
                  "hvac_mode_setting": {
                    "type": "string",
                    "enum": ["off", "heat", "cool", "heat_cool"]
                  },
                  "cooling_set_point_celsius": { "type": "number" },
                  "heating_set_point_celsius": { "type": "number" },
                  "cooling_set_point_fahrenheit": { "type": "number" },
                  "heating_set_point_fahrenheit": { "type": "number" },
                  "manual_override_allowed": { "type": "boolean" }
                },
                "required": ["climate_setting_schedule_id"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsClimateSettingSchedulesUpdatePost"
      },
      "patch": {
        "x-fern-ignore": true,
        "summary": "/thermostats/climate_setting_schedules/update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "climate_setting_schedule": {
                      "$ref": "#/components/schemas/climate_setting_schedule"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["climate_setting_schedule", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "climate_setting_schedule_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "schedule_type": {
                    "default": "time_bound",
                    "type": "string",
                    "enum": ["time_bound"]
                  },
                  "name": { "type": "string" },
                  "schedule_starts_at": { "type": "string" },
                  "schedule_ends_at": { "type": "string" },
                  "automatic_heating_enabled": { "type": "boolean" },
                  "automatic_cooling_enabled": { "type": "boolean" },
                  "hvac_mode_setting": {
                    "type": "string",
                    "enum": ["off", "heat", "cool", "heat_cool"]
                  },
                  "cooling_set_point_celsius": { "type": "number" },
                  "heating_set_point_celsius": { "type": "number" },
                  "cooling_set_point_fahrenheit": { "type": "number" },
                  "heating_set_point_fahrenheit": { "type": "number" },
                  "manual_override_allowed": { "type": "boolean" }
                },
                "required": ["climate_setting_schedule_id"]
              }
            }
          }
        },
        "tags": ["/thermostats"],
        "operationId": "thermostatsClimateSettingSchedulesUpdatePatch"
      }
    },
    "/user_identities/enrollment_automations/delete": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities", "enrollment_automations"],
        "x-fern-sdk-method-name": "delete",
        "summary": "/user_identities/enrollment_automations/delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" } },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enrollment_automation_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": ["enrollment_automation_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesEnrollmentAutomationsDeletePost"
      }
    },
    "/user_identities/enrollment_automations/get": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities", "enrollment_automations"],
        "x-fern-sdk-method-name": "get",
        "x-fern-sdk-return-value": "enrollment_automation",
        "summary": "/user_identities/enrollment_automations/get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enrollment_automation": {
                      "$ref": "#/components/schemas/enrollment_automation"
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["enrollment_automation", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enrollment_automation_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": ["enrollment_automation_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesEnrollmentAutomationsGetPost"
      }
    },
    "/user_identities/enrollment_automations/launch": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities", "enrollment_automations"],
        "x-fern-sdk-method-name": "launch",
        "x-fern-sdk-return-value": "enrollment_automation",
        "summary": "/user_identities/enrollment_automations/launch",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enrollment_automation": {
                      "type": "object",
                      "properties": {
                        "acs_credential_provisioning_automation_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "credential_manager_acs_system_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "user_identity_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "workspace_id": { "type": "string", "format": "uuid" },
                        "enrollment_automation_id": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "required": [
                        "acs_credential_provisioning_automation_id",
                        "credential_manager_acs_system_id",
                        "user_identity_id",
                        "created_at",
                        "workspace_id",
                        "enrollment_automation_id"
                      ]
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["enrollment_automation", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" },
                  "credential_manager_acs_system_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "acs_credential_pool_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "create_credential_manager_user": { "type": "boolean" },
                  "credential_manager_acs_user_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "user_identity_id",
                  "credential_manager_acs_system_id"
                ]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesEnrollmentAutomationsLaunchPost"
      }
    },
    "/user_identities/enrollment_automations/list": {
      "post": {
        "x-fern-sdk-group-name": ["user_identities", "enrollment_automations"],
        "x-fern-sdk-method-name": "list",
        "x-fern-sdk-return-value": "enrollment_automations",
        "summary": "/user_identities/enrollment_automations/list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enrollment_automations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/enrollment_automation"
                      }
                    },
                    "ok": { "type": "boolean" }
                  },
                  "required": ["enrollment_automations", "ok"]
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          { "client_session": [] },
          { "pat_with_workspace": [] },
          { "console_session": [] },
          { "api_key": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_identity_id": { "type": "string", "format": "uuid" }
                },
                "required": ["user_identity_id"]
              }
            }
          }
        },
        "tags": ["/user_identities"],
        "operationId": "userIdentitiesEnrollmentAutomationsListPost"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api_key": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API Key"
      },
      "seam_workspace": {
        "type": "apiKey",
        "in": "header",
        "name": "seam-workspace"
      },
      "seam_client_session_token": {
        "type": "apiKey",
        "in": "header",
        "name": "seam-client-session-token"
      },
      "client_session_token": {
        "type": "apiKey",
        "in": "header",
        "name": "client-session-token"
      },
      "access_token": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API Token"
      },
      "pat_with_workspace": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API Token"
      },
      "pat_without_workspace": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API Token"
      },
      "client_session": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Client Session Token"
      },
      "user_session": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "User Session Token"
      },
      "user_session_without_workspace": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "User Session Token"
      },
      "console_session": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Console Session Token"
      }
    },
    "schemas": {
      "access_code": {
        "type": "object",
        "properties": {
          "common_code_key": {
            "type": "string",
            "description": "Unique identifier for a group of access codes that share the same code.",
            "nullable": true
          },
          "is_scheduled_on_device": {
            "type": "boolean",
            "description": "Indicates whether the code is set on the device according to a preconfigured schedule."
          },
          "type": {
            "type": "string",
            "enum": ["time_bound", "ongoing"],
            "description": "Nature of the access code. Values are \"ongoing\" for access codes that are active continuously until deactivated manually or \"time_bound\" for access codes that have a specific duration."
          },
          "is_waiting_for_code_assignment": {
            "type": "boolean",
            "description": "Indicates whether the access code is waiting for a code assignment."
          },
          "access_code_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the access code."
          },
          "device_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the device associated with the access code."
          },
          "name": {
            "type": "string",
            "description": "Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Code used for access. Typically, a numeric or alphanumeric string.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time at which the access code was created."
          },
          "errors": {
            "description": "Collection of errors associated with the access code, structured in a dictionary format. A unique \"error_code\" keys each error. Each error entry is an object containing two fields: \"message\" and \"created_at.\" \"message\" is a string that describes the error. \"created_at\" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues.",
            "nullable": true
          },
          "warnings": {
            "description": "Collection of warnings associated with the access code, structured in a dictionary format. A unique \"warning_code\" keys each warning. Each warning entry is an object containing two fields: \"message\" and \"created_at.\" \"message\" is a string that describes the warning. \"created_at\" is a date that indicates when the warning was generated. This structure enables detailed tracking and timely response to potential issues that are not critical but that may require attention.",
            "nullable": true
          },
          "is_managed": {
            "type": "boolean",
            "enum": [true],
            "description": "Indicates whether Seam manages the access code."
          },
          "starts_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date and time at which the time-bound access code becomes active."
          },
          "ends_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date and time after which the time-bound access code becomes inactive."
          },
          "status": {
            "type": "string",
            "enum": ["setting", "set", "unset", "removing", "unknown"],
            "description": "\n    Current status of the access code within the operational lifecycle. Values are \"setting,\" a transitional phase that indicates that the code is being configured or activated; \"set\", which indicates that the code is active and operational; \"unset,\" which indicates a deactivated or unused state, either before activation or after deliberate deactivation; \"removing,\" which indicates a transitional period in which the code is being deleted or made inactive; and \"unknown,\" which indicates an indeterminate state, due to reasons such as system errors or incomplete data, that highlights a potential need for system review or troubleshooting.\n  "
          },
          "is_backup_access_code_available": {
            "type": "boolean",
            "description": "Indicates whether a backup access code is available for use if the primary access code is lost or compromised."
          },
          "is_backup": {
            "type": "boolean",
            "description": "Indicates whether the access code is a backup code."
          },
          "pulled_backup_access_code_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Identifier of the pulled backup access code. Used to associate the pulled backup access code with the original access code."
          },
          "is_external_modification_allowed": {
            "type": "boolean",
            "description": "Indicates whether changes to the access code from external sources are permitted."
          },
          "is_one_time_use": {
            "type": "boolean",
            "description": "Indicates whether the access code can only be used once. If \"true,\" the code becomes invalid after the first use."
          },
          "is_offline_access_code": {
            "type": "boolean",
            "description": "Indicates whether the access code is intended for use in offline scenarios. If \"true,\" this code can be created on a device without a network connection."
          }
        },
        "required": [
          "common_code_key",
          "type",
          "access_code_id",
          "device_id",
          "name",
          "code",
          "created_at",
          "is_managed",
          "status",
          "is_backup_access_code_available",
          "is_external_modification_allowed",
          "is_one_time_use",
          "is_offline_access_code"
        ]
      },
      "unmanaged_access_code": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["time_bound", "ongoing"],
            "description": "Nature of the access code. Values are \"ongoing\" for access codes that are active continuously until deactivated manually or \"time_bound\" for access codes that have a specific duration."
          },
          "access_code_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the access code."
          },
          "device_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the device associated with the access code."
          },
          "name": {
            "type": "string",
            "description": "Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Code used for access. Typically, a numeric or alphanumeric string.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time at which the access code was created."
          },
          "errors": {
            "description": "Collection of errors associated with the access code, structured in a dictionary format. A unique \"error_code\" keys each error. Each error entry is an object containing two fields: \"message\" and \"created_at.\" \"message\" is a string that describes the error. \"created_at\" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues.",
            "nullable": true
          },
          "warnings": {
            "description": "Collection of warnings associated with the access code, structured in a dictionary format. A unique \"warning_code\" keys each warning. Each warning entry is an object containing two fields: \"message\" and \"created_at.\" \"message\" is a string that describes the warning. \"created_at\" is a date that indicates when the warning was generated. This structure enables detailed tracking and timely response to potential issues that are not critical but that may require attention.",
            "nullable": true
          },
          "is_managed": { "type": "boolean", "enum": [false] },
          "starts_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date and time at which the time-bound access code becomes active."
          },
          "ends_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date and time after which the time-bound access code becomes inactive."
          },
          "status": { "type": "string", "enum": ["set"] }
        },
        "required": [
          "type",
          "access_code_id",
          "device_id",
          "name",
          "code",
          "created_at",
          "is_managed",
          "status"
        ]
      },
      "action_attempt": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["LOCK_DOOR"] }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ],
            "description": "Locking door."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["LOCK_DOOR"] },
              "result": { "type": "object", "properties": {} }
            },
            "required": [
              "action_attempt_id",
              "status",
              "error",
              "action_type",
              "result"
            ],
            "description": "Locking door succeeded."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": { "type": "string", "enum": ["LOCK_DOOR"] },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ],
            "description": "Locking door failed."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["UNLOCK_DOOR"] }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ],
            "description": "Unlocking door."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["UNLOCK_DOOR"] },
              "result": { "type": "object", "properties": {} }
            },
            "required": [
              "action_attempt_id",
              "status",
              "error",
              "action_type",
              "result"
            ],
            "description": "Unlocking door succeeded."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": { "type": "string", "enum": ["UNLOCK_DOOR"] },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ],
            "description": "Unlocking door failed."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["RESET_SANDBOX_WORKSPACE"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ],
            "description": "Resetting sandbox workspace."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["RESET_SANDBOX_WORKSPACE"]
              },
              "result": { "type": "object", "properties": {} }
            },
            "required": [
              "action_attempt_id",
              "status",
              "error",
              "action_type",
              "result"
            ],
            "description": "Resetting sandbox workspace succeeded."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": {
                "type": "string",
                "enum": ["RESET_SANDBOX_WORKSPACE"]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ],
            "description": "Resetting sandbox workspace failed."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["SET_COOL"] }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ],
            "description": "Setting HVAC to cool."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["SET_COOL"] },
              "result": { "type": "object", "properties": {} }
            },
            "required": [
              "action_attempt_id",
              "status",
              "error",
              "action_type",
              "result"
            ],
            "description": "Setting HVAC to cool succeeded."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": { "type": "string", "enum": ["SET_COOL"] },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ],
            "description": "Setting HVAC to cool failed."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["SET_HEAT"] }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ],
            "description": "Setting HVAC to heat mode."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["SET_HEAT"] },
              "result": { "type": "object", "properties": {} }
            },
            "required": [
              "action_attempt_id",
              "status",
              "error",
              "action_type",
              "result"
            ],
            "description": "Setting HVAC to heat mode succeeded."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": { "type": "string", "enum": ["SET_HEAT"] },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ],
            "description": "Setting HVAC to heat mode failed."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["SET_HEAT_COOL"] }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ],
            "description": "Setting HVAC to heat-cool mode."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["SET_HEAT_COOL"] },
              "result": { "type": "object", "properties": {} }
            },
            "required": [
              "action_attempt_id",
              "status",
              "error",
              "action_type",
              "result"
            ],
            "description": "Setting HVAC to heat-cool mode succeeded."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": { "type": "string", "enum": ["SET_HEAT_COOL"] },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ],
            "description": "Setting heat-cool mode failed."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["SET_FAN_MODE"] }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ],
            "description": "Setting fan mode."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["SET_FAN_MODE"] },
              "result": { "type": "object", "properties": {} }
            },
            "required": [
              "action_attempt_id",
              "status",
              "error",
              "action_type",
              "result"
            ],
            "description": "Setting fan mode succeeded."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": { "type": "string", "enum": ["SET_FAN_MODE"] },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ],
            "description": "Setting fan mode failed."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["SET_THERMOSTAT_OFF"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ],
            "description": "Turning HVAC off."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["SET_THERMOSTAT_OFF"]
              },
              "result": { "type": "object", "properties": {} }
            },
            "required": [
              "action_attempt_id",
              "status",
              "error",
              "action_type",
              "result"
            ],
            "description": "Turning HVAC off succeeded."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": {
                "type": "string",
                "enum": ["SET_THERMOSTAT_OFF"]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ],
            "description": "Turning HVAC off failed."
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": { "type": "string", "enum": ["SYNC_ACCESS_CODES"] }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["SYNC_ACCESS_CODES"]
              },
              "result": { "nullable": true }
            },
            "required": ["action_attempt_id", "status", "error", "action_type"]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": {
                "type": "string",
                "enum": ["SYNC_ACCESS_CODES"]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["CREATE_ACCESS_CODE"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["CREATE_ACCESS_CODE"]
              },
              "result": { "nullable": true }
            },
            "required": ["action_attempt_id", "status", "error", "action_type"]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": {
                "type": "string",
                "enum": ["CREATE_ACCESS_CODE"]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["DELETE_ACCESS_CODE"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["DELETE_ACCESS_CODE"]
              },
              "result": { "nullable": true }
            },
            "required": ["action_attempt_id", "status", "error", "action_type"]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": {
                "type": "string",
                "enum": ["DELETE_ACCESS_CODE"]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["UPDATE_ACCESS_CODE"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["UPDATE_ACCESS_CODE"]
              },
              "result": { "nullable": true }
            },
            "required": ["action_attempt_id", "status", "error", "action_type"]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": {
                "type": "string",
                "enum": ["UPDATE_ACCESS_CODE"]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["CREATE_NOISE_THRESHOLD"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["CREATE_NOISE_THRESHOLD"]
              },
              "result": { "nullable": true }
            },
            "required": ["action_attempt_id", "status", "error", "action_type"]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": {
                "type": "string",
                "enum": ["CREATE_NOISE_THRESHOLD"]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["DELETE_NOISE_THRESHOLD"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["DELETE_NOISE_THRESHOLD"]
              },
              "result": { "nullable": true }
            },
            "required": ["action_attempt_id", "status", "error", "action_type"]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": {
                "type": "string",
                "enum": ["DELETE_NOISE_THRESHOLD"]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["pending"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["UPDATE_NOISE_THRESHOLD"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "error",
              "action_type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["success"] },
              "error": { "type": "string", "format": "null", "nullable": true },
              "action_type": {
                "type": "string",
                "enum": ["UPDATE_NOISE_THRESHOLD"]
              },
              "result": { "nullable": true }
            },
            "required": ["action_attempt_id", "status", "error", "action_type"]
          },
          {
            "type": "object",
            "properties": {
              "action_attempt_id": {
                "type": "string",
                "format": "uuid",
                "description": "\n    ---\n    title: Action Attempt ID\n    ---\n    The ID of the action attempt.\n  "
              },
              "status": { "type": "string", "enum": ["error"] },
              "result": {
                "type": "string",
                "format": "null",
                "nullable": true
              },
              "action_type": {
                "type": "string",
                "enum": ["UPDATE_NOISE_THRESHOLD"]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["type", "message"]
              }
            },
            "required": [
              "action_attempt_id",
              "status",
              "result",
              "action_type",
              "error"
            ]
          }
        ]
      },
      "client_session": {
        "type": "object",
        "properties": {
          "client_session_id": { "type": "string", "format": "uuid" },
          "workspace_id": { "type": "string", "format": "uuid" },
          "created_at": { "type": "string", "format": "date-time" },
          "token": { "type": "string" },
          "user_identifier_key": { "type": "string", "nullable": true },
          "device_count": { "type": "number" },
          "connected_account_ids": {
            "type": "array",
            "items": { "type": "string", "format": "uuid" }
          },
          "connect_webview_ids": {
            "type": "array",
            "items": { "type": "string", "format": "uuid" }
          },
          "user_identity_ids": {
            "type": "array",
            "items": { "type": "string", "format": "uuid" }
          }
        },
        "required": [
          "client_session_id",
          "workspace_id",
          "created_at",
          "token",
          "user_identifier_key",
          "device_count",
          "connected_account_ids",
          "connect_webview_ids",
          "user_identity_ids"
        ]
      },
      "climate_setting_schedule": {
        "type": "object",
        "properties": {
          "climate_setting_schedule_id": { "type": "string", "format": "uuid" },
          "schedule_type": { "type": "string", "enum": ["time_bound"] },
          "device_id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "schedule_starts_at": { "type": "string" },
          "schedule_ends_at": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" },
          "errors": {
            "description": "Collection of errors associated with the access code, structured in a dictionary format. A unique \"error_code\" keys each error. Each error entry is an object containing two fields: \"message\" and \"created_at.\" \"message\" is a string that describes the error. \"created_at\" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues.",
            "nullable": true
          },
          "automatic_heating_enabled": { "type": "boolean" },
          "automatic_cooling_enabled": { "type": "boolean" },
          "hvac_mode_setting": {
            "type": "string",
            "enum": ["off", "heat", "cool", "heat_cool"]
          },
          "cooling_set_point_celsius": { "type": "number" },
          "heating_set_point_celsius": { "type": "number" },
          "cooling_set_point_fahrenheit": { "type": "number" },
          "heating_set_point_fahrenheit": { "type": "number" },
          "manual_override_allowed": { "type": "boolean" }
        },
        "required": [
          "climate_setting_schedule_id",
          "schedule_type",
          "device_id",
          "schedule_starts_at",
          "schedule_ends_at",
          "created_at"
        ]
      },
      "connect_webview": {
        "type": "object",
        "properties": {
          "connect_webview_id": { "type": "string", "format": "uuid" },
          "workspace_id": { "type": "string", "format": "uuid" },
          "created_at": { "type": "string", "format": "date-time" },
          "connected_account_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "url": { "type": "string", "format": "uri" },
          "device_selection_mode": {
            "type": "string",
            "enum": ["none", "single", "multiple"]
          },
          "accepted_providers": {
            "type": "array",
            "items": { "type": "string" }
          },
          "accepted_devices": {
            "type": "array",
            "items": { "type": "string" },
            "description": "\n      ---\n      deprecated: Unused. Will be removed.\n      ---\n      "
          },
          "any_device_allowed": {
            "type": "boolean",
            "description": "\n      ---\n      deprecated: Unused. Will be removed.\n      ---\n      "
          },
          "any_provider_allowed": { "type": "boolean" },
          "login_successful": { "type": "boolean" },
          "status": {
            "type": "string",
            "enum": ["pending", "failed", "authorized"]
          },
          "custom_redirect_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "custom_redirect_failure_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "custom_metadata": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [{ "type": "string" }, { "type": "boolean" }]
            }
          },
          "automatically_manage_new_devices": { "type": "boolean" },
          "wait_for_device_creation": { "type": "boolean" },
          "authorized_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "selected_provider": { "type": "string", "nullable": true }
        },
        "required": [
          "connect_webview_id",
          "workspace_id",
          "created_at",
          "connected_account_id",
          "url",
          "device_selection_mode",
          "accepted_providers",
          "accepted_devices",
          "any_device_allowed",
          "any_provider_allowed",
          "login_successful",
          "status",
          "custom_redirect_url",
          "custom_redirect_failure_url",
          "custom_metadata",
          "automatically_manage_new_devices",
          "wait_for_device_creation",
          "authorized_at",
          "selected_provider"
        ]
      },
      "connected_account": {
        "type": "object",
        "properties": {
          "connected_account_id": { "type": "string", "format": "uuid" },
          "created_at": { "type": "string", "format": "date-time" },
          "user_identifier": {
            "type": "object",
            "properties": {
              "username": { "type": "string" },
              "api_url": { "type": "string" },
              "email": { "type": "string" },
              "phone": { "type": "string" },
              "exclusive": { "type": "boolean" }
            }
          },
          "account_type": { "type": "string" },
          "account_type_display_name": { "type": "string" },
          "errors": { "nullable": true },
          "warnings": { "nullable": true },
          "custom_metadata": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [{ "type": "string" }, { "type": "boolean" }]
            }
          },
          "automatically_manage_new_devices": { "type": "boolean" }
        },
        "required": [
          "account_type_display_name",
          "custom_metadata",
          "automatically_manage_new_devices"
        ]
      },
      "device": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the device."
          },
          "device_type": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "akuvox_lock",
                  "august_lock",
                  "brivo_access_point",
                  "butterflymx_panel",
                  "avigilon_alta_entry",
                  "doorking_lock",
                  "genie_door",
                  "igloo_lock",
                  "linear_lock",
                  "lockly_lock",
                  "kwikset_lock",
                  "nuki_lock",
                  "salto_lock",
                  "schlage_lock",
                  "seam_relay",
                  "smartthings_lock",
                  "wyze_lock",
                  "yale_lock",
                  "two_n_intercom",
                  "controlbyweb_device",
                  "ttlock_lock",
                  "igloohome_lock",
                  "hubitat_lock",
                  "four_suites_door",
                  "dormakaba_oracode_door",
                  "tedee_lock"
                ]
              },
              {
                "type": "string",
                "enum": ["noiseaware_activity_zone", "minut_sensor"]
              },
              {
                "type": "string",
                "enum": [
                  "ecobee_thermostat",
                  "nest_thermostat",
                  "honeywell_resideo_thermostat"
                ]
              },
              { "type": "string", "enum": ["ios_phone", "android_phone"] }
            ],
            "description": "Type of the device."
          },
          "nickname": {
            "type": "string",
            "description": "Optional nickname to describe the device, settable through Seam"
          },
          "display_name": {
            "type": "string",
            "description": "Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices."
          },
          "capabilities_supported": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "access_code",
                "lock",
                "noise_detection",
                "thermostat",
                "battery",
                "phone"
              ]
            },
            "description": "Collection of capabilities that the device supports when connected to Seam. Values are \"access_code,\" which indicates that the device can manage and utilize digital PIN codes for secure access; \"lock,\" which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; \"noise_detection,\" which indicates that the device supports monitoring and responding to ambient noise levels; \"thermostat,\" which indicates that the device can regulate and adjust indoor temperatures; and \"battery,\" which indicates that the device can manage battery life and health."
          },
          "properties": {
            "allOf": [
              {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "online": {
                            "type": "boolean",
                            "description": "Indicates whether the device is online."
                          },
                          "name": {
                            "type": "string",
                            "description": "\n      ---\n      deprecated: use device.display_name instead\n      ---\n      Name of the device.\n      "
                          },
                          "accessory_keypad": {
                            "type": "object",
                            "properties": {
                              "is_connected": {
                                "type": "boolean",
                                "description": "Indicates if the accessory_keypad is connected to the device."
                              },
                              "battery": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 1
                                  }
                                },
                                "required": ["level"],
                                "description": "Indicates if the keypad battery properties."
                              }
                            },
                            "required": ["is_connected"],
                            "description": "Represents the accessory keypad state."
                          },
                          "appearance": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the device as seen from the provider API and application, not settable through Seam."
                              }
                            },
                            "required": ["name"]
                          },
                          "model": {
                            "type": "object",
                            "properties": {
                              "can_connect_accessory_keypad": {
                                "type": "boolean",
                                "description": "Indicates whether the device can connect a accessory keypad."
                              },
                              "display_name": {
                                "type": "string",
                                "description": "Display name of the device model."
                              },
                              "manufacturer_display_name": {
                                "type": "string",
                                "description": "Display name that corresponds to the manufacturer-specific terminology for the device."
                              },
                              "has_built_in_keypad": {
                                "type": "boolean",
                                "description": "Indicates whether the device has a built in accessory keypad."
                              },
                              "offline_access_codes_supported": {
                                "type": "boolean",
                                "description": "Indicates whether the device supports offline access codes."
                              },
                              "online_access_codes_supported": {
                                "type": "boolean",
                                "description": "Indicates whether the device supports online access codes."
                              },
                              "accessory_keypad_supported": {
                                "type": "boolean",
                                "description": "\n      ---\n      deprecated: use device.properties.model.can_connect_accessory_keypad\n      ---\n      "
                              }
                            },
                            "required": [
                              "display_name",
                              "manufacturer_display_name"
                            ]
                          },
                          "has_direct_power": {
                            "type": "boolean",
                            "description": "Indicates whether the device has direct power."
                          },
                          "battery_level": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1,
                            "description": "Indicates the battery level of the device as a decimal value between 0 and 1, inclusive."
                          },
                          "battery": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1
                              },
                              "status": {
                                "type": "string",
                                "enum": ["critical", "low", "good", "full"]
                              }
                            },
                            "required": ["level", "status"],
                            "description": "Represents the current status of the battery charge level. Values are \"critical,\" which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; \"low,\" which signifies that the battery is under the preferred threshold and should be charged soon; \"good,\" which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and \"full,\" which represents a battery that is fully charged, providing the maximum duration of usage."
                          },
                          "manufacturer": {
                            "type": "string",
                            "description": "Manufacturer of the device."
                          },
                          "image_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "Image URL for the device."
                          },
                          "image_alt_text": {
                            "type": "string",
                            "description": "Alt text for the device image."
                          },
                          "serial_number": {
                            "type": "string",
                            "description": "Serial number of the device."
                          },
                          "online_access_codes_enabled": {
                            "type": "boolean",
                            "description": "Indicates whether it is currently possible to use online access codes for the device."
                          },
                          "offline_access_codes_enabled": {
                            "type": "boolean",
                            "description": "Indicates whether it is currently possible to use offline access codes for the device."
                          },
                          "supports_accessory_keypad": {
                            "type": "boolean",
                            "description": "\n      ---\n      deprecated: use device.properties.model.can_connect_accessory_keypad\n      ---\n      "
                          },
                          "supports_offline_access_codes": {
                            "type": "boolean",
                            "description": "\n      ---\n      deprecated: use offline_access_codes_enabled\n      ---\n      "
                          },
                          "noise_level_decibels": {
                            "type": "number",
                            "description": "Indicates current noise level in decibels, if the device supports noise detection."
                          },
                          "currently_triggering_noise_threshold_ids": {
                            "type": "array",
                            "items": { "type": "string" },
                            "description": "Array of noise threshold IDs that are currently triggering."
                          }
                        },
                        "required": ["online", "name", "appearance", "model"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "assa_abloy_credential_service_metadata": {
                            "type": "object",
                            "properties": {
                              "has_active_endpoint": { "type": "boolean" },
                              "endpoints": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "endpoint_id": { "type": "string" },
                                    "is_active": { "type": "boolean" }
                                  },
                                  "required": ["endpoint_id", "is_active"]
                                }
                              }
                            },
                            "required": ["has_active_endpoint", "endpoints"]
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "august_metadata": {
                        "type": "object",
                        "properties": {
                          "lock_id": { "type": "string" },
                          "lock_name": { "type": "string" },
                          "house_name": { "type": "string" },
                          "has_keypad": { "type": "boolean" },
                          "keypad_battery_level": { "type": "string" },
                          "model": { "type": "string" },
                          "house_id": { "type": "string" }
                        },
                        "required": [
                          "lock_id",
                          "lock_name",
                          "house_name",
                          "has_keypad"
                        ]
                      },
                      "avigilon_alta_metadata": {
                        "type": "object",
                        "properties": {
                          "entry_name": { "type": "string" },
                          "org_name": { "type": "string" },
                          "zone_id": { "type": "number" },
                          "zone_name": { "type": "string" },
                          "site_id": { "type": "number" },
                          "site_name": { "type": "string" },
                          "entry_relays_total_count": { "type": "number" }
                        },
                        "required": [
                          "entry_name",
                          "org_name",
                          "zone_id",
                          "zone_name",
                          "site_id",
                          "site_name",
                          "entry_relays_total_count"
                        ]
                      },
                      "schlage_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "string" },
                          "device_name": { "type": "string" },
                          "access_code_length": {
                            "type": "number",
                            "nullable": true
                          },
                          "model": { "type": "string" }
                        },
                        "required": [
                          "device_id",
                          "device_name",
                          "access_code_length"
                        ]
                      },
                      "smartthings_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "string" },
                          "device_name": { "type": "string" },
                          "model": { "type": "string" },
                          "location_id": { "type": "string" }
                        },
                        "required": ["device_id", "device_name"]
                      },
                      "lockly_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "string" },
                          "device_name": { "type": "string" },
                          "model": { "type": "string" }
                        },
                        "required": ["device_id", "device_name"]
                      },
                      "nuki_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "string" },
                          "device_name": { "type": "string" },
                          "keypad_battery_critical": { "type": "boolean" },
                          "keypad_paired": { "type": "boolean" },
                          "keypad_2_paired": { "type": "boolean" }
                        },
                        "required": ["device_id", "device_name"]
                      },
                      "kwikset_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "string" },
                          "device_name": { "type": "string" },
                          "model_number": { "type": "string" }
                        },
                        "required": ["device_id", "device_name", "model_number"]
                      },
                      "salto_metadata": {
                        "type": "object",
                        "properties": {
                          "lock_id": { "type": "string" },
                          "customer_reference": { "type": "string" },
                          "lock_type": { "type": "string" },
                          "battery_level": { "type": "string" },
                          "locked_state": { "type": "string" },
                          "model": { "type": "string" }
                        },
                        "required": [
                          "lock_id",
                          "customer_reference",
                          "lock_type",
                          "battery_level",
                          "locked_state"
                        ]
                      },
                      "genie_metadata": {
                        "type": "object",
                        "properties": {
                          "device_name": { "type": "string" },
                          "door_name": { "type": "string" }
                        },
                        "required": ["device_name", "door_name"]
                      },
                      "brivo_metadata": {
                        "type": "object",
                        "properties": { "device_name": { "type": "string" } },
                        "required": ["device_name"]
                      },
                      "igloo_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "string" },
                          "bridge_id": { "type": "string" },
                          "model": { "type": "string" }
                        },
                        "required": ["device_id", "bridge_id"]
                      },
                      "noiseaware_metadata": {
                        "type": "object",
                        "properties": {
                          "device_model": {
                            "type": "string",
                            "enum": ["indoor", "outdoor"]
                          },
                          "noise_level_nrs": { "type": "number" },
                          "noise_level_decibel": { "type": "number" },
                          "device_name": { "type": "string" },
                          "device_id": { "type": "string" }
                        },
                        "required": [
                          "device_model",
                          "noise_level_nrs",
                          "noise_level_decibel",
                          "device_name",
                          "device_id"
                        ]
                      },
                      "minut_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "string" },
                          "device_name": { "type": "string" },
                          "latest_sensor_values": {
                            "type": "object",
                            "properties": {
                              "temperature": {
                                "type": "object",
                                "properties": {
                                  "time": { "type": "string" },
                                  "value": { "type": "number" }
                                },
                                "required": ["time", "value"]
                              },
                              "sound": {
                                "type": "object",
                                "properties": {
                                  "time": { "type": "string" },
                                  "value": { "type": "number" }
                                },
                                "required": ["time", "value"]
                              },
                              "humidity": {
                                "type": "object",
                                "properties": {
                                  "time": { "type": "string" },
                                  "value": { "type": "number" }
                                },
                                "required": ["time", "value"]
                              },
                              "pressure": {
                                "type": "object",
                                "properties": {
                                  "time": { "type": "string" },
                                  "value": { "type": "number" }
                                },
                                "required": ["time", "value"]
                              },
                              "accelerometer_z": {
                                "type": "object",
                                "properties": {
                                  "time": { "type": "string" },
                                  "value": { "type": "number" }
                                },
                                "required": ["time", "value"]
                              }
                            },
                            "required": [
                              "temperature",
                              "sound",
                              "humidity",
                              "pressure",
                              "accelerometer_z"
                            ]
                          }
                        },
                        "required": [
                          "device_id",
                          "device_name",
                          "latest_sensor_values"
                        ]
                      },
                      "four_suites_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "number" },
                          "device_name": { "type": "string" },
                          "reclose_delay_in_seconds": { "type": "number" }
                        },
                        "required": [
                          "device_id",
                          "device_name",
                          "reclose_delay_in_seconds"
                        ]
                      },
                      "two_n_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "number" },
                          "device_name": { "type": "string" }
                        },
                        "required": ["device_id", "device_name"]
                      },
                      "controlbyweb_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "string" },
                          "device_name": { "type": "string" },
                          "relay_name": { "type": "string", "nullable": true }
                        },
                        "required": ["device_id", "device_name", "relay_name"]
                      },
                      "ttlock_metadata": {
                        "type": "object",
                        "properties": {
                          "lock_id": { "type": "number" },
                          "lock_alias": { "type": "string" },
                          "feature_value": { "type": "string" }
                        },
                        "required": ["lock_id", "lock_alias", "feature_value"]
                      },
                      "seam_bridge_metadata": {
                        "type": "object",
                        "properties": {
                          "unlock_method": {
                            "type": "string",
                            "enum": ["bridge", "doorking"]
                          },
                          "device_num": { "type": "number" },
                          "name": { "type": "string" }
                        },
                        "required": ["device_num", "name"]
                      },
                      "igloohome_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "string" },
                          "device_name": { "type": "string" },
                          "bridge_id": { "type": "string" },
                          "bridge_name": { "type": "string" },
                          "keypad_id": { "type": "string" }
                        },
                        "required": ["device_id", "device_name"]
                      },
                      "nest_metadata": {
                        "type": "object",
                        "properties": {
                          "nest_device_id": { "type": "string" },
                          "device_name": { "type": "string" },
                          "custom_name": { "type": "string" }
                        },
                        "required": [
                          "nest_device_id",
                          "device_name",
                          "custom_name"
                        ]
                      },
                      "ecobee_metadata": {
                        "type": "object",
                        "properties": {
                          "ecobee_device_id": { "type": "string" },
                          "device_name": { "type": "string" }
                        },
                        "required": ["ecobee_device_id", "device_name"]
                      },
                      "honeywell_resideo_metadata": {
                        "type": "object",
                        "properties": {
                          "honeywell_resideo_device_id": { "type": "string" },
                          "device_name": { "type": "string" }
                        },
                        "required": [
                          "honeywell_resideo_device_id",
                          "device_name"
                        ]
                      },
                      "hubitat_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "string" },
                          "device_name": { "type": "string" },
                          "device_label": { "type": "string" }
                        },
                        "required": ["device_id", "device_name", "device_label"]
                      },
                      "dormakaba_oracode_metadata": {
                        "type": "object",
                        "properties": {
                          "door_id": { "type": "number" },
                          "door_name": { "type": "string" },
                          "device_id": { "type": "number" },
                          "door_is_wireless": { "type": "boolean" },
                          "site_id": { "type": "number" },
                          "site_name": { "type": "string" },
                          "iana_timezone": { "type": "string" },
                          "predefined_time_slots": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": { "type": "string" },
                                "prefix": { "type": "number" },
                                "check_in_time": { "type": "string" },
                                "check_out_time": { "type": "string" },
                                "is_24_hour": { "type": "boolean" },
                                "is_biweekly_mode": { "type": "boolean" },
                                "is_one_shot": { "type": "boolean" },
                                "is_master": { "type": "boolean" },
                                "ext_dormakaba_oracode_user_level_prefix": {
                                  "type": "number"
                                },
                                "dormakaba_oracode_user_level_id": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              },
                              "required": [
                                "name",
                                "prefix",
                                "check_in_time",
                                "check_out_time",
                                "is_24_hour",
                                "is_biweekly_mode",
                                "is_one_shot",
                                "is_master",
                                "ext_dormakaba_oracode_user_level_prefix",
                                "dormakaba_oracode_user_level_id"
                              ]
                            }
                          }
                        },
                        "required": [
                          "door_id",
                          "door_name",
                          "door_is_wireless",
                          "site_id",
                          "site_name"
                        ]
                      },
                      "wyze_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "string" },
                          "device_name": { "type": "string" },
                          "product_name": { "type": "string" },
                          "product_type": { "type": "string" },
                          "product_model": { "type": "string" },
                          "device_info_model": { "type": "string" },
                          "keypad_uuid": { "type": "string" },
                          "locker_status_hardlock": { "type": "number" }
                        },
                        "required": [
                          "device_id",
                          "device_name",
                          "product_name",
                          "product_type",
                          "product_model",
                          "device_info_model"
                        ]
                      },
                      "tedee_metadata": {
                        "type": "object",
                        "properties": {
                          "device_id": { "type": "number" },
                          "serial_number": { "type": "string" },
                          "device_name": { "type": "string" },
                          "device_model": { "type": "string" },
                          "bridge_id": { "type": "number" },
                          "bridge_name": { "type": "string" },
                          "keypad_id": { "type": "number" }
                        },
                        "required": [
                          "device_id",
                          "serial_number",
                          "device_name",
                          "device_model",
                          "bridge_id",
                          "bridge_name"
                        ]
                      }
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_experimental_supported_code_from_access_codes_lengths": {
                        "type": "array",
                        "items": { "type": "number" }
                      },
                      "code_constraints": {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "constraint_type": {
                                  "type": "string",
                                  "enum": [
                                    "no_zeros",
                                    "cannot_start_with_12",
                                    "no_triple_consecutive_ints",
                                    "cannot_specify_pin_code",
                                    "pin_code_matches_existing_set",
                                    "start_date_in_future",
                                    "no_ascending_or_descending_sequence",
                                    "at_least_three_unique_digits",
                                    "cannot_contain_089"
                                  ]
                                }
                              },
                              "required": ["constraint_type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "constraint_type": {
                                  "type": "string",
                                  "enum": ["name_length", "name_must_be_unique"]
                                },
                                "min_length": { "type": "number" },
                                "max_length": { "type": "number" }
                              },
                              "required": ["constraint_type"]
                            }
                          ]
                        }
                      },
                      "supported_code_lengths": {
                        "type": "array",
                        "items": { "type": "number" }
                      },
                      "max_active_codes_supported": { "type": "number" },
                      "supports_backup_access_code_pool": { "type": "boolean" },
                      "has_native_entry_events": { "type": "boolean" },
                      "locked": { "type": "boolean" },
                      "keypad_battery": {
                        "type": "object",
                        "properties": { "level": { "type": "number" } },
                        "required": ["level"]
                      },
                      "door_open": { "type": "boolean" }
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "temperature_fahrenheit": { "type": "number" },
                          "temperature_celsius": { "type": "number" },
                          "relative_humidity": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                          },
                          "can_enable_automatic_heating": { "type": "boolean" },
                          "can_enable_automatic_cooling": { "type": "boolean" },
                          "available_hvac_mode_settings": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": ["off", "heat", "cool", "heat_cool"]
                            }
                          },
                          "is_heating_available": {
                            "type": "boolean",
                            "enum": [true]
                          },
                          "is_cooling_available": {
                            "type": "boolean",
                            "enum": [true]
                          },
                          "is_heating": { "type": "boolean" },
                          "is_cooling": { "type": "boolean" },
                          "is_fan_running": { "type": "boolean" },
                          "fan_mode_setting": {
                            "type": "string",
                            "enum": ["auto", "on"]
                          },
                          "is_temporary_manual_override_active": {
                            "type": "boolean"
                          },
                          "current_climate_setting": {
                            "type": "object",
                            "properties": {
                              "automatic_heating_enabled": {
                                "type": "boolean"
                              },
                              "automatic_cooling_enabled": {
                                "type": "boolean"
                              },
                              "hvac_mode_setting": {
                                "type": "string",
                                "enum": ["off", "heat", "cool", "heat_cool"]
                              },
                              "cooling_set_point_celsius": { "type": "number" },
                              "heating_set_point_celsius": { "type": "number" },
                              "cooling_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "heating_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "manual_override_allowed": { "type": "boolean" }
                            },
                            "required": [
                              "automatic_heating_enabled",
                              "automatic_cooling_enabled",
                              "hvac_mode_setting",
                              "manual_override_allowed"
                            ]
                          },
                          "default_climate_setting": {
                            "type": "object",
                            "properties": {
                              "automatic_heating_enabled": {
                                "type": "boolean"
                              },
                              "automatic_cooling_enabled": {
                                "type": "boolean"
                              },
                              "hvac_mode_setting": {
                                "type": "string",
                                "enum": ["off", "heat", "cool", "heat_cool"]
                              },
                              "cooling_set_point_celsius": { "type": "number" },
                              "heating_set_point_celsius": { "type": "number" },
                              "cooling_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "heating_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "manual_override_allowed": { "type": "boolean" }
                            },
                            "required": [
                              "automatic_heating_enabled",
                              "automatic_cooling_enabled",
                              "hvac_mode_setting",
                              "manual_override_allowed"
                            ]
                          },
                          "is_climate_setting_schedule_active": {
                            "type": "boolean"
                          },
                          "active_climate_setting_schedule": {
                            "type": "object",
                            "properties": {
                              "climate_setting_schedule_id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "schedule_type": {
                                "type": "string",
                                "enum": ["time_bound"]
                              },
                              "device_id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": { "type": "string" },
                              "schedule_starts_at": { "type": "string" },
                              "schedule_ends_at": { "type": "string" },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "errors": {
                                "description": "Collection of errors associated with the access code, structured in a dictionary format. A unique \"error_code\" keys each error. Each error entry is an object containing two fields: \"message\" and \"created_at.\" \"message\" is a string that describes the error. \"created_at\" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues.",
                                "nullable": true
                              },
                              "automatic_heating_enabled": {
                                "type": "boolean"
                              },
                              "automatic_cooling_enabled": {
                                "type": "boolean"
                              },
                              "hvac_mode_setting": {
                                "type": "string",
                                "enum": ["off", "heat", "cool", "heat_cool"]
                              },
                              "cooling_set_point_celsius": { "type": "number" },
                              "heating_set_point_celsius": { "type": "number" },
                              "cooling_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "heating_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "manual_override_allowed": { "type": "boolean" }
                            },
                            "required": [
                              "climate_setting_schedule_id",
                              "schedule_type",
                              "device_id",
                              "schedule_starts_at",
                              "schedule_ends_at",
                              "created_at"
                            ]
                          },
                          "min_cooling_set_point_celsius": { "type": "number" },
                          "min_cooling_set_point_fahrenheit": {
                            "type": "number"
                          },
                          "max_cooling_set_point_celsius": { "type": "number" },
                          "max_cooling_set_point_fahrenheit": {
                            "type": "number"
                          },
                          "min_heating_set_point_celsius": { "type": "number" },
                          "min_heating_set_point_fahrenheit": {
                            "type": "number"
                          },
                          "max_heating_set_point_celsius": { "type": "number" },
                          "max_heating_set_point_fahrenheit": {
                            "type": "number"
                          },
                          "min_heating_cooling_delta_celsius": {
                            "type": "number"
                          },
                          "min_heating_cooling_delta_fahrenheit": {
                            "type": "number"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "temperature_fahrenheit": { "type": "number" },
                          "temperature_celsius": { "type": "number" },
                          "relative_humidity": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                          },
                          "can_enable_automatic_heating": { "type": "boolean" },
                          "can_enable_automatic_cooling": { "type": "boolean" },
                          "available_hvac_mode_settings": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": ["off", "heat", "cool", "heat_cool"]
                            }
                          },
                          "is_heating_available": {
                            "type": "boolean",
                            "enum": [true]
                          },
                          "is_cooling_available": {
                            "type": "boolean",
                            "enum": [false]
                          },
                          "is_heating": { "type": "boolean" },
                          "is_cooling": { "type": "boolean" },
                          "is_fan_running": { "type": "boolean" },
                          "fan_mode_setting": {
                            "type": "string",
                            "enum": ["auto", "on"]
                          },
                          "is_temporary_manual_override_active": {
                            "type": "boolean"
                          },
                          "current_climate_setting": {
                            "type": "object",
                            "properties": {
                              "automatic_heating_enabled": {
                                "type": "boolean"
                              },
                              "automatic_cooling_enabled": {
                                "type": "boolean"
                              },
                              "hvac_mode_setting": {
                                "type": "string",
                                "enum": ["off", "heat", "cool", "heat_cool"]
                              },
                              "cooling_set_point_celsius": { "type": "number" },
                              "heating_set_point_celsius": { "type": "number" },
                              "cooling_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "heating_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "manual_override_allowed": { "type": "boolean" }
                            },
                            "required": [
                              "automatic_heating_enabled",
                              "automatic_cooling_enabled",
                              "hvac_mode_setting",
                              "manual_override_allowed"
                            ]
                          },
                          "default_climate_setting": {
                            "type": "object",
                            "properties": {
                              "automatic_heating_enabled": {
                                "type": "boolean"
                              },
                              "automatic_cooling_enabled": {
                                "type": "boolean"
                              },
                              "hvac_mode_setting": {
                                "type": "string",
                                "enum": ["off", "heat", "cool", "heat_cool"]
                              },
                              "cooling_set_point_celsius": { "type": "number" },
                              "heating_set_point_celsius": { "type": "number" },
                              "cooling_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "heating_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "manual_override_allowed": { "type": "boolean" }
                            },
                            "required": [
                              "automatic_heating_enabled",
                              "automatic_cooling_enabled",
                              "hvac_mode_setting",
                              "manual_override_allowed"
                            ]
                          },
                          "is_climate_setting_schedule_active": {
                            "type": "boolean"
                          },
                          "active_climate_setting_schedule": {
                            "type": "object",
                            "properties": {
                              "climate_setting_schedule_id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "schedule_type": {
                                "type": "string",
                                "enum": ["time_bound"]
                              },
                              "device_id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": { "type": "string" },
                              "schedule_starts_at": { "type": "string" },
                              "schedule_ends_at": { "type": "string" },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "errors": {
                                "description": "Collection of errors associated with the access code, structured in a dictionary format. A unique \"error_code\" keys each error. Each error entry is an object containing two fields: \"message\" and \"created_at.\" \"message\" is a string that describes the error. \"created_at\" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues.",
                                "nullable": true
                              },
                              "automatic_heating_enabled": {
                                "type": "boolean"
                              },
                              "automatic_cooling_enabled": {
                                "type": "boolean"
                              },
                              "hvac_mode_setting": {
                                "type": "string",
                                "enum": ["off", "heat", "cool", "heat_cool"]
                              },
                              "cooling_set_point_celsius": { "type": "number" },
                              "heating_set_point_celsius": { "type": "number" },
                              "cooling_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "heating_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "manual_override_allowed": { "type": "boolean" }
                            },
                            "required": [
                              "climate_setting_schedule_id",
                              "schedule_type",
                              "device_id",
                              "schedule_starts_at",
                              "schedule_ends_at",
                              "created_at"
                            ]
                          },
                          "min_heating_set_point_celsius": { "type": "number" },
                          "min_heating_set_point_fahrenheit": {
                            "type": "number"
                          },
                          "max_heating_set_point_celsius": { "type": "number" },
                          "max_heating_set_point_fahrenheit": {
                            "type": "number"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "temperature_fahrenheit": { "type": "number" },
                          "temperature_celsius": { "type": "number" },
                          "relative_humidity": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                          },
                          "can_enable_automatic_heating": { "type": "boolean" },
                          "can_enable_automatic_cooling": { "type": "boolean" },
                          "available_hvac_mode_settings": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": ["off", "heat", "cool", "heat_cool"]
                            }
                          },
                          "is_heating_available": {
                            "type": "boolean",
                            "enum": [false]
                          },
                          "is_cooling_available": {
                            "type": "boolean",
                            "enum": [true]
                          },
                          "is_heating": { "type": "boolean" },
                          "is_cooling": { "type": "boolean" },
                          "is_fan_running": { "type": "boolean" },
                          "fan_mode_setting": {
                            "type": "string",
                            "enum": ["auto", "on"]
                          },
                          "is_temporary_manual_override_active": {
                            "type": "boolean"
                          },
                          "current_climate_setting": {
                            "type": "object",
                            "properties": {
                              "automatic_heating_enabled": {
                                "type": "boolean"
                              },
                              "automatic_cooling_enabled": {
                                "type": "boolean"
                              },
                              "hvac_mode_setting": {
                                "type": "string",
                                "enum": ["off", "heat", "cool", "heat_cool"]
                              },
                              "cooling_set_point_celsius": { "type": "number" },
                              "heating_set_point_celsius": { "type": "number" },
                              "cooling_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "heating_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "manual_override_allowed": { "type": "boolean" }
                            },
                            "required": [
                              "automatic_heating_enabled",
                              "automatic_cooling_enabled",
                              "hvac_mode_setting",
                              "manual_override_allowed"
                            ]
                          },
                          "default_climate_setting": {
                            "type": "object",
                            "properties": {
                              "automatic_heating_enabled": {
                                "type": "boolean"
                              },
                              "automatic_cooling_enabled": {
                                "type": "boolean"
                              },
                              "hvac_mode_setting": {
                                "type": "string",
                                "enum": ["off", "heat", "cool", "heat_cool"]
                              },
                              "cooling_set_point_celsius": { "type": "number" },
                              "heating_set_point_celsius": { "type": "number" },
                              "cooling_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "heating_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "manual_override_allowed": { "type": "boolean" }
                            },
                            "required": [
                              "automatic_heating_enabled",
                              "automatic_cooling_enabled",
                              "hvac_mode_setting",
                              "manual_override_allowed"
                            ]
                          },
                          "is_climate_setting_schedule_active": {
                            "type": "boolean"
                          },
                          "active_climate_setting_schedule": {
                            "type": "object",
                            "properties": {
                              "climate_setting_schedule_id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "schedule_type": {
                                "type": "string",
                                "enum": ["time_bound"]
                              },
                              "device_id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": { "type": "string" },
                              "schedule_starts_at": { "type": "string" },
                              "schedule_ends_at": { "type": "string" },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "errors": {
                                "description": "Collection of errors associated with the access code, structured in a dictionary format. A unique \"error_code\" keys each error. Each error entry is an object containing two fields: \"message\" and \"created_at.\" \"message\" is a string that describes the error. \"created_at\" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues.",
                                "nullable": true
                              },
                              "automatic_heating_enabled": {
                                "type": "boolean"
                              },
                              "automatic_cooling_enabled": {
                                "type": "boolean"
                              },
                              "hvac_mode_setting": {
                                "type": "string",
                                "enum": ["off", "heat", "cool", "heat_cool"]
                              },
                              "cooling_set_point_celsius": { "type": "number" },
                              "heating_set_point_celsius": { "type": "number" },
                              "cooling_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "heating_set_point_fahrenheit": {
                                "type": "number"
                              },
                              "manual_override_allowed": { "type": "boolean" }
                            },
                            "required": [
                              "climate_setting_schedule_id",
                              "schedule_type",
                              "device_id",
                              "schedule_starts_at",
                              "schedule_ends_at",
                              "created_at"
                            ]
                          },
                          "min_cooling_set_point_celsius": { "type": "number" },
                          "min_cooling_set_point_fahrenheit": {
                            "type": "number"
                          },
                          "max_cooling_set_point_celsius": { "type": "number" },
                          "max_cooling_set_point_fahrenheit": {
                            "type": "number"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "description": "Properties of the device."
          },
          "location": {
            "type": "object",
            "properties": {
              "location_name": {
                "type": "string",
                "description": "Name of the device location."
              },
              "timezone": {
                "type": "string",
                "description": "Time zone of the device location."
              }
            },
            "description": "Location information for the device.",
            "nullable": true
          },
          "connected_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the account associated with the device."
          },
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the Seam workspace associated with the device."
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "error_code": { "type": "string" },
                "message": { "type": "string" }
              },
              "required": ["error_code", "message"]
            },
            "description": "Array of errors associated with the device. Each error object within the array contains two fields: \"error_code\" and \"message.\" \"error_code\" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. \"message\" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it."
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "warning_code": { "type": "string" },
                "message": { "type": "string" }
              },
              "required": ["warning_code", "message"]
            },
            "description": "Array of warnings associated with the device. Each warning object within the array contains two fields: \"warning_code\" and \"message.\" \"warning_code\" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. \"message\" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time at which the device object was created."
          },
          "is_managed": {
            "type": "boolean",
            "enum": [true],
            "description": "Indicates whether Seam manages the device."
          },
          "custom_metadata": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [{ "type": "string" }, { "type": "boolean" }]
            }
          },
          "can_remotely_unlock": { "type": "boolean" },
          "can_remotely_lock": { "type": "boolean" },
          "can_program_offline_access_codes": { "type": "boolean" },
          "can_program_online_access_codes": { "type": "boolean" },
          "can_simulate_removal": { "type": "boolean" },
          "can_simulate_connection": { "type": "boolean" },
          "can_simulate_disconnection": { "type": "boolean" }
        },
        "required": [
          "device_id",
          "device_type",
          "display_name",
          "capabilities_supported",
          "properties",
          "location",
          "connected_account_id",
          "workspace_id",
          "errors",
          "warnings",
          "created_at",
          "is_managed",
          "custom_metadata"
        ]
      },
      "unmanaged_device": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the device."
          },
          "device_type": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "akuvox_lock",
                  "august_lock",
                  "brivo_access_point",
                  "butterflymx_panel",
                  "avigilon_alta_entry",
                  "doorking_lock",
                  "genie_door",
                  "igloo_lock",
                  "linear_lock",
                  "lockly_lock",
                  "kwikset_lock",
                  "nuki_lock",
                  "salto_lock",
                  "schlage_lock",
                  "seam_relay",
                  "smartthings_lock",
                  "wyze_lock",
                  "yale_lock",
                  "two_n_intercom",
                  "controlbyweb_device",
                  "ttlock_lock",
                  "igloohome_lock",
                  "hubitat_lock",
                  "four_suites_door",
                  "dormakaba_oracode_door",
                  "tedee_lock"
                ]
              },
              {
                "type": "string",
                "enum": ["noiseaware_activity_zone", "minut_sensor"]
              },
              {
                "type": "string",
                "enum": [
                  "ecobee_thermostat",
                  "nest_thermostat",
                  "honeywell_resideo_thermostat"
                ]
              },
              { "type": "string", "enum": ["ios_phone", "android_phone"] }
            ],
            "description": "Type of the device."
          },
          "connected_account_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the account associated with the device."
          },
          "capabilities_supported": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "access_code",
                "lock",
                "noise_detection",
                "thermostat",
                "battery",
                "phone"
              ]
            },
            "description": "Collection of capabilities that the device supports when connected to Seam. Values are \"access_code,\" which indicates that the device can manage and utilize digital PIN codes for secure access; \"lock,\" which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; \"noise_detection,\" which indicates that the device supports monitoring and responding to ambient noise levels; \"thermostat,\" which indicates that the device can regulate and adjust indoor temperatures; and \"battery,\" which indicates that the device can manage battery life and health."
          },
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the Seam workspace associated with the device."
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "error_code": { "type": "string" },
                "message": { "type": "string" }
              },
              "required": ["error_code", "message"]
            },
            "description": "Array of errors associated with the device. Each error object within the array contains two fields: \"error_code\" and \"message.\" \"error_code\" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. \"message\" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it."
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "warning_code": { "type": "string" },
                "message": { "type": "string" }
              },
              "required": ["warning_code", "message"]
            },
            "description": "Array of warnings associated with the device. Each warning object within the array contains two fields: \"warning_code\" and \"message.\" \"warning_code\" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. \"message\" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time at which the device object was created."
          },
          "is_managed": { "type": "boolean", "enum": [false] },
          "properties": {
            "type": "object",
            "properties": {
              "accessory_keypad": {
                "type": "object",
                "properties": {
                  "is_connected": {
                    "type": "boolean",
                    "description": "Indicates if the accessory_keypad is connected to the device."
                  },
                  "battery": {
                    "type": "object",
                    "properties": {
                      "level": { "type": "number", "minimum": 0, "maximum": 1 }
                    },
                    "required": ["level"],
                    "description": "Indicates if the keypad battery properties."
                  }
                },
                "required": ["is_connected"],
                "description": "Represents the accessory keypad state."
              },
              "name": {
                "type": "string",
                "description": "\n      ---\n      deprecated: use device.display_name instead\n      ---\n      Name of the device.\n      "
              },
              "online": {
                "type": "boolean",
                "description": "Indicates whether the device is online."
              },
              "manufacturer": {
                "type": "string",
                "description": "Manufacturer of the device."
              },
              "image_url": {
                "type": "string",
                "format": "uri",
                "description": "Image URL for the device."
              },
              "image_alt_text": {
                "type": "string",
                "description": "Alt text for the device image."
              },
              "battery_level": {
                "type": "number",
                "minimum": 0,
                "maximum": 1,
                "description": "Indicates the battery level of the device as a decimal value between 0 and 1, inclusive."
              },
              "battery": {
                "type": "object",
                "properties": {
                  "level": { "type": "number", "minimum": 0, "maximum": 1 },
                  "status": {
                    "type": "string",
                    "enum": ["critical", "low", "good", "full"]
                  }
                },
                "required": ["level", "status"],
                "description": "Represents the current status of the battery charge level. Values are \"critical,\" which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; \"low,\" which signifies that the battery is under the preferred threshold and should be charged soon; \"good,\" which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and \"full,\" which represents a battery that is fully charged, providing the maximum duration of usage."
              },
              "online_access_codes_enabled": {
                "type": "boolean",
                "description": "Indicates whether it is currently possible to use online access codes for the device."
              },
              "offline_access_codes_enabled": {
                "type": "boolean",
                "description": "Indicates whether it is currently possible to use offline access codes for the device."
              },
              "model": {
                "type": "object",
                "properties": {
                  "can_connect_accessory_keypad": {
                    "type": "boolean",
                    "description": "Indicates whether the device can connect a accessory keypad."
                  },
                  "display_name": {
                    "type": "string",
                    "description": "Display name of the device model."
                  },
                  "manufacturer_display_name": {
                    "type": "string",
                    "description": "Display name that corresponds to the manufacturer-specific terminology for the device."
                  },
                  "has_built_in_keypad": {
                    "type": "boolean",
                    "description": "Indicates whether the device has a built in accessory keypad."
                  },
                  "offline_access_codes_supported": {
                    "type": "boolean",
                    "description": "Indicates whether the device supports offline access codes."
                  },
                  "online_access_codes_supported": {
                    "type": "boolean",
                    "description": "Indicates whether the device supports online access codes."
                  },
                  "accessory_keypad_supported": {
                    "type": "boolean",
                    "description": "\n      ---\n      deprecated: use device.properties.model.can_connect_accessory_keypad\n      ---\n      "
                  }
                },
                "required": ["display_name", "manufacturer_display_name"]
              }
            },
            "required": ["name", "online", "model"]
          },
          "can_remotely_unlock": { "type": "boolean" },
          "can_remotely_lock": { "type": "boolean" },
          "can_program_offline_access_codes": { "type": "boolean" },
          "can_program_online_access_codes": { "type": "boolean" },
          "can_simulate_removal": { "type": "boolean" },
          "can_simulate_connection": { "type": "boolean" },
          "can_simulate_disconnection": { "type": "boolean" }
        },
        "required": [
          "device_id",
          "device_type",
          "connected_account_id",
          "capabilities_supported",
          "workspace_id",
          "errors",
          "warnings",
          "created_at",
          "is_managed",
          "properties"
        ]
      },
      "device_provider": {
        "type": "object",
        "properties": {
          "device_provider_name": {
            "type": "string",
            "enum": [
              "akuvox",
              "august",
              "avigilon_alta",
              "brivo",
              "butterflymx",
              "schlage",
              "smartthings",
              "yale",
              "genie",
              "doorking",
              "salto",
              "lockly",
              "ttlock",
              "linear",
              "noiseaware",
              "nuki",
              "seam_relay_admin",
              "igloo",
              "kwikset",
              "minut",
              "my_2n",
              "controlbyweb",
              "nest",
              "igloohome",
              "ecobee",
              "hubitat",
              "four_suites",
              "dormakaba_oracode",
              "pti",
              "wyze",
              "seam_passport",
              "visionline",
              "assa_abloy_credential_service",
              "seam_bridge",
              "tedee",
              "honeywell_resideo",
              "latch"
            ]
          },
          "display_name": { "type": "string" },
          "image_url": { "type": "string" },
          "provider_categories": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "stable",
                "consumer_smartlocks",
                "thermostats",
                "noise_sensors",
                "access_control_systems"
              ]
            }
          }
        },
        "required": [
          "device_provider_name",
          "display_name",
          "image_url",
          "provider_categories"
        ]
      },
      "event": {
        "type": "object",
        "properties": {
          "event_id": { "type": "string", "format": "uuid" },
          "device_id": { "type": "string", "format": "uuid" },
          "action_attempt_id": { "type": "string", "format": "uuid" },
          "acs_credential_id": { "type": "string", "format": "uuid" },
          "acs_user_id": { "type": "string", "format": "uuid" },
          "acs_system_id": { "type": "string", "format": "uuid" },
          "client_session_id": { "type": "string", "format": "uuid" },
          "enrollment_automation_id": { "type": "string", "format": "uuid" },
          "event_type": { "type": "string" },
          "workspace_id": { "type": "string", "format": "uuid" },
          "created_at": { "type": "string", "format": "date-time" },
          "occurred_at": { "type": "string", "format": "date-time" }
        },
        "required": [
          "event_id",
          "event_type",
          "workspace_id",
          "created_at",
          "occurred_at"
        ]
      },
      "noise_threshold": {
        "type": "object",
        "properties": {
          "noise_threshold_id": { "type": "string", "format": "uuid" },
          "device_id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "noise_threshold_nrs": { "type": "number" },
          "starts_daily_at": { "type": "string" },
          "ends_daily_at": { "type": "string" },
          "noise_threshold_decibels": { "type": "number" }
        },
        "required": [
          "noise_threshold_id",
          "device_id",
          "name",
          "starts_daily_at",
          "ends_daily_at",
          "noise_threshold_decibels"
        ]
      },
      "service_health": {
        "type": "object",
        "properties": {
          "service": { "type": "string" },
          "status": {
            "type": "string",
            "enum": ["healthy", "degraded", "down"]
          },
          "description": { "type": "string" }
        },
        "required": ["service", "status", "description"]
      },
      "webhook": {
        "type": "object",
        "properties": {
          "webhook_id": { "type": "string" },
          "url": { "type": "string" },
          "event_types": { "type": "array", "items": { "type": "string" } },
          "secret": { "type": "string" }
        },
        "required": ["webhook_id", "url"]
      },
      "workspace": {
        "type": "object",
        "properties": {
          "workspace_id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "company_name": { "type": "string" },
          "is_sandbox": { "type": "boolean" },
          "connect_partner_name": {
            "type": "string",
            "description": "\n    ---\n    deprecated: use company_name\n    ---\n  ",
            "nullable": true
          }
        },
        "required": [
          "workspace_id",
          "name",
          "company_name",
          "is_sandbox",
          "connect_partner_name"
        ]
      },
      "acs_system": {
        "type": "object",
        "properties": {
          "acs_system_id": { "type": "string", "format": "uuid" },
          "external_type": {
            "type": "string",
            "enum": [
              "pti_site",
              "alta_org",
              "salto_site",
              "brivo_account",
              "hid_credential_manager_organization",
              "visionline_system",
              "assa_abloy_credential_service",
              "latch_building"
            ]
          },
          "external_type_display_name": { "type": "string" },
          "system_type": {
            "type": "string",
            "enum": [
              "pti_site",
              "alta_org",
              "salto_site",
              "brivo_account",
              "hid_credential_manager_organization",
              "visionline_system",
              "assa_abloy_credential_service",
              "latch_building"
            ],
            "description": "\n      ---\n      deprecated: use external_type\n      ---\n      "
          },
          "system_type_display_name": {
            "type": "string",
            "description": "\n      ---\n      deprecated: use external_type_display_name\n      ---\n      "
          },
          "name": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" },
          "workspace_id": { "type": "string", "format": "uuid" },
          "connected_account_ids": {
            "type": "array",
            "items": { "type": "string", "format": "uuid" }
          },
          "image_url": { "type": "string" },
          "image_alt_text": { "type": "string" },
          "errors": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "created_at": { "type": "string", "format": "date-time" },
                    "message": { "type": "string" },
                    "error_code": {
                      "type": "string",
                      "enum": ["seam_bridge_disconnected"]
                    }
                  },
                  "required": ["created_at", "message", "error_code"]
                },
                {
                  "type": "object",
                  "properties": {
                    "created_at": { "type": "string", "format": "date-time" },
                    "message": { "type": "string" },
                    "error_code": {
                      "type": "string",
                      "enum": ["visionline_instance_unreachable"]
                    }
                  },
                  "required": ["created_at", "message", "error_code"]
                }
              ]
            }
          },
          "warnings": {
            "type": "array",
            "items": { "type": "object", "properties": {} }
          },
          "can_automate_enrollment": { "type": "boolean" },
          "can_create_acs_access_groups": { "type": "boolean" },
          "can_remove_acs_users_from_acs_access_groups": { "type": "boolean" },
          "can_add_acs_users_to_acs_access_groups": { "type": "boolean" }
        },
        "required": [
          "acs_system_id",
          "name",
          "created_at",
          "workspace_id",
          "connected_account_ids",
          "image_url",
          "image_alt_text",
          "errors",
          "warnings"
        ]
      },
      "acs_access_group": {
        "type": "object",
        "properties": {
          "acs_access_group_id": { "type": "string", "format": "uuid" },
          "acs_system_id": { "type": "string", "format": "uuid" },
          "workspace_id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "access_group_type": {
            "type": "string",
            "enum": [
              "pti_unit",
              "pti_access_level",
              "salto_access_group",
              "brivo_group"
            ],
            "description": "\n    ---\n    deprecated: use external_type\n    ---\n  "
          },
          "access_group_type_display_name": {
            "type": "string",
            "description": "\n    ---\n    deprecated: use external_type_display_name\n    ---\n    "
          },
          "display_name": { "type": "string" },
          "external_type": {
            "type": "string",
            "enum": [
              "pti_unit",
              "pti_access_level",
              "salto_access_group",
              "brivo_group"
            ]
          },
          "external_type_display_name": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" }
        },
        "required": [
          "acs_access_group_id",
          "acs_system_id",
          "workspace_id",
          "name",
          "access_group_type",
          "access_group_type_display_name",
          "display_name",
          "external_type",
          "external_type_display_name",
          "created_at"
        ]
      },
      "acs_user": {
        "type": "object",
        "properties": {
          "acs_user_id": { "type": "string", "format": "uuid" },
          "acs_system_id": { "type": "string", "format": "uuid" },
          "hid_acs_system_id": { "type": "string", "format": "uuid" },
          "workspace_id": { "type": "string", "format": "uuid" },
          "created_at": { "type": "string", "format": "date-time" },
          "display_name": { "type": "string" },
          "external_type": {
            "type": "string",
            "enum": [
              "pti_user",
              "brivo_user",
              "hid_credential_manager_user",
              "salto_site_user",
              "latch_user"
            ]
          },
          "external_type_display_name": { "type": "string" },
          "is_suspended": { "type": "boolean" },
          "access_schedule": {
            "type": "object",
            "properties": {
              "starts_at": { "type": "string", "format": "date-time" },
              "ends_at": { "type": "string", "format": "date-time" }
            },
            "required": ["starts_at", "ends_at"]
          },
          "user_identity_id": { "type": "string" },
          "user_identity_full_name": { "type": "string", "nullable": true },
          "user_identity_email_address": { "type": "string", "nullable": true },
          "user_identity_phone_number": { "type": "string", "nullable": true },
          "full_name": { "type": "string" },
          "email": {
            "type": "string",
            "format": "email",
            "description": "\n    ---\n    deprecated: use email_address.\n    ---\n    "
          },
          "email_address": { "type": "string", "format": "email" },
          "phone_number": { "type": "string", "nullable": true }
        },
        "required": [
          "acs_user_id",
          "acs_system_id",
          "workspace_id",
          "created_at",
          "display_name",
          "is_suspended"
        ]
      },
      "acs_entrance": {
        "type": "object",
        "properties": {
          "acs_system_id": { "type": "string", "format": "uuid" },
          "acs_entrance_id": { "type": "string", "format": "uuid" },
          "created_at": { "type": "string", "format": "date-time" },
          "display_name": { "type": "string" },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "error_code": { "type": "string" },
                "message": { "type": "string" }
              },
              "required": ["error_code", "message"]
            }
          },
          "latch_metadata": {
            "type": "object",
            "properties": {
              "accessibility_type": { "type": "string" },
              "door_name": { "type": "string" },
              "door_type": { "type": "string" },
              "is_connected": { "type": "boolean" }
            },
            "required": [
              "accessibility_type",
              "door_name",
              "door_type",
              "is_connected"
            ]
          },
          "visionline_metadata": {
            "type": "object",
            "properties": {
              "door_name": { "type": "string" },
              "door_category": {
                "type": "string",
                "enum": [
                  "entrance",
                  "guest",
                  "elevator reader",
                  "common",
                  "common (PMS)"
                ]
              },
              "profiles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "visionline_door_profile_id": { "type": "string" },
                    "visionline_door_profile_type": {
                      "type": "string",
                      "enum": ["BLE", "commonDoor", "touch"]
                    }
                  },
                  "required": [
                    "visionline_door_profile_id",
                    "visionline_door_profile_type"
                  ]
                }
              }
            },
            "required": ["door_name", "door_category"]
          }
        },
        "required": [
          "acs_system_id",
          "acs_entrance_id",
          "created_at",
          "display_name",
          "errors"
        ]
      },
      "acs_credential_provisioning_automation": {
        "type": "object",
        "properties": {
          "acs_credential_provisioning_automation_id": {
            "type": "string",
            "format": "uuid"
          },
          "credential_manager_acs_system_id": {
            "type": "string",
            "format": "uuid"
          },
          "user_identity_id": { "type": "string", "format": "uuid" },
          "created_at": { "type": "string", "format": "date-time" },
          "workspace_id": { "type": "string", "format": "uuid" }
        },
        "required": [
          "acs_credential_provisioning_automation_id",
          "credential_manager_acs_system_id",
          "user_identity_id",
          "created_at",
          "workspace_id"
        ]
      },
      "acs_credential_pool": {
        "type": "object",
        "properties": {
          "acs_credential_pool_id": { "type": "string", "format": "uuid" },
          "acs_system_id": { "type": "string", "format": "uuid" },
          "display_name": { "type": "string", "minLength": 1 },
          "external_type": { "type": "string", "enum": ["hid_part_number"] },
          "external_type_display_name": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" },
          "workspace_id": { "type": "string", "format": "uuid" }
        },
        "required": [
          "acs_credential_pool_id",
          "acs_system_id",
          "display_name",
          "external_type",
          "external_type_display_name",
          "created_at",
          "workspace_id"
        ]
      },
      "acs_credential": {
        "type": "object",
        "properties": {
          "acs_credential_id": { "type": "string", "format": "uuid" },
          "acs_user_id": { "type": "string", "format": "uuid" },
          "acs_credential_pool_id": { "type": "string", "format": "uuid" },
          "acs_system_id": { "type": "string", "format": "uuid" },
          "parent_acs_credential_id": { "type": "string", "format": "uuid" },
          "display_name": { "type": "string", "minLength": 1 },
          "code": { "type": "string", "nullable": true },
          "access_method": {
            "type": "string",
            "enum": ["code", "card", "mobile_key"]
          },
          "external_type": {
            "type": "string",
            "enum": [
              "pti_card",
              "brivo_credential",
              "hid_credential",
              "visionline_card"
            ]
          },
          "external_type_display_name": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" },
          "workspace_id": { "type": "string", "format": "uuid" },
          "starts_at": { "type": "string" },
          "ends_at": { "type": "string" },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "error_code": { "type": "string" },
                "message": { "type": "string" }
              },
              "required": ["error_code", "message"]
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "warning_code": { "type": "string" },
                "message": { "type": "string" }
              },
              "required": ["warning_code", "message"]
            }
          },
          "is_multi_phone_sync_credential": { "type": "boolean" },
          "is_latest_desired_state_synced_with_provider": { "type": "boolean" },
          "latest_desired_state_synced_with_provider_at": {
            "type": "string",
            "format": "date-time"
          },
          "visionline_metadata": {
            "type": "object",
            "properties": {
              "card_function_type": {
                "type": "string",
                "enum": ["guest", "staff"]
              },
              "joiner_acs_credential_ids": {
                "type": "array",
                "items": { "type": "string", "format": "uuid" }
              },
              "guest_acs_entrance_ids": {
                "type": "array",
                "items": { "type": "string", "format": "uuid" }
              },
              "common_acs_entrance_ids": {
                "type": "array",
                "items": { "type": "string", "format": "uuid" }
              }
            },
            "required": ["card_function_type"]
          }
        },
        "required": [
          "acs_credential_id",
          "acs_system_id",
          "display_name",
          "access_method",
          "created_at",
          "workspace_id",
          "errors",
          "warnings"
        ]
      },
      "enrollment_automation": {
        "type": "object",
        "properties": {
          "credential_manager_acs_system_id": {
            "type": "string",
            "format": "uuid"
          },
          "user_identity_id": { "type": "string", "format": "uuid" },
          "created_at": { "type": "string", "format": "date-time" },
          "workspace_id": { "type": "string", "format": "uuid" },
          "enrollment_automation_id": { "type": "string", "format": "uuid" }
        },
        "required": [
          "credential_manager_acs_system_id",
          "user_identity_id",
          "created_at",
          "workspace_id",
          "enrollment_automation_id"
        ]
      },
      "phone": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the device."
          },
          "device_type": {
            "type": "string",
            "enum": ["android_phone", "ios_phone"]
          },
          "nickname": {
            "type": "string",
            "description": "Optional nickname to describe the device, settable through Seam"
          },
          "display_name": {
            "type": "string",
            "description": "Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices."
          },
          "capabilities_supported": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "access_code",
                "lock",
                "noise_detection",
                "thermostat",
                "battery",
                "phone"
              ]
            },
            "description": "Collection of capabilities that the device supports when connected to Seam. Values are \"access_code,\" which indicates that the device can manage and utilize digital PIN codes for secure access; \"lock,\" which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; \"noise_detection,\" which indicates that the device supports monitoring and responding to ambient noise levels; \"thermostat,\" which indicates that the device can regulate and adjust indoor temperatures; and \"battery,\" which indicates that the device can manage battery life and health."
          },
          "properties": {
            "type": "object",
            "properties": {
              "assa_abloy_credential_service_metadata": {
                "type": "object",
                "properties": {
                  "has_active_endpoint": { "type": "boolean" },
                  "endpoints": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "endpoint_id": { "type": "string" },
                        "is_active": { "type": "boolean" }
                      },
                      "required": ["endpoint_id", "is_active"]
                    }
                  }
                },
                "required": ["has_active_endpoint", "endpoints"]
              }
            }
          },
          "location": {
            "type": "object",
            "properties": {
              "location_name": {
                "type": "string",
                "description": "Name of the device location."
              },
              "timezone": {
                "type": "string",
                "description": "Time zone of the device location."
              }
            },
            "description": "Location information for the device.",
            "nullable": true
          },
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the Seam workspace associated with the device."
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "error_code": { "type": "string" },
                "message": { "type": "string" }
              },
              "required": ["error_code", "message"]
            },
            "description": "Array of errors associated with the device. Each error object within the array contains two fields: \"error_code\" and \"message.\" \"error_code\" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. \"message\" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it."
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "warning_code": { "type": "string" },
                "message": { "type": "string" }
              },
              "required": ["warning_code", "message"]
            },
            "description": "Array of warnings associated with the device. Each warning object within the array contains two fields: \"warning_code\" and \"message.\" \"warning_code\" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. \"message\" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time at which the device object was created."
          },
          "is_managed": {
            "type": "boolean",
            "enum": [true],
            "description": "Indicates whether Seam manages the device."
          },
          "custom_metadata": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [{ "type": "string" }, { "type": "boolean" }]
            }
          },
          "can_remotely_unlock": { "type": "boolean" },
          "can_remotely_lock": { "type": "boolean" },
          "can_program_offline_access_codes": { "type": "boolean" },
          "can_program_online_access_codes": { "type": "boolean" },
          "can_simulate_removal": { "type": "boolean" },
          "can_simulate_connection": { "type": "boolean" },
          "can_simulate_disconnection": { "type": "boolean" }
        },
        "required": [
          "device_id",
          "device_type",
          "display_name",
          "capabilities_supported",
          "properties",
          "location",
          "workspace_id",
          "errors",
          "warnings",
          "created_at",
          "is_managed",
          "custom_metadata"
        ]
      },
      "user_identity": {
        "type": "object",
        "properties": {
          "user_identity_id": { "type": "string", "format": "uuid" },
          "user_identity_key": {
            "type": "string",
            "minLength": 1,
            "nullable": true
          },
          "email_address": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "phone_number": { "type": "string", "nullable": true },
          "display_name": { "type": "string", "minLength": 1 },
          "full_name": { "type": "string", "minLength": 1, "nullable": true },
          "created_at": { "type": "string", "format": "date-time" },
          "workspace_id": { "type": "string", "format": "uuid" }
        },
        "required": [
          "user_identity_id",
          "user_identity_key",
          "email_address",
          "phone_number",
          "display_name",
          "full_name",
          "created_at",
          "workspace_id"
        ]
      },
      "network": {
        "type": "object",
        "properties": {
          "network_id": { "type": "string", "format": "uuid" },
          "workspace_id": { "type": "string", "format": "uuid" },
          "display_name": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" }
        },
        "required": ["network_id", "workspace_id", "display_name", "created_at"]
      }
    }
  }
}