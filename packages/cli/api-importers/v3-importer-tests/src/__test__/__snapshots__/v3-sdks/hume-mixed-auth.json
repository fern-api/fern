{
  "apiName": "",
  "selfHosted": false,
  "auth": {
    "requirement": "ALL",
    "schemes": [
      {
        "key": "header",
        "name": {
          "name": "apiKey",
          "wireValue": "X-Hume-Api-Key"
        },
        "valueType": {
          "container": {
            "optional": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "type": "header"
      }
    ]
  },
  "headers": [],
  "environments": {
    "defaultEnvironment": "https://api.hume.ai/v0/evi",
    "environments": {
      "baseUrls": [
        {
          "id": "Base",
          "name": "Base"
        },
        {
          "id": "prod",
          "name": "prod"
        }
      ],
      "environments": [
        {
          "id": "https://api.hume.ai/v0/evi",
          "name": "https://api.hume.ai/v0/evi",
          "urls": {
            "Base": "https://api.hume.ai/v0/evi",
            "prod": "wss://api.hume.ai/v0/evi"
          }
        }
      ],
      "type": "multipleBaseUrls"
    }
  },
  "types": {
    "AssistantEnd": {
      "name": {
        "typeId": "AssistantEnd",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AssistantEnd"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantEndCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "assistant_end",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for an Assistant End message, this must be `assistant_end`.\n\nThis message indicates the conclusion of the assistant's response, signaling that the assistant has finished speaking for the current conversational turn.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantEndType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is an assistant end message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AssistantEnd_example_autogenerated": {
            "type": "string"
          }
        }
      }
    },
    "AssistantInput": {
      "name": {
        "typeId": "AssistantInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AssistantInput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantInputCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Assistant text to synthesize into spoken audio and insert into the conversation.\n\nEVI uses this text to generate spoken audio using our proprietary expressive text-to-speech model. Our model adds appropriate emotional inflections and tones to the text based on the user's expressions and the context of the conversation. The synthesized audio is streamed back to the user as an [Assistant Message](/reference/empathic-voice-interface-evi/chat/chat#receive.AssistantMessage.type).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantInputText_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "assistant_input",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `assistant_input` for our server to correctly identify and process it as an Assistant Input message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantInputType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the input is spoken by EVI.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AssistantInput_example_autogenerated": {
            "text": "string",
            "type": "string"
          }
        }
      }
    },
    "AssistantMessage": {
      "name": {
        "typeId": "AssistantMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AssistantMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "from_text",
              "wireValue": "from_text"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Indicates if this message was inserted into the conversation as text from an [Assistant Input message](/reference/empathic-voice-interface-evi/chat/chat#send.AssistantInput.text).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantMessageFromText_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "ID of the assistant message. Allows the Assistant Message to be tracked and referenced.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantMessageId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChatMessage",
              "typeId": "ChatMessage",
              "inline": false,
              "type": "named"
            },
            "docs": "Transcript of the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Inference",
              "typeId": "Inference",
              "inline": false,
              "type": "named"
            },
            "docs": "Inference model results.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "assistant_message",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for an Assistant Message, this must be `assistant_message`.\n\nThis message contains both a transcript of the assistant's response and the expression measurement predictions of the assistant's audio output.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantMessageType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is an assistant message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AssistantMessage_example_autogenerated": {
            "from_text": true,
            "message": {
              "role": "assistant"
            },
            "models": {
              "prosody": {
                "scores": {
                  "Admiration": 1.1,
                  "Adoration": 1.1,
                  "Aesthetic Appreciation": 1.1,
                  "Amusement": 1.1,
                  "Anger": 1.1,
                  "Anxiety": 1.1,
                  "Awe": 1.1,
                  "Awkwardness": 1.1,
                  "Boredom": 1.1,
                  "Calmness": 1.1,
                  "Concentration": 1.1,
                  "Confusion": 1.1,
                  "Contemplation": 1.1,
                  "Contempt": 1.1,
                  "Contentment": 1.1,
                  "Craving": 1.1,
                  "Desire": 1.1,
                  "Determination": 1.1,
                  "Disappointment": 1.1,
                  "Disgust": 1.1,
                  "Distress": 1.1,
                  "Doubt": 1.1,
                  "Ecstasy": 1.1,
                  "Embarrassment": 1.1,
                  "Empathic Pain": 1.1,
                  "Entrancement": 1.1,
                  "Envy": 1.1,
                  "Excitement": 1.1,
                  "Fear": 1.1,
                  "Guilt": 1.1,
                  "Horror": 1.1,
                  "Interest": 1.1,
                  "Joy": 1.1,
                  "Love": 1.1,
                  "Nostalgia": 1.1,
                  "Pain": 1.1,
                  "Pride": 1.1,
                  "Realization": 1.1,
                  "Relief": 1.1,
                  "Romance": 1.1,
                  "Sadness": 1.1,
                  "Satisfaction": 1.1,
                  "Shame": 1.1,
                  "Surprise (negative)": 1.1,
                  "Surprise (positive)": 1.1,
                  "Sympathy": 1.1,
                  "Tiredness": 1.1,
                  "Triumph": 1.1
                }
              }
            },
            "type": "string"
          }
        }
      }
    },
    "AudioInput": {
      "name": {
        "typeId": "AudioInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AudioInput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioInputCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "base64"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Base64 encoded audio input to insert into the conversation.\n\nThe content of an Audio Input message is treated as the user's speech to EVI and must be streamed continuously. Pre-recorded audio files are not supported.\n\nFor optimal transcription quality, the audio data should be transmitted in small chunks.\n\nHume recommends streaming audio with a buffer window of 20 milliseconds (ms), or 100 milliseconds (ms) for web applications.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioInputData_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "audio_input",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `audio_input` for our server to correctly identify and process it as an Audio Input message.\n\nThis message is used for sending audio input data to EVI for processing and expression measurement. Audio data should be sent as a continuous stream, encoded in Base64.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioInputType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the input is audio.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AudioInput_example_autogenerated": {
            "data": "string",
            "type": "string"
          }
        }
      }
    },
    "AudioOutput": {
      "name": {
        "typeId": "AudioOutput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AudioOutput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "base64"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Base64 encoded audio output. This encoded audio is transmitted to the client, where it can be decoded and played back as part of the user interaction.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputData_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "ID of the audio output. Allows the Audio Output message to be tracked and referenced.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "index",
              "wireValue": "index"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Index of the chunk of audio relative to the whole audio segment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputIndex_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "is_final_chunk",
              "wireValue": "is_final_chunk"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "This AudioOutput contains the final chunk for this particular segment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputIsFinalChunk_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "audio_output",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The type of message sent through the socket; for an Audio Output message, this must be `audio_output`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AudioOutput_example_autogenerated": {
            "data": "string",
            "id": "string",
            "index": 1,
            "is_final_chunk": true,
            "type": "string"
          }
        }
      }
    },
    "ChatMetadata": {
      "name": {
        "typeId": "ChatMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatMetadata"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "chat_group_id",
              "wireValue": "chat_group_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "ID of the Chat Group.\n\nUsed to resume a Chat when passed in the [resumed_chat_group_id](/reference/empathic-voice-interface-evi/chat/chat#request.query.resumed_chat_group_id) query parameter of a subsequent connection request. This allows EVI to continue the conversation from where it left off within the Chat Group.\n\nLearn more about [supporting chat resumability](/docs/empathic-voice-interface-evi/faq#does-evi-support-chat-resumability) from the EVI FAQ.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataChatGroupId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "chat_id",
              "wireValue": "chat_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "ID of the Chat session. Allows the Chat session to be tracked and referenced.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataChatId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "ID of the initiating request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataRequestId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "chat_metadata",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Chat Metadata message, this must be `chat_metadata`.\n\nThe Chat Metadata message is the first message you receive after establishing a connection with EVI and contains important identifiers for the current Chat session.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a chat metadata message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatMetadata_example_autogenerated": {
            "chat_group_id": "string",
            "chat_id": "string",
            "request_id": "string",
            "type": "string"
          }
        }
      }
    },
    "Error": {
      "name": {
        "typeId": "Error",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "code",
              "wireValue": "code"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Error code. Identifies the type of error encountered.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Detailed description of the error.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "ID of the initiating request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorRequestId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "slug",
              "wireValue": "slug"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Short, human-readable identifier and description for the error. See a complete list of error slugs on the [Errors page](/docs/resources/errors).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorSlug_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "error",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Web Socket Error message, this must be `error`.\n\nThis message indicates a disruption in the WebSocket connection, such as an unexpected disconnection, protocol error, or data transmission issue.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is an error message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Error_example_autogenerated": {
            "code": "string",
            "message": "string",
            "slug": "string",
            "type": "string"
          }
        }
      }
    },
    "PauseAssistantMessage": {
      "name": {
        "typeId": "PauseAssistantMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PauseAssistantMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PauseAssistantMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "pause_assistant_message",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `pause_assistant_message` for our server to correctly identify and process it as a Pause Assistant message.\n\nOnce this message is sent, EVI will not respond until a [Resume Assistant message](/reference/empathic-voice-interface-evi/chat/chat#send.ResumeAssistantMessage.type) is sent. When paused, EVI won't respond, but transcriptions of your audio inputs will still be recorded.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PauseAssistantMessageType_example_autogenerated": "pause_assistant_message"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Pause responses from EVI. Chat history is still saved and sent after resuming. ",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PauseAssistantMessage_example_autogenerated": {}
        }
      }
    },
    "ResumeAssistantMessage": {
      "name": {
        "typeId": "ResumeAssistantMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResumeAssistantMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResumeAssistantMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "resume_assistant_message",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `resume_assistant_message` for our server to correctly identify and process it as a Resume Assistant message.\n\nUpon resuming, if any audio input was sent during the pause, EVI will retain context from all messages sent but only respond to the last user message. (e.g., If you ask EVI two questions while paused and then send a `resume_assistant_message`, EVI will respond to the second question and have added the first question to its conversation context.)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResumeAssistantMessageType_example_autogenerated": "resume_assistant_message"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Resume responses from EVI. Chat history sent while paused will now be sent. ",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResumeAssistantMessage_example_autogenerated": {}
        }
      }
    },
    "MessagesSessionSettingsMetadata": {
      "name": {
        "typeId": "MessagesSessionSettingsMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MessagesSessionSettingsMetadata"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MessagesSessionSettingsMetadata_example_autogenerated": {}
        }
      }
    },
    "SessionSettings": {
      "name": {
        "typeId": "SessionSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SessionSettings"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "audio",
              "wireValue": "audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AudioConfiguration",
                      "typeId": "AudioConfiguration",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Configuration details for the audio input used during the session. Ensures the audio is being correctly set up for processing.\n\nThis optional field is only required when the audio input is encoded in PCM Linear 16 (16-bit, little-endian, signed PCM WAV data). For detailed instructions on how to configure session settings for PCM Linear 16 audio, please refer to the [Session Settings section](/docs/empathic-voice-interface-evi/configuration#session-settings) on the EVI Configuration page.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsAudio_example_autogenerated": {
                  "channels": 1,
                  "encoding": "linear16",
                  "sample_rate": 1
                }
              }
            }
          },
          {
            "name": {
              "name": "builtin_tools",
              "wireValue": "builtin_tools"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "BuiltinToolConfig",
                          "typeId": "BuiltinToolConfig",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of built-in tools to enable for the session.\n\nTools are resources used by EVI to perform various tasks, such as searching the web or calling external APIs. Built-in tools, like web search, are natively integrated, while user-defined tools are created and invoked by the user. To learn more, see our [Tool Use Guide](/docs/empathic-voice-interface-evi/tool-use).\n\nCurrently, the only built-in tool Hume provides is **Web Search**. When enabled, Web Search equips EVI with the ability to search the web for up-to-date information.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsBuiltinTools_example_autogenerated": [
                  {
                    "name": "web_search"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "context",
              "wireValue": "context"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Context",
                      "typeId": "Context",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Allows developers to inject additional context into the conversation, which is appended to the end of user messages for the session.\n\nWhen included in a Session Settings message, the provided context can be used to remind the LLM of its role in every user message, prevent it from forgetting important details, or add new relevant information to the conversation.\n\nSet to `null` to disable context injection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsContext_example_autogenerated": {
                  "text": "string"
                }
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Unique identifier for the session. Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.\n\nIf included, the response sent from Hume to your backend will include this ID. This allows you to correlate frontend users with their incoming messages.\n\nIt is recommended to pass a `custom_session_id` if you are using a Custom Language Model. Please see our guide to [using a custom language model](/docs/empathic-voice-interface-evi/custom-language-model) with EVI to learn more.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "event_limit",
              "wireValue": "event_limit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The maximum number of chat events to return from chat history. By default, the system returns up to 300 events (100 events per page × 3 pages). Set this parameter to a smaller value to limit the number of events returned.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsEventLimit_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "language_model_api_key",
              "wireValue": "language_model_api_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Third party API key for the supplemental language model.\n\nWhen provided, EVI will use this key instead of Hume's API key for the supplemental LLM. This allows you to bypass rate limits and utilize your own API key as needed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsLanguageModelApiKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "SessionSettingsMetadata",
                      "typeId": "SessionSettingsMetadata",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "system_prompt",
              "wireValue": "system_prompt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Instructions used to shape EVI's behavior, responses, and style for the session.\n\nWhen included in a Session Settings message, the provided Prompt overrides the existing one specified in the EVI configuration. If no Prompt was defined in the configuration, this Prompt will be the one used for the session.\n\nYou can use the Prompt to define a specific goal or role for EVI, specifying how it should act or what it should focus on during the conversation. For example, EVI can be instructed to act as a customer support representative, a fitness coach, or a travel advisor, each with its own set of behaviors and response styles.\n\nFor help writing a system prompt, see our [Prompting Guide](/docs/empathic-voice-interface-evi/prompting).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsSystemPrompt_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tools",
              "wireValue": "tools"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Tool",
                          "typeId": "Tool",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of user-defined tools to enable for the session.\n\nTools are resources used by EVI to perform various tasks, such as searching the web or calling external APIs. Built-in tools, like web search, are natively integrated, while user-defined tools are created and invoked by the user. To learn more, see our [Tool Use Guide](/docs/empathic-voice-interface-evi/tool-use).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsTools_example_autogenerated": [
                  {
                    "name": "string",
                    "parameters": "string",
                    "type": "builtin"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "session_settings",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `session_settings` for our server to correctly identify and process it as a Session Settings message.\n\nSession settings are temporary and apply only to the current Chat session. These settings can be adjusted dynamically based on the requirements of each session to ensure optimal performance and user experience.\n\nFor more information, please refer to the [Session Settings section](/docs/empathic-voice-interface-evi/configuration#session-settings) on the EVI Configuration page.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "variables",
              "wireValue": "variables"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "validation": {},
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Dynamic values that can be used to populate EVI prompts.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsVariables_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Settings for this chat session.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SessionSettings_example_autogenerated": {
            "type": "string"
          }
        }
      }
    },
    "ToolCallMessage": {
      "name": {
        "typeId": "ToolCallMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ToolCallMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Name of the tool called.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "parameters",
              "wireValue": "parameters"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Parameters of the tool call. Is a stringified JSON schema.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageParameters_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "response_required",
              "wireValue": "response_required"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Indicates whether a response to the tool call is required from the developer, either in the form of a [Tool Response message](/reference/empathic-voice-interface-evi/chat/chat#send.ToolResponseMessage.type) or a [Tool Error message](/reference/empathic-voice-interface-evi/chat/chat#send.ToolErrorMessage.type).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageResponseRequired_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "tool_call_id",
              "wireValue": "tool_call_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier for a specific tool call instance.\n\nThis ID is used to track the request and response of a particular tool invocation, ensuring that the correct response is linked to the appropriate request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageToolCallId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tool_type",
              "wireValue": "tool_type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolType",
              "typeId": "ToolType",
              "inline": false,
              "type": "named"
            },
            "docs": "Type of tool called. Either `builtin` for natively implemented tools, like web search, or `function` for user-defined tools.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "tool_call",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Tool Call message, this must be `tool_call`.\n\nThis message indicates that the supplemental LLM has detected a need to invoke the specified tool.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageType_example_autogenerated": "tool_call"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a tool call.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolCallMessage_example_autogenerated": {
            "name": "string",
            "parameters": "string",
            "response_required": true,
            "tool_call_id": "string",
            "tool_type": "builtin"
          }
        }
      }
    },
    "ToolErrorMessage": {
      "name": {
        "typeId": "ToolErrorMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ToolErrorMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "code",
              "wireValue": "code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Error code. Identifies the type of error encountered.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "content",
              "wireValue": "content"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional text passed to the supplemental LLM in place of the tool call result. The LLM then uses this text to generate a response back to the user, ensuring continuity in the conversation if the tool errors.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageContent_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Error message from the tool call, not exposed to the LLM or user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageError_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "level",
              "wireValue": "level"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ErrorLevel",
                      "typeId": "ErrorLevel",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates the severity of an error; for a Tool Error message, this must be `warn` to signal an unexpected event.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageLevel_example_autogenerated": "warn"
              }
            }
          },
          {
            "name": {
              "name": "tool_call_id",
              "wireValue": "tool_call_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier for a specific tool call instance.\n\nThis ID is used to track the request and response of a particular tool invocation, ensuring that the Tool Error message is linked to the appropriate tool call request. The specified `tool_call_id` must match the one received in the [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.ToolCallMessage.type).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageToolCallId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tool_type",
              "wireValue": "tool_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ToolType",
                      "typeId": "ToolType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Type of tool called. Either `builtin` for natively implemented tools, like web search, or `function` for user-defined tools.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageToolType_example_autogenerated": "builtin"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "tool_error",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Tool Error message, this must be `tool_error`.\n\nUpon receiving a [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.ToolCallMessage.type) and failing to invoke the function, this message is sent to notify EVI of the tool's failure.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageType_example_autogenerated": "tool_error"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a function call error.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolErrorMessage_example_autogenerated": {
            "error": "string",
            "tool_call_id": "string"
          }
        }
      }
    },
    "ToolResponseMessage": {
      "name": {
        "typeId": "ToolResponseMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ToolResponseMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "content",
              "wireValue": "content"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Return value of the tool call. Contains the output generated by the tool to pass back to EVI.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageContent_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tool_call_id",
              "wireValue": "tool_call_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier for a specific tool call instance.\n\nThis ID is used to track the request and response of a particular tool invocation, ensuring that the correct response is linked to the appropriate request. The specified `tool_call_id` must match the one received in the [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.ToolCallMessage.tool_call_id).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageToolCallId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tool_name",
              "wireValue": "tool_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageToolName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tool_type",
              "wireValue": "tool_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ToolType",
                      "typeId": "ToolType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageToolType_example_autogenerated": "builtin"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "tool_response",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Tool Response message, this must be `tool_response`.\n\nUpon receiving a [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.ToolCallMessage.type) and successfully invoking the function, this message is sent to convey the result of the function call back to EVI.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageType_example_autogenerated": "tool_response"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a function call response.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolResponseMessage_example_autogenerated": {
            "content": "string",
            "tool_call_id": "string"
          }
        }
      }
    },
    "UserInput": {
      "name": {
        "typeId": "UserInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserInput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInputCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "User text to insert into the conversation. Text sent through a User Input message is treated as the user's speech to EVI. EVI processes this input and provides a corresponding response.\n\nExpression measurement results are not available for User Input messages, as the prosody model relies on audio input and cannot process text alone.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInputText_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "user_input",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `user_input` for our server to correctly identify and process it as a User Input message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInputType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "User text to insert into the conversation. Text sent through a User Input message is treated as the user's speech to EVI. EVI processes this input and provides a corresponding response.\n\nExpression measurement results are not available for User Input messages, as the prosody model relies on audio input and cannot process text alone.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserInput_example_autogenerated": {
            "text": "string",
            "type": "string"
          }
        }
      }
    },
    "UserInterruption": {
      "name": {
        "typeId": "UserInterruption",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserInterruption"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInterruptionCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "time",
              "wireValue": "time"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Unix timestamp of the detected user interruption.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInterruptionTime_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "user_interruption",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a User Interruption message, this must be `user_interruption`.\n\nThis message indicates the user has interrupted the assistant's response. EVI detects the interruption in real-time and sends this message to signal the interruption event. This message allows the system to stop the current audio playback, clear the audio queue, and prepare to handle new user input.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInterruptionType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is an interruption.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserInterruption_example_autogenerated": {
            "time": 1,
            "type": "string"
          }
        }
      }
    },
    "UserMessage": {
      "name": {
        "typeId": "UserMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "from_text",
              "wireValue": "from_text"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Indicates if this message was inserted into the conversation as text from a [User Input](/reference/empathic-voice-interface-evi/chat/chat#send.UserInput.text) message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserMessageFromText_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "interim",
              "wireValue": "interim"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Indicates if this message contains an immediate and unfinalized transcript of the user's audio input. If it does, words may be repeated across successive UserMessage messages as our transcription model becomes more confident about what was said with additional context. Interim messages are useful to detect if the user is interrupting during audio playback on the client. Even without a finalized transcription, along with `UserInterrupt` messages, interim `UserMessages` are useful for detecting if the user is interrupting during audio playback on the client, signaling to stop playback in your application.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserMessageInterim_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChatMessage",
              "typeId": "ChatMessage",
              "inline": false,
              "type": "named"
            },
            "docs": "Transcript of the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Inference",
              "typeId": "Inference",
              "inline": false,
              "type": "named"
            },
            "docs": "Inference model results.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "time",
              "wireValue": "time"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "MillisecondInterval",
              "typeId": "MillisecondInterval",
              "inline": false,
              "type": "named"
            },
            "docs": "Start and End time of user message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "user_message",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserMessageType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a user message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserMessage_example_autogenerated": {
            "from_text": true,
            "interim": true,
            "message": {
              "role": "assistant"
            },
            "models": {
              "prosody": {
                "scores": {
                  "Admiration": 1.1,
                  "Adoration": 1.1,
                  "Aesthetic Appreciation": 1.1,
                  "Amusement": 1.1,
                  "Anger": 1.1,
                  "Anxiety": 1.1,
                  "Awe": 1.1,
                  "Awkwardness": 1.1,
                  "Boredom": 1.1,
                  "Calmness": 1.1,
                  "Concentration": 1.1,
                  "Confusion": 1.1,
                  "Contemplation": 1.1,
                  "Contempt": 1.1,
                  "Contentment": 1.1,
                  "Craving": 1.1,
                  "Desire": 1.1,
                  "Determination": 1.1,
                  "Disappointment": 1.1,
                  "Disgust": 1.1,
                  "Distress": 1.1,
                  "Doubt": 1.1,
                  "Ecstasy": 1.1,
                  "Embarrassment": 1.1,
                  "Empathic Pain": 1.1,
                  "Entrancement": 1.1,
                  "Envy": 1.1,
                  "Excitement": 1.1,
                  "Fear": 1.1,
                  "Guilt": 1.1,
                  "Horror": 1.1,
                  "Interest": 1.1,
                  "Joy": 1.1,
                  "Love": 1.1,
                  "Nostalgia": 1.1,
                  "Pain": 1.1,
                  "Pride": 1.1,
                  "Realization": 1.1,
                  "Relief": 1.1,
                  "Romance": 1.1,
                  "Sadness": 1.1,
                  "Satisfaction": 1.1,
                  "Shame": 1.1,
                  "Surprise (negative)": 1.1,
                  "Surprise (positive)": 1.1,
                  "Sympathy": 1.1,
                  "Tiredness": 1.1,
                  "Triumph": 1.1
                }
              }
            },
            "time": {
              "begin": 1,
              "end": 1
            },
            "type": "string"
          }
        }
      }
    },
    "AudioConfiguration": {
      "name": {
        "typeId": "AudioConfiguration",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AudioConfiguration"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "channels",
              "wireValue": "channels"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Number of audio channels.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioConfigurationChannels_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "encoding",
              "wireValue": "encoding"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Encoding",
              "typeId": "Encoding",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding format of the audio input, such as `linear16`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sample_rate",
              "wireValue": "sample_rate"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Audio sample rate. Number of samples per second in the audio input, measured in Hertz.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioConfigurationSampleRate_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AudioConfiguration_example_autogenerated": {
            "channels": 1,
            "encoding": "linear16",
            "sample_rate": 1
          }
        }
      }
    },
    "BuiltInTool": {
      "name": {
        "typeId": "BuiltInTool",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BuiltInTool"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "web_search",
              "wireValue": "web_search"
            }
          },
          {
            "name": {
              "name": "hang_up",
              "wireValue": "hang_up"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BuiltInTool_example_autogenerated": "web_search"
        }
      }
    },
    "BuiltinToolConfig": {
      "name": {
        "typeId": "BuiltinToolConfig",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BuiltinToolConfig"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "fallback_content",
              "wireValue": "fallback_content"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional text passed to the supplemental LLM if the tool call fails. The LLM then uses this text to generate a response back to the user, ensuring continuity in the conversation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BuiltinToolConfigFallbackContent_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "BuiltInTool",
              "typeId": "BuiltInTool",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BuiltinToolConfig_example_autogenerated": {
            "name": "web_search"
          }
        }
      }
    },
    "ChatMessageToolResult": {
      "name": {
        "typeId": "ChatMessageToolResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatMessageToolResult"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolResponseMessage",
              "typeId": "ToolResponseMessage",
              "displayName": "ToolResponseMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolErrorMessage",
              "typeId": "ToolErrorMessage",
              "displayName": "ToolErrorMessage",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Function call response from client.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatMessageToolResult_example_autogenerated": {
            "content": "string",
            "tool_call_id": "string"
          }
        }
      }
    },
    "ChatMessage": {
      "name": {
        "typeId": "ChatMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "content",
              "wireValue": "content"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Transcript of the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMessageContent_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "role",
              "wireValue": "role"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Role",
              "typeId": "Role",
              "inline": false,
              "type": "named"
            },
            "docs": "Role of who is providing the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "tool_call",
              "wireValue": "tool_call"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ToolCallMessage",
                      "typeId": "ToolCallMessage",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Function call name and arguments.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMessageToolCall_example_autogenerated": {
                  "name": "string",
                  "parameters": "string",
                  "response_required": true,
                  "tool_call_id": "string",
                  "tool_type": "builtin"
                }
              }
            }
          },
          {
            "name": {
              "name": "tool_result",
              "wireValue": "tool_result"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChatMessageToolResult",
                      "typeId": "ChatMessageToolResult",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Function call response from client.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMessageToolResult_example_autogenerated": {
                  "content": "string",
                  "tool_call_id": "string"
                }
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatMessage_example_autogenerated": {
            "role": "assistant"
          }
        }
      }
    },
    "Context": {
      "name": {
        "typeId": "Context",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Context"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The context to be injected into the conversation. Helps inform the LLM's response by providing relevant information about the ongoing conversation.\n\nThis text will be appended to the end of user messages based on the chosen persistence level. For example, if you want to remind EVI of its role as a helpful weather assistant, the context you insert will be appended to the end of user messages as `{Context: You are a helpful weather assistant}`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContextText_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ContextType",
                  "typeId": "ContextType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The persistence level of the injected context. Specifies how long the injected context will remain active in the session.\n\nThere are three possible context types:\n\n- **Persistent**: The context is appended to all user messages for the duration of the session.\n\n- **Temporary**: The context is appended only to the next user message.\n\n - **Editable**: The original context is updated to reflect the new context.\n\n If the type is not specified, it will default to `temporary`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Context_example_autogenerated": {
            "text": "string"
          }
        }
      }
    },
    "ContextType": {
      "name": {
        "typeId": "ContextType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ContextType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "editable",
              "wireValue": "editable"
            }
          },
          {
            "name": {
              "name": "persistent",
              "wireValue": "persistent"
            }
          },
          {
            "name": {
              "name": "temporary",
              "wireValue": "temporary"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ContextType_example_autogenerated": "editable"
        }
      }
    },
    "EmotionScores": {
      "name": {
        "typeId": "EmotionScores",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmotionScores"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "Admiration",
              "wireValue": "Admiration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAdmiration_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Adoration",
              "wireValue": "Adoration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAdoration_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Aesthetic Appreciation",
              "wireValue": "Aesthetic Appreciation"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAestheticAppreciation_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Amusement",
              "wireValue": "Amusement"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAmusement_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Anger",
              "wireValue": "Anger"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAnger_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Anxiety",
              "wireValue": "Anxiety"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAnxiety_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Awe",
              "wireValue": "Awe"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAwe_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Awkwardness",
              "wireValue": "Awkwardness"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAwkwardness_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Boredom",
              "wireValue": "Boredom"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresBoredom_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Calmness",
              "wireValue": "Calmness"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresCalmness_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Concentration",
              "wireValue": "Concentration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresConcentration_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Confusion",
              "wireValue": "Confusion"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresConfusion_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Contemplation",
              "wireValue": "Contemplation"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresContemplation_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Contempt",
              "wireValue": "Contempt"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresContempt_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Contentment",
              "wireValue": "Contentment"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresContentment_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Craving",
              "wireValue": "Craving"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresCraving_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Desire",
              "wireValue": "Desire"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDesire_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Determination",
              "wireValue": "Determination"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDetermination_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Disappointment",
              "wireValue": "Disappointment"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDisappointment_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Disgust",
              "wireValue": "Disgust"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDisgust_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Distress",
              "wireValue": "Distress"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDistress_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Doubt",
              "wireValue": "Doubt"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDoubt_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Ecstasy",
              "wireValue": "Ecstasy"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEcstasy_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Embarrassment",
              "wireValue": "Embarrassment"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEmbarrassment_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Empathic Pain",
              "wireValue": "Empathic Pain"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEmpathicPain_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Entrancement",
              "wireValue": "Entrancement"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEntrancement_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Envy",
              "wireValue": "Envy"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEnvy_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Excitement",
              "wireValue": "Excitement"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresExcitement_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Fear",
              "wireValue": "Fear"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresFear_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Guilt",
              "wireValue": "Guilt"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresGuilt_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Horror",
              "wireValue": "Horror"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresHorror_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Interest",
              "wireValue": "Interest"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresInterest_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Joy",
              "wireValue": "Joy"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresJoy_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Love",
              "wireValue": "Love"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresLove_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Nostalgia",
              "wireValue": "Nostalgia"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresNostalgia_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Pain",
              "wireValue": "Pain"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresPain_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Pride",
              "wireValue": "Pride"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresPride_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Realization",
              "wireValue": "Realization"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresRealization_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Relief",
              "wireValue": "Relief"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresRelief_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Romance",
              "wireValue": "Romance"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresRomance_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Sadness",
              "wireValue": "Sadness"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSadness_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Satisfaction",
              "wireValue": "Satisfaction"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSatisfaction_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Shame",
              "wireValue": "Shame"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresShame_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Surprise (negative)",
              "wireValue": "Surprise (negative)"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSurpriseNegative_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Surprise (positive)",
              "wireValue": "Surprise (positive)"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSurprisePositive_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Sympathy",
              "wireValue": "Sympathy"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSympathy_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Tiredness",
              "wireValue": "Tiredness"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresTiredness_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Triumph",
              "wireValue": "Triumph"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresTriumph_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmotionScores_example_autogenerated": {
            "Admiration": 1.1,
            "Adoration": 1.1,
            "Aesthetic Appreciation": 1.1,
            "Amusement": 1.1,
            "Anger": 1.1,
            "Anxiety": 1.1,
            "Awe": 1.1,
            "Awkwardness": 1.1,
            "Boredom": 1.1,
            "Calmness": 1.1,
            "Concentration": 1.1,
            "Confusion": 1.1,
            "Contemplation": 1.1,
            "Contempt": 1.1,
            "Contentment": 1.1,
            "Craving": 1.1,
            "Desire": 1.1,
            "Determination": 1.1,
            "Disappointment": 1.1,
            "Disgust": 1.1,
            "Distress": 1.1,
            "Doubt": 1.1,
            "Ecstasy": 1.1,
            "Embarrassment": 1.1,
            "Empathic Pain": 1.1,
            "Entrancement": 1.1,
            "Envy": 1.1,
            "Excitement": 1.1,
            "Fear": 1.1,
            "Guilt": 1.1,
            "Horror": 1.1,
            "Interest": 1.1,
            "Joy": 1.1,
            "Love": 1.1,
            "Nostalgia": 1.1,
            "Pain": 1.1,
            "Pride": 1.1,
            "Realization": 1.1,
            "Relief": 1.1,
            "Romance": 1.1,
            "Sadness": 1.1,
            "Satisfaction": 1.1,
            "Shame": 1.1,
            "Surprise (negative)": 1.1,
            "Surprise (positive)": 1.1,
            "Sympathy": 1.1,
            "Tiredness": 1.1,
            "Triumph": 1.1
          }
        }
      }
    },
    "Encoding": {
      "name": {
        "typeId": "Encoding",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Encoding"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "linear16",
              "wireValue": "linear16"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Encoding_example_autogenerated": "linear16"
        }
      }
    },
    "ErrorLevel": {
      "name": {
        "typeId": "ErrorLevel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ErrorLevel"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "warn",
              "wireValue": "warn"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ErrorLevel_example_autogenerated": "warn"
        }
      }
    },
    "Inference": {
      "name": {
        "typeId": "Inference",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Inference"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "prosody",
              "wireValue": "prosody"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProsodyInference",
                  "typeId": "ProsodyInference",
                  "inline": false,
                  "type": "named"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Prosody model inference results.\n\nEVI uses the prosody model to measure 48 emotions related to speech and vocal characteristics within a given expression.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InferenceProsody_example_autogenerated": {
                  "scores": {
                    "Admiration": 1.1,
                    "Adoration": 1.1,
                    "Aesthetic Appreciation": 1.1,
                    "Amusement": 1.1,
                    "Anger": 1.1,
                    "Anxiety": 1.1,
                    "Awe": 1.1,
                    "Awkwardness": 1.1,
                    "Boredom": 1.1,
                    "Calmness": 1.1,
                    "Concentration": 1.1,
                    "Confusion": 1.1,
                    "Contemplation": 1.1,
                    "Contempt": 1.1,
                    "Contentment": 1.1,
                    "Craving": 1.1,
                    "Desire": 1.1,
                    "Determination": 1.1,
                    "Disappointment": 1.1,
                    "Disgust": 1.1,
                    "Distress": 1.1,
                    "Doubt": 1.1,
                    "Ecstasy": 1.1,
                    "Embarrassment": 1.1,
                    "Empathic Pain": 1.1,
                    "Entrancement": 1.1,
                    "Envy": 1.1,
                    "Excitement": 1.1,
                    "Fear": 1.1,
                    "Guilt": 1.1,
                    "Horror": 1.1,
                    "Interest": 1.1,
                    "Joy": 1.1,
                    "Love": 1.1,
                    "Nostalgia": 1.1,
                    "Pain": 1.1,
                    "Pride": 1.1,
                    "Realization": 1.1,
                    "Relief": 1.1,
                    "Romance": 1.1,
                    "Sadness": 1.1,
                    "Satisfaction": 1.1,
                    "Shame": 1.1,
                    "Surprise (negative)": 1.1,
                    "Surprise (positive)": 1.1,
                    "Sympathy": 1.1,
                    "Tiredness": 1.1,
                    "Triumph": 1.1
                  }
                }
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Inference_example_autogenerated": {
            "prosody": {
              "scores": {
                "Admiration": 1.1,
                "Adoration": 1.1,
                "Aesthetic Appreciation": 1.1,
                "Amusement": 1.1,
                "Anger": 1.1,
                "Anxiety": 1.1,
                "Awe": 1.1,
                "Awkwardness": 1.1,
                "Boredom": 1.1,
                "Calmness": 1.1,
                "Concentration": 1.1,
                "Confusion": 1.1,
                "Contemplation": 1.1,
                "Contempt": 1.1,
                "Contentment": 1.1,
                "Craving": 1.1,
                "Desire": 1.1,
                "Determination": 1.1,
                "Disappointment": 1.1,
                "Disgust": 1.1,
                "Distress": 1.1,
                "Doubt": 1.1,
                "Ecstasy": 1.1,
                "Embarrassment": 1.1,
                "Empathic Pain": 1.1,
                "Entrancement": 1.1,
                "Envy": 1.1,
                "Excitement": 1.1,
                "Fear": 1.1,
                "Guilt": 1.1,
                "Horror": 1.1,
                "Interest": 1.1,
                "Joy": 1.1,
                "Love": 1.1,
                "Nostalgia": 1.1,
                "Pain": 1.1,
                "Pride": 1.1,
                "Realization": 1.1,
                "Relief": 1.1,
                "Romance": 1.1,
                "Sadness": 1.1,
                "Satisfaction": 1.1,
                "Shame": 1.1,
                "Surprise (negative)": 1.1,
                "Surprise (positive)": 1.1,
                "Sympathy": 1.1,
                "Tiredness": 1.1,
                "Triumph": 1.1
              }
            }
          }
        }
      }
    },
    "MillisecondInterval": {
      "name": {
        "typeId": "MillisecondInterval",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MillisecondInterval"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "begin",
              "wireValue": "begin"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Start time of the interval in milliseconds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MillisecondIntervalBegin_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "End time of the interval in milliseconds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MillisecondIntervalEnd_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MillisecondInterval_example_autogenerated": {
            "begin": 1,
            "end": 1
          }
        }
      }
    },
    "ProsodyInference": {
      "name": {
        "typeId": "ProsodyInference",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ProsodyInference"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "scores",
              "wireValue": "scores"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EmotionScores",
              "typeId": "EmotionScores",
              "inline": false,
              "type": "named"
            },
            "docs": "The confidence scores for 48 emotions within the detected expression of an audio sample.\n\nScores typically range from 0 to 1, with higher values indicating a stronger confidence level in the measured attribute.\n\nSee our guide on [interpreting expression measurement results](/docs/expression-measurement/faq#how-do-i-interpret-my-results) to learn more.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProsodyInference_example_autogenerated": {
            "scores": {
              "Admiration": 1.1,
              "Adoration": 1.1,
              "Aesthetic Appreciation": 1.1,
              "Amusement": 1.1,
              "Anger": 1.1,
              "Anxiety": 1.1,
              "Awe": 1.1,
              "Awkwardness": 1.1,
              "Boredom": 1.1,
              "Calmness": 1.1,
              "Concentration": 1.1,
              "Confusion": 1.1,
              "Contemplation": 1.1,
              "Contempt": 1.1,
              "Contentment": 1.1,
              "Craving": 1.1,
              "Desire": 1.1,
              "Determination": 1.1,
              "Disappointment": 1.1,
              "Disgust": 1.1,
              "Distress": 1.1,
              "Doubt": 1.1,
              "Ecstasy": 1.1,
              "Embarrassment": 1.1,
              "Empathic Pain": 1.1,
              "Entrancement": 1.1,
              "Envy": 1.1,
              "Excitement": 1.1,
              "Fear": 1.1,
              "Guilt": 1.1,
              "Horror": 1.1,
              "Interest": 1.1,
              "Joy": 1.1,
              "Love": 1.1,
              "Nostalgia": 1.1,
              "Pain": 1.1,
              "Pride": 1.1,
              "Realization": 1.1,
              "Relief": 1.1,
              "Romance": 1.1,
              "Sadness": 1.1,
              "Satisfaction": 1.1,
              "Shame": 1.1,
              "Surprise (negative)": 1.1,
              "Surprise (positive)": 1.1,
              "Sympathy": 1.1,
              "Tiredness": 1.1,
              "Triumph": 1.1
            }
          }
        }
      }
    },
    "Role": {
      "name": {
        "typeId": "Role",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Role"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "assistant",
              "wireValue": "assistant"
            }
          },
          {
            "name": {
              "name": "system",
              "wireValue": "system"
            }
          },
          {
            "name": {
              "name": "user",
              "wireValue": "user"
            }
          },
          {
            "name": {
              "name": "all",
              "wireValue": "all"
            }
          },
          {
            "name": {
              "name": "tool",
              "wireValue": "tool"
            }
          },
          {
            "name": {
              "name": "context",
              "wireValue": "context"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Role_example_autogenerated": "assistant"
        }
      }
    },
    "SessionSettingsMetadata": {
      "name": {
        "typeId": "SessionSettingsMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SessionSettingsMetadata"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SessionSettingsMetadata_example_autogenerated": {}
        }
      }
    },
    "Tool": {
      "name": {
        "typeId": "Tool",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Tool"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional description of what the tool does, used by the supplemental LLM to choose when and how to call the function.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "fallback_content",
              "wireValue": "fallback_content"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional text passed to the supplemental LLM if the tool call fails. The LLM then uses this text to generate a response back to the user, ensuring continuity in the conversation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolFallbackContent_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Name of the user-defined tool to be enabled.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "parameters",
              "wireValue": "parameters"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Parameters of the tool. Is a stringified JSON schema.\n\nThese parameters define the inputs needed for the tool's execution, including the expected data type and description for each input field. Structured as a JSON schema, this format ensures the tool receives data in the expected format.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolParameters_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolType",
              "typeId": "ToolType",
              "inline": false,
              "type": "named"
            },
            "docs": "Type of tool. Set to `function` for user-defined tools.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tool_example_autogenerated": {
            "name": "string",
            "parameters": "string",
            "type": "builtin"
          }
        }
      }
    },
    "ToolType": {
      "name": {
        "typeId": "ToolType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ToolType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "builtin",
              "wireValue": "builtin"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "function",
                "camelCase": {
                  "unsafeName": "function",
                  "safeName": "function_"
                },
                "snakeCase": {
                  "unsafeName": "function",
                  "safeName": "function_"
                }
              },
              "wireValue": "function"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolType_example_autogenerated": "builtin"
        }
      }
    },
    "ChatSubscribe": {
      "name": {
        "typeId": "ChatSubscribe",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatSubscribe"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AssistantEnd",
              "typeId": "AssistantEnd",
              "displayName": "AssistantEnd",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AssistantMessage",
              "typeId": "AssistantMessage",
              "displayName": "AssistantMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AudioOutput",
              "typeId": "AudioOutput",
              "displayName": "AudioOutput",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChatMetadata",
              "typeId": "ChatMetadata",
              "displayName": "ChatMetadata",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "typeId": "Error",
              "displayName": "Error",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserInterruption",
              "typeId": "UserInterruption",
              "displayName": "UserInterruption",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserMessage",
              "typeId": "UserMessage",
              "displayName": "UserMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolCallMessage",
              "typeId": "ToolCallMessage",
              "displayName": "ToolCallMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolResponseMessage",
              "typeId": "ToolResponseMessage",
              "displayName": "ToolResponseMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolErrorMessage",
              "typeId": "ToolErrorMessage",
              "displayName": "ToolErrorMessage",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatSubscribe_example_autogenerated": null
        }
      }
    },
    "ChatPublish": {
      "name": {
        "typeId": "ChatPublish",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatPublish"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AudioInput",
              "typeId": "AudioInput",
              "displayName": "AudioInput",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "SessionSettings",
              "typeId": "SessionSettings",
              "displayName": "SessionSettings",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserInput",
              "typeId": "UserInput",
              "displayName": "UserInput",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AssistantInput",
              "typeId": "AssistantInput",
              "displayName": "AssistantInput",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolResponseMessage",
              "typeId": "ToolResponseMessage",
              "displayName": "ToolResponseMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolErrorMessage",
              "typeId": "ToolErrorMessage",
              "displayName": "ToolErrorMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "PauseAssistantMessage",
              "typeId": "PauseAssistantMessage",
              "displayName": "PauseAssistantMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResumeAssistantMessage",
              "typeId": "ResumeAssistantMessage",
              "displayName": "ResumeAssistantMessage",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatPublish_example_autogenerated": null
        }
      }
    },
    "Tools_deleteToolVersion_Response_200": {
      "name": {
        "typeId": "Tools_deleteToolVersion_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Tools_deleteToolVersion_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tools_deleteToolVersion_Response_200_example_autogenerated": {}
        }
      }
    },
    "Tools_deleteToolVersion_Response_204": {
      "name": {
        "typeId": "Tools_deleteToolVersion_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Tools_deleteToolVersion_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tools_deleteToolVersion_Response_204_example_autogenerated": {}
        }
      }
    },
    "Tools_updateToolName_Response_200": {
      "name": {
        "typeId": "Tools_updateToolName_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Tools_updateToolName_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tools_updateToolName_Response_200_example_autogenerated": {}
        }
      }
    },
    "Prompts_deletePromptVersion_Response_200": {
      "name": {
        "typeId": "Prompts_deletePromptVersion_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Prompts_deletePromptVersion_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Prompts_deletePromptVersion_Response_200_example_autogenerated": {}
        }
      }
    },
    "Prompts_deletePromptVersion_Response_204": {
      "name": {
        "typeId": "Prompts_deletePromptVersion_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Prompts_deletePromptVersion_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Prompts_deletePromptVersion_Response_204_example_autogenerated": {}
        }
      }
    },
    "Prompts_updatePromptName_Response_200": {
      "name": {
        "typeId": "Prompts_updatePromptName_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Prompts_updatePromptName_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Prompts_updatePromptName_Response_200_example_autogenerated": {}
        }
      }
    },
    "Custom Voices_deleteCustomVoice_Response_200": {
      "name": {
        "typeId": "Custom Voices_deleteCustomVoice_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Custom Voices_deleteCustomVoice_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Custom Voices_deleteCustomVoice_Response_200_example_autogenerated": {}
        }
      }
    },
    "Custom Voices_deleteCustomVoice_Response_204": {
      "name": {
        "typeId": "Custom Voices_deleteCustomVoice_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Custom Voices_deleteCustomVoice_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Custom Voices_deleteCustomVoice_Response_204_example_autogenerated": {}
        }
      }
    },
    "Custom Voices_updateCustomVoiceName_Response_200": {
      "name": {
        "typeId": "Custom Voices_updateCustomVoiceName_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Custom Voices_updateCustomVoiceName_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Custom Voices_updateCustomVoiceName_Response_200_example_autogenerated": {}
        }
      }
    },
    "Configs_deleteConfig_Response_200": {
      "name": {
        "typeId": "Configs_deleteConfig_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Configs_deleteConfig_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Configs_deleteConfig_Response_200_example_autogenerated": {}
        }
      }
    },
    "Configs_deleteConfig_Response_204": {
      "name": {
        "typeId": "Configs_deleteConfig_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Configs_deleteConfig_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Configs_deleteConfig_Response_204_example_autogenerated": {}
        }
      }
    },
    "Configs_updateConfigName_Response_200": {
      "name": {
        "typeId": "Configs_updateConfigName_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Configs_updateConfigName_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Configs_updateConfigName_Response_200_example_autogenerated": {}
        }
      }
    },
    "Tools_deleteToolVersion_1_Response_200": {
      "name": {
        "typeId": "Tools_deleteToolVersion_1_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Tools_deleteToolVersion_1_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tools_deleteToolVersion_1_Response_200_example_autogenerated": {}
        }
      }
    },
    "Tools_deleteToolVersion_1_Response_204": {
      "name": {
        "typeId": "Tools_deleteToolVersion_1_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Tools_deleteToolVersion_1_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tools_deleteToolVersion_1_Response_204_example_autogenerated": {}
        }
      }
    },
    "Prompts_deletePromptVersion_1_Response_200": {
      "name": {
        "typeId": "Prompts_deletePromptVersion_1_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Prompts_deletePromptVersion_1_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Prompts_deletePromptVersion_1_Response_200_example_autogenerated": {}
        }
      }
    },
    "Prompts_deletePromptVersion_1_Response_204": {
      "name": {
        "typeId": "Prompts_deletePromptVersion_1_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Prompts_deletePromptVersion_1_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Prompts_deletePromptVersion_1_Response_204_example_autogenerated": {}
        }
      }
    },
    "Configs_deleteConfigVersion_Response_200": {
      "name": {
        "typeId": "Configs_deleteConfigVersion_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Configs_deleteConfigVersion_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Configs_deleteConfigVersion_Response_200_example_autogenerated": {}
        }
      }
    },
    "Configs_deleteConfigVersion_Response_204": {
      "name": {
        "typeId": "Configs_deleteConfigVersion_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Configs_deleteConfigVersion_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Configs_deleteConfigVersion_Response_204_example_autogenerated": {}
        }
      }
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": "errorInstanceId",
      "wireValue": "errorInstanceId"
    }
  },
  "errors": {
    "UnprocessableEntityError": {
      "name": {
        "name": "UnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "UnprocessableEntityError",
        "wireValue": "UnprocessableEntityError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    }
  },
  "services": {
    "service_": {
      "name": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Language Models",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/language_models",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "9f931bf2",
                "url": "/v0/evi/language_models",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/language_models",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_.language_models_v0_evi_language_models_get",
          "name": "language_models_v0_evi_language_models_get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "A list of available language models with details about their providers and built-in tools.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Fetch a list of available language models from various providers along with their built-in tools.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_languageModelsV0EviLanguageModelsGetExample_200": {
                "displayName": "languageModelsV0EviLanguageModelsGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/language_models"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "A list of available language models with details about their providers and built-in tools.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Tts",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tts",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "access_token",
                "wireValue": "access_token"
              },
              "docs": "Access token used for authenticating the client. If not provided, an `api_key` must be provided to authenticate.\n\nThe access token is generated using both an API key and a Secret key, which provides an additional layer of security compared to using just an API key.\n\nFor more details, refer to the [Authentication Strategies Guide](/docs/introduction/api-key#authentication-strategies).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "access_token_example": ""
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "Accept",
                "wireValue": "Accept"
              },
              "docs": "Indicates what content type the server sent response (containing both the generated speech and the associated metadata) should have. Select `\"application/json\"` to receive a JSON response containing the audio as a Base64-encoded string. Select `\"audio/*\"` to receive a binary streaming response containing just the audio data in the requested format. Select `\"multipart/form-data\"` to receive a response containing separate form fields for both the binary audio data (in the requested format) and the JSON metadata.\n\nNote that only an \"audio/*\" response is streamed; the other response types are sent to the client all at once.",
              "valueType": {
                "container": {
                  "optional": {
                    "type": "unknown"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "Accept_example": null
                }
              }
            }
          ],
          "errors": [
            {
              "error": {
                "name": "UnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "fd61411",
                "url": "/v0/evi/tts",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            },
            {
              "example": {
                "id": "c4094825",
                "url": "/v0/evi/tts",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "body": {
                    "jsonExample": {
                      "key": "value"
                    },
                    "shape": {
                      "unknown": {
                        "key": "value"
                      },
                      "type": "unknown"
                    }
                  },
                  "error": {
                    "name": "UnprocessableEntityError",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "errorId": "UnprocessableEntityError"
                  },
                  "type": "error"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tts",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_.tts_v0_evi_tts_post",
          "name": "tts_v0_evi_tts_post",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "ttsV0EviTtsPostExample_200": {
                "displayName": "ttsV0EviTtsPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/tts"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Twilio Webhook",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/twilio",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "config_id",
                "wireValue": "config_id"
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "config_id_example": "config_id"
                }
              }
            },
            {
              "name": {
                "name": "access_token",
                "wireValue": "access_token"
              },
              "docs": "Access token used for authenticating the client. If not provided, an `api_key` must be provided to authenticate.\n\nThe access token is generated using both an API key and a Secret key, which provides an additional layer of security compared to using just an API key.\n\nFor more details, refer to the [Authentication Strategies Guide](/docs/introduction/api-key#authentication-strategies).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "access_token_example": ""
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "ee58dbaf",
                "url": "/v0/evi/twilio",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [
                  {
                    "name": {
                      "name": "config_id",
                      "wireValue": "config_id"
                    },
                    "shape": {
                      "type": "single"
                    },
                    "value": {
                      "jsonExample": "config_id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "config_id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            },
            {
              "example": {
                "id": "ee7c491b",
                "url": "/v0/evi/twilio",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [
                  {
                    "name": {
                      "name": "config_id",
                      "wireValue": "config_id"
                    },
                    "shape": {
                      "type": "single"
                    },
                    "value": {
                      "jsonExample": "config_id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "config_id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "body": {
                    "jsonExample": {
                      "key": "value"
                    },
                    "shape": {
                      "unknown": {
                        "key": "value"
                      },
                      "type": "unknown"
                    }
                  },
                  "error": {
                    "name": "UnprocessableEntityError",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "errorId": "UnprocessableEntityError"
                  },
                  "type": "error"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/twilio",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_.twilio_webhook_v0_evi_twilio_post",
          "name": "twilio_webhook_v0_evi_twilio_post",
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/x-www-form-urlencoded",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "This is the webhook that will be called along with the twilio phone caller-callee information whenever\na call is made to a twilio phone number.\nHere we also authenticate the hume api_key of the user. Then, if authenticated, it sends an XML response\nback to twilio instructing it to create a websocket stream between the twilio incoming phone call and evi's\n_twilio websocket endpoint, which will then handle the call session.",
          "v2Examples": {
            "autogeneratedExamples": {
              "twilioWebhookV0EviTwilioPostExample_200": {
                "displayName": "twilioWebhookV0EviTwilioPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/twilio"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {
                    "config_id": "config_id"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Voice",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/voice",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "access_token",
                "wireValue": "access_token"
              },
              "docs": "Access token used for authenticating the client. If not provided, an `api_key` must be provided to authenticate.\n\nThe access token is generated using both an API key and a Secret key, which provides an additional layer of security compared to using just an API key.\n\nFor more details, refer to the [Authentication Strategies Guide](/docs/introduction/api-key#authentication-strategies).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "access_token_example": ""
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "fd61411",
                "url": "/v0/evi/voice",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            },
            {
              "example": {
                "id": "c4094825",
                "url": "/v0/evi/voice",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "body": {
                    "jsonExample": {
                      "key": "value"
                    },
                    "shape": {
                      "unknown": {
                        "key": "value"
                      },
                      "type": "unknown"
                    }
                  },
                  "error": {
                    "name": "UnprocessableEntityError",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "errorId": "UnprocessableEntityError"
                  },
                  "type": "error"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/voice",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_.voice_v0_evi_voice_post",
          "name": "voice_v0_evi_voice_post",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "voiceV0EviVoicePostExample_200": {
                "displayName": "voiceV0EviVoicePostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/voice"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Voice Names",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/voice-names",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "9f931bf2",
                "url": "/v0/evi/voice-names",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            },
            {
              "example": {
                "id": "bc5b4786",
                "url": "/v0/evi/voice-names",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "body": {
                    "jsonExample": {
                      "key": "value"
                    },
                    "shape": {
                      "unknown": {
                        "key": "value"
                      },
                      "type": "unknown"
                    }
                  },
                  "error": {
                    "name": "UnprocessableEntityError",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "errorId": "UnprocessableEntityError"
                  },
                  "type": "error"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/voice-names",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_.voice_names_v0_evi_voice_names_get",
          "name": "voice_names_v0_evi_voice_names_get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "A list of available voice names and sample audio file URLs.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Fetch a list of available voice names and sample audio file URLs.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_voiceNamesV0EviVoiceNamesGetExample_200": {
                "displayName": "voiceNamesV0EviVoiceNamesGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/voice-names"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "A list of available voice names and sample audio file URLs.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_tools": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Tools"
          ],
          "packagePath": [],
          "file": "Tools"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List tools",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "restrict_to_most_recent",
                "wireValue": "restrict_to_most_recent"
              },
              "docs": "By default, `restrict_to_most_recent` is set to true, returning only the latest version of each tool. To include all versions of each tool in the list, set `restrict_to_most_recent` to false.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "restrict_to_most_recent_example": true
                }
              }
            },
            {
              "name": {
                "name": "name",
                "wireValue": "name"
              },
              "docs": "Filter to only include tools with name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_example": "name"
                }
              }
            },
            {
              "name": {
                "name": "name_requires_exact_match",
                "wireValue": "name_requires_exact_match"
              },
              "docs": "If true, the name filter requires an exact match. If false, the results will include all matches where name is a case-insensitive substring of the full name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_requires_exact_match_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "9f931bf2",
                "url": "/v0/evi/tools",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tools.getReturnToolsForUser",
          "name": "getReturnToolsForUser",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_toolsGetReturnToolsForUserExample_200": {
                "displayName": "getReturnToolsForUserExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/tools"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create tool",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "fd61411",
                "url": "/v0/evi/tools",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tools.createNewTool",
          "name": "createNewTool",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "toolsCreateNewToolExample_201": {
                "displayName": "toolsCreateNewToolExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/tools"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Created",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List tool versions",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "restrict_to_most_recent",
                "wireValue": "restrict_to_most_recent"
              },
              "docs": "By default, `restrict_to_most_recent` is set to true, returning only the latest version of each tool. To include all versions of each tool in the list, set `restrict_to_most_recent` to false.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "restrict_to_most_recent_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "c58d0168",
                "url": "/v0/evi/tools/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tools.getReturnToolByToolId",
          "name": "getReturnToolByToolId",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_toolsGetReturnToolByToolIdExample_200": {
                "displayName": "getReturnToolByToolIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/tools/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create tool version",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "2f9ceb6b",
                "url": "/v0/evi/tools/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tools.addNewToolVersion",
          "name": "addNewToolVersion",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "toolsAddNewToolVersionExample_201": {
                "displayName": "toolsAddNewToolVersionExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/tools/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Created",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete tool",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "e89b9ca",
                "url": "/v0/evi/tools/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {},
                      "shape": {
                        "shape": {
                          "properties": [],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "Tools_deleteToolVersion_Response_200",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Tools_deleteToolVersion_Response_200"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tools.deleteToolVersion",
          "name": "deleteToolVersion",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Tools_deleteToolVersion_Response_200",
                  "typeId": "Tools_deleteToolVersion_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "OK",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "toolsDeleteToolVersionExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_toolsDeleteToolVersionExample_200": {
                "displayName": "deleteToolVersionExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/tools/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              },
              "base_toolsDeleteToolVersionExample_204": {
                "displayName": "deleteToolVersionExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/tools/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Tools_deleteToolVersion_Response_200",
                      "typeId": "Tools_deleteToolVersion_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "OK",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "toolsDeleteToolVersionExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              },
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Tools_deleteToolVersion_Response_204",
                      "typeId": "Tools_deleteToolVersion_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "toolsDeleteToolVersionExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update tool name",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "6087f073",
                "url": "/v0/evi/tools/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {},
                      "shape": {
                        "shape": {
                          "properties": [],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "Tools_updateToolName_Response_200",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Tools_updateToolName_Response_200"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tools.updateToolName",
          "name": "updateToolName",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Tools_updateToolName_Response_200",
                  "typeId": "Tools_updateToolName_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "toolsUpdateToolNameExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "toolsUpdateToolNameExample_200": {
                "displayName": "toolsUpdateToolNameExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/tools/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Tools_updateToolName_Response_200",
                      "typeId": "Tools_updateToolName_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "toolsUpdateToolNameExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get tool version",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a tool. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "31527b8a",
                "url": "/v0/evi/tools/id/version/1",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  },
                  {
                    "name": "version",
                    "value": {
                      "jsonExample": 1,
                      "shape": {
                        "primitive": {
                          "integer": 1,
                          "type": "integer"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a tool. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tools.getReturnToolByVersionNumber",
          "name": "getReturnToolByVersionNumber",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_toolsGetReturnToolByVersionNumberExample_200": {
                "displayName": "getReturnToolByVersionNumberExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/tools/id/version/1"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete tool version",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a tool. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "4f2c4248",
                "url": "/v0/evi/tools/id/version/1",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  },
                  {
                    "name": "version",
                    "value": {
                      "jsonExample": 1,
                      "shape": {
                        "primitive": {
                          "integer": 1,
                          "type": "integer"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {},
                      "shape": {
                        "shape": {
                          "properties": [],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "Tools_deleteToolVersion_1_Response_200",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Tools_deleteToolVersion_1_Response_200"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a tool. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tools.deleteToolVersion_1",
          "name": "deleteToolVersion_1",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Tools_deleteToolVersion_1_Response_200",
                  "typeId": "Tools_deleteToolVersion_1_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "OK",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "toolsDeleteToolVersion1Example": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_toolsDeleteToolVersion1Example_200": {
                "displayName": "deleteToolVersion1Example",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/tools/id/version/1"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              },
              "base_toolsDeleteToolVersion1Example_204": {
                "displayName": "deleteToolVersion1Example",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/tools/id/version/1"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Tools_deleteToolVersion_1_Response_200",
                      "typeId": "Tools_deleteToolVersion_1_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "OK",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "toolsDeleteToolVersion1Example": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              },
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Tools_deleteToolVersion_1_Response_204",
                      "typeId": "Tools_deleteToolVersion_1_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "toolsDeleteToolVersion1Example": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update tool description",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a tool. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "b528a359",
                "url": "/v0/evi/tools/id/version/1",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  },
                  {
                    "name": "version",
                    "value": {
                      "jsonExample": 1,
                      "shape": {
                        "primitive": {
                          "integer": 1,
                          "type": "integer"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a tool. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tools.updateToolVersionDescription",
          "name": "updateToolVersionDescription",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "toolsUpdateToolVersionDescriptionExample_200": {
                "displayName": "toolsUpdateToolVersionDescriptionExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/tools/id/version/1"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_prompts": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Prompts"
          ],
          "packagePath": [],
          "file": "Prompts"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List prompts",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "restrict_to_most_recent",
                "wireValue": "restrict_to_most_recent"
              },
              "docs": "Only include the most recent version of each prompt in the list.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "restrict_to_most_recent_example": true
                }
              }
            },
            {
              "name": {
                "name": "name",
                "wireValue": "name"
              },
              "docs": "Filter to only include prompts with name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_example": "name"
                }
              }
            },
            {
              "name": {
                "name": "name_requires_exact_match",
                "wireValue": "name_requires_exact_match"
              },
              "docs": "If true, the name filter requires an exact match. If false, the results will include all matches where name is a case-insensitive substring of the full name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_requires_exact_match_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "9f931bf2",
                "url": "/v0/evi/prompts",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_prompts.getReturnPromptsForUser",
          "name": "getReturnPromptsForUser",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_promptsGetReturnPromptsForUserExample_200": {
                "displayName": "getReturnPromptsForUserExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/prompts"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create prompt",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "fd61411",
                "url": "/v0/evi/prompts",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_prompts.createNewPrompt",
          "name": "createNewPrompt",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "promptsCreateNewPromptExample_201": {
                "displayName": "promptsCreateNewPromptExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/prompts"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Created",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List prompt versions",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "restrict_to_most_recent",
                "wireValue": "restrict_to_most_recent"
              },
              "docs": "Only include the most recent version of each prompt in the list.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "restrict_to_most_recent_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "c58d0168",
                "url": "/v0/evi/prompts/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_prompts.getReturnPromptByPromptId",
          "name": "getReturnPromptByPromptId",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_promptsGetReturnPromptByPromptIdExample_200": {
                "displayName": "getReturnPromptByPromptIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/prompts/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create prompt version",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "2f9ceb6b",
                "url": "/v0/evi/prompts/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_prompts.addNewPromptVersion",
          "name": "addNewPromptVersion",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "promptsAddNewPromptVersionExample_201": {
                "displayName": "promptsAddNewPromptVersionExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/prompts/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Created",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete prompt",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "255c94da",
                "url": "/v0/evi/prompts/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {},
                      "shape": {
                        "shape": {
                          "properties": [],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "Prompts_deletePromptVersion_Response_200",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Prompts_deletePromptVersion_Response_200"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_prompts.deletePromptVersion",
          "name": "deletePromptVersion",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Prompts_deletePromptVersion_Response_200",
                  "typeId": "Prompts_deletePromptVersion_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "OK",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "promptsDeletePromptVersionExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_promptsDeletePromptVersionExample_200": {
                "displayName": "deletePromptVersionExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/prompts/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              },
              "base_promptsDeletePromptVersionExample_204": {
                "displayName": "deletePromptVersionExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/prompts/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Prompts_deletePromptVersion_Response_200",
                      "typeId": "Prompts_deletePromptVersion_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "OK",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "promptsDeletePromptVersionExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              },
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Prompts_deletePromptVersion_Response_204",
                      "typeId": "Prompts_deletePromptVersion_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "promptsDeletePromptVersionExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update prompt name",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "23687af3",
                "url": "/v0/evi/prompts/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {},
                      "shape": {
                        "shape": {
                          "properties": [],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "Prompts_updatePromptName_Response_200",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Prompts_updatePromptName_Response_200"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_prompts.updatePromptName",
          "name": "updatePromptName",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Prompts_updatePromptName_Response_200",
                  "typeId": "Prompts_updatePromptName_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "promptsUpdatePromptNameExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "promptsUpdatePromptNameExample_200": {
                "displayName": "promptsUpdatePromptNameExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/prompts/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Prompts_updatePromptName_Response_200",
                      "typeId": "Prompts_updatePromptName_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "promptsUpdatePromptNameExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get prompt version",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a prompt. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "31527b8a",
                "url": "/v0/evi/prompts/id/version/1",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  },
                  {
                    "name": "version",
                    "value": {
                      "jsonExample": 1,
                      "shape": {
                        "primitive": {
                          "integer": 1,
                          "type": "integer"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a prompt. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_prompts.getReturnPromptByVersionNumber",
          "name": "getReturnPromptByVersionNumber",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_promptsGetReturnPromptByVersionNumberExample_200": {
                "displayName": "getReturnPromptByVersionNumberExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/prompts/id/version/1"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete prompt version",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a prompt. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "2c1b9ac8",
                "url": "/v0/evi/prompts/id/version/1",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  },
                  {
                    "name": "version",
                    "value": {
                      "jsonExample": 1,
                      "shape": {
                        "primitive": {
                          "integer": 1,
                          "type": "integer"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {},
                      "shape": {
                        "shape": {
                          "properties": [],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "Prompts_deletePromptVersion_1_Response_200",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Prompts_deletePromptVersion_1_Response_200"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a prompt. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_prompts.deletePromptVersion_1",
          "name": "deletePromptVersion_1",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Prompts_deletePromptVersion_1_Response_200",
                  "typeId": "Prompts_deletePromptVersion_1_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "OK",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "promptsDeletePromptVersion1Example": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_promptsDeletePromptVersion1Example_200": {
                "displayName": "deletePromptVersion1Example",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/prompts/id/version/1"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              },
              "base_promptsDeletePromptVersion1Example_204": {
                "displayName": "deletePromptVersion1Example",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/prompts/id/version/1"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Prompts_deletePromptVersion_1_Response_200",
                      "typeId": "Prompts_deletePromptVersion_1_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "OK",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "promptsDeletePromptVersion1Example": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              },
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Prompts_deletePromptVersion_1_Response_204",
                      "typeId": "Prompts_deletePromptVersion_1_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "promptsDeletePromptVersion1Example": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update prompt description",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a prompt. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "b528a359",
                "url": "/v0/evi/prompts/id/version/1",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  },
                  {
                    "name": "version",
                    "value": {
                      "jsonExample": 1,
                      "shape": {
                        "primitive": {
                          "integer": 1,
                          "type": "integer"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a prompt. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_prompts.updatePromptVersionDescription",
          "name": "updatePromptVersionDescription",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "promptsUpdatePromptVersionDescriptionExample_200": {
                "displayName": "promptsUpdatePromptVersionDescriptionExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/prompts/id/version/1"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_customVoices": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Custom Voices"
          ],
          "packagePath": [],
          "file": "Custom Voices"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List custom voices",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/custom_voices",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "name",
                "wireValue": "name"
              },
              "docs": "Filter to only include custom voices with name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_example": "name"
                }
              }
            },
            {
              "name": {
                "name": "name_requires_exact_match",
                "wireValue": "name_requires_exact_match"
              },
              "docs": "If true, the name filter requires an exact, case-insensitive match. If false, the results will include all matches where name is a case-insensitive substring of the full name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_requires_exact_match_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "9f931bf2",
                "url": "/v0/evi/custom_voices",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/custom_voices",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_customVoices.getReturnCustomVoicesForUser",
          "name": "getReturnCustomVoicesForUser",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_customVoicesGetReturnCustomVoicesForUserExample_200": {
                "displayName": "getReturnCustomVoicesForUserExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/custom_voices"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create custom voice",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/custom_voices",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "fd61411",
                "url": "/v0/evi/custom_voices",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/custom_voices",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_customVoices.createNewCustomVoice",
          "name": "createNewCustomVoice",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "customVoicesCreateNewCustomVoiceExample_201": {
                "displayName": "customVoicesCreateNewCustomVoiceExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/custom_voices"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Created",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get specific custom voice by ID",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "c58d0168",
                "url": "/v0/evi/custom_voices/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_customVoices.getReturnCustomVoiceByCustomVoiceId",
          "name": "getReturnCustomVoiceByCustomVoiceId",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_customVoicesGetReturnCustomVoiceByCustomVoiceIdExample_200": {
                "displayName": "getReturnCustomVoiceByCustomVoiceIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/custom_voices/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create new version of existing custom voice",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "2f9ceb6b",
                "url": "/v0/evi/custom_voices/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_customVoices.addNewCustomVoiceVersion",
          "name": "addNewCustomVoiceVersion",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "customVoicesAddNewCustomVoiceVersionExample_201": {
                "displayName": "customVoicesAddNewCustomVoiceVersionExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/custom_voices/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Created",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete a custom voice",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "a2dfe066",
                "url": "/v0/evi/custom_voices/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {},
                      "shape": {
                        "shape": {
                          "properties": [],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "Custom Voices_deleteCustomVoice_Response_200",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Custom Voices_deleteCustomVoice_Response_200"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_customVoices.deleteCustomVoice",
          "name": "deleteCustomVoice",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Custom Voices_deleteCustomVoice_Response_200",
                  "typeId": "Custom Voices_deleteCustomVoice_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "OK",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "customVoicesDeleteCustomVoiceExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_customVoicesDeleteCustomVoiceExample_200": {
                "displayName": "deleteCustomVoiceExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/custom_voices/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              },
              "base_customVoicesDeleteCustomVoiceExample_204": {
                "displayName": "deleteCustomVoiceExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/custom_voices/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Custom Voices_deleteCustomVoice_Response_200",
                      "typeId": "Custom Voices_deleteCustomVoice_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "OK",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "customVoicesDeleteCustomVoiceExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              },
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Custom Voices_deleteCustomVoice_Response_204",
                      "typeId": "Custom Voices_deleteCustomVoice_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "customVoicesDeleteCustomVoiceExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update custom voice name",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "246986fb",
                "url": "/v0/evi/custom_voices/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {},
                      "shape": {
                        "shape": {
                          "properties": [],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "Custom Voices_updateCustomVoiceName_Response_200",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Custom Voices_updateCustomVoiceName_Response_200"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_customVoices.updateCustomVoiceName",
          "name": "updateCustomVoiceName",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Custom Voices_updateCustomVoiceName_Response_200",
                  "typeId": "Custom Voices_updateCustomVoiceName_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "customVoicesUpdateCustomVoiceNameExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "customVoicesUpdateCustomVoiceNameExample_200": {
                "displayName": "customVoicesUpdateCustomVoiceNameExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/custom_voices/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Custom Voices_updateCustomVoiceName_Response_200",
                      "typeId": "Custom Voices_updateCustomVoiceName_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "customVoicesUpdateCustomVoiceNameExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_configs": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Configs"
          ],
          "packagePath": [],
          "file": "Configs"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List configs",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "restrict_to_most_recent",
                "wireValue": "restrict_to_most_recent"
              },
              "docs": "By default, `restrict_to_most_recent` is set to true, returning only the latest version of each tool. To include all versions of each tool in the list, set `restrict_to_most_recent` to false.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "restrict_to_most_recent_example": true
                }
              }
            },
            {
              "name": {
                "name": "name",
                "wireValue": "name"
              },
              "docs": "Filter to only include configs with this name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_example": "name"
                }
              }
            },
            {
              "name": {
                "name": "name_requires_exact_match",
                "wireValue": "name_requires_exact_match"
              },
              "docs": "If true, the name filter requires an exact match. If false, the results will include all matches where name is a case-insensitive substring of the full name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_requires_exact_match_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "9f931bf2",
                "url": "/v0/evi/configs",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_configs.getReturnConfigsForUser",
          "name": "getReturnConfigsForUser",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_configsGetReturnConfigsForUserExample_200": {
                "displayName": "getReturnConfigsForUserExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/configs"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create config",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "fd61411",
                "url": "/v0/evi/configs",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_configs.createNewConfig",
          "name": "createNewConfig",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "configsCreateNewConfigExample_201": {
                "displayName": "configsCreateNewConfigExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/configs"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Created",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List config versions",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "restrict_to_most_recent",
                "wireValue": "restrict_to_most_recent"
              },
              "docs": "By default, `restrict_to_most_recent` is set to true, returning only the latest version of each tool. To include all versions of each tool in the list, set `restrict_to_most_recent` to false.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "restrict_to_most_recent_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "c58d0168",
                "url": "/v0/evi/configs/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_configs.getReturnConfigByVersionId",
          "name": "getReturnConfigByVersionId",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_configsGetReturnConfigByVersionIdExample_200": {
                "displayName": "getReturnConfigByVersionIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/configs/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create config version",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "2f9ceb6b",
                "url": "/v0/evi/configs/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_configs.addNewConfigVersion",
          "name": "addNewConfigVersion",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "configsAddNewConfigVersionExample_201": {
                "displayName": "configsAddNewConfigVersionExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/configs/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Created",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete config",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "ef77fab0",
                "url": "/v0/evi/configs/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {},
                      "shape": {
                        "shape": {
                          "properties": [],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "Configs_deleteConfig_Response_200",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Configs_deleteConfig_Response_200"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_configs.deleteConfig",
          "name": "deleteConfig",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Configs_deleteConfig_Response_200",
                  "typeId": "Configs_deleteConfig_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "OK",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "configsDeleteConfigExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_configsDeleteConfigExample_200": {
                "displayName": "deleteConfigExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/configs/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              },
              "base_configsDeleteConfigExample_204": {
                "displayName": "deleteConfigExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/configs/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Configs_deleteConfig_Response_200",
                      "typeId": "Configs_deleteConfig_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "OK",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "configsDeleteConfigExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              },
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Configs_deleteConfig_Response_204",
                      "typeId": "Configs_deleteConfig_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "configsDeleteConfigExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update config name",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "9471635b",
                "url": "/v0/evi/configs/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {},
                      "shape": {
                        "shape": {
                          "properties": [],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "Configs_updateConfigName_Response_200",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Configs_updateConfigName_Response_200"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_configs.updateConfigName",
          "name": "updateConfigName",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Configs_updateConfigName_Response_200",
                  "typeId": "Configs_updateConfigName_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "configsUpdateConfigNameExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "configsUpdateConfigNameExample_200": {
                "displayName": "configsUpdateConfigNameExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/configs/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Configs_updateConfigName_Response_200",
                      "typeId": "Configs_updateConfigName_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "configsUpdateConfigNameExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get config version",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a config. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "31527b8a",
                "url": "/v0/evi/configs/id/version/1",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  },
                  {
                    "name": "version",
                    "value": {
                      "jsonExample": 1,
                      "shape": {
                        "primitive": {
                          "integer": 1,
                          "type": "integer"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a config. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_configs.getReturnPromptByRevisionId",
          "name": "getReturnPromptByRevisionId",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_configsGetReturnPromptByRevisionIdExample_200": {
                "displayName": "getReturnPromptByRevisionIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/configs/id/version/1"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete config version",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a config. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "344ba27c",
                "url": "/v0/evi/configs/id/version/1",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  },
                  {
                    "name": "version",
                    "value": {
                      "jsonExample": 1,
                      "shape": {
                        "primitive": {
                          "integer": 1,
                          "type": "integer"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {},
                      "shape": {
                        "shape": {
                          "properties": [],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "Configs_deleteConfigVersion_Response_200",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Configs_deleteConfigVersion_Response_200"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a config. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_configs.deleteConfigVersion",
          "name": "deleteConfigVersion",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Configs_deleteConfigVersion_Response_200",
                  "typeId": "Configs_deleteConfigVersion_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "OK",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "configsDeleteConfigVersionExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_configsDeleteConfigVersionExample_200": {
                "displayName": "deleteConfigVersionExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/configs/id/version/1"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              },
              "base_configsDeleteConfigVersionExample_204": {
                "displayName": "deleteConfigVersionExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/configs/id/version/1"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Configs_deleteConfigVersion_Response_200",
                      "typeId": "Configs_deleteConfigVersion_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "OK",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "configsDeleteConfigVersionExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              },
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Configs_deleteConfigVersion_Response_204",
                      "typeId": "Configs_deleteConfigVersion_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "configsDeleteConfigVersionExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update config description",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a config. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "b528a359",
                "url": "/v0/evi/configs/id/version/1",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  },
                  {
                    "name": "version",
                    "value": {
                      "jsonExample": 1,
                      "shape": {
                        "primitive": {
                          "integer": 1,
                          "type": "integer"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "key": "value"
                  },
                  "shape": {
                    "unknown": {
                      "key": "value"
                    },
                    "type": "unknown"
                  },
                  "type": "reference"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": "version",
              "docs": "Version number for a config. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_configs.updateConfigVersionDescription",
          "name": "updateConfigVersionDescription",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "type": "unknown"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "configsUpdateConfigVersionDescriptionExample_200": {
                "displayName": "configsUpdateConfigVersionDescriptionExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/configs/id/version/1"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_chats": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Chats"
          ],
          "packagePath": [],
          "file": "Chats"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List chats",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chats",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "ascending_order",
                "wireValue": "ascending_order"
              },
              "docs": "Boolean to indicate if the results should be paginated in chronological order or reverse-chronological order. Defaults to true.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ascending_order_example": true
                }
              }
            },
            {
              "name": {
                "name": "config_id",
                "wireValue": "config_id"
              },
              "docs": "Filter to only include chats that used this config.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "uuid"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "config_id_example": "config_id"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "9f931bf2",
                "url": "/v0/evi/chats",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chats",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_chats.getReturnChatsForUser",
          "name": "getReturnChatsForUser",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_chatsGetReturnChatsForUserExample_200": {
                "displayName": "getReturnChatsForUserExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chats"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List chat events",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chats/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "ascending_order",
                "wireValue": "ascending_order"
              },
              "docs": "Boolean to indicate if the results should be paginated in chronological order or reverse-chronological order. Defaults to true.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ascending_order_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "c58d0168",
                "url": "/v0/evi/chats/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chats/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_chats.getChatByChatId",
          "name": "getChatByChatId",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_chatsGetChatByChatIdExample_200": {
                "displayName": "getChatByChatIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chats/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Return signed url with audio reconstruction of chat",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chats/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/audio"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "c58d0168",
                "url": "/v0/evi/chats/id/audio",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chats/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/audio"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_chats.getReconstructionByChatId",
          "name": "getReconstructionByChatId",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_chatsGetReconstructionByChatIdExample_200": {
                "displayName": "getReconstructionByChatIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chats/id/audio"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_chatGroups": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Chat_groups"
          ],
          "packagePath": [],
          "file": "Chat_groups"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List chat_groups",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chat_groups",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "ascending_order",
                "wireValue": "ascending_order"
              },
              "docs": "Boolean to indicate if the results should be paginated in chronological order or reverse-chronological order. Defaults to true.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ascending_order_example": true
                }
              }
            },
            {
              "name": {
                "name": "config_id",
                "wireValue": "config_id"
              },
              "docs": "Filter chatgroups to only include chats that used this config in their most recent chat.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "uuid"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "config_id_example": "config_id"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "9f931bf2",
                "url": "/v0/evi/chat_groups",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chat_groups",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_chatGroups.getReturnChatGroupsForUser",
          "name": "getReturnChatGroupsForUser",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_chatGroupsGetReturnChatGroupsForUserExample_200": {
                "displayName": "getReturnChatGroupsForUserExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chat_groups"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List chat summaries in a specific chat_group",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chat_groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "ascending_order",
                "wireValue": "ascending_order"
              },
              "docs": "Boolean to indicate if the results should be paginated in chronological order or reverse-chronological order. Defaults to true.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ascending_order_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "c58d0168",
                "url": "/v0/evi/chat_groups/id",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chat_groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_chatGroups.getChatsByChatGroupId",
          "name": "getChatsByChatGroupId",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_chatGroupsGetChatsByChatGroupIdExample_200": {
                "displayName": "getChatsByChatGroupIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chat_groups/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List chat events from a specific chat_group",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chat_groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/events"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "ascending_order",
                "wireValue": "ascending_order"
              },
              "docs": "Boolean to indicate if the results should be paginated in chronological order or reverse-chronological order. Defaults to true.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ascending_order_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "c58d0168",
                "url": "/v0/evi/chat_groups/id/events",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chat_groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/events"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_chatGroups.getChatEventsByChatGroupId",
          "name": "getChatEventsByChatGroupId",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_chatGroupsGetChatEventsByChatGroupIdExample_200": {
                "displayName": "getChatEventsByChatGroupIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chat_groups/id/events"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Return signed urls with audio reconstructions of each chat in chatgroup",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chat_groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/audio"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page_number",
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 1
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "ascending_order",
                "wireValue": "ascending_order"
              },
              "docs": "Boolean to indicate if the results should be paginated in chronological order or reverse-chronological order. Defaults to true.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ascending_order_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "c58d0168",
                "url": "/v0/evi/chat_groups/id/audio",
                "endpointHeaders": [],
                "endpointPathParameters": [
                  {
                    "name": "id",
                    "value": {
                      "jsonExample": "id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "key": "value"
                      },
                      "shape": {
                        "unknown": {
                          "key": "value"
                        },
                        "type": "unknown"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chat_groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/audio"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_chatGroups.getReconstructionByChatGroupId",
          "name": "getReconstructionByChatGroupId",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_chatGroupsGetReconstructionByChatGroupIdExample_200": {
                "displayName": "getReconstructionByChatGroupIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chat_groups/id/audio"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Success",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "webhookGroups": {
    "Chat Webhooks": [
      {
        "id": "Chat Webhooks.chatEnded",
        "name": "chatEnded",
        "displayName": "Chat Ended",
        "method": "POST",
        "headers": [],
        "payload": {
          "payloadType": {
            "type": "unknown"
          },
          "type": "reference"
        },
        "examples": [],
        "docs": "Sent when an EVI chat ends.",
        "v2Examples": {
          "autogeneratedExamples": {
            "chatWebhooksChatEndedExample": {
              "name": "chatWebhooksChatEndedExample"
            }
          },
          "userSpecifiedExamples": {}
        }
      },
      {
        "id": "Chat Webhooks.chatStarted",
        "name": "chatStarted",
        "displayName": "Chat Started",
        "method": "POST",
        "headers": [],
        "payload": {
          "payloadType": {
            "type": "unknown"
          },
          "type": "reference"
        },
        "examples": [],
        "docs": "Sent when an EVI chat is started.",
        "v2Examples": {
          "autogeneratedExamples": {
            "chatWebhooksChatStartedExample": {
              "name": "chatWebhooksChatStartedExample"
            }
          },
          "userSpecifiedExamples": {}
        }
      }
    ]
  },
  "subpackages": {
    "subpackage_chat": {
      "name": "chat",
      "fernFilepath": {
        "allParts": [
          "chat"
        ],
        "packagePath": [],
        "file": "chat"
      },
      "types": [],
      "errors": [],
      "subpackages": [],
      "websocket": "channel_chat",
      "hasEndpointsInTree": false
    },
    "subpackage_chatWebhooks": {
      "name": "chatWebhooks",
      "fernFilepath": {
        "allParts": [
          "chatWebhooks"
        ],
        "packagePath": [],
        "file": "chatWebhooks"
      },
      "types": [],
      "errors": [],
      "subpackages": [],
      "webhooks": "Chat Webhooks",
      "hasEndpointsInTree": false
    },
    "subpackage_tools": {
      "name": "tools",
      "fernFilepath": {
        "allParts": [
          "tools"
        ],
        "packagePath": [],
        "file": "tools"
      },
      "service": "service_tools",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_prompts": {
      "name": "prompts",
      "fernFilepath": {
        "allParts": [
          "prompts"
        ],
        "packagePath": [],
        "file": "prompts"
      },
      "service": "service_prompts",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_customVoices": {
      "name": "customVoices",
      "fernFilepath": {
        "allParts": [
          "customVoices"
        ],
        "packagePath": [],
        "file": "customVoices"
      },
      "service": "service_customVoices",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_configs": {
      "name": "configs",
      "fernFilepath": {
        "allParts": [
          "configs"
        ],
        "packagePath": [],
        "file": "configs"
      },
      "service": "service_configs",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_chats": {
      "name": "chats",
      "fernFilepath": {
        "allParts": [
          "chats"
        ],
        "packagePath": [],
        "file": "chats"
      },
      "service": "service_chats",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_chatGroups": {
      "name": "chatGroups",
      "fernFilepath": {
        "allParts": [
          "chatGroups"
        ],
        "packagePath": [],
        "file": "chatGroups"
      },
      "service": "service_chatGroups",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    }
  },
  "websocketChannels": {
    "channel_chat": {
      "name": "chat",
      "baseUrl": "prod",
      "path": {
        "head": "/chat",
        "parts": []
      },
      "auth": false,
      "headers": [],
      "queryParameters": [
        {
          "name": {
            "name": "access_token",
            "wireValue": "access_token"
          },
          "docs": "Access token used for authenticating the client. If not provided, an `api_key` must be provided to authenticate.\n\nThe access token is generated using both an API key and a Secret key, which provides an additional layer of security compared to using just an API key.\n\nFor more details, refer to the [Authentication Strategies Guide](/docs/introduction/api-key#authentication-strategies).",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "access_token_example": ""
            }
          }
        },
        {
          "name": {
            "name": "config_id",
            "wireValue": "config_id"
          },
          "docs": "The unique identifier for an EVI configuration.\n\nInclude this ID in your connection request to equip EVI with the Prompt, Language Model, Voice, and Tools associated with the specified configuration. If omitted, EVI will apply [default configuration settings](/docs/empathic-voice-interface-evi/configuration#default-configuration).\n\nFor help obtaining this ID, see our [Configuration Guide](/docs/empathic-voice-interface-evi/configuration).",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "config_id_example": "config_id"
            }
          }
        },
        {
          "name": {
            "name": "config_version",
            "wireValue": "config_version"
          },
          "docs": "The version number of the EVI configuration specified by the `config_id`.\n\nConfigs, as well as Prompts and Tools, are versioned. This versioning system supports iterative development, allowing you to progressively refine configurations and revert to previous versions if needed.\n\nInclude this parameter to apply a specific version of an EVI configuration. If omitted, the latest version will be applied.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "config_version_example": 1
            }
          }
        },
        {
          "name": {
            "name": "enable_context_injection",
            "wireValue": "enable_context_injection"
          },
          "docs": "A flag to enable context injection. Set this query parameter to true to have EVI inject context into the conversation. This is useful for scenarios where you want to provide additional information to EVI to help it better understand the user's request.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "BOOLEAN",
                  "v2": {
                    "default": true,
                    "type": "boolean"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "enable_context_injection_example": true
            }
          }
        },
        {
          "name": {
            "name": "event_limit",
            "wireValue": "event_limit"
          },
          "docs": "The maximum number of chat events to return from chat history. By default, the system returns up to 300 events (100 events per page × 3 pages). Set this parameter to a smaller value to limit the number of events returned.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "event_limit_example": 1
            }
          }
        },
        {
          "name": {
            "name": "resumed_chat_group_id",
            "wireValue": "resumed_chat_group_id"
          },
          "docs": "The unique identifier for a Chat Group. Use this field to preserve context from a previous Chat session.\n\nA Chat represents a single session from opening to closing a WebSocket connection. In contrast, a Chat Group is a series of resumed Chats that collectively represent a single conversation spanning multiple sessions. Each Chat includes a Chat Group ID, which is used to preserve the context of previous Chat sessions when starting a new one.\n\nIncluding the Chat Group ID in the `resumed_chat_group_id` query parameter is useful for seamlessly resuming a Chat after unexpected network disconnections and for picking up conversations exactly where you left off at a later time. This ensures preserved context across multiple sessions.\n\nThere are three ways to obtain the Chat Group ID:\n\n- [Chat Metadata](/reference/empathic-voice-interface-evi/chat/chat#receive.ChatMetadata.type): Upon establishing a WebSocket connection with EVI, the user receives a Chat Metadata message. This message contains a `chat_group_id`, which can be used to resume conversations within this chat group in future sessions.\n\n- [List Chats endpoint](/reference/empathic-voice-interface-evi/chats/list-chats): Use the GET `/v0/evi/chats` endpoint to obtain the Chat Group ID of individual Chat sessions. This endpoint lists all available Chat sessions and their associated Chat Group ID.\n\n- [List Chat Groups endpoint](/reference/empathic-voice-interface-evi/chat-groups/list-chat-groups): Use the GET `/v0/evi/chat_groups` endpoint to obtain the Chat Group IDs of all Chat Groups associated with an API key. This endpoint returns a list of all available chat groups.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "resumed_chat_group_id_example": "resumed_chat_group_id"
            }
          }
        },
        {
          "name": {
            "name": "verbose_transcription",
            "wireValue": "verbose_transcription"
          },
          "docs": "A flag to enable verbose transcription. Set this query parameter to `\"true\"` to have unfinalized user transcripts be sent to the client as interim `UserMessage` messages.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "BOOLEAN",
                  "v2": {
                    "default": false,
                    "type": "boolean"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "verbose_transcription_example": false
            }
          }
        }
      ],
      "pathParameters": [],
      "messages": [
        {
          "type": "subscribe",
          "displayName": "subscribe",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChatSubscribe",
              "typeId": "ChatSubscribe",
              "inline": false,
              "type": "named"
            },
            "type": "reference"
          }
        },
        {
          "type": "publish",
          "displayName": "publish",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChatPublish",
              "typeId": "ChatPublish",
              "inline": false,
              "type": "named"
            },
            "type": "reference"
          }
        }
      ],
      "docs": "Chat with Empathic Voice Interface (EVI)",
      "examples": [
        {
          "pathParameters": [],
          "headers": [],
          "queryParameters": [],
          "messages": [
            {
              "type": "publish",
              "body": {
                "jsonExample": {
                  "data": "data",
                  "type": "audio_input"
                },
                "shape": {
                  "shape": {
                    "index": 0,
                    "singleUnionType": {
                      "jsonExample": {
                        "data": "data",
                        "type": "audio_input"
                      },
                      "shape": {
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": "custom_session_id",
                                "wireValue": "custom_session_id"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AudioInput",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AudioInput"
                              },
                              "value": {
                                "shape": {
                                  "container": {
                                    "valueType": {
                                      "container": {
                                        "nullable": {
                                          "primitive": {
                                            "v1": "STRING",
                                            "v2": {
                                              "validation": {},
                                              "type": "string"
                                            }
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "nullable"
                                      },
                                      "type": "container"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "data",
                                "wireValue": "data"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AudioInput",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AudioInput"
                              },
                              "value": {
                                "jsonExample": "data",
                                "shape": {
                                  "primitive": {
                                    "string": {
                                      "original": "data"
                                    },
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": {
                                  "originalName": "type",
                                  "camelCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  }
                                },
                                "wireValue": "type"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AudioInput",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AudioInput"
                              },
                              "value": {
                                "jsonExample": "audio_input",
                                "shape": {
                                  "container": {
                                    "literal": {
                                      "string": {
                                        "original": "audio_input"
                                      },
                                      "type": "string"
                                    },
                                    "type": "literal"
                                  },
                                  "type": "container"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "AudioInput",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "AudioInput"
                        },
                        "type": "named"
                      }
                    },
                    "type": "undiscriminatedUnion"
                  },
                  "typeName": {
                    "typeId": "ChatPublish",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "ChatPublish"
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            },
            {
              "type": "subscribe",
              "body": {
                "jsonExample": {
                  "type": "assistant_end"
                },
                "shape": {
                  "shape": {
                    "index": 0,
                    "singleUnionType": {
                      "jsonExample": {
                        "type": "assistant_end"
                      },
                      "shape": {
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": "custom_session_id",
                                "wireValue": "custom_session_id"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AssistantEnd",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AssistantEnd"
                              },
                              "value": {
                                "shape": {
                                  "container": {
                                    "valueType": {
                                      "container": {
                                        "nullable": {
                                          "primitive": {
                                            "v1": "STRING",
                                            "v2": {
                                              "validation": {},
                                              "type": "string"
                                            }
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "nullable"
                                      },
                                      "type": "container"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": {
                                  "originalName": "type",
                                  "camelCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  }
                                },
                                "wireValue": "type"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AssistantEnd",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AssistantEnd"
                              },
                              "value": {
                                "jsonExample": "assistant_end",
                                "shape": {
                                  "container": {
                                    "literal": {
                                      "string": {
                                        "original": "assistant_end"
                                      },
                                      "type": "string"
                                    },
                                    "type": "literal"
                                  },
                                  "type": "container"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "AssistantEnd",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "AssistantEnd"
                        },
                        "type": "named"
                      }
                    },
                    "type": "undiscriminatedUnion"
                  },
                  "typeName": {
                    "typeId": "ChatSubscribe",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "ChatSubscribe"
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            }
          ],
          "url": "/chat"
        },
        {
          "pathParameters": [],
          "headers": [],
          "queryParameters": [],
          "messages": [
            {
              "type": "publish",
              "body": {
                "jsonExample": {
                  "data": "data",
                  "type": "audio_input"
                },
                "shape": {
                  "shape": {
                    "index": 0,
                    "singleUnionType": {
                      "jsonExample": {
                        "data": "data",
                        "type": "audio_input"
                      },
                      "shape": {
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": "custom_session_id",
                                "wireValue": "custom_session_id"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AudioInput",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AudioInput"
                              },
                              "value": {
                                "shape": {
                                  "container": {
                                    "valueType": {
                                      "container": {
                                        "nullable": {
                                          "primitive": {
                                            "v1": "STRING",
                                            "v2": {
                                              "validation": {},
                                              "type": "string"
                                            }
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "nullable"
                                      },
                                      "type": "container"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "data",
                                "wireValue": "data"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AudioInput",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AudioInput"
                              },
                              "value": {
                                "jsonExample": "data",
                                "shape": {
                                  "primitive": {
                                    "string": {
                                      "original": "data"
                                    },
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": {
                                  "originalName": "type",
                                  "camelCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  }
                                },
                                "wireValue": "type"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AudioInput",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AudioInput"
                              },
                              "value": {
                                "jsonExample": "audio_input",
                                "shape": {
                                  "container": {
                                    "literal": {
                                      "string": {
                                        "original": "audio_input"
                                      },
                                      "type": "string"
                                    },
                                    "type": "literal"
                                  },
                                  "type": "container"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "AudioInput",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "AudioInput"
                        },
                        "type": "named"
                      }
                    },
                    "type": "undiscriminatedUnion"
                  },
                  "typeName": {
                    "typeId": "ChatPublish",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "ChatPublish"
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            },
            {
              "type": "subscribe",
              "body": {
                "jsonExample": {
                  "type": "assistant_end"
                },
                "shape": {
                  "shape": {
                    "index": 0,
                    "singleUnionType": {
                      "jsonExample": {
                        "type": "assistant_end"
                      },
                      "shape": {
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": "custom_session_id",
                                "wireValue": "custom_session_id"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AssistantEnd",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AssistantEnd"
                              },
                              "value": {
                                "shape": {
                                  "container": {
                                    "valueType": {
                                      "container": {
                                        "nullable": {
                                          "primitive": {
                                            "v1": "STRING",
                                            "v2": {
                                              "validation": {},
                                              "type": "string"
                                            }
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "nullable"
                                      },
                                      "type": "container"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": {
                                  "originalName": "type",
                                  "camelCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  }
                                },
                                "wireValue": "type"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AssistantEnd",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AssistantEnd"
                              },
                              "value": {
                                "jsonExample": "assistant_end",
                                "shape": {
                                  "container": {
                                    "literal": {
                                      "string": {
                                        "original": "assistant_end"
                                      },
                                      "type": "string"
                                    },
                                    "type": "literal"
                                  },
                                  "type": "container"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "AssistantEnd",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "AssistantEnd"
                        },
                        "type": "named"
                      }
                    },
                    "type": "undiscriminatedUnion"
                  },
                  "typeName": {
                    "typeId": "ChatSubscribe",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "ChatSubscribe"
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            }
          ],
          "url": "/chat"
        }
      ],
      "v2Examples": {
        "autogeneratedExamples": {},
        "userSpecifiedExamples": {}
      }
    }
  },
  "rootPackage": {
    "service": "service_",
    "types": [
      "AssistantEnd",
      "AssistantInput",
      "AssistantMessage",
      "AudioInput",
      "AudioOutput",
      "ChatMetadata",
      "Error",
      "PauseAssistantMessage",
      "ResumeAssistantMessage",
      "SessionSettings",
      "ToolCallMessage",
      "ToolErrorMessage",
      "ToolResponseMessage",
      "UserInput",
      "UserInterruption",
      "UserMessage",
      "AssistantEnd",
      "AssistantInput",
      "AssistantMessage",
      "AudioConfiguration",
      "AudioInput",
      "AudioOutput",
      "BuiltInTool",
      "BuiltinToolConfig",
      "ChatMessage",
      "ChatMetadata",
      "Context",
      "ContextType",
      "EmotionScores",
      "Encoding",
      "Error",
      "ErrorLevel",
      "Inference",
      "MillisecondInterval",
      "PauseAssistantMessage",
      "ProsodyInference",
      "ResumeAssistantMessage",
      "Role",
      "SessionSettings",
      "Tool",
      "ToolCallMessage",
      "ToolErrorMessage",
      "ToolResponseMessage",
      "ToolType",
      "UserInput",
      "UserInterruption",
      "UserMessage"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_chat",
      "subpackage_chatWebhooks",
      "subpackage_tools",
      "subpackage_prompts",
      "subpackage_customVoices",
      "subpackage_configs",
      "subpackage_chats",
      "subpackage_chatGroups"
    ],
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "hasEndpointsInTree": false
  },
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "audiences": []
}