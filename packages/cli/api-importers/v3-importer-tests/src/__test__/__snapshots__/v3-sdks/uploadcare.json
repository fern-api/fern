{
  "auth": {
    "requirement": "ALL",
    "schemes": []
  },
  "selfHosted": false,
  "types": {
    "signatureType": {
      "name": {
        "typeId": "signatureType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "signatureType"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`signature` must be sent along with your upload request if you would like to use signed uploads.\nThe signature should be generated on your backend.\n**Note**: the process requires knowledge of your Uploadcare Project's Secret key.\nSee [signed uploads](https://uploadcare.com/docs/security/secure-uploads/) for details.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "signatureType_example_0": "04b29480233f4def5c875875b6bdc3b1"
        },
        "autogeneratedExamples": {}
      }
    },
    "expireType": {
      "name": {
        "typeId": "expireType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "expireType"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "DOUBLE",
            "v2": {
              "validation": {},
              "type": "double"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "DOUBLE",
            "v2": {
              "validation": {},
              "type": "double"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`expire` must be sent along with your upload request if you would like to use signed uploads.\nThe parameter defines the time during which your signature is valid. It's a UNIX timestamp.\nSee [signed uploads](https://uploadcare.com/docs/security/secure-uploads/) for details.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "expireType_example_0": 1454902434
        },
        "autogeneratedExamples": {}
      }
    },
    "storeType": {
      "name": {
        "typeId": "storeType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "storeType"
      },
      "shape": {
        "default": {
          "name": {
            "name": "auto",
            "wireValue": "auto"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "0",
                "camelCase": {
                  "unsafeName": "0",
                  "safeName": "_0"
                },
                "pascalCase": {
                  "unsafeName": "0",
                  "safeName": "_0"
                },
                "snakeCase": {
                  "unsafeName": "0",
                  "safeName": "_0"
                },
                "screamingSnakeCase": {
                  "unsafeName": "0",
                  "safeName": "_0"
                }
              },
              "wireValue": "0"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "1",
                "camelCase": {
                  "unsafeName": "1",
                  "safeName": "_1"
                },
                "pascalCase": {
                  "unsafeName": "1",
                  "safeName": "_1"
                },
                "snakeCase": {
                  "unsafeName": "1",
                  "safeName": "_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "1",
                  "safeName": "_1"
                }
              },
              "wireValue": "1"
            }
          },
          {
            "name": {
              "name": "auto",
              "wireValue": "auto"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Determines if an uploaded file should be marked as temporary or permanent.\n\nThe parameter can have the following values:\n- `0` - do not mark an uploaded file as stored and remove it after 24 hours\n- `1` - mark the uploaded file as stored\n- `auto` - delegate the choice of the file-storing behavior to a project-wide setting called\n  [auto-store](https://app.uploadcare.com/projects/-/settings/#storage).\n\nThe default value depends on the user registration date.\n\nFor all users registered after February 12, 2024 (UTC 13:30), the default value is `auto`. \nFile-storing behavior depends entirely on what is set in the \n[storage settings](https://app.uploadcare.com/projects/-/settings/#storage) in the Dashboard.\n\nFor users registered before February 12, 2024, the default value is `0`. \nTo ensure that file storage in the project matches the settings in the Dashboard,\nchange the value to `auto`.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "storeType_example_0": "1"
        },
        "autogeneratedExamples": {}
      }
    },
    "projectPublicKeyType": {
      "name": {
        "typeId": "projectPublicKeyType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "projectPublicKeyType"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Public key identifying an Uploadcare project your uploads will go to.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "projectPublicKeyType_example_0": "caa9d29da887ee88ffe6"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileUploadInfo": {
      "name": {
        "typeId": "fileUploadInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileUploadInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "uuid",
              "wireValue": "uuid"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "File's unique ID.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoUuid_example_0": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "file_id",
              "wireValue": "file_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Same as `uuid`",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoFileId_example_0": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "size",
              "wireValue": "size"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "File's size in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoSize_example_0": 145212
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "total",
              "wireValue": "total"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Same as `size`.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoTotal_example_0": 145212
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "done",
              "wireValue": "done"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Same as `size`.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoDone_example_0": 145212
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "original_filename",
              "wireValue": "original_filename"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Original file of the uploaded file.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoOriginalFilename_example_0": "test-image_1.jpg"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "filename",
              "wireValue": "filename"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Sanitized `original_filename`.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoFilename_example_0": "testimage_1.jpg"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "mime_type",
              "wireValue": "mime_type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "File's MIME-type.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoMimeType_example_0": "image/jpeg"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "image_info",
              "wireValue": "image_info"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "imageInfo",
              "typeId": "imageInfo",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "video_info",
              "wireValue": "video_info"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "legacyVideoInfo",
              "typeId": "legacyVideoInfo",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "content_info",
              "wireValue": "content_info"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "contentInfo",
              "typeId": "contentInfo",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "metadata",
              "typeId": "metadata",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "is_image",
              "wireValue": "is_image"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "True if the uploaded file is an image of a supported file format.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoIsImage_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "is_stored",
              "wireValue": "is_stored"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "True if the file has been marked as stored.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoIsStored_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "is_ready",
              "wireValue": "is_ready"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "True if the file is ready to be fetched from Uploadcare's CDN.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoIsReady_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "s3_bucket",
              "wireValue": "s3_bucket"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Name of an AWS S3 bucket where the file is stored. Only available if you associate a Foreign Storage Bucket with your project.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoS3Bucket_example_0": "custom-s3-bucket-name"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Information about an uploaded file.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileUploadInfo_example_0": {
            "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
            "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
            "size": 2667636,
            "total": 2667636,
            "done": 2667636,
            "original_filename": "IMG-0412_123.JPG",
            "filename": "IMG0412_123.JPG",
            "mime_type": "image/jpeg",
            "image_info": {
              "color_mode": "RGB",
              "orientation": 6,
              "format": "JPEG",
              "sequence": false,
              "height": 4032,
              "width": 3024,
              "geo_location": {
                "latitude": 55.62013611111111,
                "longitude": 37.66299166666666
              },
              "datetime_original": "2024-01-15T09:30:00Z",
              "dpi": [
                72,
                72
              ]
            },
            "video_info": null,
            "content_info": {
              "mime": {
                "mime": "image/jpeg",
                "type": "image",
                "subtype": "jpeg"
              },
              "image": {
                "color_mode": "RGB",
                "orientation": 6,
                "format": "JPEG",
                "sequence": false,
                "height": 4032,
                "width": 3024,
                "geo_location": {
                  "latitude": 55.62013611111111,
                  "longitude": 37.66299166666666
                },
                "datetime_original": "2024-01-15T09:30:00Z",
                "dpi": [
                  72,
                  72
                ]
              }
            },
            "metadata": {
              "subsystem": "uploader",
              "pet": "cat"
            },
            "is_image": true,
            "is_stored": true,
            "is_ready": true
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "FileUploadInfoWaitingStatusStatus": {
      "name": {
        "typeId": "FileUploadInfoWaitingStatusStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FileUploadInfoWaitingStatusStatus"
      },
      "shape": {
        "default": {
          "name": {
            "name": "waiting",
            "wireValue": "waiting"
          }
        },
        "values": [
          {
            "name": {
              "name": "waiting",
              "wireValue": "waiting"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The system is preparing to handle the request.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FileUploadInfoWaitingStatusStatus_example_autogenerated": "waiting"
        }
      }
    },
    "fileUploadInfoWaitingStatus": {
      "name": {
        "typeId": "fileUploadInfoWaitingStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileUploadInfoWaitingStatus"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "FileUploadInfoWaitingStatusStatus",
                  "typeId": "FileUploadInfoWaitingStatusStatus",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The system is preparing to handle the request.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FileUploadInfoWaitingStatusStatus_example_autogenerated": "waiting"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "fileUploadInfoWaitingStatus_example_autogenerated": {}
        }
      }
    },
    "FileUploadInfoProgressStatusStatus": {
      "name": {
        "typeId": "FileUploadInfoProgressStatusStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FileUploadInfoProgressStatusStatus"
      },
      "shape": {
        "default": {
          "name": {
            "name": "progress",
            "wireValue": "progress"
          }
        },
        "values": [
          {
            "name": {
              "name": "progress",
              "wireValue": "progress"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The system is fetching/uploading the file.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FileUploadInfoProgressStatusStatus_example_autogenerated": "progress"
        }
      }
    },
    "fileUploadInfoProgressStatus": {
      "name": {
        "typeId": "fileUploadInfoProgressStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileUploadInfoProgressStatus"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "FileUploadInfoProgressStatusStatus",
                  "typeId": "FileUploadInfoProgressStatusStatus",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The system is fetching/uploading the file.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FileUploadInfoProgressStatusStatus_example_autogenerated": "progress"
              }
            }
          },
          {
            "name": {
              "name": "total",
              "wireValue": "total"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The expected size of the fetched file (in bytes).\n\n**Note:** the value can be missing if the server we are fetching the file from\ndoes not provide the information or if the server is returning the file in, for\nexample, [compressed form](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding).\n",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoProgressStatusTotal_example_0": 732434
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "done",
              "wireValue": "done"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "How many bytes of the file have been fetched so far.\n",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoProgressStatusDone_example_0": 134427
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "fileUploadInfoProgressStatus_example_autogenerated": {}
        }
      }
    },
    "FileUploadInfoSuccessStatusStatus": {
      "name": {
        "typeId": "FileUploadInfoSuccessStatusStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FileUploadInfoSuccessStatusStatus"
      },
      "shape": {
        "default": {
          "name": {
            "name": "success",
            "wireValue": "success"
          }
        },
        "values": [
          {
            "name": {
              "name": "success",
              "wireValue": "success"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The file has been fetched/uploaded successfully.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FileUploadInfoSuccessStatusStatus_example_autogenerated": "success"
        }
      }
    },
    "fileUploadInfoSuccessStatus": {
      "name": {
        "typeId": "fileUploadInfoSuccessStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileUploadInfoSuccessStatus"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "FileUploadInfoSuccessStatusStatus",
                  "typeId": "FileUploadInfoSuccessStatusStatus",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The file has been fetched/uploaded successfully.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FileUploadInfoSuccessStatusStatus_example_autogenerated": "success"
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "fileUploadInfo",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "fileUploadInfo"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileUploadInfoSuccessStatus_example_0": {
            "status": "success",
            "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
            "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
            "size": 2667636,
            "total": 2667636,
            "done": 2667636,
            "original_filename": "IMG-0412_123.JPG",
            "filename": "IMG0412_123.JPG",
            "mime_type": "image/jpeg",
            "image_info": {
              "color_mode": "RGB",
              "orientation": 6,
              "format": "JPEG",
              "sequence": false,
              "height": 4032,
              "width": 3024,
              "geo_location": {
                "latitude": 55.62013611111111,
                "longitude": 37.66299166666666
              },
              "datetime_original": "2024-01-15T09:30:00Z",
              "dpi": [
                72,
                72
              ]
            },
            "video_info": null,
            "content_info": {
              "mime": {
                "mime": "image/jpeg",
                "type": "image",
                "subtype": "jpeg"
              },
              "image": {
                "color_mode": "RGB",
                "orientation": 6,
                "format": "JPEG",
                "sequence": false,
                "height": 4032,
                "width": 3024,
                "geo_location": {
                  "latitude": 55.62013611111111,
                  "longitude": 37.66299166666666
                },
                "datetime_original": "2024-01-15T09:30:00Z",
                "dpi": [
                  72,
                  72
                ]
              }
            },
            "metadata": {
              "subsystem": "uploader",
              "pet": "cat"
            },
            "is_image": true,
            "is_stored": true,
            "is_ready": true
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "FileUploadInfoErrorStatusStatus": {
      "name": {
        "typeId": "FileUploadInfoErrorStatusStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FileUploadInfoErrorStatusStatus"
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "error",
              "pascalCase": {
                "unsafeName": "Error",
                "safeName": "Error_"
              }
            },
            "wireValue": "error"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The system failed to fetch and/or upload the file.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FileUploadInfoErrorStatusStatus_example_autogenerated": "error"
        }
      }
    },
    "fileUploadInfoErrorStatus": {
      "name": {
        "typeId": "fileUploadInfoErrorStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileUploadInfoErrorStatus"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "FileUploadInfoErrorStatusStatus",
                  "typeId": "FileUploadInfoErrorStatusStatus",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The system failed to fetch and/or upload the file.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FileUploadInfoErrorStatusStatus_example_autogenerated": "error"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Human readable description of the issue with the fetch/upload task.\n",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoErrorStatusError_example_0": "HTTP client error: 404."
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "error_code",
              "wireValue": "error_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Machine readable error code.\n\nNote: See the [Errors > FromURL upload errors](#tag/Errors) section of this\npage for a full list of all possible error codes.\n",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoErrorStatusErrorCode_example_0": "DownloadFileHTTPClientError"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "fileUploadInfoErrorStatus_example_autogenerated": {}
        }
      }
    },
    "FileUploadInfoUnknownStatusStatus": {
      "name": {
        "typeId": "FileUploadInfoUnknownStatusStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FileUploadInfoUnknownStatusStatus"
      },
      "shape": {
        "default": {
          "name": {
            "name": "unknown",
            "wireValue": "unknown"
          }
        },
        "values": [
          {
            "name": {
              "name": "unknown",
              "wireValue": "unknown"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The system does not have information about the task.\n\nNote: Uploadcare stores information about the `/from_url/` tasks for a limited\nperiod of time only. The endpoint can return the status `unknown` for the tasks\nthat are tool old (or that have not been created at all).\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FileUploadInfoUnknownStatusStatus_example_autogenerated": "unknown"
        }
      }
    },
    "fileUploadInfoUnknownStatus": {
      "name": {
        "typeId": "fileUploadInfoUnknownStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileUploadInfoUnknownStatus"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "FileUploadInfoUnknownStatusStatus",
                  "typeId": "FileUploadInfoUnknownStatusStatus",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The system does not have information about the task.\n\nNote: Uploadcare stores information about the `/from_url/` tasks for a limited\nperiod of time only. The endpoint can return the status `unknown` for the tasks\nthat are tool old (or that have not been created at all).\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FileUploadInfoUnknownStatusStatus_example_autogenerated": "unknown"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "fileUploadInfoUnknownStatus_example_autogenerated": {}
        }
      }
    },
    "FileUploadInfoFromUrlType": {
      "name": {
        "typeId": "FileUploadInfoFromUrlType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FileUploadInfoFromUrlType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "file_info",
              "wireValue": "file_info"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "FileUploadInfoFromUrlType_example_0": "file_info"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileUploadInfoFromURL": {
      "name": {
        "typeId": "fileUploadInfoFromURL",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileUploadInfoFromURL"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "FileUploadInfoFromUrlType",
                  "typeId": "FileUploadInfoFromUrlType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "FileUploadInfoFromUrlType_example_0": "file_info"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [
          {
            "typeId": "fileUploadInfo",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "fileUploadInfo"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "fileUploadInfoFromURL_example_autogenerated": {
            "uuid": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46",
            "file_id": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46",
            "size": 145212,
            "total": 145212,
            "done": 145212,
            "original_filename": "test-image_1.jpg",
            "filename": "testimage_1.jpg",
            "mime_type": "image/jpeg",
            "image_info": {
              "color_mode": "RGB",
              "orientation": 6,
              "format": "JPEG",
              "sequence": false,
              "height": 2352,
              "width": 2935,
              "geo_location": {
                "latitude": -1.19,
                "longitude": 52.7
              },
              "datetime_original": "2024-01-15T09:30:00Z",
              "dpi": [
                72,
                72
              ]
            },
            "video_info": {},
            "content_info": {},
            "metadata": {},
            "is_image": true,
            "is_stored": true,
            "is_ready": true
          }
        }
      }
    },
    "FromUrlUploadResponseSchemaType": {
      "name": {
        "typeId": "FromUrlUploadResponseSchemaType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FromUrlUploadResponseSchemaType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "token",
              "wireValue": "token"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "FromUrlUploadResponseSchemaType_example_0": "token"
        },
        "autogeneratedExamples": {}
      }
    },
    "fromURLUploadResponseSchema": {
      "name": {
        "typeId": "fromURLUploadResponseSchema",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fromURLUploadResponseSchema"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "FromUrlUploadResponseSchemaType",
                  "typeId": "FromUrlUploadResponseSchemaType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "FromUrlUploadResponseSchemaType_example_0": "token"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "token",
              "wireValue": "token"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Token to identify a `/from_url/` request.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "FromUrlUploadResponseSchemaToken_example_0": "945ebb27-1fd6-46c6-a859-b9893712d650"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`/from_url/` upload response.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "fromURLUploadResponseSchema_example_autogenerated": {}
        }
      }
    },
    "groupInfo": {
      "name": {
        "typeId": "groupInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "groupInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Group's unique ID.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "GroupInfoId_example_0": "d52d7136-a2e5-4338-9f45-affbf83b857d~2"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "datetime_created",
              "wireValue": "datetime_created"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "ISO-8601 date and time when the group was created.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupInfoDatetimeCreated_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "datetime_stored",
              "wireValue": "datetime_stored"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "ISO-8601 date and time when the group was marked as stored.",
            "availability": {
              "status": "DEPRECATED"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupInfoDatetimeStored_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "files_count",
              "wireValue": "files_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number of the files in the group.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "GroupInfoFilesCount_example_0": 2
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "cdn_url",
              "wireValue": "cdn_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Group's CDN URL.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "GroupInfoCdnUrl_example_0": "http://www.ucarecdn.com/d52d7136-a2e5-4338-9f45-affbf83b857d~2/"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "url",
              "wireValue": "url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Group's API resource URL. See the [REST API](/api-refs/rest-api/) documentation for details.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "GroupInfoUrl_example_0": "https://api.uploadcare.com/groups/d52d7136-a2e5-4338-9f45-affbf83b857d~2/"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "files",
              "wireValue": "files"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "type": "unknown"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The list of files in the group. An array may contain null values if a file has been removed.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupInfoFiles_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "File group information object.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "groupInfo_example_0": {
            "id": "0d712319-b970-4602-850c-bae1ced521a6~1",
            "datetime_created": "2018-09-12T10:03:38.686710Z",
            "datetime_stored": null,
            "files_count": 1,
            "cdn_url": "https://ucarecdn.com/0d712319-b970-4602-850c-bae1ced521a6~1/",
            "url": "https://api.uploadcare.com/groups/0d712319-b970-4602-850c-bae1ced521a6~1/",
            "files": [
              "string"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "metadataValue": {
      "name": {
        "typeId": "metadataValue",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "metadataValue"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "minLength": 1,
                "maxLength": 512
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "minLength": 1,
                "maxLength": 512
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitrary metadata associated with the file.\nSee [docs](https://uploadcare.com/docs/file-metadata/) and [REST API v0.7](/api-refs/rest-api/v0.7.0/#tag/File-metadata) for more information.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "metadataValue_example_0": "#/components/examples/metadataValue/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "autoStoreDisabledError": {
      "name": {
        "typeId": "autoStoreDisabledError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "autoStoreDisabledError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Autostore is disabled.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Autostore is disabled.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "autoStoreDisabledError_example_0": "#/components/examples/autoStoreDisabledError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "uploadcarePublicKeyRequiredError": {
      "name": {
        "typeId": "uploadcarePublicKeyRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "uploadcarePublicKeyRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "UPLOADCARE_PUB_KEY is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "UPLOADCARE_PUB_KEY is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "uploadcarePublicKeyRequiredError_example_0": "#/components/examples/uploadcarePublicKeyRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "publicKeyRequiredError": {
      "name": {
        "typeId": "publicKeyRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "publicKeyRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "pub_key is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "pub_key is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "publicKeyRequiredError_example_0": "#/components/examples/publicKeyRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "uploadcarePublicKeyInvalidError": {
      "name": {
        "typeId": "uploadcarePublicKeyInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "uploadcarePublicKeyInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "UPLOADCARE_PUB_KEY is invalid.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "UPLOADCARE_PUB_KEY is invalid.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "uploadcarePublicKeyInvalidError_example_0": "#/components/examples/uploadcarePublicKeyInvalidError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "publicKeyInvalidError": {
      "name": {
        "typeId": "publicKeyInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "publicKeyInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "pub_key is invalid.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "pub_key is invalid.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "publicKeyInvalidError_example_0": "#/components/examples/publicKeyInvalidError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "projectPublicKeyRemovedError": {
      "name": {
        "typeId": "projectPublicKeyRemovedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "projectPublicKeyRemovedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Project <PUB-KEY> is marked as removed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Project <PUB-KEY> is marked as removed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "projectPublicKeyRemovedError_example_0": "#/components/examples/projectPublicKeyRemovedError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "accountBlockedError": {
      "name": {
        "typeId": "accountBlockedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "accountBlockedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Account has been blocked.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Account has been blocked.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "accountBlockedError_example_0": "#/components/examples/accountBlockedError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "accountUnpaidError": {
      "name": {
        "typeId": "accountUnpaidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "accountUnpaidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Account has been blocked for non payment.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Account has been blocked for non payment.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "accountUnpaidError_example_0": "#/components/examples/accountUnpaidError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "uploadFailedError": {
      "name": {
        "typeId": "uploadFailedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "uploadFailedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Upload failed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Upload failed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "uploadFailedError_example_0": "#/components/examples/uploadFailedError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "accountLimitsExceededError": {
      "name": {
        "typeId": "accountLimitsExceededError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "accountLimitsExceededError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Account has reached its limits.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Account has reached its limits.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "accountLimitsExceededError_example_0": "#/components/examples/accountLimitsExceededError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "signatureExpirationError": {
      "name": {
        "typeId": "signatureExpirationError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "signatureExpirationError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Expired signature.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Expired signature.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "signatureExpirationError_example_0": "#/components/examples/signatureExpirationError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "signatureInvalidError": {
      "name": {
        "typeId": "signatureInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "signatureInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Invalid signature.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Invalid signature.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "signatureInvalidError_example_0": "#/components/examples/signatureInvalidError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "requestFiledsNumberLimitExceededError": {
      "name": {
        "typeId": "requestFiledsNumberLimitExceededError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "requestFiledsNumberLimitExceededError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "The request contains too many HTTP POST fields.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "The request contains too many HTTP POST fields.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "requestFiledsNumberLimitExceededError_example_0": "#/components/examples/requestFiledsNumberLimitExceededError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "postRequestParserFailedError": {
      "name": {
        "typeId": "postRequestParserFailedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "postRequestParserFailedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "HTTP POST request parsing failed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "HTTP POST request parsing failed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "postRequestParserFailedError_example_0": "#/components/examples/postRequestParserFailedError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "nullCharactersForbiddenError": {
      "name": {
        "typeId": "nullCharactersForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "nullCharactersForbiddenError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Null characters are not allowed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Null characters are not allowed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "nullCharactersForbiddenError_example_0": "#/components/examples/nullCharactersForbiddenError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileMetadataKeyDuplicatedError": {
      "name": {
        "typeId": "fileMetadataKeyDuplicatedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileMetadataKeyDuplicatedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File's metadata key `<KEY>` has a duplicate.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File's metadata key `<KEY>` has a duplicate.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileMetadataKeyDuplicatedError_example_0": "#/components/examples/fileMetadataKeyDuplicatedError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileMetadataKeyEmptyError": {
      "name": {
        "typeId": "fileMetadataKeyEmptyError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileMetadataKeyEmptyError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File's metadata key can not be empty.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File's metadata key can not be empty.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileMetadataKeyEmptyError_example_0": "#/components/examples/fileMetadataKeyEmptyError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileMetadataKeyForbiddenError": {
      "name": {
        "typeId": "fileMetadataKeyForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileMetadataKeyForbiddenError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File's metadata key `<KEY>` contains symbols not allowed by the metadata key format.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File's metadata key `<KEY>` contains symbols not allowed by the metadata key format.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileMetadataKeyForbiddenError_example_0": "#/components/examples/fileMetadataKeyForbiddenError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileMetadataKeyLengthTooBigError": {
      "name": {
        "typeId": "fileMetadataKeyLengthTooBigError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileMetadataKeyLengthTooBigError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Length of file metadata key `<KEY>` can not be more than <LENGTH> symbols.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Length of file metadata key `<KEY>` can not be more than <LENGTH> symbols.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileMetadataKeyLengthTooBigError_example_0": "#/components/examples/fileMetadataKeyLengthTooBigError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileMetadataValueEmptyError": {
      "name": {
        "typeId": "fileMetadataValueEmptyError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileMetadataValueEmptyError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Value of the file metadata key `<KEY>` can not be empty.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Value of the file metadata key `<KEY>` can not be empty.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileMetadataValueEmptyError_example_0": "#/components/examples/fileMetadataValueEmptyError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileMetadataValueForbiddenError": {
      "name": {
        "typeId": "fileMetadataValueForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileMetadataValueForbiddenError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Value of file metadata key `<KEY>` contains symbols not allowed by the metadata value format.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Value of file metadata key `<KEY>` contains symbols not allowed by the metadata value format.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileMetadataValueForbiddenError_example_0": "#/components/examples/fileMetadataValueForbiddenError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileMetadataValueLengthTooBigError": {
      "name": {
        "typeId": "fileMetadataValueLengthTooBigError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileMetadataValueLengthTooBigError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Value of file metadata's key `<KEY>` can not be more than <LENGTH> symbols in length.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Value of file metadata's key `<KEY>` can not be more than <LENGTH> symbols in length.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileMetadataValueLengthTooBigError_example_0": "#/components/examples/fileMetadataValueLengthTooBigError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileMetadataKeysNumberTooBigError": {
      "name": {
        "typeId": "fileMetadataKeysNumberTooBigError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileMetadataKeysNumberTooBigError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "A file can not have more than <NUMBER> metadata keys.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "A file can not have more than <NUMBER> metadata keys.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileMetadataKeysNumberTooBigError_example_0": "#/components/examples/fileMetadataKeysNumberTooBigError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "filesRequiredError": {
      "name": {
        "typeId": "filesRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "filesRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Request does not contain files.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Request does not contain files.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "filesRequiredError_example_0": "#/components/examples/filesRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileSizeLimitExceededError": {
      "name": {
        "typeId": "fileSizeLimitExceededError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileSizeLimitExceededError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File is too large.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File is too large.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileSizeLimitExceededError_example_0": "#/components/examples/fileSizeLimitExceededError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileTypeForbiddenError": {
      "name": {
        "typeId": "fileTypeForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileTypeForbiddenError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Uploading of these file types is not allowed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Uploading of these file types is not allowed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileTypeForbiddenError_example_0": "#/components/examples/fileTypeForbiddenError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileInfectedError": {
      "name": {
        "typeId": "fileInfectedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileInfectedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "The file is infected by <VIRUS-NAME> virus.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "The file is infected by <VIRUS-NAME> virus.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileInfectedError_example_0": "#/components/examples/fileInfectedError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "requestParamRequiredError": {
      "name": {
        "typeId": "requestParamRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "requestParamRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "<PARAMETER-NAME> is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "<PARAMETER-NAME> is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "requestParamRequiredError_example_0": "#/components/examples/requestParamRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "multipartSizeInvalidError": {
      "name": {
        "typeId": "multipartSizeInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "multipartSizeInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "size should be integer.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "size should be integer.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "multipartSizeInvalidError_example_0": "#/components/examples/multipartSizeInvalidError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "multipartFileSizeLimitExceededError": {
      "name": {
        "typeId": "multipartFileSizeLimitExceededError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "multipartFileSizeLimitExceededError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File size exceeds project limit.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File size exceeds project limit.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "multipartFileSizeLimitExceededError_example_0": "#/components/examples/multipartFileSizeLimitExceededError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "multipartFileSizeTooSmallError": {
      "name": {
        "typeId": "multipartFileSizeTooSmallError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "multipartFileSizeTooSmallError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File size can not be less than <SIZE> bytes. Please use direct upload instead of multipart.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File size can not be less than <SIZE> bytes. Please use direct upload instead of multipart.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "multipartFileSizeTooSmallError_example_0": "#/components/examples/multipartFileSizeTooSmallError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "multipartPartSizeInvalidError": {
      "name": {
        "typeId": "multipartPartSizeInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "multipartPartSizeInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Multipart Upload Part Size should be an integer.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Multipart Upload Part Size should be an integer.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "multipartPartSizeInvalidError_example_0": "#/components/examples/multipartPartSizeInvalidError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "multipartPartSizeTooSmallError": {
      "name": {
        "typeId": "multipartPartSizeTooSmallError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "multipartPartSizeTooSmallError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Multipart Upload Part Size can not be less than <SIZE> bytes.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Multipart Upload Part Size can not be less than <SIZE> bytes.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "multipartPartSizeTooSmallError_example_0": "#/components/examples/multipartPartSizeTooSmallError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "multipartPartSizeTooBigError": {
      "name": {
        "typeId": "multipartPartSizeTooBigError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "multipartPartSizeTooBigError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Multipart Upload Part Size can not be more than <SIZE> bytes.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Multipart Upload Part Size can not be more than <SIZE> bytes.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "multipartPartSizeTooBigError_example_0": "#/components/examples/multipartPartSizeTooBigError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "multipartFileIdRequiredError": {
      "name": {
        "typeId": "multipartFileIdRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "multipartFileIdRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "uuid is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "uuid is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "multipartFileIdRequiredError_example_0": "#/components/examples/multipartFileIdRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "multipartFileAlreadyUploadedError": {
      "name": {
        "typeId": "multipartFileAlreadyUploadedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "multipartFileAlreadyUploadedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File is already uploaded.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File is already uploaded.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "multipartFileAlreadyUploadedError_example_0": "#/components/examples/multipartFileAlreadyUploadedError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "multipartUploadSizeTooLargeError": {
      "name": {
        "typeId": "multipartUploadSizeTooLargeError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "multipartUploadSizeTooLargeError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Uploaded size is more than expected.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Uploaded size is more than expected.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "multipartUploadSizeTooLargeError_example_0": "#/components/examples/multipartUploadSizeTooLargeError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "multipartUploadSizeTooSmallError": {
      "name": {
        "typeId": "multipartUploadSizeTooSmallError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "multipartUploadSizeTooSmallError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File size mismatch. Not all parts uploaded?",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File size mismatch. Not all parts uploaded?",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "multipartUploadSizeTooSmallError_example_0": "#/components/examples/multipartUploadSizeTooSmallError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "multipartFileCompletionFailedError": {
      "name": {
        "typeId": "multipartFileCompletionFailedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "multipartFileCompletionFailedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Can not complete upload. Wrong parts size?",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Can not complete upload. Wrong parts size?",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "multipartFileCompletionFailedError_example_0": "#/components/examples/multipartFileCompletionFailedError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "uuidInvalidError": {
      "name": {
        "typeId": "uuidInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "uuidInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "uuid is invalid.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "uuid is invalid.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "uuidInvalidError_example_0": "#/components/examples/uuidInvalidError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "sourceURLRequiredError": {
      "name": {
        "typeId": "sourceURLRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "sourceURLRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "source_url is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "source_url is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "sourceURLRequiredError_example_0": "#/components/examples/sourceURLRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "urlParsingFailedError": {
      "name": {
        "typeId": "urlParsingFailedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "urlParsingFailedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Failed to parse URL.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Failed to parse URL.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "urlParsingFailedError_example_0": "#/components/examples/urlParsingFailedError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "urlSchemeRequiredError": {
      "name": {
        "typeId": "urlSchemeRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "urlSchemeRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "No URL scheme supplied.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "No URL scheme supplied.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "urlSchemeRequiredError_example_0": "#/components/examples/urlSchemeRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "urlSchemeInvalidError": {
      "name": {
        "typeId": "urlSchemeInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "urlSchemeInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Invalid URL scheme.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Invalid URL scheme.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "urlSchemeInvalidError_example_0": "#/components/examples/urlSchemeInvalidError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "urlHostRequiredError": {
      "name": {
        "typeId": "urlHostRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "urlHostRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "No URL host supplied.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "No URL host supplied.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "urlHostRequiredError_example_0": "#/components/examples/urlHostRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "urlBlacklistedError": {
      "name": {
        "typeId": "urlBlacklistedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "urlBlacklistedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Source is blacklisted.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Source is blacklisted.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "urlBlacklistedError_example_0": "#/components/examples/urlBlacklistedError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "hostnameNotFoundError": {
      "name": {
        "typeId": "hostnameNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "hostnameNotFoundError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Host does not exist.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Host does not exist.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "hostnameNotFoundError_example_0": "#/components/examples/hostnameNotFoundError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "urlHostMalformedError": {
      "name": {
        "typeId": "urlHostMalformedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "urlHostMalformedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "URL host is malformed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "URL host is malformed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "urlHostMalformedError_example_0": "#/components/examples/urlHostMalformedError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "urlHostPrivateIPForbiddenError": {
      "name": {
        "typeId": "urlHostPrivateIPForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "urlHostPrivateIPForbiddenError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Only public IPs are allowed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Only public IPs are allowed.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "urlHostPrivateIPForbiddenError_example_0": "#/components/examples/urlHostPrivateIPForbiddenError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "tokenRequiredError": {
      "name": {
        "typeId": "tokenRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "tokenRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "token is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "token is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "tokenRequiredError_example_0": "#/components/examples/tokenRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileIdRequiredError": {
      "name": {
        "typeId": "fileIdRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileIdRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "file_id is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "file_id is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileIdRequiredError_example_0": "#/components/examples/fileIdRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileIdInvalidError": {
      "name": {
        "typeId": "fileIdInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileIdInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "file_id is invalid.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "file_id is invalid.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileIdInvalidError_example_0": "#/components/examples/fileIdInvalidError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "fileNotFoundError": {
      "name": {
        "typeId": "fileNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "fileNotFoundError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File is not found.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "File is not found.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "fileNotFoundError_example_0": "#/components/examples/fileNotFoundError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "groupFilesInvalidError": {
      "name": {
        "typeId": "groupFilesInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "groupFilesInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "This is not valid file url: %s.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "This is not valid file url: %s.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "groupFilesInvalidError_example_0": "#/components/examples/groupFilesInvalidError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "groupFileURLParsingFailedError": {
      "name": {
        "typeId": "groupFileURLParsingFailedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "groupFileURLParsingFailedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "No files[N] parameters found.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "No files[N] parameters found.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "groupFileURLParsingFailedError_example_0": "#/components/examples/groupFileURLParsingFailedError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "groupFilesNotFoundError": {
      "name": {
        "typeId": "groupFilesNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "groupFilesNotFoundError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Some files not found.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "Some files not found.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "groupFilesNotFoundError_example_0": "#/components/examples/groupFilesNotFoundError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "groupIdRequiredError": {
      "name": {
        "typeId": "groupIdRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "groupIdRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "group_id is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "group_id is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "groupIdRequiredError_example_0": "#/components/examples/groupIdRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "groupNotFoundError": {
      "name": {
        "typeId": "groupNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "groupNotFoundError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "group_id is invalid.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "group_id is invalid.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "groupNotFoundError_example_0": "#/components/examples/groupNotFoundError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "signatureRequiredError": {
      "name": {
        "typeId": "signatureRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "signatureRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "`signature` is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "`signature` is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "signatureRequiredError_example_0": "#/components/examples/signatureRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "signatureExpirationRequiredError": {
      "name": {
        "typeId": "signatureExpirationRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "signatureExpirationRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "`expire` is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "`expire` is required.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "signatureExpirationRequiredError_example_0": "#/components/examples/signatureExpirationRequiredError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "signatureExpirationInvalidError": {
      "name": {
        "typeId": "signatureExpirationInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "signatureExpirationInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "`expire` must be a UNIX timestamp.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "default": "`expire` must be a UNIX timestamp.",
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "signatureExpirationInvalidError_example_0": "#/components/examples/signatureExpirationInvalidError/value"
        },
        "autogeneratedExamples": {}
      }
    },
    "ImageInfoColorMode": {
      "name": {
        "typeId": "ImageInfoColorMode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ImageInfoColorMode"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "RGB",
              "wireValue": "RGB"
            }
          },
          {
            "name": {
              "name": "RGBA",
              "wireValue": "RGBA"
            }
          },
          {
            "name": {
              "name": "RGBa",
              "wireValue": "RGBa"
            }
          },
          {
            "name": {
              "name": "RGBX",
              "wireValue": "RGBX"
            }
          },
          {
            "name": {
              "name": "L",
              "wireValue": "L"
            }
          },
          {
            "name": {
              "name": "LA",
              "wireValue": "LA"
            }
          },
          {
            "name": {
              "name": "La",
              "wireValue": "La"
            }
          },
          {
            "name": {
              "name": "P",
              "wireValue": "P"
            }
          },
          {
            "name": {
              "name": "PA",
              "wireValue": "PA"
            }
          },
          {
            "name": {
              "name": "CMYK",
              "wireValue": "CMYK"
            }
          },
          {
            "name": {
              "name": "YCbCr",
              "wireValue": "YCbCr"
            }
          },
          {
            "name": {
              "name": "HSV",
              "wireValue": "HSV"
            }
          },
          {
            "name": {
              "name": "LAB",
              "wireValue": "LAB"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Image color mode.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ImageInfoColorMode_example_0": "RGBA"
        },
        "autogeneratedExamples": {}
      }
    },
    "ImageInfoGeoLocation": {
      "name": {
        "typeId": "ImageInfoGeoLocation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ImageInfoGeoLocation"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "latitude",
              "wireValue": "latitude"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "Location latitude.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ImageInfoGeoLocationLatitude_example_0": -1.1884555555555556
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "longitude",
              "wireValue": "longitude"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "Location longitude.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ImageInfoGeoLocationLongitude_example_0": 52.66996666666667
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Geo-location of image from EXIF.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ImageInfoGeoLocation_example_autogenerated": {
            "latitude": -1.19,
            "longitude": 52.7
          }
        }
      }
    },
    "imageInfo": {
      "name": {
        "typeId": "imageInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "imageInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "color_mode",
              "wireValue": "color_mode"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ImageInfoColorMode",
              "typeId": "ImageInfoColorMode",
              "inline": false,
              "type": "named"
            },
            "docs": "Image color mode.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ImageInfoColorMode_example_0": "RGBA"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "orientation",
              "wireValue": "orientation"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {
                        "max": 8,
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Image orientation from EXIF.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ImageInfoOrientation_example_0": 6
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "format",
              "wireValue": "format"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Image format.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ImageInfoFormat_example_0": "JPEG"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sequence",
              "wireValue": "sequence"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Set to true if a file contains a sequence of images (GIF for example).",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ImageInfoSequence_example_0": false
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "height",
              "wireValue": "height"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Image height in pixels.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ImageInfoHeight_example_0": 2352
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "width",
              "wireValue": "width"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Image width in pixels.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ImageInfoWidth_example_0": 2935
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "geo_location",
              "wireValue": "geo_location"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ImageInfoGeoLocation",
                  "typeId": "ImageInfoGeoLocation",
                  "inline": false,
                  "type": "named"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Geo-location of image from EXIF.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ImageInfoGeoLocation_example_autogenerated": {
                  "latitude": -1.19,
                  "longitude": 52.7
                }
              }
            }
          },
          {
            "name": {
              "name": "datetime_original",
              "wireValue": "datetime_original"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Image date and time from EXIF. Please be aware that this data is not always formatted and displayed exactly as it appears in the EXIF.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ImageInfoDatetimeOriginal_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "dpi",
              "wireValue": "dpi"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Image DPI for two dimensions.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ImageInfoDpi_example_0": [
                  72,
                  72
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Image metadata.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "imageInfo_example_autogenerated": {
            "color_mode": "RGB",
            "orientation": 6,
            "format": "JPEG",
            "sequence": false,
            "height": 2352,
            "width": 2935,
            "geo_location": {
              "latitude": -1.19,
              "longitude": 52.7
            },
            "datetime_original": "2024-01-15T09:30:00Z",
            "dpi": [
              72,
              72
            ]
          }
        }
      }
    },
    "LegacyVideoInfoAudio": {
      "name": {
        "typeId": "LegacyVideoInfoAudio",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LegacyVideoInfoAudio"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Audio stream's bitrate.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LegacyVideoInfoAudioBitrate_example_0": 78
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "codec",
              "wireValue": "codec"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Audio stream's codec.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LegacyVideoInfoAudioCodec_example_0": "aac"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sample_rate",
              "wireValue": "sample_rate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Audio stream's sample rate.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LegacyVideoInfoAudioSampleRate_example_0": 44100
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "channels",
              "wireValue": "channels"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Audio stream's number of channels.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LegacyVideoInfoAudioChannels_example_0": "2"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Audio stream's metadata.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LegacyVideoInfoAudio_example_autogenerated": {}
        }
      }
    },
    "LegacyVideoInfoVideo": {
      "name": {
        "typeId": "LegacyVideoInfoVideo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LegacyVideoInfoVideo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "height",
              "wireValue": "height"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Video stream's image height.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LegacyVideoInfoVideoHeight_example_0": 360
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "width",
              "wireValue": "width"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Video stream's image width.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LegacyVideoInfoVideoWidth_example_0": 640
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "frame_rate",
              "wireValue": "frame_rate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Video stream's frame rate.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LegacyVideoInfoVideoFrameRate_example_0": 30
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Video stream's bitrate.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LegacyVideoInfoVideoBitrate_example_0": 315
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "codec",
              "wireValue": "codec"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Video stream codec.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LegacyVideoInfoVideoCodec_example_0": "h264"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Video stream's metadata.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LegacyVideoInfoVideo_example_autogenerated": {}
        }
      }
    },
    "legacyVideoInfo": {
      "name": {
        "typeId": "legacyVideoInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "legacyVideoInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "duration",
              "wireValue": "duration"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Video file's duration in milliseconds.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LegacyVideoInfoDuration_example_0": 261827
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "format",
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Video file's format.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LegacyVideoInfoFormat_example_0": "mp4"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Video file's bitrate.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LegacyVideoInfoBitrate_example_0": 393
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "audio",
              "wireValue": "audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "LegacyVideoInfoAudio",
                      "typeId": "LegacyVideoInfoAudio",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Audio stream's metadata.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LegacyVideoInfoAudio_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "video",
              "wireValue": "video"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "LegacyVideoInfoVideo",
                  "typeId": "LegacyVideoInfoVideo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Video stream's metadata.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LegacyVideoInfoVideo_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Video metadata.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "legacyVideoInfo_example_autogenerated": {}
        }
      }
    },
    "SchemasImageInfoColorMode": {
      "name": {
        "typeId": "SchemasImageInfoColorMode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SchemasImageInfoColorMode"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "RGB",
              "wireValue": "RGB"
            }
          },
          {
            "name": {
              "name": "RGBA",
              "wireValue": "RGBA"
            }
          },
          {
            "name": {
              "name": "RGBa",
              "wireValue": "RGBa"
            }
          },
          {
            "name": {
              "name": "RGBX",
              "wireValue": "RGBX"
            }
          },
          {
            "name": {
              "name": "L",
              "wireValue": "L"
            }
          },
          {
            "name": {
              "name": "LA",
              "wireValue": "LA"
            }
          },
          {
            "name": {
              "name": "La",
              "wireValue": "La"
            }
          },
          {
            "name": {
              "name": "P",
              "wireValue": "P"
            }
          },
          {
            "name": {
              "name": "PA",
              "wireValue": "PA"
            }
          },
          {
            "name": {
              "name": "CMYK",
              "wireValue": "CMYK"
            }
          },
          {
            "name": {
              "name": "YCbCr",
              "wireValue": "YCbCr"
            }
          },
          {
            "name": {
              "name": "HSV",
              "wireValue": "HSV"
            }
          },
          {
            "name": {
              "name": "LAB",
              "wireValue": "LAB"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Image color mode.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "SchemasImageInfoColorMode_example_0": "RGBA"
        },
        "autogeneratedExamples": {}
      }
    },
    "SchemasImageInfoGeoLocation": {
      "name": {
        "typeId": "SchemasImageInfoGeoLocation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SchemasImageInfoGeoLocation"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "latitude",
              "wireValue": "latitude"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "Location latitude.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "SchemasImageInfoGeoLocationLatitude_example_0": -1.1884555555555556
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "longitude",
              "wireValue": "longitude"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "Location longitude.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "SchemasImageInfoGeoLocationLongitude_example_0": 52.66996666666667
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Geo-location of image from EXIF.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SchemasImageInfoGeoLocation_example_autogenerated": {
            "latitude": -1.19,
            "longitude": 52.7
          }
        }
      }
    },
    "schemas-imageInfo": {
      "name": {
        "typeId": "schemas-imageInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "schemas-imageInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "color_mode",
              "wireValue": "color_mode"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "SchemasImageInfoColorMode",
              "typeId": "SchemasImageInfoColorMode",
              "inline": false,
              "type": "named"
            },
            "docs": "Image color mode.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "SchemasImageInfoColorMode_example_0": "RGBA"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "orientation",
              "wireValue": "orientation"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {
                        "max": 8,
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Image orientation from EXIF.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "SchemasImageInfoOrientation_example_0": 6
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "format",
              "wireValue": "format"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Image format.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "SchemasImageInfoFormat_example_0": "JPEG"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sequence",
              "wireValue": "sequence"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Set to true if a file contains a sequence of images (GIF for example).",
            "v2Examples": {
              "userSpecifiedExamples": {
                "SchemasImageInfoSequence_example_0": false
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "height",
              "wireValue": "height"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Image height in pixels.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "SchemasImageInfoHeight_example_0": 2352
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "width",
              "wireValue": "width"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Image width in pixels.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "SchemasImageInfoWidth_example_0": 2935
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "geo_location",
              "wireValue": "geo_location"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "SchemasImageInfoGeoLocation",
                  "typeId": "SchemasImageInfoGeoLocation",
                  "inline": false,
                  "type": "named"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Geo-location of image from EXIF.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SchemasImageInfoGeoLocation_example_autogenerated": {
                  "latitude": -1.19,
                  "longitude": 52.7
                }
              }
            }
          },
          {
            "name": {
              "name": "datetime_original",
              "wireValue": "datetime_original"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Image date and time from EXIF. Please be aware that this data is not always formatted and displayed exactly as it appears in the EXIF.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SchemasImageInfoDatetimeOriginal_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "dpi",
              "wireValue": "dpi"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Image DPI for two dimensions.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "SchemasImageInfoDpi_example_0": [
                  72,
                  72
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Image metadata.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "schemas-imageInfo_example_autogenerated": {
            "color_mode": "RGB",
            "orientation": 6,
            "format": "JPEG",
            "sequence": false,
            "height": 2352,
            "width": 2935,
            "geo_location": {
              "latitude": -1.19,
              "longitude": 52.7
            },
            "datetime_original": "2024-01-15T09:30:00Z",
            "dpi": [
              72,
              72
            ]
          }
        }
      }
    },
    "VideoInfoAudioItems": {
      "name": {
        "typeId": "VideoInfoAudioItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "VideoInfoAudioItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Audio stream's bitrate.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "VideoInfoAudioItemsBitrate_example_0": 78
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "codec",
              "wireValue": "codec"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Audio stream's codec.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "VideoInfoAudioItemsCodec_example_0": "aac"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sample_rate",
              "wireValue": "sample_rate"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Audio stream's sample rate.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "VideoInfoAudioItemsSampleRate_example_0": 44100
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "channels",
              "wireValue": "channels"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Audio stream's number of channels.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "VideoInfoAudioItemsChannels_example_0": 2
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Audio stream's metadata.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "VideoInfoAudioItems_example_autogenerated": {
            "bitrate": 78,
            "codec": "aac",
            "sample_rate": 44100,
            "channels": 2
          }
        }
      }
    },
    "VideoInfoVideoItems": {
      "name": {
        "typeId": "VideoInfoVideoItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "VideoInfoVideoItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "height",
              "wireValue": "height"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Video stream's image height.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "VideoInfoVideoItemsHeight_example_0": 360
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "width",
              "wireValue": "width"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Video stream's image width.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "VideoInfoVideoItemsWidth_example_0": 640
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "frame_rate",
              "wireValue": "frame_rate"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "Video stream's frame rate.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "VideoInfoVideoItemsFrameRate_example_0": 30
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Video stream's bitrate.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "VideoInfoVideoItemsBitrate_example_0": 315
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "codec",
              "wireValue": "codec"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Video stream's codec.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "VideoInfoVideoItemsCodec_example_0": "h264"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Video stream's metadata.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "VideoInfoVideoItems_example_autogenerated": {
            "height": 360,
            "width": 640,
            "frame_rate": 30,
            "bitrate": 315,
            "codec": "h264"
          }
        }
      }
    },
    "videoInfo": {
      "name": {
        "typeId": "videoInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "videoInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "duration",
              "wireValue": "duration"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Video file's duration in milliseconds.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "VideoInfoDuration_example_0": 261827
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "format",
              "wireValue": "format"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Video file's format.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "VideoInfoFormat_example_0": "mp4"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Video file's bitrate.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "VideoInfoBitrate_example_0": 393
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "audio",
              "wireValue": "audio"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "VideoInfoAudioItems",
                  "typeId": "VideoInfoAudioItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "VideoInfoAudio_example_autogenerated": [
                  {
                    "bitrate": 78,
                    "codec": "aac",
                    "sample_rate": 44100,
                    "channels": 2
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "video",
              "wireValue": "video"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "VideoInfoVideoItems",
                  "typeId": "VideoInfoVideoItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "VideoInfoVideo_example_autogenerated": [
                  {
                    "height": 360,
                    "width": 640,
                    "frame_rate": 30,
                    "bitrate": 315,
                    "codec": "h264"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Video metadata.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "videoInfo_example_autogenerated": {
            "duration": 261827,
            "format": "mp4",
            "bitrate": 393,
            "audio": [
              {
                "bitrate": 78,
                "codec": "aac",
                "sample_rate": 44100,
                "channels": 2
              }
            ],
            "video": [
              {
                "height": 360,
                "width": 640,
                "frame_rate": 30,
                "bitrate": 315,
                "codec": "h264"
              }
            ]
          }
        }
      }
    },
    "ContentInfoMime": {
      "name": {
        "typeId": "ContentInfoMime",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ContentInfoMime"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "mime",
              "wireValue": "mime"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Full MIME type.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ContentInfoMimeMime_example_0": "image/jpeg"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Type of MIME type.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ContentInfoMimeType_example_0": "image"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "subtype",
              "wireValue": "subtype"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Subtype of MIME type.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ContentInfoMimeSubtype_example_0": "jpeg"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "MIME type.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ContentInfoMime_example_autogenerated": {
            "mime": "image/jpeg",
            "type": "image",
            "subtype": "jpeg"
          }
        }
      }
    },
    "contentInfo": {
      "name": {
        "typeId": "contentInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "contentInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "mime",
              "wireValue": "mime"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ContentInfoMime",
                  "typeId": "ContentInfoMime",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "MIME type.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContentInfoMime_example_autogenerated": {
                  "mime": "image/jpeg",
                  "type": "image",
                  "subtype": "jpeg"
                }
              }
            }
          },
          {
            "name": {
              "name": "image",
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "schemas-imageInfo",
                  "typeId": "schemas-imageInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "video",
              "wireValue": "video"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "videoInfo",
                  "typeId": "videoInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Information about file content.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "contentInfo_example_autogenerated": {}
        }
      }
    },
    "metadata": {
      "name": {
        "typeId": "metadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "metadata"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitrary metadata associated with a file.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "metadata_example_autogenerated": {}
        }
      }
    },
    "Upload_baseUpload_Response_200": {
      "name": {
        "typeId": "Upload_baseUpload_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Upload_baseUpload_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "filename",
              "wireValue": "filename"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BasePostResponsesContentApplicationJsonSchemaFilename_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "JSON object where the key is the file name of the uploaded file and\nthe value is the unique ID of the file on our systems.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Upload_baseUpload_Response_200_example_0": {
            "my_file.jpg": "17be4678-dab7-4bc7-8753-28914a22960a"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "Upload_multipartFileUploadStart_Response_200": {
      "name": {
        "typeId": "Upload_multipartFileUploadStart_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Upload_multipartFileUploadStart_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "uuid",
              "wireValue": "uuid"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "File's UUID.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MultipartStartPostResponsesContentApplicationJsonSchemaUuid_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "parts",
              "wireValue": "parts"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MultipartStartPostResponsesContentApplicationJsonSchemaParts_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Upload_multipartFileUploadStart_Response_200_example_0": {
            "uuid": "67947755-1584-4e3f-902b-d4e2bf76a841",
            "parts": [
              "<presigned-url-1>",
              "<presigned-url-2>",
              "<presigned-url-3>",
              "<presigned-url-4>",
              "<presigned-url-5>"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "Upload_multipartFileUploadPart_Request": {
      "name": {
        "typeId": "Upload_multipartFileUploadPart_Request",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Upload_multipartFileUploadPart_Request"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Part of the uploaded file.\n\nDon't include `https://upload.uploadcare.com/` in this request:\n\n```\ncurl -X PUT \"<presigned-url-x>\" -H \"Content-Type: application/octet-stream\" --data <data-part>\n```\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Upload_multipartFileUploadPart_Request_example_autogenerated": {}
        }
      }
    },
    "FromUrlPostRequestBodyContentMultipartFormDataSchemaCheckUrlDuplicates": {
      "name": {
        "typeId": "FromUrlPostRequestBodyContentMultipartFormDataSchemaCheckUrlDuplicates",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FromUrlPostRequestBodyContentMultipartFormDataSchemaCheckUrlDuplicates"
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "0",
              "camelCase": {
                "unsafeName": "0",
                "safeName": "_0"
              },
              "pascalCase": {
                "unsafeName": "0",
                "safeName": "_0"
              },
              "snakeCase": {
                "unsafeName": "0",
                "safeName": "_0"
              },
              "screamingSnakeCase": {
                "unsafeName": "0",
                "safeName": "_0"
              }
            },
            "wireValue": "0"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "0",
                "camelCase": {
                  "unsafeName": "0",
                  "safeName": "_0"
                },
                "pascalCase": {
                  "unsafeName": "0",
                  "safeName": "_0"
                },
                "snakeCase": {
                  "unsafeName": "0",
                  "safeName": "_0"
                },
                "screamingSnakeCase": {
                  "unsafeName": "0",
                  "safeName": "_0"
                }
              },
              "wireValue": "0"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "1",
                "camelCase": {
                  "unsafeName": "1",
                  "safeName": "_1"
                },
                "pascalCase": {
                  "unsafeName": "1",
                  "safeName": "_1"
                },
                "snakeCase": {
                  "unsafeName": "1",
                  "safeName": "_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "1",
                  "safeName": "_1"
                }
              },
              "wireValue": "1"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "If set to \"1\", enables the `source_url` duplicates prevention.\nSpecifically, if the `source_url` had already been fetched and uploaded previously,\nthis request will return information about the already uploaded file.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "FromUrlPostRequestBodyContentMultipartFormDataSchemaCheckUrlDuplicates_example_0": "1"
        },
        "autogeneratedExamples": {}
      }
    },
    "FromUrlPostRequestBodyContentMultipartFormDataSchemaSaveUrlDuplicates": {
      "name": {
        "typeId": "FromUrlPostRequestBodyContentMultipartFormDataSchemaSaveUrlDuplicates",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FromUrlPostRequestBodyContentMultipartFormDataSchemaSaveUrlDuplicates"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "0",
                "camelCase": {
                  "unsafeName": "0",
                  "safeName": "_0"
                },
                "pascalCase": {
                  "unsafeName": "0",
                  "safeName": "_0"
                },
                "snakeCase": {
                  "unsafeName": "0",
                  "safeName": "_0"
                },
                "screamingSnakeCase": {
                  "unsafeName": "0",
                  "safeName": "_0"
                }
              },
              "wireValue": "0"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "1",
                "camelCase": {
                  "unsafeName": "1",
                  "safeName": "_1"
                },
                "pascalCase": {
                  "unsafeName": "1",
                  "safeName": "_1"
                },
                "snakeCase": {
                  "unsafeName": "1",
                  "safeName": "_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "1",
                  "safeName": "_1"
                }
              },
              "wireValue": "1"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Determines if the requested `source_url` should be kept in the history of\nfetched/uploaded URLs. If the value is not defined explicitly, it is set\nto the value of the `check_URL_duplicates` parameter.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "FromUrlPostRequestBodyContentMultipartFormDataSchemaSaveUrlDuplicates_example_0": "1"
        },
        "autogeneratedExamples": {}
      }
    },
    "Upload_fromURLUpload_Response_200": {
      "name": {
        "typeId": "Upload_fromURLUpload_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Upload_fromURLUpload_Response_200"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "fromURLUploadResponseSchema",
              "typeId": "fromURLUploadResponseSchema",
              "inline": false,
              "displayName": "fromURLUploadResponseSchema",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "fileUploadInfoFromURL",
              "typeId": "fileUploadInfoFromURL",
              "inline": false,
              "displayName": "fileUploadInfoFromURL",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Upload_fromURLUpload_Response_200_example_autogenerated": {}
        }
      }
    },
    "Upload_fromURLUploadStatus_Response_200": {
      "name": {
        "typeId": "Upload_fromURLUploadStatus_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Upload_fromURLUploadStatus_Response_200"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "fileUploadInfoWaitingStatus",
              "typeId": "fileUploadInfoWaitingStatus",
              "inline": false,
              "displayName": "fileUploadInfoWaitingStatus",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "fileUploadInfoProgressStatus",
              "typeId": "fileUploadInfoProgressStatus",
              "inline": false,
              "displayName": "fileUploadInfoProgressStatus",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "fileUploadInfoSuccessStatus",
              "typeId": "fileUploadInfoSuccessStatus",
              "inline": false,
              "displayName": "fileUploadInfoSuccessStatus",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "fileUploadInfoErrorStatus",
              "typeId": "fileUploadInfoErrorStatus",
              "inline": false,
              "displayName": "fileUploadInfoErrorStatus",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "fileUploadInfoUnknownStatus",
              "typeId": "fileUploadInfoUnknownStatus",
              "inline": false,
              "displayName": "fileUploadInfoUnknownStatus",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Upload_fromURLUploadStatus_Response_200_example_autogenerated": {}
        }
      }
    }
  },
  "services": {
    "service_upload": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Upload"
          ],
          "packagePath": [],
          "file": "Upload"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Direct uploads",
          "method": "POST",
          "baseUrl": "Production server",
          "path": {
            "head": "/base/",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/base/",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_upload.baseUpload",
          "name": "baseUpload",
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "Upload_baseUpload_Request",
            "properties": [
              {
                "name": {
                  "name": "UPLOADCARE_PUB_KEY",
                  "wireValue": "UPLOADCARE_PUB_KEY"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "projectPublicKeyType",
                  "typeId": "projectPublicKeyType",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "UPLOADCARE_STORE",
                  "wireValue": "UPLOADCARE_STORE"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "storeType",
                      "typeId": "storeType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "value": {
                  "key": {
                    "name": "{filename}",
                    "wireValue": "{filename}"
                  },
                  "isOptional": false,
                  "contentType": "multipart/form-data",
                  "docs": "File's content",
                  "type": "fileArray"
                },
                "type": "file"
              },
              {
                "name": {
                  "name": "metadata[{key}]",
                  "wireValue": "metadata[{key}]"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "metadataValue",
                      "typeId": "metadataValue",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "signature",
                  "wireValue": "signature"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "signatureType",
                      "typeId": "signatureType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "expire",
                  "wireValue": "expire"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "expireType",
                      "typeId": "expireType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              }
            ],
            "v2Examples": {
              "userSpecifiedExamples": {
                "one-file": {
                  "UPLOADCARE_PUB_KEY": "YOUR_PUBLIC_KEY",
                  "UPLOADCARE_STORE": "auto",
                  "{filename}": [
                    "string"
                  ],
                  "my_file.jpg": "@my_file.jpg",
                  "metadata[subsystem]": "uploader",
                  "metadata[pet]": "cat"
                },
                "two-files": {
                  "UPLOADCARE_PUB_KEY": "YOUR_PUBLIC_KEY",
                  "UPLOADCARE_STORE": "auto",
                  "{filename}": [
                    "string"
                  ],
                  "my_file.jpg": "@my_file.jpg",
                  "another_file.jpg": "@another_file.jpg",
                  "metadata[subsystem]": "uploader"
                }
              },
              "autogeneratedExamples": {}
            },
            "type": "fileUpload"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "multipart/form-data",
                "name": "Upload_baseUpload_Request",
                "properties": [
                  {
                    "name": {
                      "name": "UPLOADCARE_PUB_KEY",
                      "wireValue": "UPLOADCARE_PUB_KEY"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "projectPublicKeyType",
                      "typeId": "projectPublicKeyType",
                      "inline": false,
                      "type": "named"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "UPLOADCARE_STORE",
                      "wireValue": "UPLOADCARE_STORE"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "storeType",
                          "typeId": "storeType",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "value": {
                      "key": {
                        "name": "{filename}",
                        "wireValue": "{filename}"
                      },
                      "isOptional": false,
                      "contentType": "multipart/form-data",
                      "docs": "File's content",
                      "type": "fileArray"
                    },
                    "type": "file"
                  },
                  {
                    "name": {
                      "name": "metadata[{key}]",
                      "wireValue": "metadata[{key}]"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "metadataValue",
                          "typeId": "metadataValue",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "signature",
                      "wireValue": "signature"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "signatureType",
                          "typeId": "signatureType",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "expire",
                      "wireValue": "expire"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "expireType",
                          "typeId": "expireType",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "one-file": {
                      "UPLOADCARE_PUB_KEY": "YOUR_PUBLIC_KEY",
                      "UPLOADCARE_STORE": "auto",
                      "{filename}": [
                        "string"
                      ],
                      "my_file.jpg": "@my_file.jpg",
                      "metadata[subsystem]": "uploader",
                      "metadata[pet]": "cat"
                    },
                    "two-files": {
                      "UPLOADCARE_PUB_KEY": "YOUR_PUBLIC_KEY",
                      "UPLOADCARE_STORE": "auto",
                      "{filename}": [
                        "string"
                      ],
                      "my_file.jpg": "@my_file.jpg",
                      "another_file.jpg": "@another_file.jpg",
                      "metadata[subsystem]": "uploader"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Upload_baseUpload_Response_200",
                  "typeId": "Upload_baseUpload_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "The file was uploaded successfully.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "uploadBaseUploadExample": {
                      "my_file.jpg": "17be4678-dab7-4bc7-8753-28914a22960a"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Direct file uploads comply with the [RFC 7578](https://www.rfc-editor.org/rfc/rfc7578) standard.\nIn other words, you can perform a direct upload by making an HTTP POST request with the Content-Type\nheader set to `multipart/form-data`.\n\n**Note**: Direct file uploads support files smaller than 100 megabytes only.\nIf you would like to upload larger files, please use [Multipart Uploads](/api-refs/upload-api/#operation/multipartFileUploadStart) instead.\n\nFile upload example with curl:\n\n```\ncurl -F \"UPLOADCARE_PUB_KEY=YOUR_PUBLIC_KEY\" -F \"my_file.jpg=@my_file.jpg\" \"https://upload.uploadcare.com/base/\"\n```\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "one-file_uploadBaseUploadExample_200": {
                "displayName": "one-file",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/base/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "UPLOADCARE_PUB_KEY": "YOUR_PUBLIC_KEY",
                    "UPLOADCARE_STORE": "auto",
                    "{filename}": [
                      "string"
                    ],
                    "my_file.jpg": "@my_file.jpg",
                    "metadata[subsystem]": "uploader",
                    "metadata[pet]": "cat"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "my_file.jpg": "17be4678-dab7-4bc7-8753-28914a22960a"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {
              "two-files_uploadBaseUploadExample_200": {
                "displayName": "two-files",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/base/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "UPLOADCARE_PUB_KEY": "YOUR_PUBLIC_KEY",
                    "UPLOADCARE_STORE": "auto",
                    "{filename}": [
                      "string"
                    ],
                    "my_file.jpg": "@my_file.jpg",
                    "another_file.jpg": "@another_file.jpg",
                    "metadata[subsystem]": "uploader"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "my_file.jpg": "17be4678-dab7-4bc7-8753-28914a22960a"
                    },
                    "type": "json"
                  }
                }
              }
            }
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Upload_baseUpload_Response_200",
                      "typeId": "Upload_baseUpload_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "The file was uploaded successfully.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "uploadBaseUploadExample": {
                          "my_file.jpg": "17be4678-dab7-4bc7-8753-28914a22960a"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Start multipart upload",
          "method": "POST",
          "baseUrl": "Production server",
          "path": {
            "head": "/multipart/start/",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/multipart/start/",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_upload.multipartFileUploadStart",
          "name": "multipartFileUploadStart",
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "Upload_multipartFileUploadStart_Request",
            "properties": [
              {
                "name": {
                  "name": "UPLOADCARE_PUB_KEY",
                  "wireValue": "UPLOADCARE_PUB_KEY"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "projectPublicKeyType",
                  "typeId": "projectPublicKeyType",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "UPLOADCARE_STORE",
                  "wireValue": "UPLOADCARE_STORE"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "storeType",
                      "typeId": "storeType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "filename",
                  "wireValue": "filename"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "Original file name of the uploaded file",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "MultipartStartPostRequestBodyContentMultipartFormDataSchemaFilename_example_0": "myfile.mp4"
                  },
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "size",
                  "wireValue": "size"
                },
                "valueType": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "Precise file size of the uploaded file (in bytes).\n**Note**: The size should not exceed max file size cap for your project.\n",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "MultipartStartPostRequestBodyContentMultipartFormDataSchemaSize_example_0": 27796904
                  },
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "part_size",
                  "wireValue": "part_size"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "default": 5242880,
                          "validation": {
                            "max": 5368709120,
                            "min": 5242880
                          },
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "docs": "Multipart Uploads expect that you will split the uploaded file into equally sized\nparts (except for the last part) and then will upload them to AWS S3 (possibly in parallel).\nBy default, we assume that you will upload the files in 5 megabyte chunks,\nso we return a list of presigned AWS S3 URLs accordingly.\nIf you intend to upload large files (for example, larger than a gigabyte),\nwe recommend to bump the part size and to pass the expected chunk size\nto us as a value of the `part_size` parameter (in bytes).\n",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "MultipartStartPostRequestBodyContentMultipartFormDataSchemaPartSize_example_0": 10485760
                  },
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "content_type",
                  "wireValue": "content_type"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "File's MIME-type.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "MultipartStartPostRequestBodyContentMultipartFormDataSchemaContentType_example_0": "video/mp4"
                  },
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "metadata[{key}]",
                  "wireValue": "metadata[{key}]"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "metadataValue",
                      "typeId": "metadataValue",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "signature",
                  "wireValue": "signature"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "signatureType",
                      "typeId": "signatureType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "expire",
                  "wireValue": "expire"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "expireType",
                      "typeId": "expireType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              }
            ],
            "v2Examples": {
              "userSpecifiedExamples": {
                "Upload_multipartFileUploadStart_example": {
                  "UPLOADCARE_PUB_KEY": "YOUR_PUBLIC_KEY",
                  "UPLOADCARE_STORE": "auto",
                  "filename": "myfile.mp4",
                  "size": 27796904,
                  "content_type": "video/mp4",
                  "metadata[subsystem]": "uploader",
                  "metadata[pet]": "cat"
                }
              },
              "autogeneratedExamples": {}
            },
            "type": "fileUpload"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "multipart/form-data",
                "name": "Upload_multipartFileUploadStart_Request",
                "properties": [
                  {
                    "name": {
                      "name": "UPLOADCARE_PUB_KEY",
                      "wireValue": "UPLOADCARE_PUB_KEY"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "projectPublicKeyType",
                      "typeId": "projectPublicKeyType",
                      "inline": false,
                      "type": "named"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "UPLOADCARE_STORE",
                      "wireValue": "UPLOADCARE_STORE"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "storeType",
                          "typeId": "storeType",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "filename",
                      "wireValue": "filename"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "Original file name of the uploaded file",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "MultipartStartPostRequestBodyContentMultipartFormDataSchemaFilename_example_0": "myfile.mp4"
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "size",
                      "wireValue": "size"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "Precise file size of the uploaded file (in bytes).\n**Note**: The size should not exceed max file size cap for your project.\n",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "MultipartStartPostRequestBodyContentMultipartFormDataSchemaSize_example_0": 27796904
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "part_size",
                      "wireValue": "part_size"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "primitive": {
                            "v1": "INTEGER",
                            "v2": {
                              "default": 5242880,
                              "validation": {
                                "max": 5368709120,
                                "min": 5242880
                              },
                              "type": "integer"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "docs": "Multipart Uploads expect that you will split the uploaded file into equally sized\nparts (except for the last part) and then will upload them to AWS S3 (possibly in parallel).\nBy default, we assume that you will upload the files in 5 megabyte chunks,\nso we return a list of presigned AWS S3 URLs accordingly.\nIf you intend to upload large files (for example, larger than a gigabyte),\nwe recommend to bump the part size and to pass the expected chunk size\nto us as a value of the `part_size` parameter (in bytes).\n",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "MultipartStartPostRequestBodyContentMultipartFormDataSchemaPartSize_example_0": 10485760
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "content_type",
                      "wireValue": "content_type"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "File's MIME-type.",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "MultipartStartPostRequestBodyContentMultipartFormDataSchemaContentType_example_0": "video/mp4"
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "metadata[{key}]",
                      "wireValue": "metadata[{key}]"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "metadataValue",
                          "typeId": "metadataValue",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "signature",
                      "wireValue": "signature"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "signatureType",
                          "typeId": "signatureType",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "expire",
                      "wireValue": "expire"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "expireType",
                          "typeId": "expireType",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Upload_multipartFileUploadStart_example": {
                      "UPLOADCARE_PUB_KEY": "YOUR_PUBLIC_KEY",
                      "UPLOADCARE_STORE": "auto",
                      "filename": "myfile.mp4",
                      "size": 27796904,
                      "content_type": "video/mp4",
                      "metadata[subsystem]": "uploader",
                      "metadata[pet]": "cat"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Upload_multipartFileUploadStart_Response_200",
                  "typeId": "Upload_multipartFileUploadStart_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Multipart upload started successfully.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "uploadMultipartFileUploadStartExample": {
                      "uuid": "67947755-1584-4e3f-902b-d4e2bf76a841",
                      "parts": [
                        "<presigned-url-1>",
                        "<presigned-url-2>",
                        "<presigned-url-3>",
                        "<presigned-url-4>",
                        "<presigned-url-5>"
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Multipart uploads should be used if you need to upload files larger than 100 megabytes or if you want to\nexplicitly trigger [AWS S3 Transfer Acceleration](https://aws.amazon.com/s3/transfer-acceleration/).\nWhen you use Multipart Uploads your files go straight to AWS S3 bypassing our upload instances.\n\nTo upload large files, 3 requests are sent in sequence:\n1. `/multipart/start/`\n2. `<presigned-url-x>`\n3. `/multipart/complete/`.\n\n**Note**: Multipart uploads support files larger than 10 megabytes only.\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "Upload_multipartFileUploadStart_example_uploadMultipartFileUploadStartExample_200": {
                "displayName": "Upload_multipartFileUploadStart_example",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/multipart/start/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "UPLOADCARE_PUB_KEY": "YOUR_PUBLIC_KEY",
                    "UPLOADCARE_STORE": "auto",
                    "filename": "myfile.mp4",
                    "size": 27796904,
                    "content_type": "video/mp4",
                    "metadata[subsystem]": "uploader",
                    "metadata[pet]": "cat"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "uuid": "67947755-1584-4e3f-902b-d4e2bf76a841",
                      "parts": [
                        "<presigned-url-1>",
                        "<presigned-url-2>",
                        "<presigned-url-3>",
                        "<presigned-url-4>",
                        "<presigned-url-5>"
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Upload_multipartFileUploadStart_Response_200",
                      "typeId": "Upload_multipartFileUploadStart_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Multipart upload started successfully.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "uploadMultipartFileUploadStartExample": {
                          "uuid": "67947755-1584-4e3f-902b-d4e2bf76a841",
                          "parts": [
                            "<presigned-url-1>",
                            "<presigned-url-2>",
                            "<presigned-url-3>",
                            "<presigned-url-4>",
                            "<presigned-url-5>"
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Upload individual file parts",
          "method": "PUT",
          "baseUrl": "Production server",
          "path": {
            "head": "/<presigned-url-x>",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/<presigned-url-x>",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_upload.multipartFileUploadPart",
          "name": "multipartFileUploadPart",
          "requestBody": {
            "contentType": "application/octet-stream",
            "isOptional": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "uploadMultipartFileUploadPartExample": {}
              }
            },
            "type": "bytes"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/octet-stream",
                "isOptional": false,
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "uploadMultipartFileUploadPartExample": {}
                  }
                },
                "type": "bytes"
              }
            ]
          },
          "docs": "The second phase is about uploading the file parts to the presigned upload URLs returned from the\n`/multipart/start/` endpoint.\n\nEach uploaded part should be at least 5 MiB (5242880 bytes) in size except for the last one, which can be smaller.\nYou can upload the file parts in parallel provided that the byte order stays unchanged.\n\n**Note**: You MUST define `Content-Type` header for your data.\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "base": {
                "displayName": "multipartFileUploadPartExample",
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/<presigned-url-x>"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {}
        },
        {
          "displayName": "Complete multipart upload",
          "method": "POST",
          "baseUrl": "Production server",
          "path": {
            "head": "/multipart/complete/",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/multipart/complete/",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_upload.multipartFileUploadComplete",
          "name": "multipartFileUploadComplete",
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "Upload_multipartFileUploadComplete_Request",
            "properties": [
              {
                "name": {
                  "name": "UPLOADCARE_PUB_KEY",
                  "wireValue": "UPLOADCARE_PUB_KEY"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "projectPublicKeyType",
                  "typeId": "projectPublicKeyType",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "uuid",
                  "wireValue": "uuid"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "File's UUID from the `/multipart/start/` endpoint.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "MultipartCompletePostRequestBodyContentMultipartFormDataSchemaUuid_example_0": "67947755-1584-4e3f-902b-d4e2bf76a841"
                  },
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              }
            ],
            "v2Examples": {
              "userSpecifiedExamples": {
                "Upload_multipartFileUploadComplete_example": {
                  "UPLOADCARE_PUB_KEY": "YOUR_PUBLIC_KEY",
                  "uuid": "67947755-1584-4e3f-902b-d4e2bf76a841"
                }
              },
              "autogeneratedExamples": {}
            },
            "type": "fileUpload"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "multipart/form-data",
                "name": "Upload_multipartFileUploadComplete_Request",
                "properties": [
                  {
                    "name": {
                      "name": "UPLOADCARE_PUB_KEY",
                      "wireValue": "UPLOADCARE_PUB_KEY"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "projectPublicKeyType",
                      "typeId": "projectPublicKeyType",
                      "inline": false,
                      "type": "named"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "uuid",
                      "wireValue": "uuid"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "File's UUID from the `/multipart/start/` endpoint.",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "MultipartCompletePostRequestBodyContentMultipartFormDataSchemaUuid_example_0": "67947755-1584-4e3f-902b-d4e2bf76a841"
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Upload_multipartFileUploadComplete_example": {
                      "UPLOADCARE_PUB_KEY": "YOUR_PUBLIC_KEY",
                      "uuid": "67947755-1584-4e3f-902b-d4e2bf76a841"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "fileUploadInfo",
                  "typeId": "fileUploadInfo",
                  "inline": false,
                  "type": "named"
                },
                "docs": "The file was uploaded successfully.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "uploadMultipartFileUploadCompleteExample": {
                      "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "size": 2667636,
                      "total": 2667636,
                      "done": 2667636,
                      "original_filename": "IMG-0412_123.JPG",
                      "filename": "IMG0412_123.JPG",
                      "mime_type": "image/jpeg",
                      "image_info": {
                        "color_mode": "RGB",
                        "orientation": 6,
                        "format": "JPEG",
                        "sequence": false,
                        "height": 4032,
                        "width": 3024,
                        "geo_location": {
                          "latitude": 55.62013611111111,
                          "longitude": 37.66299166666666
                        },
                        "datetime_original": "2024-01-15T09:30:00Z",
                        "dpi": [
                          72,
                          72
                        ]
                      },
                      "video_info": null,
                      "content_info": {
                        "mime": {
                          "mime": "image/jpeg",
                          "type": "image",
                          "subtype": "jpeg"
                        },
                        "image": {
                          "color_mode": "RGB",
                          "orientation": 6,
                          "format": "JPEG",
                          "sequence": false,
                          "height": 4032,
                          "width": 3024,
                          "geo_location": {
                            "latitude": 55.62013611111111,
                            "longitude": 37.66299166666666
                          },
                          "datetime_original": "2024-01-15T09:30:00Z",
                          "dpi": [
                            72,
                            72
                          ]
                        }
                      },
                      "metadata": {
                        "subsystem": "uploader",
                        "pet": "cat"
                      },
                      "is_image": true,
                      "is_stored": true,
                      "is_ready": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Once all the file parts have been uploaded successfully, complete the\nupload session to assemble all the file parts into a single resulting file.\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "Upload_multipartFileUploadComplete_example_uploadMultipartFileUploadCompleteExample_200": {
                "displayName": "Upload_multipartFileUploadComplete_example",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/multipart/complete/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "UPLOADCARE_PUB_KEY": "YOUR_PUBLIC_KEY",
                    "uuid": "67947755-1584-4e3f-902b-d4e2bf76a841"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "size": 2667636,
                      "total": 2667636,
                      "done": 2667636,
                      "original_filename": "IMG-0412_123.JPG",
                      "filename": "IMG0412_123.JPG",
                      "mime_type": "image/jpeg",
                      "image_info": {
                        "color_mode": "RGB",
                        "orientation": 6,
                        "format": "JPEG",
                        "sequence": false,
                        "height": 4032,
                        "width": 3024,
                        "geo_location": {
                          "latitude": 55.62013611111111,
                          "longitude": 37.66299166666666
                        },
                        "datetime_original": "2024-01-15T09:30:00Z",
                        "dpi": [
                          72,
                          72
                        ]
                      },
                      "video_info": null,
                      "content_info": {
                        "mime": {
                          "mime": "image/jpeg",
                          "type": "image",
                          "subtype": "jpeg"
                        },
                        "image": {
                          "color_mode": "RGB",
                          "orientation": 6,
                          "format": "JPEG",
                          "sequence": false,
                          "height": 4032,
                          "width": 3024,
                          "geo_location": {
                            "latitude": 55.62013611111111,
                            "longitude": 37.66299166666666
                          },
                          "datetime_original": "2024-01-15T09:30:00Z",
                          "dpi": [
                            72,
                            72
                          ]
                        }
                      },
                      "metadata": {
                        "subsystem": "uploader",
                        "pet": "cat"
                      },
                      "is_image": true,
                      "is_stored": true,
                      "is_ready": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "fileUploadInfo",
                      "typeId": "fileUploadInfo",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "The file was uploaded successfully.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "uploadMultipartFileUploadCompleteExample": {
                          "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                          "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                          "size": 2667636,
                          "total": 2667636,
                          "done": 2667636,
                          "original_filename": "IMG-0412_123.JPG",
                          "filename": "IMG0412_123.JPG",
                          "mime_type": "image/jpeg",
                          "image_info": {
                            "color_mode": "RGB",
                            "orientation": 6,
                            "format": "JPEG",
                            "sequence": false,
                            "height": 4032,
                            "width": 3024,
                            "geo_location": {
                              "latitude": 55.62013611111111,
                              "longitude": 37.66299166666666
                            },
                            "datetime_original": "2024-01-15T09:30:00Z",
                            "dpi": [
                              72,
                              72
                            ]
                          },
                          "video_info": null,
                          "content_info": {
                            "mime": {
                              "mime": "image/jpeg",
                              "type": "image",
                              "subtype": "jpeg"
                            },
                            "image": {
                              "color_mode": "RGB",
                              "orientation": 6,
                              "format": "JPEG",
                              "sequence": false,
                              "height": 4032,
                              "width": 3024,
                              "geo_location": {
                                "latitude": 55.62013611111111,
                                "longitude": 37.66299166666666
                              },
                              "datetime_original": "2024-01-15T09:30:00Z",
                              "dpi": [
                                72,
                                72
                              ]
                            }
                          },
                          "metadata": {
                            "subsystem": "uploader",
                            "pet": "cat"
                          },
                          "is_image": true,
                          "is_stored": true,
                          "is_ready": true
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Upload files from URLs",
          "method": "POST",
          "baseUrl": "Production server",
          "path": {
            "head": "/from_url/",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/from_url/",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_upload.fromURLUpload",
          "name": "fromURLUpload",
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "Upload_fromURLUpload_Request",
            "properties": [
              {
                "name": {
                  "name": "pub_key",
                  "wireValue": "pub_key"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "projectPublicKeyType",
                  "typeId": "projectPublicKeyType",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "source_url",
                  "wireValue": "source_url"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "Source URL of the file to fetch and upload.\n\n**Note**: The URL should point to a resource publicly available via HTTP/HTTPS.\n",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "FromUrlPostRequestBodyContentMultipartFormDataSchemaSourceUrl_example_0": "https://source.unsplash.com/featured"
                  },
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "store",
                  "wireValue": "store"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "storeType",
                      "typeId": "storeType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "filename",
                  "wireValue": "filename"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "docs": "Sets the file name of the resource fetched from the source URL.\nIf not defined, the file name is obtained from either HTTP\nresponse headers or the `source_url`'s path.\n\n**Note:** The filename will be sanitized to only contain the following symbols:\n`abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._`.\n",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "FromUrlPostRequestBodyContentMultipartFormDataSchemaFilename_example_0": "googlelogo_color_272x92dp.png"
                  },
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "check_URL_duplicates",
                  "wireValue": "check_URL_duplicates"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "FromUrlPostRequestBodyContentMultipartFormDataSchemaCheckUrlDuplicates",
                      "typeId": "FromUrlPostRequestBodyContentMultipartFormDataSchemaCheckUrlDuplicates",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "docs": "If set to \"1\", enables the `source_url` duplicates prevention.\nSpecifically, if the `source_url` had already been fetched and uploaded previously,\nthis request will return information about the already uploaded file.\n",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "FromUrlPostRequestBodyContentMultipartFormDataSchemaCheckUrlDuplicates_example_0": "1"
                  },
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "save_URL_duplicates",
                  "wireValue": "save_URL_duplicates"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "FromUrlPostRequestBodyContentMultipartFormDataSchemaSaveUrlDuplicates",
                      "typeId": "FromUrlPostRequestBodyContentMultipartFormDataSchemaSaveUrlDuplicates",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "docs": "Determines if the requested `source_url` should be kept in the history of\nfetched/uploaded URLs. If the value is not defined explicitly, it is set\nto the value of the `check_URL_duplicates` parameter.\n",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "FromUrlPostRequestBodyContentMultipartFormDataSchemaSaveUrlDuplicates_example_0": "1"
                  },
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "metadata[{key}]",
                  "wireValue": "metadata[{key}]"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "metadataValue",
                      "typeId": "metadataValue",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "signature",
                  "wireValue": "signature"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "signatureType",
                      "typeId": "signatureType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "expire",
                  "wireValue": "expire"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "expireType",
                      "typeId": "expireType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              }
            ],
            "v2Examples": {
              "userSpecifiedExamples": {
                "Upload_fromURLUpload_example": {
                  "pub_key": "YOUR_PUBLIC_KEY",
                  "source_url": "https://source.unsplash.com/featured",
                  "metadata[subsystem]": "uploader",
                  "metadata[pet]": "cat"
                }
              },
              "autogeneratedExamples": {}
            },
            "type": "fileUpload"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "multipart/form-data",
                "name": "Upload_fromURLUpload_Request",
                "properties": [
                  {
                    "name": {
                      "name": "pub_key",
                      "wireValue": "pub_key"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "projectPublicKeyType",
                      "typeId": "projectPublicKeyType",
                      "inline": false,
                      "type": "named"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "source_url",
                      "wireValue": "source_url"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uri"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "Source URL of the file to fetch and upload.\n\n**Note**: The URL should point to a resource publicly available via HTTP/HTTPS.\n",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "FromUrlPostRequestBodyContentMultipartFormDataSchemaSourceUrl_example_0": "https://source.unsplash.com/featured"
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "store",
                      "wireValue": "store"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "storeType",
                          "typeId": "storeType",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "filename",
                      "wireValue": "filename"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "validation": {},
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "docs": "Sets the file name of the resource fetched from the source URL.\nIf not defined, the file name is obtained from either HTTP\nresponse headers or the `source_url`'s path.\n\n**Note:** The filename will be sanitized to only contain the following symbols:\n`abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._`.\n",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "FromUrlPostRequestBodyContentMultipartFormDataSchemaFilename_example_0": "googlelogo_color_272x92dp.png"
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "check_URL_duplicates",
                      "wireValue": "check_URL_duplicates"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "FromUrlPostRequestBodyContentMultipartFormDataSchemaCheckUrlDuplicates",
                          "typeId": "FromUrlPostRequestBodyContentMultipartFormDataSchemaCheckUrlDuplicates",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "docs": "If set to \"1\", enables the `source_url` duplicates prevention.\nSpecifically, if the `source_url` had already been fetched and uploaded previously,\nthis request will return information about the already uploaded file.\n",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "FromUrlPostRequestBodyContentMultipartFormDataSchemaCheckUrlDuplicates_example_0": "1"
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "save_URL_duplicates",
                      "wireValue": "save_URL_duplicates"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "FromUrlPostRequestBodyContentMultipartFormDataSchemaSaveUrlDuplicates",
                          "typeId": "FromUrlPostRequestBodyContentMultipartFormDataSchemaSaveUrlDuplicates",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "docs": "Determines if the requested `source_url` should be kept in the history of\nfetched/uploaded URLs. If the value is not defined explicitly, it is set\nto the value of the `check_URL_duplicates` parameter.\n",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "FromUrlPostRequestBodyContentMultipartFormDataSchemaSaveUrlDuplicates_example_0": "1"
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "metadata[{key}]",
                      "wireValue": "metadata[{key}]"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "metadataValue",
                          "typeId": "metadataValue",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "signature",
                      "wireValue": "signature"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "signatureType",
                          "typeId": "signatureType",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "expire",
                      "wireValue": "expire"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "expireType",
                          "typeId": "expireType",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Upload_fromURLUpload_example": {
                      "pub_key": "YOUR_PUBLIC_KEY",
                      "source_url": "https://source.unsplash.com/featured",
                      "metadata[subsystem]": "uploader",
                      "metadata[pet]": "cat"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Upload_fromURLUpload_Response_200",
                  "typeId": "Upload_fromURLUpload_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Status Token or File Info of an already downloaded file.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "type-token": {
                      "type": "token",
                      "token": "945ebb27-1fd6-46c6-a859-b9893712d650"
                    },
                    "type-file-info": {
                      "type": "token",
                      "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "size": 2667636,
                      "total": 2667636,
                      "done": 2667636,
                      "original_filename": "IMG-0412_123.JPG",
                      "filename": "IMG0412_123.JPG",
                      "mime_type": "image/jpeg",
                      "image_info": {
                        "color_mode": "RGB",
                        "orientation": 6,
                        "format": "JPEG",
                        "height": 4032,
                        "width": 3024,
                        "sequence": false,
                        "geo_location": {
                          "latitude": 55.62013611111111,
                          "longitude": 37.66299166666666
                        },
                        "dpi": [
                          72,
                          72
                        ]
                      },
                      "video_info": {},
                      "content_info": {
                        "mime": {
                          "mime": "image/jpeg",
                          "type": "image",
                          "subtype": "jpeg"
                        },
                        "image": {
                          "color_mode": "RGB",
                          "orientation": 6,
                          "format": "JPEG",
                          "height": 4032,
                          "width": 3024,
                          "sequence": false,
                          "geo_location": {
                            "latitude": 55.62013611111111,
                            "longitude": 37.66299166666666
                          },
                          "dpi": [
                            72,
                            72
                          ]
                        }
                      },
                      "metadata": {
                        "subsystem": "uploader",
                        "pet": "cat"
                      },
                      "is_image": true,
                      "is_stored": true,
                      "is_ready": true
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Uploadcare can fetch a file from a publicly available URL and then automatically upload the\nfetched file to your project.\n\n#### Upload tokens\nRequests to the endpoint return a JSON dictionary with a `token` that can be further used\nto [check the status](/api-refs/upload-api/#operation/fromURLUploadStatus) of the upload\nrequest.\n\n**Note:** The token is not a file ID and can't be used to address the file directly.\nThe actual file ID should be retrieved by calling the `/from_url/status/` endpoint.\n\n#### Duplicates prevention\nBy default, every call to the `/from_url/` endpoint with the same `source_url` results in\na new upload leading to file duplication.\n\nIf you would like Uploadcare to keep track of the requested URLs and avoid the duplicate\nuploads, pass the `save_URL_duplicates` and `check_URL_duplicates` parameters described below.\n",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "base_type-token_200": {
                "displayName": "type-token",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/from_url/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "token",
                      "token": "945ebb27-1fd6-46c6-a859-b9893712d650"
                    },
                    "type": "json"
                  }
                }
              },
              "base_type-file-info_200": {
                "displayName": "type-file-info",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/from_url/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "token",
                      "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "size": 2667636,
                      "total": 2667636,
                      "done": 2667636,
                      "original_filename": "IMG-0412_123.JPG",
                      "filename": "IMG0412_123.JPG",
                      "mime_type": "image/jpeg",
                      "image_info": {
                        "color_mode": "RGB",
                        "orientation": 6,
                        "format": "JPEG",
                        "height": 4032,
                        "width": 3024,
                        "sequence": false,
                        "geo_location": {
                          "latitude": 55.62013611111111,
                          "longitude": 37.66299166666666
                        },
                        "dpi": [
                          72,
                          72
                        ]
                      },
                      "video_info": {},
                      "content_info": {
                        "mime": {
                          "mime": "image/jpeg",
                          "type": "image",
                          "subtype": "jpeg"
                        },
                        "image": {
                          "color_mode": "RGB",
                          "orientation": 6,
                          "format": "JPEG",
                          "height": 4032,
                          "width": 3024,
                          "sequence": false,
                          "geo_location": {
                            "latitude": 55.62013611111111,
                            "longitude": 37.66299166666666
                          },
                          "dpi": [
                            72,
                            72
                          ]
                        }
                      },
                      "metadata": {
                        "subsystem": "uploader",
                        "pet": "cat"
                      },
                      "is_image": true,
                      "is_stored": true,
                      "is_ready": true
                    },
                    "type": "json"
                  }
                }
              },
              "Upload_fromURLUpload_example_type-token_200": {
                "displayName": "Upload_fromURLUpload_example",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/from_url/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "pub_key": "YOUR_PUBLIC_KEY",
                    "source_url": "https://source.unsplash.com/featured",
                    "metadata[subsystem]": "uploader",
                    "metadata[pet]": "cat"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "token",
                      "token": "945ebb27-1fd6-46c6-a859-b9893712d650"
                    },
                    "type": "json"
                  }
                }
              }
            }
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Upload_fromURLUpload_Response_200",
                      "typeId": "Upload_fromURLUpload_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Status Token or File Info of an already downloaded file.",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "type-token": {
                          "type": "token",
                          "token": "945ebb27-1fd6-46c6-a859-b9893712d650"
                        },
                        "type-file-info": {
                          "type": "token",
                          "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                          "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                          "size": 2667636,
                          "total": 2667636,
                          "done": 2667636,
                          "original_filename": "IMG-0412_123.JPG",
                          "filename": "IMG0412_123.JPG",
                          "mime_type": "image/jpeg",
                          "image_info": {
                            "color_mode": "RGB",
                            "orientation": 6,
                            "format": "JPEG",
                            "height": 4032,
                            "width": 3024,
                            "sequence": false,
                            "geo_location": {
                              "latitude": 55.62013611111111,
                              "longitude": 37.66299166666666
                            },
                            "dpi": [
                              72,
                              72
                            ]
                          },
                          "video_info": {},
                          "content_info": {
                            "mime": {
                              "mime": "image/jpeg",
                              "type": "image",
                              "subtype": "jpeg"
                            },
                            "image": {
                              "color_mode": "RGB",
                              "orientation": 6,
                              "format": "JPEG",
                              "height": 4032,
                              "width": 3024,
                              "sequence": false,
                              "geo_location": {
                                "latitude": 55.62013611111111,
                                "longitude": 37.66299166666666
                              },
                              "dpi": [
                                72,
                                72
                              ]
                            }
                          },
                          "metadata": {
                            "subsystem": "uploader",
                            "pet": "cat"
                          },
                          "is_image": true,
                          "is_stored": true,
                          "is_ready": true
                        }
                      },
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Check the status of a task to fetch/upload a file from a URL",
          "method": "GET",
          "baseUrl": "Production server",
          "path": {
            "head": "/from_url/status/",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "token",
                "wireValue": "token"
              },
              "docs": "Token returned by the `/from_url/` endpoint that identifies a request to fetch/upload a file from a URL.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "token_example": "945ebb27-1fd6-46c6-a859-b9893712d650"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "fa594ec8",
                "url": "/from_url/status/",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [
                  {
                    "name": {
                      "name": "token",
                      "wireValue": "token"
                    },
                    "shape": {
                      "type": "single"
                    },
                    "value": {
                      "jsonExample": "token",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "token"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "status": "waiting"
                      },
                      "shape": {
                        "shape": {
                          "index": 0,
                          "singleUnionType": {
                            "jsonExample": {
                              "status": "waiting"
                            },
                            "shape": {
                              "shape": {
                                "properties": [
                                  {
                                    "name": {
                                      "name": "status",
                                      "wireValue": "status"
                                    },
                                    "originalTypeDeclaration": {
                                      "typeId": "fileUploadInfoWaitingStatus",
                                      "fernFilepath": {
                                        "allParts": [],
                                        "packagePath": []
                                      },
                                      "name": "fileUploadInfoWaitingStatus"
                                    },
                                    "value": {
                                      "jsonExample": "waiting",
                                      "shape": {
                                        "container": {
                                          "optional": {
                                            "jsonExample": "waiting",
                                            "shape": {
                                              "shape": {
                                                "value": {
                                                  "name": "waiting",
                                                  "wireValue": "waiting"
                                                },
                                                "type": "enum"
                                              },
                                              "typeName": {
                                                "typeId": "FileUploadInfoWaitingStatusStatus",
                                                "fernFilepath": {
                                                  "allParts": [],
                                                  "packagePath": []
                                                },
                                                "name": "FileUploadInfoWaitingStatusStatus"
                                              },
                                              "type": "named"
                                            }
                                          },
                                          "valueType": {
                                            "fernFilepath": {
                                              "allParts": [],
                                              "packagePath": []
                                            },
                                            "name": "FileUploadInfoWaitingStatusStatus",
                                            "typeId": "FileUploadInfoWaitingStatusStatus",
                                            "inline": false,
                                            "type": "named"
                                          },
                                          "type": "optional"
                                        },
                                        "type": "container"
                                      }
                                    }
                                  }
                                ],
                                "type": "object"
                              },
                              "typeName": {
                                "typeId": "fileUploadInfoWaitingStatus",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfoWaitingStatus"
                              },
                              "type": "named"
                            }
                          },
                          "type": "undiscriminatedUnion"
                        },
                        "typeName": {
                          "typeId": "Upload_fromURLUploadStatus_Response_200",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Upload_fromURLUploadStatus_Response_200"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/from_url/status/",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_upload.fromURLUploadStatus",
          "name": "fromURLUploadStatus",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Upload_fromURLUploadStatus_Response_200",
                  "typeId": "Upload_fromURLUploadStatus_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Request was processed successfully.\n",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "status-waiting": {
                      "status": "waiting"
                    },
                    "status-progress": {
                      "status": "waiting",
                      "total": 732434,
                      "done": 134427
                    },
                    "status-success": {
                      "status": "waiting",
                      "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "size": 2667636,
                      "total": 2667636,
                      "done": 2667636,
                      "original_filename": "IMG-0412_123.JPG",
                      "filename": "IMG0412_123.JPG",
                      "mime_type": "image/jpeg",
                      "image_info": {
                        "color_mode": "RGB",
                        "orientation": 6,
                        "format": "JPEG",
                        "height": 4032,
                        "width": 3024,
                        "sequence": false,
                        "geo_location": {
                          "latitude": 55.62013611111111,
                          "longitude": 37.66299166666666
                        },
                        "dpi": [
                          72,
                          72
                        ]
                      },
                      "video_info": {},
                      "content_info": {
                        "mime": {
                          "mime": "image/jpeg",
                          "type": "image",
                          "subtype": "jpeg"
                        },
                        "image": {
                          "color_mode": "RGB",
                          "orientation": 6,
                          "format": "JPEG",
                          "height": 4032,
                          "width": 3024,
                          "sequence": false,
                          "geo_location": {
                            "latitude": 55.62013611111111,
                            "longitude": 37.66299166666666
                          },
                          "dpi": [
                            72,
                            72
                          ]
                        }
                      },
                      "metadata": {
                        "subsystem": "uploader",
                        "pet": "cat"
                      },
                      "is_image": true,
                      "is_stored": true,
                      "is_ready": true
                    },
                    "status-error": {
                      "status": "waiting",
                      "error": "HTTP client error: 404.",
                      "error_code": "DownloadFileHTTPClientError"
                    },
                    "status-unknown": {
                      "status": "waiting"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "The endpoint notifies about the progress of the task by changing the value of the `status` field:\n  * the field is set to `waiting` initially\n  * once the system starts processing the request, the field is set to `progress`\n  * if the file is fetched and uploaded successfully, the `status` field is set to `success`\n    and the endpoint returns a JSON object holding information about the uploaded file\n  * if the system fails to fetch/upload the file, the `status` field is set to `error` and\n    the `error` field is set to the cause of the error.\n",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "base_status-waiting_200": {
                "displayName": "status-waiting",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/from_url/status/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {
                    "token": "945ebb27-1fd6-46c6-a859-b9893712d650"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "status": "waiting"
                    },
                    "type": "json"
                  }
                }
              },
              "base_status-progress_200": {
                "displayName": "status-progress",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/from_url/status/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {
                    "token": "945ebb27-1fd6-46c6-a859-b9893712d650"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "status": "waiting",
                      "total": 732434,
                      "done": 134427
                    },
                    "type": "json"
                  }
                }
              },
              "base_status-success_200": {
                "displayName": "status-success",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/from_url/status/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {
                    "token": "945ebb27-1fd6-46c6-a859-b9893712d650"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "status": "waiting",
                      "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "size": 2667636,
                      "total": 2667636,
                      "done": 2667636,
                      "original_filename": "IMG-0412_123.JPG",
                      "filename": "IMG0412_123.JPG",
                      "mime_type": "image/jpeg",
                      "image_info": {
                        "color_mode": "RGB",
                        "orientation": 6,
                        "format": "JPEG",
                        "height": 4032,
                        "width": 3024,
                        "sequence": false,
                        "geo_location": {
                          "latitude": 55.62013611111111,
                          "longitude": 37.66299166666666
                        },
                        "dpi": [
                          72,
                          72
                        ]
                      },
                      "video_info": {},
                      "content_info": {
                        "mime": {
                          "mime": "image/jpeg",
                          "type": "image",
                          "subtype": "jpeg"
                        },
                        "image": {
                          "color_mode": "RGB",
                          "orientation": 6,
                          "format": "JPEG",
                          "height": 4032,
                          "width": 3024,
                          "sequence": false,
                          "geo_location": {
                            "latitude": 55.62013611111111,
                            "longitude": 37.66299166666666
                          },
                          "dpi": [
                            72,
                            72
                          ]
                        }
                      },
                      "metadata": {
                        "subsystem": "uploader",
                        "pet": "cat"
                      },
                      "is_image": true,
                      "is_stored": true,
                      "is_ready": true
                    },
                    "type": "json"
                  }
                }
              },
              "base_status-error_200": {
                "displayName": "status-error",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/from_url/status/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {
                    "token": "945ebb27-1fd6-46c6-a859-b9893712d650"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "status": "waiting",
                      "error": "HTTP client error: 404.",
                      "error_code": "DownloadFileHTTPClientError"
                    },
                    "type": "json"
                  }
                }
              },
              "base_status-unknown_200": {
                "displayName": "status-unknown",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/from_url/status/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {
                    "token": "945ebb27-1fd6-46c6-a859-b9893712d650"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "status": "waiting"
                    },
                    "type": "json"
                  }
                }
              }
            }
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Upload_fromURLUploadStatus_Response_200",
                      "typeId": "Upload_fromURLUploadStatus_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Request was processed successfully.\n",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "status-waiting": {
                          "status": "waiting"
                        },
                        "status-progress": {
                          "status": "waiting",
                          "total": 732434,
                          "done": 134427
                        },
                        "status-success": {
                          "status": "waiting",
                          "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                          "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                          "size": 2667636,
                          "total": 2667636,
                          "done": 2667636,
                          "original_filename": "IMG-0412_123.JPG",
                          "filename": "IMG0412_123.JPG",
                          "mime_type": "image/jpeg",
                          "image_info": {
                            "color_mode": "RGB",
                            "orientation": 6,
                            "format": "JPEG",
                            "height": 4032,
                            "width": 3024,
                            "sequence": false,
                            "geo_location": {
                              "latitude": 55.62013611111111,
                              "longitude": 37.66299166666666
                            },
                            "dpi": [
                              72,
                              72
                            ]
                          },
                          "video_info": {},
                          "content_info": {
                            "mime": {
                              "mime": "image/jpeg",
                              "type": "image",
                              "subtype": "jpeg"
                            },
                            "image": {
                              "color_mode": "RGB",
                              "orientation": 6,
                              "format": "JPEG",
                              "height": 4032,
                              "width": 3024,
                              "sequence": false,
                              "geo_location": {
                                "latitude": 55.62013611111111,
                                "longitude": 37.66299166666666
                              },
                              "dpi": [
                                72,
                                72
                              ]
                            }
                          },
                          "metadata": {
                            "subsystem": "uploader",
                            "pet": "cat"
                          },
                          "is_image": true,
                          "is_stored": true,
                          "is_ready": true
                        },
                        "status-error": {
                          "status": "waiting",
                          "error": "HTTP client error: 404.",
                          "error_code": "DownloadFileHTTPClientError"
                        },
                        "status-unknown": {
                          "status": "waiting"
                        }
                      },
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get information about an uploaded file",
          "method": "GET",
          "baseUrl": "Production server",
          "path": {
            "head": "/info/",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "pub_key",
                "wireValue": "pub_key"
              },
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "projectPublicKeyType",
                "typeId": "projectPublicKeyType",
                "inline": false,
                "type": "named"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "pub_key_example": "YOUR_PUBLIC_KEY"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "file_id",
                "wireValue": "file_id"
              },
              "docs": "File's unique ID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "file_id_example": "67947755-1584-4e3f-902b-d4e2bf76a841"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "366bcc1b",
                "url": "/info/",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [
                  {
                    "name": {
                      "name": "pub_key",
                      "wireValue": "pub_key"
                    },
                    "shape": {
                      "type": "single"
                    },
                    "value": {
                      "jsonExample": "pub_key",
                      "shape": {
                        "shape": {
                          "value": {
                            "jsonExample": "pub_key",
                            "shape": {
                              "primitive": {
                                "string": {
                                  "original": "pub_key"
                                },
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "alias"
                        },
                        "typeName": {
                          "typeId": "projectPublicKeyType",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "projectPublicKeyType"
                        },
                        "type": "named"
                      }
                    }
                  },
                  {
                    "name": {
                      "name": "file_id",
                      "wireValue": "file_id"
                    },
                    "shape": {
                      "type": "single"
                    },
                    "value": {
                      "jsonExample": "file_id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "file_id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "uuid": "uuid",
                        "file_id": "file_id",
                        "size": 1,
                        "total": 1,
                        "done": 1,
                        "original_filename": "original_filename",
                        "filename": "filename",
                        "mime_type": "mime_type",
                        "image_info": {
                          "color_mode": "RGB",
                          "orientation": 8,
                          "format": "format",
                          "sequence": true,
                          "height": 1,
                          "width": 1,
                          "geo_location": {
                            "latitude": 1.1,
                            "longitude": 1.1
                          },
                          "datetime_original": "datetime_original",
                          "dpi": [
                            1.1,
                            1.1
                          ]
                        },
                        "video_info": {
                          "duration": 1.1,
                          "format": "format",
                          "bitrate": 1.1,
                          "audio": {
                            "bitrate": 1.1,
                            "codec": "codec",
                            "sample_rate": 1.1,
                            "channels": "channels"
                          },
                          "video": {
                            "height": 1.1,
                            "width": 1.1,
                            "frame_rate": 1.1,
                            "bitrate": 1.1,
                            "codec": "codec"
                          }
                        },
                        "content_info": {
                          "mime": {
                            "mime": "mime",
                            "type": "type",
                            "subtype": "subtype"
                          },
                          "image": {
                            "color_mode": "RGB",
                            "orientation": 8,
                            "format": "format",
                            "sequence": true,
                            "height": 1,
                            "width": 1,
                            "geo_location": {
                              "latitude": 1.1,
                              "longitude": 1.1
                            },
                            "datetime_original": "datetime_original",
                            "dpi": [
                              1.1,
                              1.1
                            ]
                          },
                          "video": {
                            "duration": 1,
                            "format": "format",
                            "bitrate": 1,
                            "audio": [
                              {
                                "bitrate": 1,
                                "codec": "codec",
                                "sample_rate": 1,
                                "channels": 1
                              },
                              {
                                "bitrate": 1,
                                "codec": "codec",
                                "sample_rate": 1,
                                "channels": 1
                              }
                            ],
                            "video": [
                              {
                                "height": 1,
                                "width": 1,
                                "frame_rate": 1.1,
                                "bitrate": 1,
                                "codec": "codec"
                              },
                              {
                                "height": 1,
                                "width": 1,
                                "frame_rate": 1.1,
                                "bitrate": 1,
                                "codec": "codec"
                              }
                            ]
                          }
                        },
                        "metadata": {},
                        "is_image": true,
                        "is_stored": true,
                        "is_ready": true,
                        "s3_bucket": "s3_bucket"
                      },
                      "shape": {
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": "uuid",
                                "wireValue": "uuid"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": "uuid",
                                "shape": {
                                  "primitive": {
                                    "string": {
                                      "original": "uuid"
                                    },
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "file_id",
                                "wireValue": "file_id"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": "file_id",
                                "shape": {
                                  "primitive": {
                                    "string": {
                                      "original": "file_id"
                                    },
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "size",
                                "wireValue": "size"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": 1,
                                "shape": {
                                  "primitive": {
                                    "integer": 1,
                                    "type": "integer"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "total",
                                "wireValue": "total"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": 1,
                                "shape": {
                                  "primitive": {
                                    "integer": 1,
                                    "type": "integer"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "done",
                                "wireValue": "done"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": 1,
                                "shape": {
                                  "primitive": {
                                    "integer": 1,
                                    "type": "integer"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "original_filename",
                                "wireValue": "original_filename"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": "original_filename",
                                "shape": {
                                  "primitive": {
                                    "string": {
                                      "original": "original_filename"
                                    },
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "filename",
                                "wireValue": "filename"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": "filename",
                                "shape": {
                                  "primitive": {
                                    "string": {
                                      "original": "filename"
                                    },
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "mime_type",
                                "wireValue": "mime_type"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": "mime_type",
                                "shape": {
                                  "primitive": {
                                    "string": {
                                      "original": "mime_type"
                                    },
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "image_info",
                                "wireValue": "image_info"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": {
                                  "color_mode": "RGB",
                                  "orientation": 8,
                                  "format": "format",
                                  "sequence": true,
                                  "height": 1,
                                  "width": 1,
                                  "geo_location": {
                                    "latitude": 1.1,
                                    "longitude": 1.1
                                  },
                                  "datetime_original": "datetime_original",
                                  "dpi": [
                                    1.1,
                                    1.1
                                  ]
                                },
                                "shape": {
                                  "shape": {
                                    "properties": [
                                      {
                                        "name": {
                                          "name": "color_mode",
                                          "wireValue": "color_mode"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "imageInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "imageInfo"
                                        },
                                        "value": {
                                          "jsonExample": "RGB",
                                          "shape": {
                                            "shape": {
                                              "value": {
                                                "name": "RGB",
                                                "wireValue": "RGB"
                                              },
                                              "type": "enum"
                                            },
                                            "typeName": {
                                              "typeId": "ImageInfoColorMode",
                                              "fernFilepath": {
                                                "allParts": [],
                                                "packagePath": []
                                              },
                                              "name": "ImageInfoColorMode"
                                            },
                                            "type": "named"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "orientation",
                                          "wireValue": "orientation"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "imageInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "imageInfo"
                                        },
                                        "value": {
                                          "jsonExample": 8,
                                          "shape": {
                                            "container": {
                                              "nullable": {
                                                "jsonExample": 8,
                                                "shape": {
                                                  "primitive": {
                                                    "integer": 8,
                                                    "type": "integer"
                                                  },
                                                  "type": "primitive"
                                                }
                                              },
                                              "valueType": {
                                                "primitive": {
                                                  "v1": "INTEGER",
                                                  "v2": {
                                                    "validation": {
                                                      "max": 8,
                                                      "min": 0
                                                    },
                                                    "type": "integer"
                                                  }
                                                },
                                                "type": "primitive"
                                              },
                                              "type": "nullable"
                                            },
                                            "type": "container"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "format",
                                          "wireValue": "format"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "imageInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "imageInfo"
                                        },
                                        "value": {
                                          "jsonExample": "format",
                                          "shape": {
                                            "primitive": {
                                              "string": {
                                                "original": "format"
                                              },
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "sequence",
                                          "wireValue": "sequence"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "imageInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "imageInfo"
                                        },
                                        "value": {
                                          "jsonExample": true,
                                          "shape": {
                                            "primitive": {
                                              "boolean": true,
                                              "type": "boolean"
                                            },
                                            "type": "primitive"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "height",
                                          "wireValue": "height"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "imageInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "imageInfo"
                                        },
                                        "value": {
                                          "jsonExample": 1,
                                          "shape": {
                                            "primitive": {
                                              "integer": 1,
                                              "type": "integer"
                                            },
                                            "type": "primitive"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "width",
                                          "wireValue": "width"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "imageInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "imageInfo"
                                        },
                                        "value": {
                                          "jsonExample": 1,
                                          "shape": {
                                            "primitive": {
                                              "integer": 1,
                                              "type": "integer"
                                            },
                                            "type": "primitive"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "geo_location",
                                          "wireValue": "geo_location"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "imageInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "imageInfo"
                                        },
                                        "value": {
                                          "jsonExample": {
                                            "latitude": 1.1,
                                            "longitude": 1.1
                                          },
                                          "shape": {
                                            "container": {
                                              "nullable": {
                                                "jsonExample": {
                                                  "latitude": 1.1,
                                                  "longitude": 1.1
                                                },
                                                "shape": {
                                                  "shape": {
                                                    "properties": [
                                                      {
                                                        "name": {
                                                          "name": "latitude",
                                                          "wireValue": "latitude"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "ImageInfoGeoLocation",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "ImageInfoGeoLocation"
                                                        },
                                                        "value": {
                                                          "jsonExample": 1.1,
                                                          "shape": {
                                                            "primitive": {
                                                              "double": 1.1,
                                                              "type": "double"
                                                            },
                                                            "type": "primitive"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "longitude",
                                                          "wireValue": "longitude"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "ImageInfoGeoLocation",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "ImageInfoGeoLocation"
                                                        },
                                                        "value": {
                                                          "jsonExample": 1.1,
                                                          "shape": {
                                                            "primitive": {
                                                              "double": 1.1,
                                                              "type": "double"
                                                            },
                                                            "type": "primitive"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "type": "object"
                                                  },
                                                  "typeName": {
                                                    "typeId": "ImageInfoGeoLocation",
                                                    "fernFilepath": {
                                                      "allParts": [],
                                                      "packagePath": []
                                                    },
                                                    "name": "ImageInfoGeoLocation"
                                                  },
                                                  "type": "named"
                                                }
                                              },
                                              "valueType": {
                                                "fernFilepath": {
                                                  "allParts": [],
                                                  "packagePath": []
                                                },
                                                "name": "ImageInfoGeoLocation",
                                                "typeId": "ImageInfoGeoLocation",
                                                "inline": false,
                                                "type": "named"
                                              },
                                              "type": "nullable"
                                            },
                                            "type": "container"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "datetime_original",
                                          "wireValue": "datetime_original"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "imageInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "imageInfo"
                                        },
                                        "value": {
                                          "jsonExample": "datetime_original",
                                          "shape": {
                                            "container": {
                                              "nullable": {
                                                "jsonExample": "datetime_original",
                                                "shape": {
                                                  "primitive": {
                                                    "string": {
                                                      "original": "datetime_original"
                                                    },
                                                    "type": "string"
                                                  },
                                                  "type": "primitive"
                                                }
                                              },
                                              "valueType": {
                                                "primitive": {
                                                  "v1": "STRING",
                                                  "v2": {
                                                    "validation": {
                                                      "format": "date-time"
                                                    },
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "primitive"
                                              },
                                              "type": "nullable"
                                            },
                                            "type": "container"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "dpi",
                                          "wireValue": "dpi"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "imageInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "imageInfo"
                                        },
                                        "value": {
                                          "jsonExample": [
                                            1.1,
                                            1.1
                                          ],
                                          "shape": {
                                            "container": {
                                              "nullable": {
                                                "jsonExample": [
                                                  1.1,
                                                  1.1
                                                ],
                                                "shape": {
                                                  "container": {
                                                    "list": [
                                                      {
                                                        "jsonExample": 1.1,
                                                        "shape": {
                                                          "primitive": {
                                                            "double": 1.1,
                                                            "type": "double"
                                                          },
                                                          "type": "primitive"
                                                        }
                                                      },
                                                      {
                                                        "jsonExample": 1.1,
                                                        "shape": {
                                                          "primitive": {
                                                            "double": 1.1,
                                                            "type": "double"
                                                          },
                                                          "type": "primitive"
                                                        }
                                                      }
                                                    ],
                                                    "itemType": {
                                                      "primitive": {
                                                        "v1": "DOUBLE",
                                                        "v2": {
                                                          "validation": {},
                                                          "type": "double"
                                                        }
                                                      },
                                                      "type": "primitive"
                                                    },
                                                    "type": "list"
                                                  },
                                                  "type": "container"
                                                }
                                              },
                                              "valueType": {
                                                "container": {
                                                  "list": {
                                                    "primitive": {
                                                      "v1": "DOUBLE",
                                                      "v2": {
                                                        "validation": {},
                                                        "type": "double"
                                                      }
                                                    },
                                                    "type": "primitive"
                                                  },
                                                  "type": "list"
                                                },
                                                "type": "container"
                                              },
                                              "type": "nullable"
                                            },
                                            "type": "container"
                                          }
                                        }
                                      }
                                    ],
                                    "type": "object"
                                  },
                                  "typeName": {
                                    "typeId": "imageInfo",
                                    "fernFilepath": {
                                      "allParts": [],
                                      "packagePath": []
                                    },
                                    "name": "imageInfo"
                                  },
                                  "type": "named"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "video_info",
                                "wireValue": "video_info"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": {
                                  "duration": 1.1,
                                  "format": "format",
                                  "bitrate": 1.1,
                                  "audio": {
                                    "bitrate": 1.1,
                                    "codec": "codec",
                                    "sample_rate": 1.1,
                                    "channels": "channels"
                                  },
                                  "video": {
                                    "height": 1.1,
                                    "width": 1.1,
                                    "frame_rate": 1.1,
                                    "bitrate": 1.1,
                                    "codec": "codec"
                                  }
                                },
                                "shape": {
                                  "shape": {
                                    "properties": [
                                      {
                                        "name": {
                                          "name": "duration",
                                          "wireValue": "duration"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "legacyVideoInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "legacyVideoInfo"
                                        },
                                        "value": {
                                          "jsonExample": 1.1,
                                          "shape": {
                                            "container": {
                                              "optional": {
                                                "jsonExample": 1.1,
                                                "shape": {
                                                  "primitive": {
                                                    "double": 1.1,
                                                    "type": "double"
                                                  },
                                                  "type": "primitive"
                                                }
                                              },
                                              "valueType": {
                                                "primitive": {
                                                  "v1": "DOUBLE",
                                                  "v2": {
                                                    "validation": {},
                                                    "type": "double"
                                                  }
                                                },
                                                "type": "primitive"
                                              },
                                              "type": "optional"
                                            },
                                            "type": "container"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "format",
                                          "wireValue": "format"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "legacyVideoInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "legacyVideoInfo"
                                        },
                                        "value": {
                                          "jsonExample": "format",
                                          "shape": {
                                            "container": {
                                              "optional": {
                                                "jsonExample": "format",
                                                "shape": {
                                                  "primitive": {
                                                    "string": {
                                                      "original": "format"
                                                    },
                                                    "type": "string"
                                                  },
                                                  "type": "primitive"
                                                }
                                              },
                                              "valueType": {
                                                "primitive": {
                                                  "v1": "STRING",
                                                  "v2": {
                                                    "validation": {},
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "primitive"
                                              },
                                              "type": "optional"
                                            },
                                            "type": "container"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "bitrate",
                                          "wireValue": "bitrate"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "legacyVideoInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "legacyVideoInfo"
                                        },
                                        "value": {
                                          "jsonExample": 1.1,
                                          "shape": {
                                            "container": {
                                              "optional": {
                                                "jsonExample": 1.1,
                                                "shape": {
                                                  "primitive": {
                                                    "double": 1.1,
                                                    "type": "double"
                                                  },
                                                  "type": "primitive"
                                                }
                                              },
                                              "valueType": {
                                                "primitive": {
                                                  "v1": "DOUBLE",
                                                  "v2": {
                                                    "validation": {},
                                                    "type": "double"
                                                  }
                                                },
                                                "type": "primitive"
                                              },
                                              "type": "optional"
                                            },
                                            "type": "container"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "audio",
                                          "wireValue": "audio"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "legacyVideoInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "legacyVideoInfo"
                                        },
                                        "value": {
                                          "jsonExample": {
                                            "bitrate": 1.1,
                                            "codec": "codec",
                                            "sample_rate": 1.1,
                                            "channels": "channels"
                                          },
                                          "shape": {
                                            "container": {
                                              "optional": {
                                                "jsonExample": {
                                                  "bitrate": 1.1,
                                                  "codec": "codec",
                                                  "sample_rate": 1.1,
                                                  "channels": "channels"
                                                },
                                                "shape": {
                                                  "container": {
                                                    "nullable": {
                                                      "jsonExample": {
                                                        "bitrate": 1.1,
                                                        "codec": "codec",
                                                        "sample_rate": 1.1,
                                                        "channels": "channels"
                                                      },
                                                      "shape": {
                                                        "shape": {
                                                          "properties": [
                                                            {
                                                              "name": {
                                                                "name": "bitrate",
                                                                "wireValue": "bitrate"
                                                              },
                                                              "originalTypeDeclaration": {
                                                                "typeId": "LegacyVideoInfoAudio",
                                                                "fernFilepath": {
                                                                  "allParts": [],
                                                                  "packagePath": []
                                                                },
                                                                "name": "LegacyVideoInfoAudio"
                                                              },
                                                              "value": {
                                                                "jsonExample": 1.1,
                                                                "shape": {
                                                                  "container": {
                                                                    "optional": {
                                                                      "jsonExample": 1.1,
                                                                      "shape": {
                                                                        "container": {
                                                                          "nullable": {
                                                                            "jsonExample": 1.1,
                                                                            "shape": {
                                                                              "primitive": {
                                                                                "double": 1.1,
                                                                                "type": "double"
                                                                              },
                                                                              "type": "primitive"
                                                                            }
                                                                          },
                                                                          "valueType": {
                                                                            "primitive": {
                                                                              "v1": "DOUBLE",
                                                                              "v2": {
                                                                                "validation": {},
                                                                                "type": "double"
                                                                              }
                                                                            },
                                                                            "type": "primitive"
                                                                          },
                                                                          "type": "nullable"
                                                                        },
                                                                        "type": "container"
                                                                      }
                                                                    },
                                                                    "valueType": {
                                                                      "container": {
                                                                        "nullable": {
                                                                          "primitive": {
                                                                            "v1": "DOUBLE",
                                                                            "v2": {
                                                                              "validation": {},
                                                                              "type": "double"
                                                                            }
                                                                          },
                                                                          "type": "primitive"
                                                                        },
                                                                        "type": "nullable"
                                                                      },
                                                                      "type": "container"
                                                                    },
                                                                    "type": "optional"
                                                                  },
                                                                  "type": "container"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "name": {
                                                                "name": "codec",
                                                                "wireValue": "codec"
                                                              },
                                                              "originalTypeDeclaration": {
                                                                "typeId": "LegacyVideoInfoAudio",
                                                                "fernFilepath": {
                                                                  "allParts": [],
                                                                  "packagePath": []
                                                                },
                                                                "name": "LegacyVideoInfoAudio"
                                                              },
                                                              "value": {
                                                                "jsonExample": "codec",
                                                                "shape": {
                                                                  "container": {
                                                                    "optional": {
                                                                      "jsonExample": "codec",
                                                                      "shape": {
                                                                        "container": {
                                                                          "nullable": {
                                                                            "jsonExample": "codec",
                                                                            "shape": {
                                                                              "primitive": {
                                                                                "string": {
                                                                                  "original": "codec"
                                                                                },
                                                                                "type": "string"
                                                                              },
                                                                              "type": "primitive"
                                                                            }
                                                                          },
                                                                          "valueType": {
                                                                            "primitive": {
                                                                              "v1": "STRING",
                                                                              "v2": {
                                                                                "validation": {},
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "type": "primitive"
                                                                          },
                                                                          "type": "nullable"
                                                                        },
                                                                        "type": "container"
                                                                      }
                                                                    },
                                                                    "valueType": {
                                                                      "container": {
                                                                        "nullable": {
                                                                          "primitive": {
                                                                            "v1": "STRING",
                                                                            "v2": {
                                                                              "validation": {},
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "type": "primitive"
                                                                        },
                                                                        "type": "nullable"
                                                                      },
                                                                      "type": "container"
                                                                    },
                                                                    "type": "optional"
                                                                  },
                                                                  "type": "container"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "name": {
                                                                "name": "sample_rate",
                                                                "wireValue": "sample_rate"
                                                              },
                                                              "originalTypeDeclaration": {
                                                                "typeId": "LegacyVideoInfoAudio",
                                                                "fernFilepath": {
                                                                  "allParts": [],
                                                                  "packagePath": []
                                                                },
                                                                "name": "LegacyVideoInfoAudio"
                                                              },
                                                              "value": {
                                                                "jsonExample": 1.1,
                                                                "shape": {
                                                                  "container": {
                                                                    "optional": {
                                                                      "jsonExample": 1.1,
                                                                      "shape": {
                                                                        "container": {
                                                                          "nullable": {
                                                                            "jsonExample": 1.1,
                                                                            "shape": {
                                                                              "primitive": {
                                                                                "double": 1.1,
                                                                                "type": "double"
                                                                              },
                                                                              "type": "primitive"
                                                                            }
                                                                          },
                                                                          "valueType": {
                                                                            "primitive": {
                                                                              "v1": "DOUBLE",
                                                                              "v2": {
                                                                                "validation": {},
                                                                                "type": "double"
                                                                              }
                                                                            },
                                                                            "type": "primitive"
                                                                          },
                                                                          "type": "nullable"
                                                                        },
                                                                        "type": "container"
                                                                      }
                                                                    },
                                                                    "valueType": {
                                                                      "container": {
                                                                        "nullable": {
                                                                          "primitive": {
                                                                            "v1": "DOUBLE",
                                                                            "v2": {
                                                                              "validation": {},
                                                                              "type": "double"
                                                                            }
                                                                          },
                                                                          "type": "primitive"
                                                                        },
                                                                        "type": "nullable"
                                                                      },
                                                                      "type": "container"
                                                                    },
                                                                    "type": "optional"
                                                                  },
                                                                  "type": "container"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "name": {
                                                                "name": "channels",
                                                                "wireValue": "channels"
                                                              },
                                                              "originalTypeDeclaration": {
                                                                "typeId": "LegacyVideoInfoAudio",
                                                                "fernFilepath": {
                                                                  "allParts": [],
                                                                  "packagePath": []
                                                                },
                                                                "name": "LegacyVideoInfoAudio"
                                                              },
                                                              "value": {
                                                                "jsonExample": "channels",
                                                                "shape": {
                                                                  "container": {
                                                                    "optional": {
                                                                      "jsonExample": "channels",
                                                                      "shape": {
                                                                        "container": {
                                                                          "nullable": {
                                                                            "jsonExample": "channels",
                                                                            "shape": {
                                                                              "primitive": {
                                                                                "string": {
                                                                                  "original": "channels"
                                                                                },
                                                                                "type": "string"
                                                                              },
                                                                              "type": "primitive"
                                                                            }
                                                                          },
                                                                          "valueType": {
                                                                            "primitive": {
                                                                              "v1": "STRING",
                                                                              "v2": {
                                                                                "validation": {},
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "type": "primitive"
                                                                          },
                                                                          "type": "nullable"
                                                                        },
                                                                        "type": "container"
                                                                      }
                                                                    },
                                                                    "valueType": {
                                                                      "container": {
                                                                        "nullable": {
                                                                          "primitive": {
                                                                            "v1": "STRING",
                                                                            "v2": {
                                                                              "validation": {},
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "type": "primitive"
                                                                        },
                                                                        "type": "nullable"
                                                                      },
                                                                      "type": "container"
                                                                    },
                                                                    "type": "optional"
                                                                  },
                                                                  "type": "container"
                                                                }
                                                              }
                                                            }
                                                          ],
                                                          "type": "object"
                                                        },
                                                        "typeName": {
                                                          "typeId": "LegacyVideoInfoAudio",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "LegacyVideoInfoAudio"
                                                        },
                                                        "type": "named"
                                                      }
                                                    },
                                                    "valueType": {
                                                      "fernFilepath": {
                                                        "allParts": [],
                                                        "packagePath": []
                                                      },
                                                      "name": "LegacyVideoInfoAudio",
                                                      "typeId": "LegacyVideoInfoAudio",
                                                      "inline": false,
                                                      "type": "named"
                                                    },
                                                    "type": "nullable"
                                                  },
                                                  "type": "container"
                                                }
                                              },
                                              "valueType": {
                                                "container": {
                                                  "nullable": {
                                                    "fernFilepath": {
                                                      "allParts": [],
                                                      "packagePath": []
                                                    },
                                                    "name": "LegacyVideoInfoAudio",
                                                    "typeId": "LegacyVideoInfoAudio",
                                                    "inline": false,
                                                    "type": "named"
                                                  },
                                                  "type": "nullable"
                                                },
                                                "type": "container"
                                              },
                                              "type": "optional"
                                            },
                                            "type": "container"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "video",
                                          "wireValue": "video"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "legacyVideoInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "legacyVideoInfo"
                                        },
                                        "value": {
                                          "jsonExample": {
                                            "height": 1.1,
                                            "width": 1.1,
                                            "frame_rate": 1.1,
                                            "bitrate": 1.1,
                                            "codec": "codec"
                                          },
                                          "shape": {
                                            "container": {
                                              "optional": {
                                                "jsonExample": {
                                                  "height": 1.1,
                                                  "width": 1.1,
                                                  "frame_rate": 1.1,
                                                  "bitrate": 1.1,
                                                  "codec": "codec"
                                                },
                                                "shape": {
                                                  "shape": {
                                                    "properties": [
                                                      {
                                                        "name": {
                                                          "name": "height",
                                                          "wireValue": "height"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "LegacyVideoInfoVideo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "LegacyVideoInfoVideo"
                                                        },
                                                        "value": {
                                                          "jsonExample": 1.1,
                                                          "shape": {
                                                            "container": {
                                                              "optional": {
                                                                "jsonExample": 1.1,
                                                                "shape": {
                                                                  "primitive": {
                                                                    "double": 1.1,
                                                                    "type": "double"
                                                                  },
                                                                  "type": "primitive"
                                                                }
                                                              },
                                                              "valueType": {
                                                                "primitive": {
                                                                  "v1": "DOUBLE",
                                                                  "v2": {
                                                                    "validation": {},
                                                                    "type": "double"
                                                                  }
                                                                },
                                                                "type": "primitive"
                                                              },
                                                              "type": "optional"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "width",
                                                          "wireValue": "width"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "LegacyVideoInfoVideo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "LegacyVideoInfoVideo"
                                                        },
                                                        "value": {
                                                          "jsonExample": 1.1,
                                                          "shape": {
                                                            "container": {
                                                              "optional": {
                                                                "jsonExample": 1.1,
                                                                "shape": {
                                                                  "primitive": {
                                                                    "double": 1.1,
                                                                    "type": "double"
                                                                  },
                                                                  "type": "primitive"
                                                                }
                                                              },
                                                              "valueType": {
                                                                "primitive": {
                                                                  "v1": "DOUBLE",
                                                                  "v2": {
                                                                    "validation": {},
                                                                    "type": "double"
                                                                  }
                                                                },
                                                                "type": "primitive"
                                                              },
                                                              "type": "optional"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "frame_rate",
                                                          "wireValue": "frame_rate"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "LegacyVideoInfoVideo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "LegacyVideoInfoVideo"
                                                        },
                                                        "value": {
                                                          "jsonExample": 1.1,
                                                          "shape": {
                                                            "container": {
                                                              "optional": {
                                                                "jsonExample": 1.1,
                                                                "shape": {
                                                                  "primitive": {
                                                                    "double": 1.1,
                                                                    "type": "double"
                                                                  },
                                                                  "type": "primitive"
                                                                }
                                                              },
                                                              "valueType": {
                                                                "primitive": {
                                                                  "v1": "DOUBLE",
                                                                  "v2": {
                                                                    "validation": {},
                                                                    "type": "double"
                                                                  }
                                                                },
                                                                "type": "primitive"
                                                              },
                                                              "type": "optional"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "bitrate",
                                                          "wireValue": "bitrate"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "LegacyVideoInfoVideo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "LegacyVideoInfoVideo"
                                                        },
                                                        "value": {
                                                          "jsonExample": 1.1,
                                                          "shape": {
                                                            "container": {
                                                              "optional": {
                                                                "jsonExample": 1.1,
                                                                "shape": {
                                                                  "primitive": {
                                                                    "double": 1.1,
                                                                    "type": "double"
                                                                  },
                                                                  "type": "primitive"
                                                                }
                                                              },
                                                              "valueType": {
                                                                "primitive": {
                                                                  "v1": "DOUBLE",
                                                                  "v2": {
                                                                    "validation": {},
                                                                    "type": "double"
                                                                  }
                                                                },
                                                                "type": "primitive"
                                                              },
                                                              "type": "optional"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "codec",
                                                          "wireValue": "codec"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "LegacyVideoInfoVideo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "LegacyVideoInfoVideo"
                                                        },
                                                        "value": {
                                                          "jsonExample": "codec",
                                                          "shape": {
                                                            "container": {
                                                              "optional": {
                                                                "jsonExample": "codec",
                                                                "shape": {
                                                                  "primitive": {
                                                                    "string": {
                                                                      "original": "codec"
                                                                    },
                                                                    "type": "string"
                                                                  },
                                                                  "type": "primitive"
                                                                }
                                                              },
                                                              "valueType": {
                                                                "primitive": {
                                                                  "v1": "STRING",
                                                                  "v2": {
                                                                    "validation": {},
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "type": "primitive"
                                                              },
                                                              "type": "optional"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "type": "object"
                                                  },
                                                  "typeName": {
                                                    "typeId": "LegacyVideoInfoVideo",
                                                    "fernFilepath": {
                                                      "allParts": [],
                                                      "packagePath": []
                                                    },
                                                    "name": "LegacyVideoInfoVideo"
                                                  },
                                                  "type": "named"
                                                }
                                              },
                                              "valueType": {
                                                "fernFilepath": {
                                                  "allParts": [],
                                                  "packagePath": []
                                                },
                                                "name": "LegacyVideoInfoVideo",
                                                "typeId": "LegacyVideoInfoVideo",
                                                "inline": false,
                                                "type": "named"
                                              },
                                              "type": "optional"
                                            },
                                            "type": "container"
                                          }
                                        }
                                      }
                                    ],
                                    "type": "object"
                                  },
                                  "typeName": {
                                    "typeId": "legacyVideoInfo",
                                    "fernFilepath": {
                                      "allParts": [],
                                      "packagePath": []
                                    },
                                    "name": "legacyVideoInfo"
                                  },
                                  "type": "named"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "content_info",
                                "wireValue": "content_info"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": {
                                  "mime": {
                                    "mime": "mime",
                                    "type": "type",
                                    "subtype": "subtype"
                                  },
                                  "image": {
                                    "color_mode": "RGB",
                                    "orientation": 8,
                                    "format": "format",
                                    "sequence": true,
                                    "height": 1,
                                    "width": 1,
                                    "geo_location": {
                                      "latitude": 1.1,
                                      "longitude": 1.1
                                    },
                                    "datetime_original": "datetime_original",
                                    "dpi": [
                                      1.1,
                                      1.1
                                    ]
                                  },
                                  "video": {
                                    "duration": 1,
                                    "format": "format",
                                    "bitrate": 1,
                                    "audio": [
                                      {
                                        "bitrate": 1,
                                        "codec": "codec",
                                        "sample_rate": 1,
                                        "channels": 1
                                      },
                                      {
                                        "bitrate": 1,
                                        "codec": "codec",
                                        "sample_rate": 1,
                                        "channels": 1
                                      }
                                    ],
                                    "video": [
                                      {
                                        "height": 1,
                                        "width": 1,
                                        "frame_rate": 1.1,
                                        "bitrate": 1,
                                        "codec": "codec"
                                      },
                                      {
                                        "height": 1,
                                        "width": 1,
                                        "frame_rate": 1.1,
                                        "bitrate": 1,
                                        "codec": "codec"
                                      }
                                    ]
                                  }
                                },
                                "shape": {
                                  "shape": {
                                    "properties": [
                                      {
                                        "name": {
                                          "name": "mime",
                                          "wireValue": "mime"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "contentInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "contentInfo"
                                        },
                                        "value": {
                                          "jsonExample": {
                                            "mime": "mime",
                                            "type": "type",
                                            "subtype": "subtype"
                                          },
                                          "shape": {
                                            "container": {
                                              "optional": {
                                                "jsonExample": {
                                                  "mime": "mime",
                                                  "type": "type",
                                                  "subtype": "subtype"
                                                },
                                                "shape": {
                                                  "shape": {
                                                    "properties": [
                                                      {
                                                        "name": {
                                                          "name": "mime",
                                                          "wireValue": "mime"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "ContentInfoMime",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "ContentInfoMime"
                                                        },
                                                        "value": {
                                                          "jsonExample": "mime",
                                                          "shape": {
                                                            "primitive": {
                                                              "string": {
                                                                "original": "mime"
                                                              },
                                                              "type": "string"
                                                            },
                                                            "type": "primitive"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": {
                                                            "originalName": "type",
                                                            "camelCase": {
                                                              "unsafeName": "type",
                                                              "safeName": "type_"
                                                            },
                                                            "snakeCase": {
                                                              "unsafeName": "type",
                                                              "safeName": "type_"
                                                            }
                                                          },
                                                          "wireValue": "type"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "ContentInfoMime",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "ContentInfoMime"
                                                        },
                                                        "value": {
                                                          "jsonExample": "type",
                                                          "shape": {
                                                            "primitive": {
                                                              "string": {
                                                                "original": "type"
                                                              },
                                                              "type": "string"
                                                            },
                                                            "type": "primitive"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "subtype",
                                                          "wireValue": "subtype"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "ContentInfoMime",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "ContentInfoMime"
                                                        },
                                                        "value": {
                                                          "jsonExample": "subtype",
                                                          "shape": {
                                                            "primitive": {
                                                              "string": {
                                                                "original": "subtype"
                                                              },
                                                              "type": "string"
                                                            },
                                                            "type": "primitive"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "type": "object"
                                                  },
                                                  "typeName": {
                                                    "typeId": "ContentInfoMime",
                                                    "fernFilepath": {
                                                      "allParts": [],
                                                      "packagePath": []
                                                    },
                                                    "name": "ContentInfoMime"
                                                  },
                                                  "type": "named"
                                                }
                                              },
                                              "valueType": {
                                                "fernFilepath": {
                                                  "allParts": [],
                                                  "packagePath": []
                                                },
                                                "name": "ContentInfoMime",
                                                "typeId": "ContentInfoMime",
                                                "inline": false,
                                                "type": "named"
                                              },
                                              "type": "optional"
                                            },
                                            "type": "container"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "image",
                                          "wireValue": "image"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "contentInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "contentInfo"
                                        },
                                        "value": {
                                          "jsonExample": {
                                            "color_mode": "RGB",
                                            "orientation": 8,
                                            "format": "format",
                                            "sequence": true,
                                            "height": 1,
                                            "width": 1,
                                            "geo_location": {
                                              "latitude": 1.1,
                                              "longitude": 1.1
                                            },
                                            "datetime_original": "datetime_original",
                                            "dpi": [
                                              1.1,
                                              1.1
                                            ]
                                          },
                                          "shape": {
                                            "container": {
                                              "optional": {
                                                "jsonExample": {
                                                  "color_mode": "RGB",
                                                  "orientation": 8,
                                                  "format": "format",
                                                  "sequence": true,
                                                  "height": 1,
                                                  "width": 1,
                                                  "geo_location": {
                                                    "latitude": 1.1,
                                                    "longitude": 1.1
                                                  },
                                                  "datetime_original": "datetime_original",
                                                  "dpi": [
                                                    1.1,
                                                    1.1
                                                  ]
                                                },
                                                "shape": {
                                                  "shape": {
                                                    "properties": [
                                                      {
                                                        "name": {
                                                          "name": "color_mode",
                                                          "wireValue": "color_mode"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "schemas-imageInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "schemas-imageInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": "RGB",
                                                          "shape": {
                                                            "shape": {
                                                              "value": {
                                                                "name": "RGB",
                                                                "wireValue": "RGB"
                                                              },
                                                              "type": "enum"
                                                            },
                                                            "typeName": {
                                                              "typeId": "SchemasImageInfoColorMode",
                                                              "fernFilepath": {
                                                                "allParts": [],
                                                                "packagePath": []
                                                              },
                                                              "name": "SchemasImageInfoColorMode"
                                                            },
                                                            "type": "named"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "orientation",
                                                          "wireValue": "orientation"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "schemas-imageInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "schemas-imageInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": 8,
                                                          "shape": {
                                                            "container": {
                                                              "nullable": {
                                                                "jsonExample": 8,
                                                                "shape": {
                                                                  "primitive": {
                                                                    "integer": 8,
                                                                    "type": "integer"
                                                                  },
                                                                  "type": "primitive"
                                                                }
                                                              },
                                                              "valueType": {
                                                                "primitive": {
                                                                  "v1": "INTEGER",
                                                                  "v2": {
                                                                    "validation": {
                                                                      "max": 8,
                                                                      "min": 0
                                                                    },
                                                                    "type": "integer"
                                                                  }
                                                                },
                                                                "type": "primitive"
                                                              },
                                                              "type": "nullable"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "format",
                                                          "wireValue": "format"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "schemas-imageInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "schemas-imageInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": "format",
                                                          "shape": {
                                                            "primitive": {
                                                              "string": {
                                                                "original": "format"
                                                              },
                                                              "type": "string"
                                                            },
                                                            "type": "primitive"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "sequence",
                                                          "wireValue": "sequence"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "schemas-imageInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "schemas-imageInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": true,
                                                          "shape": {
                                                            "primitive": {
                                                              "boolean": true,
                                                              "type": "boolean"
                                                            },
                                                            "type": "primitive"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "height",
                                                          "wireValue": "height"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "schemas-imageInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "schemas-imageInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": 1,
                                                          "shape": {
                                                            "primitive": {
                                                              "integer": 1,
                                                              "type": "integer"
                                                            },
                                                            "type": "primitive"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "width",
                                                          "wireValue": "width"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "schemas-imageInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "schemas-imageInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": 1,
                                                          "shape": {
                                                            "primitive": {
                                                              "integer": 1,
                                                              "type": "integer"
                                                            },
                                                            "type": "primitive"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "geo_location",
                                                          "wireValue": "geo_location"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "schemas-imageInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "schemas-imageInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": {
                                                            "latitude": 1.1,
                                                            "longitude": 1.1
                                                          },
                                                          "shape": {
                                                            "container": {
                                                              "nullable": {
                                                                "jsonExample": {
                                                                  "latitude": 1.1,
                                                                  "longitude": 1.1
                                                                },
                                                                "shape": {
                                                                  "shape": {
                                                                    "properties": [
                                                                      {
                                                                        "name": {
                                                                          "name": "latitude",
                                                                          "wireValue": "latitude"
                                                                        },
                                                                        "originalTypeDeclaration": {
                                                                          "typeId": "SchemasImageInfoGeoLocation",
                                                                          "fernFilepath": {
                                                                            "allParts": [],
                                                                            "packagePath": []
                                                                          },
                                                                          "name": "SchemasImageInfoGeoLocation"
                                                                        },
                                                                        "value": {
                                                                          "jsonExample": 1.1,
                                                                          "shape": {
                                                                            "primitive": {
                                                                              "double": 1.1,
                                                                              "type": "double"
                                                                            },
                                                                            "type": "primitive"
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "name": {
                                                                          "name": "longitude",
                                                                          "wireValue": "longitude"
                                                                        },
                                                                        "originalTypeDeclaration": {
                                                                          "typeId": "SchemasImageInfoGeoLocation",
                                                                          "fernFilepath": {
                                                                            "allParts": [],
                                                                            "packagePath": []
                                                                          },
                                                                          "name": "SchemasImageInfoGeoLocation"
                                                                        },
                                                                        "value": {
                                                                          "jsonExample": 1.1,
                                                                          "shape": {
                                                                            "primitive": {
                                                                              "double": 1.1,
                                                                              "type": "double"
                                                                            },
                                                                            "type": "primitive"
                                                                          }
                                                                        }
                                                                      }
                                                                    ],
                                                                    "type": "object"
                                                                  },
                                                                  "typeName": {
                                                                    "typeId": "SchemasImageInfoGeoLocation",
                                                                    "fernFilepath": {
                                                                      "allParts": [],
                                                                      "packagePath": []
                                                                    },
                                                                    "name": "SchemasImageInfoGeoLocation"
                                                                  },
                                                                  "type": "named"
                                                                }
                                                              },
                                                              "valueType": {
                                                                "fernFilepath": {
                                                                  "allParts": [],
                                                                  "packagePath": []
                                                                },
                                                                "name": "SchemasImageInfoGeoLocation",
                                                                "typeId": "SchemasImageInfoGeoLocation",
                                                                "inline": false,
                                                                "type": "named"
                                                              },
                                                              "type": "nullable"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "datetime_original",
                                                          "wireValue": "datetime_original"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "schemas-imageInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "schemas-imageInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": "datetime_original",
                                                          "shape": {
                                                            "container": {
                                                              "nullable": {
                                                                "jsonExample": "datetime_original",
                                                                "shape": {
                                                                  "primitive": {
                                                                    "string": {
                                                                      "original": "datetime_original"
                                                                    },
                                                                    "type": "string"
                                                                  },
                                                                  "type": "primitive"
                                                                }
                                                              },
                                                              "valueType": {
                                                                "primitive": {
                                                                  "v1": "STRING",
                                                                  "v2": {
                                                                    "validation": {
                                                                      "format": "date-time"
                                                                    },
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "type": "primitive"
                                                              },
                                                              "type": "nullable"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "dpi",
                                                          "wireValue": "dpi"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "schemas-imageInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "schemas-imageInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": [
                                                            1.1,
                                                            1.1
                                                          ],
                                                          "shape": {
                                                            "container": {
                                                              "nullable": {
                                                                "jsonExample": [
                                                                  1.1,
                                                                  1.1
                                                                ],
                                                                "shape": {
                                                                  "container": {
                                                                    "list": [
                                                                      {
                                                                        "jsonExample": 1.1,
                                                                        "shape": {
                                                                          "primitive": {
                                                                            "double": 1.1,
                                                                            "type": "double"
                                                                          },
                                                                          "type": "primitive"
                                                                        }
                                                                      },
                                                                      {
                                                                        "jsonExample": 1.1,
                                                                        "shape": {
                                                                          "primitive": {
                                                                            "double": 1.1,
                                                                            "type": "double"
                                                                          },
                                                                          "type": "primitive"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "itemType": {
                                                                      "primitive": {
                                                                        "v1": "DOUBLE",
                                                                        "v2": {
                                                                          "validation": {},
                                                                          "type": "double"
                                                                        }
                                                                      },
                                                                      "type": "primitive"
                                                                    },
                                                                    "type": "list"
                                                                  },
                                                                  "type": "container"
                                                                }
                                                              },
                                                              "valueType": {
                                                                "container": {
                                                                  "list": {
                                                                    "primitive": {
                                                                      "v1": "DOUBLE",
                                                                      "v2": {
                                                                        "validation": {},
                                                                        "type": "double"
                                                                      }
                                                                    },
                                                                    "type": "primitive"
                                                                  },
                                                                  "type": "list"
                                                                },
                                                                "type": "container"
                                                              },
                                                              "type": "nullable"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "type": "object"
                                                  },
                                                  "typeName": {
                                                    "typeId": "schemas-imageInfo",
                                                    "fernFilepath": {
                                                      "allParts": [],
                                                      "packagePath": []
                                                    },
                                                    "name": "schemas-imageInfo"
                                                  },
                                                  "type": "named"
                                                }
                                              },
                                              "valueType": {
                                                "fernFilepath": {
                                                  "allParts": [],
                                                  "packagePath": []
                                                },
                                                "name": "schemas-imageInfo",
                                                "typeId": "schemas-imageInfo",
                                                "inline": false,
                                                "type": "named"
                                              },
                                              "type": "optional"
                                            },
                                            "type": "container"
                                          }
                                        }
                                      },
                                      {
                                        "name": {
                                          "name": "video",
                                          "wireValue": "video"
                                        },
                                        "originalTypeDeclaration": {
                                          "typeId": "contentInfo",
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "contentInfo"
                                        },
                                        "value": {
                                          "jsonExample": {
                                            "duration": 1,
                                            "format": "format",
                                            "bitrate": 1,
                                            "audio": [
                                              {
                                                "bitrate": 1,
                                                "codec": "codec",
                                                "sample_rate": 1,
                                                "channels": 1
                                              },
                                              {
                                                "bitrate": 1,
                                                "codec": "codec",
                                                "sample_rate": 1,
                                                "channels": 1
                                              }
                                            ],
                                            "video": [
                                              {
                                                "height": 1,
                                                "width": 1,
                                                "frame_rate": 1.1,
                                                "bitrate": 1,
                                                "codec": "codec"
                                              },
                                              {
                                                "height": 1,
                                                "width": 1,
                                                "frame_rate": 1.1,
                                                "bitrate": 1,
                                                "codec": "codec"
                                              }
                                            ]
                                          },
                                          "shape": {
                                            "container": {
                                              "optional": {
                                                "jsonExample": {
                                                  "duration": 1,
                                                  "format": "format",
                                                  "bitrate": 1,
                                                  "audio": [
                                                    {
                                                      "bitrate": 1,
                                                      "codec": "codec",
                                                      "sample_rate": 1,
                                                      "channels": 1
                                                    },
                                                    {
                                                      "bitrate": 1,
                                                      "codec": "codec",
                                                      "sample_rate": 1,
                                                      "channels": 1
                                                    }
                                                  ],
                                                  "video": [
                                                    {
                                                      "height": 1,
                                                      "width": 1,
                                                      "frame_rate": 1.1,
                                                      "bitrate": 1,
                                                      "codec": "codec"
                                                    },
                                                    {
                                                      "height": 1,
                                                      "width": 1,
                                                      "frame_rate": 1.1,
                                                      "bitrate": 1,
                                                      "codec": "codec"
                                                    }
                                                  ]
                                                },
                                                "shape": {
                                                  "shape": {
                                                    "properties": [
                                                      {
                                                        "name": {
                                                          "name": "duration",
                                                          "wireValue": "duration"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "videoInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "videoInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": 1,
                                                          "shape": {
                                                            "container": {
                                                              "nullable": {
                                                                "jsonExample": 1,
                                                                "shape": {
                                                                  "primitive": {
                                                                    "integer": 1,
                                                                    "type": "integer"
                                                                  },
                                                                  "type": "primitive"
                                                                }
                                                              },
                                                              "valueType": {
                                                                "primitive": {
                                                                  "v1": "INTEGER",
                                                                  "v2": {
                                                                    "validation": {},
                                                                    "type": "integer"
                                                                  }
                                                                },
                                                                "type": "primitive"
                                                              },
                                                              "type": "nullable"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "format",
                                                          "wireValue": "format"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "videoInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "videoInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": "format",
                                                          "shape": {
                                                            "primitive": {
                                                              "string": {
                                                                "original": "format"
                                                              },
                                                              "type": "string"
                                                            },
                                                            "type": "primitive"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "bitrate",
                                                          "wireValue": "bitrate"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "videoInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "videoInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": 1,
                                                          "shape": {
                                                            "container": {
                                                              "nullable": {
                                                                "jsonExample": 1,
                                                                "shape": {
                                                                  "primitive": {
                                                                    "integer": 1,
                                                                    "type": "integer"
                                                                  },
                                                                  "type": "primitive"
                                                                }
                                                              },
                                                              "valueType": {
                                                                "primitive": {
                                                                  "v1": "INTEGER",
                                                                  "v2": {
                                                                    "validation": {},
                                                                    "type": "integer"
                                                                  }
                                                                },
                                                                "type": "primitive"
                                                              },
                                                              "type": "nullable"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "audio",
                                                          "wireValue": "audio"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "videoInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "videoInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": [
                                                            {
                                                              "bitrate": 1,
                                                              "codec": "codec",
                                                              "sample_rate": 1,
                                                              "channels": 1
                                                            },
                                                            {
                                                              "bitrate": 1,
                                                              "codec": "codec",
                                                              "sample_rate": 1,
                                                              "channels": 1
                                                            }
                                                          ],
                                                          "shape": {
                                                            "container": {
                                                              "list": [
                                                                {
                                                                  "jsonExample": {
                                                                    "bitrate": 1,
                                                                    "codec": "codec",
                                                                    "sample_rate": 1,
                                                                    "channels": 1
                                                                  },
                                                                  "shape": {
                                                                    "shape": {
                                                                      "properties": [
                                                                        {
                                                                          "name": {
                                                                            "name": "bitrate",
                                                                            "wireValue": "bitrate"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoAudioItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoAudioItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1,
                                                                            "shape": {
                                                                              "container": {
                                                                                "nullable": {
                                                                                  "jsonExample": 1,
                                                                                  "shape": {
                                                                                    "primitive": {
                                                                                      "integer": 1,
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "type": "primitive"
                                                                                  }
                                                                                },
                                                                                "valueType": {
                                                                                  "primitive": {
                                                                                    "v1": "INTEGER",
                                                                                    "v2": {
                                                                                      "validation": {},
                                                                                      "type": "integer"
                                                                                    }
                                                                                  },
                                                                                  "type": "primitive"
                                                                                },
                                                                                "type": "nullable"
                                                                              },
                                                                              "type": "container"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "codec",
                                                                            "wireValue": "codec"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoAudioItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoAudioItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": "codec",
                                                                            "shape": {
                                                                              "container": {
                                                                                "nullable": {
                                                                                  "jsonExample": "codec",
                                                                                  "shape": {
                                                                                    "primitive": {
                                                                                      "string": {
                                                                                        "original": "codec"
                                                                                      },
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": "primitive"
                                                                                  }
                                                                                },
                                                                                "valueType": {
                                                                                  "primitive": {
                                                                                    "v1": "STRING",
                                                                                    "v2": {
                                                                                      "validation": {},
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "type": "primitive"
                                                                                },
                                                                                "type": "nullable"
                                                                              },
                                                                              "type": "container"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "sample_rate",
                                                                            "wireValue": "sample_rate"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoAudioItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoAudioItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1,
                                                                            "shape": {
                                                                              "container": {
                                                                                "nullable": {
                                                                                  "jsonExample": 1,
                                                                                  "shape": {
                                                                                    "primitive": {
                                                                                      "integer": 1,
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "type": "primitive"
                                                                                  }
                                                                                },
                                                                                "valueType": {
                                                                                  "primitive": {
                                                                                    "v1": "INTEGER",
                                                                                    "v2": {
                                                                                      "validation": {},
                                                                                      "type": "integer"
                                                                                    }
                                                                                  },
                                                                                  "type": "primitive"
                                                                                },
                                                                                "type": "nullable"
                                                                              },
                                                                              "type": "container"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "channels",
                                                                            "wireValue": "channels"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoAudioItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoAudioItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1,
                                                                            "shape": {
                                                                              "container": {
                                                                                "nullable": {
                                                                                  "jsonExample": 1,
                                                                                  "shape": {
                                                                                    "primitive": {
                                                                                      "integer": 1,
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "type": "primitive"
                                                                                  }
                                                                                },
                                                                                "valueType": {
                                                                                  "primitive": {
                                                                                    "v1": "INTEGER",
                                                                                    "v2": {
                                                                                      "validation": {},
                                                                                      "type": "integer"
                                                                                    }
                                                                                  },
                                                                                  "type": "primitive"
                                                                                },
                                                                                "type": "nullable"
                                                                              },
                                                                              "type": "container"
                                                                            }
                                                                          }
                                                                        }
                                                                      ],
                                                                      "type": "object"
                                                                    },
                                                                    "typeName": {
                                                                      "typeId": "VideoInfoAudioItems",
                                                                      "fernFilepath": {
                                                                        "allParts": [],
                                                                        "packagePath": []
                                                                      },
                                                                      "name": "VideoInfoAudioItems"
                                                                    },
                                                                    "type": "named"
                                                                  }
                                                                },
                                                                {
                                                                  "jsonExample": {
                                                                    "bitrate": 1,
                                                                    "codec": "codec",
                                                                    "sample_rate": 1,
                                                                    "channels": 1
                                                                  },
                                                                  "shape": {
                                                                    "shape": {
                                                                      "properties": [
                                                                        {
                                                                          "name": {
                                                                            "name": "bitrate",
                                                                            "wireValue": "bitrate"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoAudioItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoAudioItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1,
                                                                            "shape": {
                                                                              "container": {
                                                                                "nullable": {
                                                                                  "jsonExample": 1,
                                                                                  "shape": {
                                                                                    "primitive": {
                                                                                      "integer": 1,
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "type": "primitive"
                                                                                  }
                                                                                },
                                                                                "valueType": {
                                                                                  "primitive": {
                                                                                    "v1": "INTEGER",
                                                                                    "v2": {
                                                                                      "validation": {},
                                                                                      "type": "integer"
                                                                                    }
                                                                                  },
                                                                                  "type": "primitive"
                                                                                },
                                                                                "type": "nullable"
                                                                              },
                                                                              "type": "container"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "codec",
                                                                            "wireValue": "codec"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoAudioItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoAudioItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": "codec",
                                                                            "shape": {
                                                                              "container": {
                                                                                "nullable": {
                                                                                  "jsonExample": "codec",
                                                                                  "shape": {
                                                                                    "primitive": {
                                                                                      "string": {
                                                                                        "original": "codec"
                                                                                      },
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": "primitive"
                                                                                  }
                                                                                },
                                                                                "valueType": {
                                                                                  "primitive": {
                                                                                    "v1": "STRING",
                                                                                    "v2": {
                                                                                      "validation": {},
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "type": "primitive"
                                                                                },
                                                                                "type": "nullable"
                                                                              },
                                                                              "type": "container"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "sample_rate",
                                                                            "wireValue": "sample_rate"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoAudioItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoAudioItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1,
                                                                            "shape": {
                                                                              "container": {
                                                                                "nullable": {
                                                                                  "jsonExample": 1,
                                                                                  "shape": {
                                                                                    "primitive": {
                                                                                      "integer": 1,
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "type": "primitive"
                                                                                  }
                                                                                },
                                                                                "valueType": {
                                                                                  "primitive": {
                                                                                    "v1": "INTEGER",
                                                                                    "v2": {
                                                                                      "validation": {},
                                                                                      "type": "integer"
                                                                                    }
                                                                                  },
                                                                                  "type": "primitive"
                                                                                },
                                                                                "type": "nullable"
                                                                              },
                                                                              "type": "container"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "channels",
                                                                            "wireValue": "channels"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoAudioItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoAudioItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1,
                                                                            "shape": {
                                                                              "container": {
                                                                                "nullable": {
                                                                                  "jsonExample": 1,
                                                                                  "shape": {
                                                                                    "primitive": {
                                                                                      "integer": 1,
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "type": "primitive"
                                                                                  }
                                                                                },
                                                                                "valueType": {
                                                                                  "primitive": {
                                                                                    "v1": "INTEGER",
                                                                                    "v2": {
                                                                                      "validation": {},
                                                                                      "type": "integer"
                                                                                    }
                                                                                  },
                                                                                  "type": "primitive"
                                                                                },
                                                                                "type": "nullable"
                                                                              },
                                                                              "type": "container"
                                                                            }
                                                                          }
                                                                        }
                                                                      ],
                                                                      "type": "object"
                                                                    },
                                                                    "typeName": {
                                                                      "typeId": "VideoInfoAudioItems",
                                                                      "fernFilepath": {
                                                                        "allParts": [],
                                                                        "packagePath": []
                                                                      },
                                                                      "name": "VideoInfoAudioItems"
                                                                    },
                                                                    "type": "named"
                                                                  }
                                                                }
                                                              ],
                                                              "itemType": {
                                                                "fernFilepath": {
                                                                  "allParts": [],
                                                                  "packagePath": []
                                                                },
                                                                "name": "VideoInfoAudioItems",
                                                                "typeId": "VideoInfoAudioItems",
                                                                "inline": false,
                                                                "type": "named"
                                                              },
                                                              "type": "list"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": {
                                                          "name": "video",
                                                          "wireValue": "video"
                                                        },
                                                        "originalTypeDeclaration": {
                                                          "typeId": "videoInfo",
                                                          "fernFilepath": {
                                                            "allParts": [],
                                                            "packagePath": []
                                                          },
                                                          "name": "videoInfo"
                                                        },
                                                        "value": {
                                                          "jsonExample": [
                                                            {
                                                              "height": 1,
                                                              "width": 1,
                                                              "frame_rate": 1.1,
                                                              "bitrate": 1,
                                                              "codec": "codec"
                                                            },
                                                            {
                                                              "height": 1,
                                                              "width": 1,
                                                              "frame_rate": 1.1,
                                                              "bitrate": 1,
                                                              "codec": "codec"
                                                            }
                                                          ],
                                                          "shape": {
                                                            "container": {
                                                              "list": [
                                                                {
                                                                  "jsonExample": {
                                                                    "height": 1,
                                                                    "width": 1,
                                                                    "frame_rate": 1.1,
                                                                    "bitrate": 1,
                                                                    "codec": "codec"
                                                                  },
                                                                  "shape": {
                                                                    "shape": {
                                                                      "properties": [
                                                                        {
                                                                          "name": {
                                                                            "name": "height",
                                                                            "wireValue": "height"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoVideoItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoVideoItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1,
                                                                            "shape": {
                                                                              "primitive": {
                                                                                "integer": 1,
                                                                                "type": "integer"
                                                                              },
                                                                              "type": "primitive"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "width",
                                                                            "wireValue": "width"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoVideoItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoVideoItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1,
                                                                            "shape": {
                                                                              "primitive": {
                                                                                "integer": 1,
                                                                                "type": "integer"
                                                                              },
                                                                              "type": "primitive"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "frame_rate",
                                                                            "wireValue": "frame_rate"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoVideoItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoVideoItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1.1,
                                                                            "shape": {
                                                                              "primitive": {
                                                                                "double": 1.1,
                                                                                "type": "double"
                                                                              },
                                                                              "type": "primitive"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "bitrate",
                                                                            "wireValue": "bitrate"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoVideoItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoVideoItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1,
                                                                            "shape": {
                                                                              "container": {
                                                                                "nullable": {
                                                                                  "jsonExample": 1,
                                                                                  "shape": {
                                                                                    "primitive": {
                                                                                      "integer": 1,
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "type": "primitive"
                                                                                  }
                                                                                },
                                                                                "valueType": {
                                                                                  "primitive": {
                                                                                    "v1": "INTEGER",
                                                                                    "v2": {
                                                                                      "validation": {},
                                                                                      "type": "integer"
                                                                                    }
                                                                                  },
                                                                                  "type": "primitive"
                                                                                },
                                                                                "type": "nullable"
                                                                              },
                                                                              "type": "container"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "codec",
                                                                            "wireValue": "codec"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoVideoItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoVideoItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": "codec",
                                                                            "shape": {
                                                                              "container": {
                                                                                "nullable": {
                                                                                  "jsonExample": "codec",
                                                                                  "shape": {
                                                                                    "primitive": {
                                                                                      "string": {
                                                                                        "original": "codec"
                                                                                      },
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": "primitive"
                                                                                  }
                                                                                },
                                                                                "valueType": {
                                                                                  "primitive": {
                                                                                    "v1": "STRING",
                                                                                    "v2": {
                                                                                      "validation": {},
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "type": "primitive"
                                                                                },
                                                                                "type": "nullable"
                                                                              },
                                                                              "type": "container"
                                                                            }
                                                                          }
                                                                        }
                                                                      ],
                                                                      "type": "object"
                                                                    },
                                                                    "typeName": {
                                                                      "typeId": "VideoInfoVideoItems",
                                                                      "fernFilepath": {
                                                                        "allParts": [],
                                                                        "packagePath": []
                                                                      },
                                                                      "name": "VideoInfoVideoItems"
                                                                    },
                                                                    "type": "named"
                                                                  }
                                                                },
                                                                {
                                                                  "jsonExample": {
                                                                    "height": 1,
                                                                    "width": 1,
                                                                    "frame_rate": 1.1,
                                                                    "bitrate": 1,
                                                                    "codec": "codec"
                                                                  },
                                                                  "shape": {
                                                                    "shape": {
                                                                      "properties": [
                                                                        {
                                                                          "name": {
                                                                            "name": "height",
                                                                            "wireValue": "height"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoVideoItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoVideoItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1,
                                                                            "shape": {
                                                                              "primitive": {
                                                                                "integer": 1,
                                                                                "type": "integer"
                                                                              },
                                                                              "type": "primitive"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "width",
                                                                            "wireValue": "width"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoVideoItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoVideoItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1,
                                                                            "shape": {
                                                                              "primitive": {
                                                                                "integer": 1,
                                                                                "type": "integer"
                                                                              },
                                                                              "type": "primitive"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "frame_rate",
                                                                            "wireValue": "frame_rate"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoVideoItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoVideoItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1.1,
                                                                            "shape": {
                                                                              "primitive": {
                                                                                "double": 1.1,
                                                                                "type": "double"
                                                                              },
                                                                              "type": "primitive"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "bitrate",
                                                                            "wireValue": "bitrate"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoVideoItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoVideoItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": 1,
                                                                            "shape": {
                                                                              "container": {
                                                                                "nullable": {
                                                                                  "jsonExample": 1,
                                                                                  "shape": {
                                                                                    "primitive": {
                                                                                      "integer": 1,
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "type": "primitive"
                                                                                  }
                                                                                },
                                                                                "valueType": {
                                                                                  "primitive": {
                                                                                    "v1": "INTEGER",
                                                                                    "v2": {
                                                                                      "validation": {},
                                                                                      "type": "integer"
                                                                                    }
                                                                                  },
                                                                                  "type": "primitive"
                                                                                },
                                                                                "type": "nullable"
                                                                              },
                                                                              "type": "container"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "name": {
                                                                            "name": "codec",
                                                                            "wireValue": "codec"
                                                                          },
                                                                          "originalTypeDeclaration": {
                                                                            "typeId": "VideoInfoVideoItems",
                                                                            "fernFilepath": {
                                                                              "allParts": [],
                                                                              "packagePath": []
                                                                            },
                                                                            "name": "VideoInfoVideoItems"
                                                                          },
                                                                          "value": {
                                                                            "jsonExample": "codec",
                                                                            "shape": {
                                                                              "container": {
                                                                                "nullable": {
                                                                                  "jsonExample": "codec",
                                                                                  "shape": {
                                                                                    "primitive": {
                                                                                      "string": {
                                                                                        "original": "codec"
                                                                                      },
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": "primitive"
                                                                                  }
                                                                                },
                                                                                "valueType": {
                                                                                  "primitive": {
                                                                                    "v1": "STRING",
                                                                                    "v2": {
                                                                                      "validation": {},
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "type": "primitive"
                                                                                },
                                                                                "type": "nullable"
                                                                              },
                                                                              "type": "container"
                                                                            }
                                                                          }
                                                                        }
                                                                      ],
                                                                      "type": "object"
                                                                    },
                                                                    "typeName": {
                                                                      "typeId": "VideoInfoVideoItems",
                                                                      "fernFilepath": {
                                                                        "allParts": [],
                                                                        "packagePath": []
                                                                      },
                                                                      "name": "VideoInfoVideoItems"
                                                                    },
                                                                    "type": "named"
                                                                  }
                                                                }
                                                              ],
                                                              "itemType": {
                                                                "fernFilepath": {
                                                                  "allParts": [],
                                                                  "packagePath": []
                                                                },
                                                                "name": "VideoInfoVideoItems",
                                                                "typeId": "VideoInfoVideoItems",
                                                                "inline": false,
                                                                "type": "named"
                                                              },
                                                              "type": "list"
                                                            },
                                                            "type": "container"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "type": "object"
                                                  },
                                                  "typeName": {
                                                    "typeId": "videoInfo",
                                                    "fernFilepath": {
                                                      "allParts": [],
                                                      "packagePath": []
                                                    },
                                                    "name": "videoInfo"
                                                  },
                                                  "type": "named"
                                                }
                                              },
                                              "valueType": {
                                                "fernFilepath": {
                                                  "allParts": [],
                                                  "packagePath": []
                                                },
                                                "name": "videoInfo",
                                                "typeId": "videoInfo",
                                                "inline": false,
                                                "type": "named"
                                              },
                                              "type": "optional"
                                            },
                                            "type": "container"
                                          }
                                        }
                                      }
                                    ],
                                    "type": "object"
                                  },
                                  "typeName": {
                                    "typeId": "contentInfo",
                                    "fernFilepath": {
                                      "allParts": [],
                                      "packagePath": []
                                    },
                                    "name": "contentInfo"
                                  },
                                  "type": "named"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "metadata",
                                "wireValue": "metadata"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": {},
                                "shape": {
                                  "shape": {
                                    "properties": [],
                                    "type": "object"
                                  },
                                  "typeName": {
                                    "typeId": "metadata",
                                    "fernFilepath": {
                                      "allParts": [],
                                      "packagePath": []
                                    },
                                    "name": "metadata"
                                  },
                                  "type": "named"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "is_image",
                                "wireValue": "is_image"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": true,
                                "shape": {
                                  "primitive": {
                                    "boolean": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "is_stored",
                                "wireValue": "is_stored"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": true,
                                "shape": {
                                  "primitive": {
                                    "boolean": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "is_ready",
                                "wireValue": "is_ready"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": true,
                                "shape": {
                                  "primitive": {
                                    "boolean": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "s3_bucket",
                                "wireValue": "s3_bucket"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "fileUploadInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "fileUploadInfo"
                              },
                              "value": {
                                "jsonExample": "s3_bucket",
                                "shape": {
                                  "container": {
                                    "optional": {
                                      "jsonExample": "s3_bucket",
                                      "shape": {
                                        "container": {
                                          "nullable": {
                                            "jsonExample": "s3_bucket",
                                            "shape": {
                                              "primitive": {
                                                "string": {
                                                  "original": "s3_bucket"
                                                },
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          },
                                          "valueType": {
                                            "primitive": {
                                              "v1": "STRING",
                                              "v2": {
                                                "validation": {},
                                                "type": "string"
                                              }
                                            },
                                            "type": "primitive"
                                          },
                                          "type": "nullable"
                                        },
                                        "type": "container"
                                      }
                                    },
                                    "valueType": {
                                      "container": {
                                        "nullable": {
                                          "primitive": {
                                            "v1": "STRING",
                                            "v2": {
                                              "validation": {},
                                              "type": "string"
                                            }
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "nullable"
                                      },
                                      "type": "container"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "fileUploadInfo",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "fileUploadInfo"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/info/",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_upload.fileUploadInfo",
          "name": "fileUploadInfo",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "fileUploadInfo",
                  "typeId": "fileUploadInfo",
                  "inline": false,
                  "type": "named"
                },
                "docs": "File information was retrieved successfully.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "uploadFileUploadInfoExample": {
                      "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "size": 2667636,
                      "total": 2667636,
                      "done": 2667636,
                      "original_filename": "IMG-0412_123.JPG",
                      "filename": "IMG0412_123.JPG",
                      "mime_type": "image/jpeg",
                      "image_info": {
                        "color_mode": "RGB",
                        "orientation": 6,
                        "format": "JPEG",
                        "sequence": false,
                        "height": 4032,
                        "width": 3024,
                        "geo_location": {
                          "latitude": 55.62013611111111,
                          "longitude": 37.66299166666666
                        },
                        "datetime_original": "2024-01-15T09:30:00Z",
                        "dpi": [
                          72,
                          72
                        ]
                      },
                      "video_info": null,
                      "content_info": {
                        "mime": {
                          "mime": "image/jpeg",
                          "type": "image",
                          "subtype": "jpeg"
                        },
                        "image": {
                          "color_mode": "RGB",
                          "orientation": 6,
                          "format": "JPEG",
                          "sequence": false,
                          "height": 4032,
                          "width": 3024,
                          "geo_location": {
                            "latitude": 55.62013611111111,
                            "longitude": 37.66299166666666
                          },
                          "datetime_original": "2024-01-15T09:30:00Z",
                          "dpi": [
                            72,
                            72
                          ]
                        }
                      },
                      "metadata": {
                        "subsystem": "uploader",
                        "pet": "cat"
                      },
                      "is_image": true,
                      "is_stored": true,
                      "is_ready": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a JSON object with information about an uploaded file (file size, MIME type, metadata, etc).\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_uploadFileUploadInfoExample_200": {
                "displayName": "fileUploadInfoExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/info/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {
                    "pub_key": "YOUR_PUBLIC_KEY",
                    "file_id": "67947755-1584-4e3f-902b-d4e2bf76a841"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                      "size": 2667636,
                      "total": 2667636,
                      "done": 2667636,
                      "original_filename": "IMG-0412_123.JPG",
                      "filename": "IMG0412_123.JPG",
                      "mime_type": "image/jpeg",
                      "image_info": {
                        "color_mode": "RGB",
                        "orientation": 6,
                        "format": "JPEG",
                        "sequence": false,
                        "height": 4032,
                        "width": 3024,
                        "geo_location": {
                          "latitude": 55.62013611111111,
                          "longitude": 37.66299166666666
                        },
                        "datetime_original": "2024-01-15T09:30:00Z",
                        "dpi": [
                          72,
                          72
                        ]
                      },
                      "video_info": null,
                      "content_info": {
                        "mime": {
                          "mime": "image/jpeg",
                          "type": "image",
                          "subtype": "jpeg"
                        },
                        "image": {
                          "color_mode": "RGB",
                          "orientation": 6,
                          "format": "JPEG",
                          "sequence": false,
                          "height": 4032,
                          "width": 3024,
                          "geo_location": {
                            "latitude": 55.62013611111111,
                            "longitude": 37.66299166666666
                          },
                          "datetime_original": "2024-01-15T09:30:00Z",
                          "dpi": [
                            72,
                            72
                          ]
                        }
                      },
                      "metadata": {
                        "subsystem": "uploader",
                        "pet": "cat"
                      },
                      "is_image": true,
                      "is_stored": true,
                      "is_ready": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "fileUploadInfo",
                      "typeId": "fileUploadInfo",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "File information was retrieved successfully.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "uploadFileUploadInfoExample": {
                          "uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                          "file_id": "be3b4d5e-179d-460e-8a5d-69112ac86cbb",
                          "size": 2667636,
                          "total": 2667636,
                          "done": 2667636,
                          "original_filename": "IMG-0412_123.JPG",
                          "filename": "IMG0412_123.JPG",
                          "mime_type": "image/jpeg",
                          "image_info": {
                            "color_mode": "RGB",
                            "orientation": 6,
                            "format": "JPEG",
                            "sequence": false,
                            "height": 4032,
                            "width": 3024,
                            "geo_location": {
                              "latitude": 55.62013611111111,
                              "longitude": 37.66299166666666
                            },
                            "datetime_original": "2024-01-15T09:30:00Z",
                            "dpi": [
                              72,
                              72
                            ]
                          },
                          "video_info": null,
                          "content_info": {
                            "mime": {
                              "mime": "image/jpeg",
                              "type": "image",
                              "subtype": "jpeg"
                            },
                            "image": {
                              "color_mode": "RGB",
                              "orientation": 6,
                              "format": "JPEG",
                              "sequence": false,
                              "height": 4032,
                              "width": 3024,
                              "geo_location": {
                                "latitude": 55.62013611111111,
                                "longitude": 37.66299166666666
                              },
                              "datetime_original": "2024-01-15T09:30:00Z",
                              "dpi": [
                                72,
                                72
                              ]
                            }
                          },
                          "metadata": {
                            "subsystem": "uploader",
                            "pet": "cat"
                          },
                          "is_image": true,
                          "is_stored": true,
                          "is_ready": true
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_groups": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Groups"
          ],
          "packagePath": [],
          "file": "Groups"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Create a file group",
          "method": "POST",
          "baseUrl": "Production server",
          "path": {
            "head": "/group/",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/group/",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_groups.createFilesGroup",
          "name": "createFilesGroup",
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "Groups_createFilesGroup_Request",
            "properties": [
              {
                "name": {
                  "name": "pub_key",
                  "wireValue": "pub_key"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "projectPublicKeyType",
                  "typeId": "projectPublicKeyType",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "files[]",
                  "wireValue": "files[]"
                },
                "valueType": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Set of files you want to add to the group.\nEach element can be a file UUID with or without the applied image\nprocessing operations.\n",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "GroupPostRequestBodyContentMultipartFormDataSchemaFiles_example_autogenerated": [
                      "string"
                    ]
                  }
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "signature",
                  "wireValue": "signature"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "signatureType",
                      "typeId": "signatureType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "expire",
                  "wireValue": "expire"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "expireType",
                      "typeId": "expireType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              }
            ],
            "v2Examples": {
              "userSpecifiedExamples": {
                "Groups_createFilesGroup_example": {
                  "pub_key": "YOUR_PUBLIC_KEY",
                  "files[]": [
                    "d6d34fa9-addd-472c-868d-2e5c105f9fcd",
                    "b1026315-8116-4632-8364-607e64fca723/-/resize/x800/"
                  ]
                }
              },
              "autogeneratedExamples": {}
            },
            "type": "fileUpload"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "multipart/form-data",
                "name": "Groups_createFilesGroup_Request",
                "properties": [
                  {
                    "name": {
                      "name": "pub_key",
                      "wireValue": "pub_key"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "projectPublicKeyType",
                      "typeId": "projectPublicKeyType",
                      "inline": false,
                      "type": "named"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "files[]",
                      "wireValue": "files[]"
                    },
                    "valueType": {
                      "container": {
                        "list": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "validation": {},
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Set of files you want to add to the group.\nEach element can be a file UUID with or without the applied image\nprocessing operations.\n",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "GroupPostRequestBodyContentMultipartFormDataSchemaFiles_example_autogenerated": [
                          "string"
                        ]
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "signature",
                      "wireValue": "signature"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "signatureType",
                          "typeId": "signatureType",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "expire",
                      "wireValue": "expire"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "expireType",
                          "typeId": "expireType",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Groups_createFilesGroup_example": {
                      "pub_key": "YOUR_PUBLIC_KEY",
                      "files[]": [
                        "d6d34fa9-addd-472c-868d-2e5c105f9fcd",
                        "b1026315-8116-4632-8364-607e64fca723/-/resize/x800/"
                      ]
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "groupInfo",
                  "typeId": "groupInfo",
                  "inline": false,
                  "type": "named"
                },
                "docs": "The group was created successfully.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "groupsCreateFilesGroupExample": {
                      "id": "0d712319-b970-4602-850c-bae1ced521a6~1",
                      "datetime_created": "2018-09-12T10:03:38.686710Z",
                      "datetime_stored": null,
                      "files_count": 1,
                      "cdn_url": "https://ucarecdn.com/0d712319-b970-4602-850c-bae1ced521a6~1/",
                      "url": "https://api.uploadcare.com/groups/0d712319-b970-4602-850c-bae1ced521a6~1/",
                      "files": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a file group from a set of already uploaded files.\n\nThe most common use case for creating a file group is when a user uploads\nmultiple files at once and then wants to display them together.\n\n**Note:** A group itself and files within it MUST belong to the same project.\n\n**Note:** Groups are immutable and the only way to add/remove a file to a group\nis to create a new one.\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "Groups_createFilesGroup_example_groupsCreateFilesGroupExample_200": {
                "displayName": "Groups_createFilesGroup_example",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/group/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "pub_key": "YOUR_PUBLIC_KEY",
                    "files[]": [
                      "d6d34fa9-addd-472c-868d-2e5c105f9fcd",
                      "b1026315-8116-4632-8364-607e64fca723/-/resize/x800/"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "0d712319-b970-4602-850c-bae1ced521a6~1",
                      "datetime_created": "2018-09-12T10:03:38.686710Z",
                      "datetime_stored": null,
                      "files_count": 1,
                      "cdn_url": "https://ucarecdn.com/0d712319-b970-4602-850c-bae1ced521a6~1/",
                      "url": "https://api.uploadcare.com/groups/0d712319-b970-4602-850c-bae1ced521a6~1/",
                      "files": [
                        "string"
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "groupInfo",
                      "typeId": "groupInfo",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "The group was created successfully.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "groupsCreateFilesGroupExample": {
                          "id": "0d712319-b970-4602-850c-bae1ced521a6~1",
                          "datetime_created": "2018-09-12T10:03:38.686710Z",
                          "datetime_stored": null,
                          "files_count": 1,
                          "cdn_url": "https://ucarecdn.com/0d712319-b970-4602-850c-bae1ced521a6~1/",
                          "url": "https://api.uploadcare.com/groups/0d712319-b970-4602-850c-bae1ced521a6~1/",
                          "files": [
                            "string"
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get information about a file group",
          "method": "GET",
          "baseUrl": "Production server",
          "path": {
            "head": "/group/info/",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "pub_key",
                "wireValue": "pub_key"
              },
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "projectPublicKeyType",
                "typeId": "projectPublicKeyType",
                "inline": false,
                "type": "named"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "pub_key_example": "YOUR_PUBLIC_KEY"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "group_id",
                "wireValue": "group_id"
              },
              "docs": "Group's unique ID. Group IDs look like `UUID~N`, where the `~N` part reflects the number of the files in the group.\n",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "group_id_example": "d52d7136-a2e5-4338-9f45-affbf83b857d~2"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "9e8c0304",
                "url": "/group/info/",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [
                  {
                    "name": {
                      "name": "pub_key",
                      "wireValue": "pub_key"
                    },
                    "shape": {
                      "type": "single"
                    },
                    "value": {
                      "jsonExample": "pub_key",
                      "shape": {
                        "shape": {
                          "value": {
                            "jsonExample": "pub_key",
                            "shape": {
                              "primitive": {
                                "string": {
                                  "original": "pub_key"
                                },
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "alias"
                        },
                        "typeName": {
                          "typeId": "projectPublicKeyType",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "projectPublicKeyType"
                        },
                        "type": "named"
                      }
                    }
                  },
                  {
                    "name": {
                      "name": "group_id",
                      "wireValue": "group_id"
                    },
                    "shape": {
                      "type": "single"
                    },
                    "value": {
                      "jsonExample": "group_id",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "group_id"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  }
                ],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": {
                        "id": "id",
                        "datetime_created": "datetime_created",
                        "datetime_stored": "datetime_stored",
                        "files_count": 1.1,
                        "cdn_url": "cdn_url",
                        "url": "url",
                        "files": [
                          {
                            "key": "value"
                          },
                          {
                            "key": "value"
                          }
                        ]
                      },
                      "shape": {
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": "id",
                                "wireValue": "id"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "groupInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "groupInfo"
                              },
                              "value": {
                                "jsonExample": "id",
                                "shape": {
                                  "container": {
                                    "optional": {
                                      "jsonExample": "id",
                                      "shape": {
                                        "primitive": {
                                          "string": {
                                            "original": "id"
                                          },
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "valueType": {
                                      "primitive": {
                                        "v1": "STRING",
                                        "v2": {
                                          "validation": {},
                                          "type": "string"
                                        }
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "datetime_created",
                                "wireValue": "datetime_created"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "groupInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "groupInfo"
                              },
                              "value": {
                                "jsonExample": "datetime_created",
                                "shape": {
                                  "container": {
                                    "optional": {
                                      "jsonExample": "datetime_created",
                                      "shape": {
                                        "primitive": {
                                          "string": {
                                            "original": "datetime_created"
                                          },
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "valueType": {
                                      "primitive": {
                                        "v1": "STRING",
                                        "v2": {
                                          "validation": {
                                            "format": "date-time"
                                          },
                                          "type": "string"
                                        }
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "datetime_stored",
                                "wireValue": "datetime_stored"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "groupInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "groupInfo"
                              },
                              "value": {
                                "jsonExample": "datetime_stored",
                                "shape": {
                                  "container": {
                                    "optional": {
                                      "jsonExample": "datetime_stored",
                                      "shape": {
                                        "container": {
                                          "nullable": {
                                            "jsonExample": "datetime_stored",
                                            "shape": {
                                              "primitive": {
                                                "string": {
                                                  "original": "datetime_stored"
                                                },
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          },
                                          "valueType": {
                                            "primitive": {
                                              "v1": "STRING",
                                              "v2": {
                                                "validation": {
                                                  "format": "date-time"
                                                },
                                                "type": "string"
                                              }
                                            },
                                            "type": "primitive"
                                          },
                                          "type": "nullable"
                                        },
                                        "type": "container"
                                      }
                                    },
                                    "valueType": {
                                      "container": {
                                        "nullable": {
                                          "primitive": {
                                            "v1": "STRING",
                                            "v2": {
                                              "validation": {
                                                "format": "date-time"
                                              },
                                              "type": "string"
                                            }
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "nullable"
                                      },
                                      "type": "container"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "files_count",
                                "wireValue": "files_count"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "groupInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "groupInfo"
                              },
                              "value": {
                                "jsonExample": 1.1,
                                "shape": {
                                  "container": {
                                    "optional": {
                                      "jsonExample": 1.1,
                                      "shape": {
                                        "primitive": {
                                          "double": 1.1,
                                          "type": "double"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "valueType": {
                                      "primitive": {
                                        "v1": "DOUBLE",
                                        "v2": {
                                          "validation": {},
                                          "type": "double"
                                        }
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "cdn_url",
                                "wireValue": "cdn_url"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "groupInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "groupInfo"
                              },
                              "value": {
                                "jsonExample": "cdn_url",
                                "shape": {
                                  "container": {
                                    "optional": {
                                      "jsonExample": "cdn_url",
                                      "shape": {
                                        "primitive": {
                                          "string": {
                                            "original": "cdn_url"
                                          },
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "valueType": {
                                      "primitive": {
                                        "v1": "STRING",
                                        "v2": {
                                          "validation": {
                                            "format": "uri"
                                          },
                                          "type": "string"
                                        }
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "url",
                                "wireValue": "url"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "groupInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "groupInfo"
                              },
                              "value": {
                                "jsonExample": "url",
                                "shape": {
                                  "container": {
                                    "optional": {
                                      "jsonExample": "url",
                                      "shape": {
                                        "primitive": {
                                          "string": {
                                            "original": "url"
                                          },
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "valueType": {
                                      "primitive": {
                                        "v1": "STRING",
                                        "v2": {
                                          "validation": {
                                            "format": "uri"
                                          },
                                          "type": "string"
                                        }
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "files",
                                "wireValue": "files"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "groupInfo",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "groupInfo"
                              },
                              "value": {
                                "jsonExample": [
                                  {
                                    "key": "value"
                                  },
                                  {
                                    "key": "value"
                                  }
                                ],
                                "shape": {
                                  "container": {
                                    "optional": {
                                      "jsonExample": [
                                        {
                                          "key": "value"
                                        },
                                        {
                                          "key": "value"
                                        }
                                      ],
                                      "shape": {
                                        "container": {
                                          "nullable": {
                                            "jsonExample": [
                                              {
                                                "key": "value"
                                              },
                                              {
                                                "key": "value"
                                              }
                                            ],
                                            "shape": {
                                              "container": {
                                                "list": [
                                                  {
                                                    "jsonExample": {
                                                      "key": "value"
                                                    },
                                                    "shape": {
                                                      "unknown": {
                                                        "key": "value"
                                                      },
                                                      "type": "unknown"
                                                    }
                                                  },
                                                  {
                                                    "jsonExample": {
                                                      "key": "value"
                                                    },
                                                    "shape": {
                                                      "unknown": {
                                                        "key": "value"
                                                      },
                                                      "type": "unknown"
                                                    }
                                                  }
                                                ],
                                                "itemType": {
                                                  "type": "unknown"
                                                },
                                                "type": "list"
                                              },
                                              "type": "container"
                                            }
                                          },
                                          "valueType": {
                                            "container": {
                                              "list": {
                                                "type": "unknown"
                                              },
                                              "type": "list"
                                            },
                                            "type": "container"
                                          },
                                          "type": "nullable"
                                        },
                                        "type": "container"
                                      }
                                    },
                                    "valueType": {
                                      "container": {
                                        "nullable": {
                                          "container": {
                                            "list": {
                                              "type": "unknown"
                                            },
                                            "type": "list"
                                          },
                                          "type": "container"
                                        },
                                        "type": "nullable"
                                      },
                                      "type": "container"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "groupInfo",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "groupInfo"
                        },
                        "type": "named"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/group/info/",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_groups.filesGroupInfo",
          "name": "filesGroupInfo",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "groupInfo",
                  "typeId": "groupInfo",
                  "inline": false,
                  "type": "named"
                },
                "docs": "File group information was retrieved successfully.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "groupsFilesGroupInfoExample": {
                      "id": "0d712319-b970-4602-850c-bae1ced521a6~1",
                      "datetime_created": "2018-09-12T10:03:38.686710Z",
                      "datetime_stored": null,
                      "files_count": 1,
                      "cdn_url": "https://ucarecdn.com/0d712319-b970-4602-850c-bae1ced521a6~1/",
                      "url": "https://api.uploadcare.com/groups/0d712319-b970-4602-850c-bae1ced521a6~1/",
                      "files": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a JSON object with information about a file group (when the group was created,\nnumber of the files in the group, etc).\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_groupsFilesGroupInfoExample_200": {
                "displayName": "filesGroupInfoExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/group/info/"
                  },
                  "environment": "Production server",
                  "pathParameters": {},
                  "queryParameters": {
                    "pub_key": "YOUR_PUBLIC_KEY",
                    "group_id": "d52d7136-a2e5-4338-9f45-affbf83b857d~2"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "0d712319-b970-4602-850c-bae1ced521a6~1",
                      "datetime_created": "2018-09-12T10:03:38.686710Z",
                      "datetime_stored": null,
                      "files_count": 1,
                      "cdn_url": "https://ucarecdn.com/0d712319-b970-4602-850c-bae1ced521a6~1/",
                      "url": "https://api.uploadcare.com/groups/0d712319-b970-4602-850c-bae1ced521a6~1/",
                      "files": [
                        "string"
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "groupInfo",
                      "typeId": "groupInfo",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "File group information was retrieved successfully.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "groupsFilesGroupInfoExample": {
                          "id": "0d712319-b970-4602-850c-bae1ced521a6~1",
                          "datetime_created": "2018-09-12T10:03:38.686710Z",
                          "datetime_stored": null,
                          "files_count": 1,
                          "cdn_url": "https://ucarecdn.com/0d712319-b970-4602-850c-bae1ced521a6~1/",
                          "url": "https://api.uploadcare.com/groups/0d712319-b970-4602-850c-bae1ced521a6~1/",
                          "files": [
                            "string"
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "errors": {},
  "webhookGroups": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "environments": {
    "defaultEnvironment": "Production server",
    "environments": {
      "environments": [
        {
          "id": "Production server",
          "name": "Production server",
          "url": "https://upload.uploadcare.com",
          "docs": "Production server"
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "types": [
      "signatureType",
      "expireType",
      "storeType",
      "projectPublicKeyType",
      "fileUploadInfo",
      "fileUploadInfoWaitingStatus",
      "fileUploadInfoProgressStatus",
      "fileUploadInfoSuccessStatus",
      "fileUploadInfoErrorStatus",
      "fileUploadInfoUnknownStatus",
      "fileUploadInfoFromURL",
      "fromURLUploadResponseSchema",
      "groupInfo",
      "metadataValue",
      "autoStoreDisabledError",
      "uploadcarePublicKeyRequiredError",
      "publicKeyRequiredError",
      "uploadcarePublicKeyInvalidError",
      "publicKeyInvalidError",
      "projectPublicKeyRemovedError",
      "accountBlockedError",
      "accountUnpaidError",
      "uploadFailedError",
      "accountLimitsExceededError",
      "signatureExpirationError",
      "signatureInvalidError",
      "requestFiledsNumberLimitExceededError",
      "postRequestParserFailedError",
      "nullCharactersForbiddenError",
      "fileMetadataKeyDuplicatedError",
      "fileMetadataKeyEmptyError",
      "fileMetadataKeyForbiddenError",
      "fileMetadataKeyLengthTooBigError",
      "fileMetadataValueEmptyError",
      "fileMetadataValueForbiddenError",
      "fileMetadataValueLengthTooBigError",
      "fileMetadataKeysNumberTooBigError",
      "filesRequiredError",
      "fileSizeLimitExceededError",
      "fileTypeForbiddenError",
      "fileInfectedError",
      "requestParamRequiredError",
      "multipartSizeInvalidError",
      "multipartFileSizeLimitExceededError",
      "multipartFileSizeTooSmallError",
      "multipartPartSizeInvalidError",
      "multipartPartSizeTooSmallError",
      "multipartPartSizeTooBigError",
      "multipartFileIdRequiredError",
      "multipartFileAlreadyUploadedError",
      "multipartUploadSizeTooLargeError",
      "multipartUploadSizeTooSmallError",
      "multipartFileCompletionFailedError",
      "uuidInvalidError",
      "sourceURLRequiredError",
      "urlParsingFailedError",
      "urlSchemeRequiredError",
      "urlSchemeInvalidError",
      "urlHostRequiredError",
      "urlBlacklistedError",
      "hostnameNotFoundError",
      "urlHostMalformedError",
      "urlHostPrivateIPForbiddenError",
      "tokenRequiredError",
      "fileIdRequiredError",
      "fileIdInvalidError",
      "fileNotFoundError",
      "groupFilesInvalidError",
      "groupFileURLParsingFailedError",
      "groupFilesNotFoundError",
      "groupIdRequiredError",
      "groupNotFoundError",
      "signatureRequiredError",
      "signatureExpirationRequiredError",
      "signatureExpirationInvalidError",
      "imageInfo",
      "legacyVideoInfo",
      "schemas-imageInfo",
      "videoInfo",
      "contentInfo",
      "metadata"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_upload",
      "subpackage_groups"
    ],
    "hasEndpointsInTree": false
  },
  "subpackages": {
    "subpackage_upload": {
      "name": "upload",
      "fernFilepath": {
        "allParts": [
          "upload"
        ],
        "packagePath": [],
        "file": "upload"
      },
      "service": "service_upload",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_groups": {
      "name": "groups",
      "fernFilepath": {
        "allParts": [
          "groups"
        ],
        "packagePath": [],
        "file": "groups"
      },
      "service": "service_groups",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    }
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "apiName": "",
  "constants": {
    "errorInstanceIdKey": {
      "name": "errorInstanceId",
      "wireValue": "errorInstanceId"
    }
  }
}