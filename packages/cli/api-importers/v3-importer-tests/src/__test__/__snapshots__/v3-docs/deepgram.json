{
  "apiName": "",
  "selfHosted": false,
  "auth": {
    "requirement": "ALL",
    "schemes": [
      {
        "key": "header",
        "name": {
          "name": "apiKey",
          "wireValue": "Authorization"
        },
        "valueType": {
          "container": {
            "optional": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "docs": "Use the `Authorization` header with the format `token <API KEY>`. Example:`Authorization token 12345abcdef`\n",
        "type": "header"
      }
    ]
  },
  "headers": [],
  "environments": {
    "defaultEnvironment": "Deepgram Production API",
    "environments": {
      "baseUrls": [
        {
          "id": "Base",
          "name": "Base"
        },
        {
          "id": "public",
          "name": {
            "originalName": "public",
            "camelCase": {
              "unsafeName": "public",
              "safeName": "public_"
            },
            "snakeCase": {
              "unsafeName": "public",
              "safeName": "public_"
            }
          }
        },
        {
          "id": "agent",
          "name": "agent"
        }
      ],
      "environments": [
        {
          "id": "Deepgram Production API",
          "name": "Deepgram Production API",
          "urls": {
            "Base": "https://api.deepgram.com",
            "public": "wss://api.deepgram.com",
            "agent": "wss://agent.deepgram.com"
          }
        }
      ],
      "type": "multipleBaseUrls"
    }
  },
  "types": {
    "ListenRequest": {
      "name": {
        "typeId": "ListenRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListenRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "url",
              "wireValue": "url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uri"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "ListenRequestUrl_example_0": "https://dpgr.am/spacewalk.wav"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Audio file to transcribe",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ListenRequest_example_0": {
            "url": "https://dpgr.am/spacewalk.wav"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ListenRequestFile": {
      "name": {
        "typeId": "ListenRequestFile",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListenRequestFile"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "format": "binary"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "format": "binary"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Binary audio file to transcribe",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ListenRequestFile_example_0": "<audiofile>"
        },
        "autogeneratedExamples": {}
      }
    },
    "MetadataModelInfo": {
      "name": {
        "typeId": "MetadataModelInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MetadataModelInfo"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "MetadataModelInfo_example_0": {
            "30089e05-99d1-4376-b32e-c263170674af": {
              "name": "2-general-nova",
              "version": "2024-01-09.29447",
              "arch": "nova-2"
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "MetadataSummaryInfo": {
      "name": {
        "typeId": "MetadataSummaryInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MetadataSummaryInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model_uuid",
              "wireValue": "model_uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataSummaryInfoModelUuid_example_0": "67875a7f-c9c4-48a0-aa55-5bdb8a91c34a"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "input_tokens",
              "wireValue": "input_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataSummaryInfoInputTokens_example_0": 95
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "output_tokens",
              "wireValue": "output_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataSummaryInfoOutputTokens_example_0": 63
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MetadataSummaryInfo_example_autogenerated": {}
        }
      }
    },
    "MetadataSentimentInfo": {
      "name": {
        "typeId": "MetadataSentimentInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MetadataSentimentInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model_uuid",
              "wireValue": "model_uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataSentimentInfoModelUuid_example_0": "80ab3179-d113-4254-bd6b-4a2f96498695"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "input_tokens",
              "wireValue": "input_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataSentimentInfoInputTokens_example_0": 105
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "output_tokens",
              "wireValue": "output_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataSentimentInfoOutputTokens_example_0": 105
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MetadataSentimentInfo_example_autogenerated": {}
        }
      }
    },
    "MetadataTopicsInfo": {
      "name": {
        "typeId": "MetadataTopicsInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MetadataTopicsInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model_uuid",
              "wireValue": "model_uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataTopicsInfoModelUuid_example_0": "80ab3179-d113-4254-bd6b-4a2f96498695"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "input_tokens",
              "wireValue": "input_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataTopicsInfoInputTokens_example_0": 105
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "output_tokens",
              "wireValue": "output_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataTopicsInfoOutputTokens_example_0": 7
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MetadataTopicsInfo_example_autogenerated": {}
        }
      }
    },
    "MetadataIntentsInfo": {
      "name": {
        "typeId": "MetadataIntentsInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MetadataIntentsInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model_uuid",
              "wireValue": "model_uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataIntentsInfoModelUuid_example_0": "80ab3179-d113-4254-bd6b-4a2f96498695"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "input_tokens",
              "wireValue": "input_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataIntentsInfoInputTokens_example_0": 105
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "output_tokens",
              "wireValue": "output_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataIntentsInfoOutputTokens_example_0": 4
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MetadataIntentsInfo_example_autogenerated": {}
        }
      }
    },
    "metadata": {
      "name": {
        "typeId": "metadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "metadata"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "transaction_key",
              "wireValue": "transaction_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "deprecated",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "availability": {
              "status": "DEPRECATED"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataTransactionKey_example_autogenerated": "deprecated"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataRequestId_example_0": "a847f427-4ad5-4d67-9b95-db801e58251c"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sha256",
              "wireValue": "sha256"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataSha256_example_0": "154e291ecfa8be6ab8343560bcc109008fa7853eb5372533e8efdefc9b504c33"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataCreated_example_0": "2024-05-12T18:57:13.426Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "duration",
              "wireValue": "duration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataDuration_example_0": 25.933313
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "channels",
              "wireValue": "channels"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataChannels_example_0": 1
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataModels_example_0": [
                  "30089e05-99d1-4376-b32e-c263170674af"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "model_info",
              "wireValue": "model_info"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "MetadataModelInfo",
              "typeId": "MetadataModelInfo",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataModelInfo_example_0": {
                  "30089e05-99d1-4376-b32e-c263170674af": {
                    "name": "2-general-nova",
                    "version": "2024-01-09.29447",
                    "arch": "nova-2"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "summary_info",
              "wireValue": "summary_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "MetadataSummaryInfo",
                  "typeId": "MetadataSummaryInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataSummaryInfo_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "sentiment_info",
              "wireValue": "sentiment_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "MetadataSentimentInfo",
                  "typeId": "MetadataSentimentInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataSentimentInfo_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "topics_info",
              "wireValue": "topics_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "MetadataTopicsInfo",
                  "typeId": "MetadataTopicsInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataTopicsInfo_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "intents_info",
              "wireValue": "intents_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "MetadataIntentsInfo",
                  "typeId": "MetadataIntentsInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataIntentsInfo_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "tags",
              "wireValue": "tags"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "MetadataTags_example_0": [
                  "test"
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "metadata_example_autogenerated": {
            "request_id": "a847f427-4ad5-4d67-9b95-db801e58251c",
            "sha256": "154e291ecfa8be6ab8343560bcc109008fa7853eb5372533e8efdefc9b504c33",
            "created": "2024-05-12T18:57:13.426Z",
            "duration": 25.9,
            "channels": 1,
            "models": [
              "30089e05-99d1-4376-b32e-c263170674af"
            ],
            "model_info": {}
          }
        }
      }
    },
    "ChannelsItemsSearchItemsHitsItems": {
      "name": {
        "typeId": "ChannelsItemsSearchItemsHitsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsItemsSearchItemsHitsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsSearchItemsHitsItemsConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsSearchItemsHitsItemsStart_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsSearchItemsHitsItemsEnd_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "snippet",
              "wireValue": "snippet"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsSearchItemsHitsItemsSnippet_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsItemsSearchItemsHitsItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsItemsSearchItems": {
      "name": {
        "typeId": "ChannelsItemsSearchItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsItemsSearchItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "query",
              "wireValue": "query"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsSearchItemsQuery_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "hits",
              "wireValue": "hits"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsItemsSearchItemsHitsItems",
                      "typeId": "ChannelsItemsSearchItemsHitsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsSearchItemsHits_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsItemsSearchItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsItemsAlternativesItemsWordsItems": {
      "name": {
        "typeId": "ChannelsItemsAlternativesItemsWordsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsItemsAlternativesItemsWordsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "word",
              "wireValue": "word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsWordsItemsWord_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsWordsItemsStart_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsWordsItemsEnd_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsWordsItemsConfidence_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsItemsAlternativesItemsWordsItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsSentencesItems": {
      "name": {
        "typeId": "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsSentencesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsSentencesItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsSentencesItemsText_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsSentencesItemsStart_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsSentencesItemsEnd_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsSentencesItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsItemsAlternativesItemsParagraphsParagraphsItems": {
      "name": {
        "typeId": "ChannelsItemsAlternativesItemsParagraphsParagraphsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsItemsAlternativesItemsParagraphsParagraphsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "sentences",
              "wireValue": "sentences"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsSentencesItems",
                      "typeId": "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsSentencesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsSentences_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "speaker",
              "wireValue": "speaker"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsSpeaker_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "num_words",
              "wireValue": "num_words"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsNumWords_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsStart_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsParagraphsParagraphsItemsEnd_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsItemsAlternativesItemsParagraphsParagraphsItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsItemsAlternativesItemsParagraphs": {
      "name": {
        "typeId": "ChannelsItemsAlternativesItemsParagraphs",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsItemsAlternativesItemsParagraphs"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "transcript",
              "wireValue": "transcript"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsParagraphsTranscript_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "paragraphs",
              "wireValue": "paragraphs"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsItemsAlternativesItemsParagraphsParagraphsItems",
                      "typeId": "ChannelsItemsAlternativesItemsParagraphsParagraphsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsParagraphsParagraphs_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsItemsAlternativesItemsParagraphs_example_autogenerated": {}
        }
      }
    },
    "ChannelsItemsAlternativesItemsSummariesItems": {
      "name": {
        "typeId": "ChannelsItemsAlternativesItemsSummariesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsItemsAlternativesItemsSummariesItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "summary",
              "wireValue": "summary"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsSummariesItemsSummary_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "start_word",
              "wireValue": "start_word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsSummariesItemsStartWord_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "end_word",
              "wireValue": "end_word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsSummariesItemsEndWord_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsItemsAlternativesItemsSummariesItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsItemsAlternativesItemsTopicsItems": {
      "name": {
        "typeId": "ChannelsItemsAlternativesItemsTopicsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsItemsAlternativesItemsTopicsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsTopicsItemsText_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "start_word",
              "wireValue": "start_word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsTopicsItemsStartWord_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "end_word",
              "wireValue": "end_word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsTopicsItemsEndWord_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "topics",
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsTopicsItemsTopics_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsItemsAlternativesItemsTopicsItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsItemsAlternativesItems": {
      "name": {
        "typeId": "ChannelsItemsAlternativesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsItemsAlternativesItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "transcript",
              "wireValue": "transcript"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsTranscript_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "words",
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsItemsAlternativesItemsWordsItems",
                      "typeId": "ChannelsItemsAlternativesItemsWordsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsWords_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "paragraphs",
              "wireValue": "paragraphs"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsItemsAlternativesItemsParagraphs",
                  "typeId": "ChannelsItemsAlternativesItemsParagraphs",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsParagraphs_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "summaries",
              "wireValue": "summaries"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsItemsAlternativesItemsSummariesItems",
                      "typeId": "ChannelsItemsAlternativesItemsSummariesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsSummaries_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "topics",
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsItemsAlternativesItemsTopicsItems",
                      "typeId": "ChannelsItemsAlternativesItemsTopicsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternativesItemsTopics_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsItemsAlternativesItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsItems": {
      "name": {
        "typeId": "ChannelsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "search",
              "wireValue": "search"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsItemsSearchItems",
                      "typeId": "ChannelsItemsSearchItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsSearch_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "alternatives",
              "wireValue": "alternatives"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsItemsAlternativesItems",
                      "typeId": "ChannelsItemsAlternativesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsAlternatives_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "detected_language",
              "wireValue": "detected_language"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsItemsDetectedLanguage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsItems_example_autogenerated": {}
        }
      }
    },
    "channels": {
      "name": {
        "typeId": "channels",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "channels"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsItems",
              "typeId": "ChannelsItems",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsItems",
              "typeId": "ChannelsItems",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "channels_example_autogenerated": [
            {}
          ]
        }
      }
    },
    "UtterancesItemsWordsItems": {
      "name": {
        "typeId": "UtterancesItemsWordsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UtterancesItemsWordsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "word",
              "wireValue": "word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsWordsItemsWord_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsWordsItemsStart_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsWordsItemsEnd_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsWordsItemsConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "speaker",
              "wireValue": "speaker"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsWordsItemsSpeaker_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "speaker_confidence",
              "wireValue": "speaker_confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsWordsItemsSpeakerConfidence_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "punctuated_word",
              "wireValue": "punctuated_word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsWordsItemsPunctuatedWord_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UtterancesItemsWordsItems_example_autogenerated": {}
        }
      }
    },
    "UtterancesItems": {
      "name": {
        "typeId": "UtterancesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UtterancesItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsStart_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsEnd_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "channel",
              "wireValue": "channel"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsChannel_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "transcript",
              "wireValue": "transcript"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsTranscript_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "words",
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UtterancesItemsWordsItems",
                      "typeId": "UtterancesItemsWordsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsWords_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "speaker",
              "wireValue": "speaker"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsSpeaker_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UtterancesItemsId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UtterancesItems_example_autogenerated": {}
        }
      }
    },
    "utterances": {
      "name": {
        "typeId": "utterances",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "utterances"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UtterancesItems",
              "typeId": "UtterancesItems",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UtterancesItems",
              "typeId": "UtterancesItems",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "utterances_example_autogenerated": [
            {}
          ]
        }
      }
    },
    "summary": {
      "name": {
        "typeId": "summary",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "summary"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "result",
              "wireValue": "result"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SummaryResult_example_0": "success"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "short",
              "wireValue": "short"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SummaryShort_example_0": "Speaker 0 discusses the significance of the first all-female spacewalk with an all-female team, stating that it is a tribute to the skilled and qualified women who were denied opportunities in the past."
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "summary_example_autogenerated": {}
        }
      }
    },
    "TopicsResultsTopicsSegmentsItemsTopicsItems": {
      "name": {
        "typeId": "TopicsResultsTopicsSegmentsItemsTopicsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TopicsResultsTopicsSegmentsItemsTopicsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "topic",
              "wireValue": "topic"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TopicsResultsTopicsSegmentsItemsTopicsItemsTopic_example_0": "Spacewalk"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "confidence_score",
              "wireValue": "confidence_score"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TopicsResultsTopicsSegmentsItemsTopicsItemsConfidenceScore_example_0": 0.91581345
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TopicsResultsTopicsSegmentsItemsTopicsItems_example_autogenerated": {}
        }
      }
    },
    "TopicsResultsTopicsSegmentsItems": {
      "name": {
        "typeId": "TopicsResultsTopicsSegmentsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TopicsResultsTopicsSegmentsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TopicsResultsTopicsSegmentsItemsText_example_0": "And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today."
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start_word",
              "wireValue": "start_word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TopicsResultsTopicsSegmentsItemsStartWord_example_0": 32
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_word",
              "wireValue": "end_word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TopicsResultsTopicsSegmentsItemsEndWord_example_0": 69
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "topics",
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TopicsResultsTopicsSegmentsItemsTopicsItems",
                      "typeId": "TopicsResultsTopicsSegmentsItemsTopicsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TopicsResultsTopicsSegmentsItemsTopics_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TopicsResultsTopicsSegmentsItems_example_autogenerated": {}
        }
      }
    },
    "TopicsResultsTopics": {
      "name": {
        "typeId": "TopicsResultsTopics",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TopicsResultsTopics"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "segments",
              "wireValue": "segments"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TopicsResultsTopicsSegmentsItems",
                      "typeId": "TopicsResultsTopicsSegmentsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TopicsResultsTopicsSegments_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TopicsResultsTopics_example_autogenerated": {}
        }
      }
    },
    "TopicsResults": {
      "name": {
        "typeId": "TopicsResults",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TopicsResults"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "topics",
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TopicsResultsTopics",
                  "typeId": "TopicsResultsTopics",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TopicsResultsTopics_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TopicsResults_example_autogenerated": {}
        }
      }
    },
    "topics": {
      "name": {
        "typeId": "topics",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "topics"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TopicsResults",
                  "typeId": "TopicsResults",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TopicsResults_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Output whenever `topics=true` is used",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "topics_example_autogenerated": {}
        }
      }
    },
    "IntentsResultsIntentsSegmentsItemsIntentsItems": {
      "name": {
        "typeId": "IntentsResultsIntentsSegmentsItemsIntentsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "IntentsResultsIntentsSegmentsItemsIntentsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "intent",
              "wireValue": "intent"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "IntentsResultsIntentsSegmentsItemsIntentsItemsIntent_example_0": "Encourage podcasting"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "confidence_score",
              "wireValue": "confidence_score"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "IntentsResultsIntentsSegmentsItemsIntentsItemsConfidenceScore_example_0": 0.0038975573
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IntentsResultsIntentsSegmentsItemsIntentsItems_example_autogenerated": {}
        }
      }
    },
    "IntentsResultsIntentsSegmentsItems": {
      "name": {
        "typeId": "IntentsResultsIntentsSegmentsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "IntentsResultsIntentsSegmentsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "IntentsResultsIntentsSegmentsItemsText_example_0": "If you found this valuable, you can subscribe to the show on spotify or your favorite podcast app."
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start_word",
              "wireValue": "start_word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "IntentsResultsIntentsSegmentsItemsStartWord_example_0": 354
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_word",
              "wireValue": "end_word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "IntentsResultsIntentsSegmentsItemsEndWord_example_0": 414
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "intents",
              "wireValue": "intents"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "IntentsResultsIntentsSegmentsItemsIntentsItems",
                      "typeId": "IntentsResultsIntentsSegmentsItemsIntentsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IntentsResultsIntentsSegmentsItemsIntents_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IntentsResultsIntentsSegmentsItems_example_autogenerated": {}
        }
      }
    },
    "IntentsResultsIntents": {
      "name": {
        "typeId": "IntentsResultsIntents",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "IntentsResultsIntents"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "segments",
              "wireValue": "segments"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "IntentsResultsIntentsSegmentsItems",
                      "typeId": "IntentsResultsIntentsSegmentsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IntentsResultsIntentsSegments_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IntentsResultsIntents_example_autogenerated": {}
        }
      }
    },
    "IntentsResults": {
      "name": {
        "typeId": "IntentsResults",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "IntentsResults"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "intents",
              "wireValue": "intents"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "IntentsResultsIntents",
                  "typeId": "IntentsResultsIntents",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IntentsResultsIntents_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IntentsResults_example_autogenerated": {}
        }
      }
    },
    "intents": {
      "name": {
        "typeId": "intents",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "intents"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "IntentsResults",
                  "typeId": "IntentsResults",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IntentsResults_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Output whenever `intents=true` is used",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "intents_example_autogenerated": {}
        }
      }
    },
    "SentimentsSegmentsItems": {
      "name": {
        "typeId": "SentimentsSegmentsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SentimentsSegmentsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SentimentsSegmentsItemsText_example_0": "Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today."
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start_word",
              "wireValue": "start_word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SentimentsSegmentsItemsStartWord_example_0": 0
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_word",
              "wireValue": "end_word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SentimentsSegmentsItemsEndWord_example_0": 69
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sentiment",
              "wireValue": "sentiment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SentimentsSegmentsItemsSentiment_example_0": "positive"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sentiment_score",
              "wireValue": "sentiment_score"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SentimentsSegmentsItemsSentimentScore_example_0": 0.5810546875
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SentimentsSegmentsItems_example_autogenerated": {}
        }
      }
    },
    "SentimentsAverage": {
      "name": {
        "typeId": "SentimentsAverage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SentimentsAverage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "sentiment",
              "wireValue": "sentiment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SentimentsAverageSentiment_example_0": "positive"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sentiment_score",
              "wireValue": "sentiment_score"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SentimentsAverageSentimentScore_example_0": 0.5810185185185185
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SentimentsAverage_example_autogenerated": {}
        }
      }
    },
    "sentiments": {
      "name": {
        "typeId": "sentiments",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "sentiments"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "segments",
              "wireValue": "segments"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "SentimentsSegmentsItems",
                      "typeId": "SentimentsSegmentsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentimentsSegments_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "average",
              "wireValue": "average"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "SentimentsAverage",
                  "typeId": "SentimentsAverage",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentimentsAverage_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Output whenever `sentiment=true` is used",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "sentiments_example_autogenerated": {}
        }
      }
    },
    "results": {
      "name": {
        "typeId": "results",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "results"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "channels",
              "wireValue": "channels"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "channels",
              "typeId": "channels",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "utterances",
              "wireValue": "utterances"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "utterances",
                  "typeId": "utterances",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "summary",
              "wireValue": "summary"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "summary",
                  "typeId": "summary",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "topics",
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "topics",
                  "typeId": "topics",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "intents",
              "wireValue": "intents"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "intents",
                  "typeId": "intents",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sentiments",
              "wireValue": "sentiments"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "sentiments",
                  "typeId": "sentiments",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "results_example_autogenerated": {
            "channels": [
              {}
            ]
          }
        }
      }
    },
    "response": {
      "name": {
        "typeId": "response",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "response"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "metadata",
              "typeId": "metadata",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "results",
              "typeId": "results",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The standard transcription response",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "response_example_autogenerated": {
            "metadata": {
              "request_id": "a847f427-4ad5-4d67-9b95-db801e58251c",
              "sha256": "154e291ecfa8be6ab8343560bcc109008fa7853eb5372533e8efdefc9b504c33",
              "created": "2024-05-12T18:57:13.426Z",
              "duration": 25.9,
              "channels": 1,
              "models": [
                "30089e05-99d1-4376-b32e-c263170674af"
              ],
              "model_info": {}
            },
            "results": {
              "channels": [
                {}
              ]
            }
          }
        }
      }
    },
    "text_request_url": {
      "name": {
        "typeId": "text_request_url",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "text_request_url"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "url",
              "wireValue": "url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uri"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL pointing to the text source",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextRequestUrlUrl_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The plain text to analyze",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextRequestUrlText_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "text_request_url_example_autogenerated": {
            "url": "string"
          }
        }
      }
    },
    "text_request_text": {
      "name": {
        "typeId": "text_request_text",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "text_request_text"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "url",
              "wireValue": "url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A URL pointing to the text source",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextRequestTextUrl_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The plain text to analyze",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextRequestTextText_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "text_request_text_example_autogenerated": {
            "text": "string"
          }
        }
      }
    },
    "text_request": {
      "name": {
        "typeId": "text_request",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "text_request"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "text_request_url",
              "typeId": "text_request_url",
              "inline": false,
              "displayName": "text_request_url",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "text_request_text",
              "typeId": "text_request_text",
              "inline": false,
              "displayName": "text_request_text",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "text_request_example_autogenerated": {
            "url": "string"
          }
        }
      }
    },
    "TextMetadataMetadataSummaryInfo": {
      "name": {
        "typeId": "TextMetadataMetadataSummaryInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TextMetadataMetadataSummaryInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model_uuid",
              "wireValue": "model_uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataSummaryInfoModelUuid_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "input_tokens",
              "wireValue": "input_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataSummaryInfoInputTokens_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "output_tokens",
              "wireValue": "output_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataSummaryInfoOutputTokens_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TextMetadataMetadataSummaryInfo_example_autogenerated": {}
        }
      }
    },
    "TextMetadataMetadataSentimentInfo": {
      "name": {
        "typeId": "TextMetadataMetadataSentimentInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TextMetadataMetadataSentimentInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model_uuid",
              "wireValue": "model_uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataSentimentInfoModelUuid_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "input_tokens",
              "wireValue": "input_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataSentimentInfoInputTokens_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "output_tokens",
              "wireValue": "output_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataSentimentInfoOutputTokens_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TextMetadataMetadataSentimentInfo_example_autogenerated": {}
        }
      }
    },
    "TextMetadataMetadataTopicsInfo": {
      "name": {
        "typeId": "TextMetadataMetadataTopicsInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TextMetadataMetadataTopicsInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model_uuid",
              "wireValue": "model_uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataTopicsInfoModelUuid_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "input_tokens",
              "wireValue": "input_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataTopicsInfoInputTokens_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "output_tokens",
              "wireValue": "output_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataTopicsInfoOutputTokens_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TextMetadataMetadataTopicsInfo_example_autogenerated": {}
        }
      }
    },
    "TextMetadataMetadataIntentsInfo": {
      "name": {
        "typeId": "TextMetadataMetadataIntentsInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TextMetadataMetadataIntentsInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model_uuid",
              "wireValue": "model_uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataIntentsInfoModelUuid_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "input_tokens",
              "wireValue": "input_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataIntentsInfoInputTokens_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "output_tokens",
              "wireValue": "output_tokens"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataIntentsInfoOutputTokens_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TextMetadataMetadataIntentsInfo_example_autogenerated": {}
        }
      }
    },
    "TextMetadataMetadata": {
      "name": {
        "typeId": "TextMetadataMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TextMetadataMetadata"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TextMetadataMetadataRequestId_example_0": "d04af392-db11-4c1d-83e1-20e34f0b8999"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TextMetadataMetadataCreated_example_0": "2024-11-18T23:47:44.674Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "language",
              "wireValue": "language"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TextMetadataMetadataLanguage_example_0": "en"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "summary_info",
              "wireValue": "summary_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TextMetadataMetadataSummaryInfo",
                  "typeId": "TextMetadataMetadataSummaryInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataSummaryInfo_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "sentiment_info",
              "wireValue": "sentiment_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TextMetadataMetadataSentimentInfo",
                  "typeId": "TextMetadataMetadataSentimentInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataSentimentInfo_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "topics_info",
              "wireValue": "topics_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TextMetadataMetadataTopicsInfo",
                  "typeId": "TextMetadataMetadataTopicsInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataTopicsInfo_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "intents_info",
              "wireValue": "intents_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TextMetadataMetadataIntentsInfo",
                  "typeId": "TextMetadataMetadataIntentsInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadataIntentsInfo_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TextMetadataMetadata_example_autogenerated": {}
        }
      }
    },
    "text_metadata": {
      "name": {
        "typeId": "text_metadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "text_metadata"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TextMetadataMetadata",
                  "typeId": "TextMetadataMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextMetadataMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "text_metadata_example_autogenerated": {}
        }
      }
    },
    "TextSummaryResultsSummary": {
      "name": {
        "typeId": "TextSummaryResultsSummary",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TextSummaryResultsSummary"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TextSummaryResultsSummaryText_example_0": "The summary of the text submitted."
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TextSummaryResultsSummary_example_autogenerated": {}
        }
      }
    },
    "TextSummaryResults": {
      "name": {
        "typeId": "TextSummaryResults",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TextSummaryResults"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "summary",
              "wireValue": "summary"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TextSummaryResultsSummary",
                  "typeId": "TextSummaryResultsSummary",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextSummaryResultsSummary_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TextSummaryResults_example_autogenerated": {}
        }
      }
    },
    "text_summary": {
      "name": {
        "typeId": "text_summary",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "text_summary"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TextSummaryResults",
                  "typeId": "TextSummaryResults",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TextSummaryResults_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Output whenever `summary=true` is used",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "text_summary_example_autogenerated": {}
        }
      }
    },
    "text_results": {
      "name": {
        "typeId": "text_results",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "text_results"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "summary",
              "wireValue": "summary"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "text_summary",
                  "typeId": "text_summary",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "topics",
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "topics",
                  "typeId": "topics",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "intents",
              "wireValue": "intents"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "intents",
                  "typeId": "intents",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sentiments",
              "wireValue": "sentiments"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "sentiments",
                  "typeId": "sentiments",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "text_results_example_autogenerated": {}
        }
      }
    },
    "text_response": {
      "name": {
        "typeId": "text_response",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "text_response"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "text_metadata",
              "typeId": "text_metadata",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "text_results",
              "typeId": "text_results",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The standard text response",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "text_response_example_autogenerated": {
            "metadata": {},
            "results": {}
          }
        }
      }
    },
    "speak_request": {
      "name": {
        "typeId": "speak_request",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_request"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The text content to be converted to speech",
            "v2Examples": {
              "userSpecifiedExamples": {
                "SpeakRequestText_example_0": "Hello, welcome to Deepgram!"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Request body for text-to-speech conversion",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "speak_request_example_autogenerated": {
            "text": "Hello, welcome to Deepgram!"
          }
        }
      }
    },
    "speak_response": {
      "name": {
        "typeId": "speak_response",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_response"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "binary"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SpeakResponseResults_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The standard text response",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "speak_response_example_autogenerated": {}
        }
      }
    },
    "update_projects": {
      "name": {
        "typeId": "update_projects",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "update_projects"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UpdateProjectsName_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "update_projects_example_0": {
            "name": "My Project"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "SttModelsItems": {
      "name": {
        "typeId": "SttModelsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SttModelsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SttModelsItemsName_example_0": "conversationalai"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "canonical_name",
              "wireValue": "canonical_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SttModelsItemsCanonicalName_example_0": "conversationalai"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "architecture",
              "wireValue": "architecture"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SttModelsItemsArchitecture_example_0": "base"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "languages",
              "wireValue": "languages"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SttModelsItemsLanguages_example_0": [
                  "en",
                  "en-us"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "version",
              "wireValue": "version"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SttModelsItemsVersion_example_0": "2021-11-10.1"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "uuid",
              "wireValue": "uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SttModelsItemsUuid_example_0": "6b28e919-8427-4f32-9847-492e2efd7daf"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "batch",
              "wireValue": "batch"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SttModelsItemsBatch_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "streaming",
              "wireValue": "streaming"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SttModelsItemsStreaming_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "formatted_output",
              "wireValue": "formatted_output"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SttModelsItemsFormattedOutput_example_0": true
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SttModelsItems_example_autogenerated": {}
        }
      }
    },
    "stt_models": {
      "name": {
        "typeId": "stt_models",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "stt_models"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "SttModelsItems",
              "typeId": "SttModelsItems",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "SttModelsItems",
              "typeId": "SttModelsItems",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "stt_models_example_autogenerated": [
            {}
          ]
        }
      }
    },
    "TtsModelsItemsMetadata": {
      "name": {
        "typeId": "TtsModelsItemsMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TtsModelsItemsMetadata"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "accent",
              "wireValue": "accent"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TtsModelsItemsMetadataAccent_example_0": "American"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "color",
              "wireValue": "color"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TtsModelsItemsMetadataColor_example_0": "#949498"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "image",
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TtsModelsItemsMetadataImage_example_0": "https://static.deepgram.com/examples/avatars/zeus.jpg"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sample",
              "wireValue": "sample"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TtsModelsItemsMetadataSample_example_0": "https://static.deepgram.com/examples/voices/zeus.wav"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "tags",
              "wireValue": "tags"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TtsModelsItemsMetadataTags_example_0": [
                  "masculine"
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TtsModelsItemsMetadata_example_autogenerated": {}
        }
      }
    },
    "TtsModelsItems": {
      "name": {
        "typeId": "TtsModelsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TtsModelsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TtsModelsItemsName_example_0": "zeus"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "canonical_name",
              "wireValue": "canonical_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TtsModelsItemsCanonicalName_example_0": "aura-zeus-en"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "architecture",
              "wireValue": "architecture"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TtsModelsItemsArchitecture_example_0": "aura"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "languages",
              "wireValue": "languages"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TtsModelsItemsLanguages_example_0": [
                  "en",
                  "en-us"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "version",
              "wireValue": "version"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TtsModelsItemsVersion_example_0": "2024-07-30.0"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "uuid",
              "wireValue": "uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TtsModelsItemsUuid_example_0": "9c28bce5-f144-4d32-9034-843aa7aed63e"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TtsModelsItemsMetadata",
                  "typeId": "TtsModelsItemsMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TtsModelsItemsMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TtsModelsItems_example_autogenerated": {}
        }
      }
    },
    "tts_models": {
      "name": {
        "typeId": "tts_models",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "tts_models"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TtsModelsItems",
              "typeId": "TtsModelsItems",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TtsModelsItems",
              "typeId": "TtsModelsItems",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "tts_models_example_autogenerated": [
            {}
          ]
        }
      }
    },
    "KeysItemsMember": {
      "name": {
        "typeId": "KeysItemsMember",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "KeysItemsMember"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "member_id",
              "wireValue": "member_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeysItemsMemberMemberId_example_0": "1000-2000-3000-4000"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeysItemsMemberEmail_example_0": "john@test.com"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "KeysItemsMember_example_autogenerated": {}
        }
      }
    },
    "KeysItemsApiKey": {
      "name": {
        "typeId": "KeysItemsApiKey",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "KeysItemsApiKey"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "api_key_id",
              "wireValue": "api_key_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeysItemsApiKeyApiKeyId_example_0": "1234567890abcdef1234567890abcdef"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "comment",
              "wireValue": "comment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeysItemsApiKeyComment_example_0": "A comment"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "scopes",
              "wireValue": "scopes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeysItemsApiKeyScopes_example_0": [
                  "admin"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeysItemsApiKeyCreated_example_0": "2021-01-01T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "KeysItemsApiKey_example_autogenerated": {}
        }
      }
    },
    "KeysItems": {
      "name": {
        "typeId": "KeysItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "KeysItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "member",
              "wireValue": "member"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "KeysItemsMember",
                  "typeId": "KeysItemsMember",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "KeysItemsMember_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "api_key",
              "wireValue": "api_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "KeysItemsApiKey",
                  "typeId": "KeysItemsApiKey",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "KeysItemsApiKey_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "KeysItems_example_autogenerated": {}
        }
      }
    },
    "keys": {
      "name": {
        "typeId": "keys",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "keys"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "KeysItems",
              "typeId": "KeysItems",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "KeysItems",
              "typeId": "KeysItems",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "keys_example_autogenerated": [
            {}
          ]
        }
      }
    },
    "key_created": {
      "name": {
        "typeId": "key_created",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "key_created"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "api_key_id",
              "wireValue": "api_key_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the API key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "KeyCreatedApiKeyId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The API key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "KeyCreatedKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "comment",
              "wireValue": "comment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A comment for the API key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "KeyCreatedComment_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "scopes",
              "wireValue": "scopes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the scopes for the API key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "KeyCreatedScopes_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "tags",
              "wireValue": "tags"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the tags for the API key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "KeyCreatedTags_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "API key created",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "key_created_example_0": {
            "api_key_id": "1234567890abcdef1234567890abcdef",
            "key": "1234567890abcdef1234567890abcdef",
            "scopes": [
              "member"
            ],
            "tags": [
              "tag-1"
            ],
            "comments": "a comment",
            "expiration_date": "2024-05-01T00:00:00.000000Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "KeyMemberApiKey": {
      "name": {
        "typeId": "KeyMemberApiKey",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "KeyMemberApiKey"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "api_key_id",
              "wireValue": "api_key_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeyMemberApiKeyApiKeyId_example_0": "1234567890abcdef1234567890abcdef"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "comment",
              "wireValue": "comment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeyMemberApiKeyComment_example_0": "A comment"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "scopes",
              "wireValue": "scopes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeyMemberApiKeyScopes_example_0": [
                  "admin"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeyMemberApiKeyCreated_example_0": "2021-01-01T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "KeyMemberApiKey_example_autogenerated": {}
        }
      }
    },
    "KeyMember": {
      "name": {
        "typeId": "KeyMember",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "KeyMember"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "member_id",
              "wireValue": "member_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeyMemberMemberId_example_0": "1000-2000-3000-4000"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeyMemberEmail_example_0": "john@test.com"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "first_name",
              "wireValue": "first_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeyMemberFirstName_example_0": "John"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "last_name",
              "wireValue": "last_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "KeyMemberLastName_example_0": "Doe"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "api_key",
              "wireValue": "api_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "KeyMemberApiKey",
                  "typeId": "KeyMemberApiKey",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "KeyMemberApiKey_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "KeyMember_example_autogenerated": {}
        }
      }
    },
    "key": {
      "name": {
        "typeId": "key",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "key"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "member",
              "wireValue": "member"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "KeyMember",
                  "typeId": "KeyMember",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "KeyMember_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "key_example_autogenerated": {}
        }
      }
    },
    "update_member_scope": {
      "name": {
        "typeId": "update_member_scope",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "update_member_scope"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "scope",
              "wireValue": "scope"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A scope to update",
            "v2Examples": {
              "userSpecifiedExamples": {
                "UpdateMemberScopeScope_example_0": "admin"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "update_member_scope_example_autogenerated": {
            "scope": "admin"
          }
        }
      }
    },
    "create_project_invite": {
      "name": {
        "typeId": "create_project_invite",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "create_project_invite"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The email address of the invitee",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateProjectInviteEmail_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "scope",
              "wireValue": "scope"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The scope of the invitee",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateProjectInviteScope_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Request body for creating a project invite",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "create_project_invite_example_autogenerated": {
            "email": "string",
            "scope": "string"
          }
        }
      }
    },
    "RequestResponse": {
      "name": {
        "typeId": "RequestResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RequestResponse"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The response of the request",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RequestResponse_example_autogenerated": {}
        }
      }
    },
    "request": {
      "name": {
        "typeId": "request",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "request"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestRequestId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_uuid",
              "wireValue": "project_uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestProjectUuid_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The date and time the request was created",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestCreated_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "path",
              "wireValue": "path"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The API path of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestPath_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "api_key_id",
              "wireValue": "api_key_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the API key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestApiKeyId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "response",
              "wireValue": "response"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RequestResponse",
                  "typeId": "RequestResponse",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The response of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestResponse_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "code",
              "wireValue": "code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The response code of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestCode_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "deployment",
              "wireValue": "deployment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The deployment type",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestDeployment_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "callback",
              "wireValue": "callback"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The callback URL for the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestCallback_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "A single request",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "request_example_autogenerated": {}
        }
      }
    },
    "create_distribution_creds": {
      "name": {
        "typeId": "create_distribution_creds",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "create_distribution_creds"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "comment",
              "wireValue": "comment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional comment about the credentials",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateDistributionCredsComment_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Request body for creating distribution credentials",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "create_distribution_creds_example_autogenerated": {}
        }
      }
    },
    "V1ListenPostParametersCallbackMethod": {
      "name": {
        "typeId": "V1ListenPostParametersCallbackMethod",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersCallbackMethod"
      },
      "shape": {
        "default": {
          "name": {
            "name": "POST",
            "wireValue": "POST"
          }
        },
        "values": [
          {
            "name": {
              "name": "POST",
              "wireValue": "POST"
            }
          },
          {
            "name": {
              "name": "PUT",
              "wireValue": "PUT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersCallbackMethod_example_autogenerated": "POST"
        }
      }
    },
    "V1ListenPostParametersCustomTopic": {
      "name": {
        "typeId": "V1ListenPostParametersCustomTopic",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersCustomTopic"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersCustomTopic_example_autogenerated": "string"
        }
      }
    },
    "V1ListenPostParametersCustomTopicMode": {
      "name": {
        "typeId": "V1ListenPostParametersCustomTopicMode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersCustomTopicMode"
      },
      "shape": {
        "default": {
          "name": {
            "name": "extended",
            "wireValue": "extended"
          }
        },
        "values": [
          {
            "name": {
              "name": "extended",
              "wireValue": "extended"
            }
          },
          {
            "name": {
              "name": "strict",
              "wireValue": "strict"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersCustomTopicMode_example_autogenerated": "extended"
        }
      }
    },
    "V1ListenPostParametersCustomIntent": {
      "name": {
        "typeId": "V1ListenPostParametersCustomIntent",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersCustomIntent"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersCustomIntent_example_autogenerated": "unsubscribe"
        }
      }
    },
    "V1ListenPostParametersCustomIntentMode": {
      "name": {
        "typeId": "V1ListenPostParametersCustomIntentMode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersCustomIntentMode"
      },
      "shape": {
        "default": {
          "name": {
            "name": "extended",
            "wireValue": "extended"
          }
        },
        "values": [
          {
            "name": {
              "name": "extended",
              "wireValue": "extended"
            }
          },
          {
            "name": {
              "name": "strict",
              "wireValue": "strict"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersCustomIntentMode_example_autogenerated": "extended"
        }
      }
    },
    "V1ListenPostParametersDetectLanguage": {
      "name": {
        "typeId": "V1ListenPostParametersDetectLanguage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersDetectLanguage"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "default": false,
                  "type": "boolean"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersDetectLanguage_example_autogenerated": false
        }
      }
    },
    "V1ListenPostParametersEncoding": {
      "name": {
        "typeId": "V1ListenPostParametersEncoding",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersEncoding"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "linear16",
              "wireValue": "linear16"
            }
          },
          {
            "name": {
              "name": "flac",
              "wireValue": "flac"
            }
          },
          {
            "name": {
              "name": "mulaw",
              "wireValue": "mulaw"
            }
          },
          {
            "name": {
              "name": "amr-nb",
              "wireValue": "amr-nb"
            }
          },
          {
            "name": {
              "name": "amr-wb",
              "wireValue": "amr-wb"
            }
          },
          {
            "name": {
              "name": "opus",
              "wireValue": "opus"
            }
          },
          {
            "name": {
              "name": "speex",
              "wireValue": "speex"
            }
          },
          {
            "name": {
              "name": "g729",
              "wireValue": "g729"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersEncoding_example_autogenerated": "linear16"
        }
      }
    },
    "V1ListenPostParametersExtra": {
      "name": {
        "typeId": "V1ListenPostParametersExtra",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersExtra"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersExtra_example_autogenerated": "string"
        }
      }
    },
    "V1ListenPostParametersKeywords": {
      "name": {
        "typeId": "V1ListenPostParametersKeywords",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersKeywords"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersKeywords_example_autogenerated": "string"
        }
      }
    },
    "V1ListenPostParametersLanguage": {
      "name": {
        "typeId": "V1ListenPostParametersLanguage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersLanguage"
      },
      "shape": {
        "default": {
          "name": {
            "name": "en",
            "wireValue": "en"
          }
        },
        "values": [
          {
            "name": {
              "name": "bg",
              "wireValue": "bg"
            }
          },
          {
            "name": {
              "name": "ca",
              "wireValue": "ca"
            }
          },
          {
            "name": {
              "name": "zh",
              "wireValue": "zh"
            }
          },
          {
            "name": {
              "name": "zh-CN",
              "wireValue": "zh-CN"
            }
          },
          {
            "name": {
              "name": "zh-TW",
              "wireValue": "zh-TW"
            }
          },
          {
            "name": {
              "name": "zh-HK",
              "wireValue": "zh-HK"
            }
          },
          {
            "name": {
              "name": "zh-Hans",
              "wireValue": "zh-Hans"
            }
          },
          {
            "name": {
              "name": "zh-Hant",
              "wireValue": "zh-Hant"
            }
          },
          {
            "name": {
              "name": "cs",
              "wireValue": "cs"
            }
          },
          {
            "name": {
              "name": "da",
              "wireValue": "da"
            }
          },
          {
            "name": {
              "name": "da-DK",
              "wireValue": "da-DK"
            }
          },
          {
            "name": {
              "name": "nl",
              "wireValue": "nl"
            }
          },
          {
            "name": {
              "name": "nl-BE",
              "wireValue": "nl-BE"
            }
          },
          {
            "name": {
              "name": "en",
              "wireValue": "en"
            }
          },
          {
            "name": {
              "name": "en-US",
              "wireValue": "en-US"
            }
          },
          {
            "name": {
              "name": "en-AU",
              "wireValue": "en-AU"
            }
          },
          {
            "name": {
              "name": "en-GB",
              "wireValue": "en-GB"
            }
          },
          {
            "name": {
              "name": "en-NZ",
              "wireValue": "en-NZ"
            }
          },
          {
            "name": {
              "name": "en-IN",
              "wireValue": "en-IN"
            }
          },
          {
            "name": {
              "name": "et",
              "wireValue": "et"
            }
          },
          {
            "name": {
              "name": "fi",
              "wireValue": "fi"
            }
          },
          {
            "name": {
              "name": "fr",
              "wireValue": "fr"
            }
          },
          {
            "name": {
              "name": "fr-CA",
              "wireValue": "fr-CA"
            }
          },
          {
            "name": {
              "name": "de",
              "wireValue": "de"
            }
          },
          {
            "name": {
              "name": "de-CH",
              "wireValue": "de-CH"
            }
          },
          {
            "name": {
              "name": "el",
              "wireValue": "el"
            }
          },
          {
            "name": {
              "name": "hi",
              "wireValue": "hi"
            }
          },
          {
            "name": {
              "name": "hi-Latn",
              "wireValue": "hi-Latn"
            }
          },
          {
            "name": {
              "name": "hu",
              "wireValue": "hu"
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            }
          },
          {
            "name": {
              "name": "it",
              "wireValue": "it"
            }
          },
          {
            "name": {
              "name": "ja",
              "wireValue": "ja"
            }
          },
          {
            "name": {
              "name": "ko",
              "wireValue": "ko"
            }
          },
          {
            "name": {
              "name": "ko-KR",
              "wireValue": "ko-KR"
            }
          },
          {
            "name": {
              "name": "lv",
              "wireValue": "lv"
            }
          },
          {
            "name": {
              "name": "lt",
              "wireValue": "lt"
            }
          },
          {
            "name": {
              "name": "ms",
              "wireValue": "ms"
            }
          },
          {
            "name": {
              "name": "no",
              "wireValue": "no"
            }
          },
          {
            "name": {
              "name": "pl",
              "wireValue": "pl"
            }
          },
          {
            "name": {
              "name": "pt",
              "wireValue": "pt"
            }
          },
          {
            "name": {
              "name": "pt-BR",
              "wireValue": "pt-BR"
            }
          },
          {
            "name": {
              "name": "pt-PT",
              "wireValue": "pt-PT"
            }
          },
          {
            "name": {
              "name": "ro",
              "wireValue": "ro"
            }
          },
          {
            "name": {
              "name": "ru",
              "wireValue": "ru"
            }
          },
          {
            "name": {
              "name": "sk",
              "wireValue": "sk"
            }
          },
          {
            "name": {
              "name": "es",
              "wireValue": "es"
            }
          },
          {
            "name": {
              "name": "es-419",
              "wireValue": "es-419"
            }
          },
          {
            "name": {
              "name": "es-LATAM",
              "wireValue": "es-LATAM"
            }
          },
          {
            "name": {
              "name": "sv",
              "wireValue": "sv"
            }
          },
          {
            "name": {
              "name": "sv-SE",
              "wireValue": "sv-SE"
            }
          },
          {
            "name": {
              "name": "taq",
              "wireValue": "taq"
            }
          },
          {
            "name": {
              "name": "th",
              "wireValue": "th"
            }
          },
          {
            "name": {
              "name": "th-TH",
              "wireValue": "th-TH"
            }
          },
          {
            "name": {
              "name": "tr",
              "wireValue": "tr"
            }
          },
          {
            "name": {
              "name": "uk",
              "wireValue": "uk"
            }
          },
          {
            "name": {
              "name": "vi",
              "wireValue": "vi"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "V1ListenPostParametersLanguage_example_0": "en-US"
        },
        "autogeneratedExamples": {}
      }
    },
    "V1ListenPostParametersModel0": {
      "name": {
        "typeId": "V1ListenPostParametersModel0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersModel0",
        "displayName": "V1ListenPostParametersModel0"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "nova-3",
              "wireValue": "nova-3"
            }
          },
          {
            "name": {
              "name": "nova-3-general",
              "wireValue": "nova-3-general"
            }
          },
          {
            "name": {
              "name": "nova-2",
              "wireValue": "nova-2"
            }
          },
          {
            "name": {
              "name": "nova-2-general",
              "wireValue": "nova-2-general"
            }
          },
          {
            "name": {
              "name": "nova-2-meeting",
              "wireValue": "nova-2-meeting"
            }
          },
          {
            "name": {
              "name": "nova-2-finance",
              "wireValue": "nova-2-finance"
            }
          },
          {
            "name": {
              "name": "nova-2-conversationalai",
              "wireValue": "nova-2-conversationalai"
            }
          },
          {
            "name": {
              "name": "nova-2-voicemail",
              "wireValue": "nova-2-voicemail"
            }
          },
          {
            "name": {
              "name": "nova-2-video",
              "wireValue": "nova-2-video"
            }
          },
          {
            "name": {
              "name": "nova-2-medical",
              "wireValue": "nova-2-medical"
            }
          },
          {
            "name": {
              "name": "nova-2-drivethru",
              "wireValue": "nova-2-drivethru"
            }
          },
          {
            "name": {
              "name": "nova-2-automotive",
              "wireValue": "nova-2-automotive"
            }
          },
          {
            "name": {
              "name": "nova",
              "wireValue": "nova"
            }
          },
          {
            "name": {
              "name": "nova-general",
              "wireValue": "nova-general"
            }
          },
          {
            "name": {
              "name": "nova-phonecall",
              "wireValue": "nova-phonecall"
            }
          },
          {
            "name": {
              "name": "nova-medical",
              "wireValue": "nova-medical"
            }
          },
          {
            "name": {
              "name": "enhanced",
              "wireValue": "enhanced"
            }
          },
          {
            "name": {
              "name": "enhanced-general",
              "wireValue": "enhanced-general"
            }
          },
          {
            "name": {
              "name": "enhanced-meeting",
              "wireValue": "enhanced-meeting"
            }
          },
          {
            "name": {
              "name": "enhanced-phonecall",
              "wireValue": "enhanced-phonecall"
            }
          },
          {
            "name": {
              "name": "enhanced-finance",
              "wireValue": "enhanced-finance"
            }
          },
          {
            "name": {
              "name": "base",
              "wireValue": "base"
            }
          },
          {
            "name": {
              "name": "meeting",
              "wireValue": "meeting"
            }
          },
          {
            "name": {
              "name": "phonecall",
              "wireValue": "phonecall"
            }
          },
          {
            "name": {
              "name": "finance",
              "wireValue": "finance"
            }
          },
          {
            "name": {
              "name": "conversationalai",
              "wireValue": "conversationalai"
            }
          },
          {
            "name": {
              "name": "voicemail",
              "wireValue": "voicemail"
            }
          },
          {
            "name": {
              "name": "video",
              "wireValue": "video"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Our public models available to all accounts",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "V1ListenPostParametersModel0_example_0": "nova-2"
        },
        "autogeneratedExamples": {}
      }
    },
    "V1ListenPostParametersModel": {
      "name": {
        "typeId": "V1ListenPostParametersModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersModel"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ListenPostParametersModel0",
              "typeId": "V1ListenPostParametersModel0",
              "displayName": "V1ListenPostParametersModel0",
              "inline": false,
              "type": "named"
            },
            "docs": "Our public models available to all accounts"
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Custom string if you've had a model trained by Deepgram"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersModel_example_autogenerated": "base-general"
        }
      }
    },
    "V1ListenPostParametersRedactSchemaOneOf1Items": {
      "name": {
        "typeId": "V1ListenPostParametersRedactSchemaOneOf1Items",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersRedactSchemaOneOf1Items"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "pci",
              "wireValue": "pci"
            }
          },
          {
            "name": {
              "name": "pii",
              "wireValue": "pii"
            }
          },
          {
            "name": {
              "name": "numbers",
              "wireValue": "numbers"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersRedactSchemaOneOf1Items_example_autogenerated": "pci"
        }
      }
    },
    "V1ListenPostParametersRedact1": {
      "name": {
        "typeId": "V1ListenPostParametersRedact1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersRedact1",
        "displayName": "V1ListenPostParametersRedact1"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ListenPostParametersRedactSchemaOneOf1Items",
              "typeId": "V1ListenPostParametersRedactSchemaOneOf1Items",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ListenPostParametersRedactSchemaOneOf1Items",
              "typeId": "V1ListenPostParametersRedactSchemaOneOf1Items",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersRedact1_example_autogenerated": [
            "pci"
          ]
        }
      }
    },
    "V1ListenPostParametersRedact": {
      "name": {
        "typeId": "V1ListenPostParametersRedact",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersRedact"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ListenPostParametersRedact1",
              "typeId": "V1ListenPostParametersRedact1",
              "displayName": "V1ListenPostParametersRedact1",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersRedact_example_autogenerated": "string"
        }
      }
    },
    "V1ListenPostParametersReplace": {
      "name": {
        "typeId": "V1ListenPostParametersReplace",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersReplace"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersReplace_example_autogenerated": "string"
        }
      }
    },
    "V1ListenPostParametersSearch": {
      "name": {
        "typeId": "V1ListenPostParametersSearch",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersSearch"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersSearch_example_autogenerated": "string"
        }
      }
    },
    "V1ListenPostParametersSummarize0": {
      "name": {
        "typeId": "V1ListenPostParametersSummarize0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersSummarize0",
        "displayName": "Versions"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "v2",
              "wireValue": "v2"
            }
          },
          {
            "name": {
              "name": "v1",
              "wireValue": "v1"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersSummarize0_example_autogenerated": "v2"
        }
      }
    },
    "V1ListenPostParametersSummarize": {
      "name": {
        "typeId": "V1ListenPostParametersSummarize",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersSummarize"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ListenPostParametersSummarize0",
              "typeId": "V1ListenPostParametersSummarize0",
              "displayName": "Versions",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersSummarize_example_autogenerated": false
        }
      }
    },
    "V1ListenPostParametersTag": {
      "name": {
        "typeId": "V1ListenPostParametersTag",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersTag"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersTag_example_autogenerated": "string"
        }
      }
    },
    "V1ListenPostParametersVersion0": {
      "name": {
        "typeId": "V1ListenPostParametersVersion0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersVersion0",
        "displayName": "V1ListenPostParametersVersion0"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "latest",
              "wireValue": "latest"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Use the latest version of a model",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "V1ListenPostParametersVersion0_example_0": "latest"
        },
        "autogeneratedExamples": {}
      }
    },
    "V1ListenPostParametersVersion": {
      "name": {
        "typeId": "V1ListenPostParametersVersion",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ListenPostParametersVersion"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ListenPostParametersVersion0",
              "typeId": "V1ListenPostParametersVersion0",
              "displayName": "V1ListenPostParametersVersion0",
              "inline": false,
              "type": "named"
            },
            "docs": "Use the latest version of a model"
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Use a previous version of a model"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ListenPostParametersVersion_example_autogenerated": "latest"
        }
      }
    },
    "ListenRequestBadRequestError": {
      "name": {
        "typeId": "ListenRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListenRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "err_code",
              "wireValue": "err_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error code",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ListenPostResponsesContentApplicationJsonSchemaErrCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "err_msg",
              "wireValue": "err_msg"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ListenPostResponsesContentApplicationJsonSchemaErrMsg_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ListenPostResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ListenRequestBadRequestError_example_0": {
            "err_code": "INVALID_QUERY_PARAMETER",
            "err_msg": "Failed to deserialize query parameters...",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "V1ReadPostParametersCallbackMethod": {
      "name": {
        "typeId": "V1ReadPostParametersCallbackMethod",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ReadPostParametersCallbackMethod"
      },
      "shape": {
        "default": {
          "name": {
            "name": "POST",
            "wireValue": "POST"
          }
        },
        "values": [
          {
            "name": {
              "name": "POST",
              "wireValue": "POST"
            }
          },
          {
            "name": {
              "name": "PUT",
              "wireValue": "PUT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ReadPostParametersCallbackMethod_example_autogenerated": "POST"
        }
      }
    },
    "V1ReadPostParametersCustomTopic": {
      "name": {
        "typeId": "V1ReadPostParametersCustomTopic",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ReadPostParametersCustomTopic"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ReadPostParametersCustomTopic_example_autogenerated": "string"
        }
      }
    },
    "V1ReadPostParametersCustomTopicMode": {
      "name": {
        "typeId": "V1ReadPostParametersCustomTopicMode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ReadPostParametersCustomTopicMode"
      },
      "shape": {
        "default": {
          "name": {
            "name": "extended",
            "wireValue": "extended"
          }
        },
        "values": [
          {
            "name": {
              "name": "extended",
              "wireValue": "extended"
            }
          },
          {
            "name": {
              "name": "strict",
              "wireValue": "strict"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ReadPostParametersCustomTopicMode_example_autogenerated": "extended"
        }
      }
    },
    "V1ReadPostParametersReadLanguage": {
      "name": {
        "typeId": "V1ReadPostParametersReadLanguage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ReadPostParametersReadLanguage"
      },
      "shape": {
        "default": {
          "name": {
            "name": "en",
            "wireValue": "en"
          }
        },
        "values": [
          {
            "name": {
              "name": "en",
              "wireValue": "en"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ReadPostParametersReadLanguage_example_autogenerated": "en"
        }
      }
    },
    "TextReadRequestBadRequestError": {
      "name": {
        "typeId": "TextReadRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TextReadRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "err_code",
              "wireValue": "err_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error code",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ReadPostResponsesContentApplicationJsonSchemaErrCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "err_msg",
              "wireValue": "err_msg"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ReadPostResponsesContentApplicationJsonSchemaErrMsg_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ReadPostResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "TextReadRequestBadRequestError_example_0": {
            "err_code": "INVALID_QUERY_PARAMETER",
            "err_msg": "Failed to deserialize query parameters...",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "V1SpeakPostParametersBitRate0": {
      "name": {
        "typeId": "V1SpeakPostParametersBitRate0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersBitRate0",
        "displayName": "mp3(default)"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "32000",
                "camelCase": {
                  "unsafeName": "32000",
                  "safeName": "_32000"
                },
                "pascalCase": {
                  "unsafeName": "32000",
                  "safeName": "_32000"
                },
                "snakeCase": {
                  "unsafeName": "32000",
                  "safeName": "_32000"
                },
                "screamingSnakeCase": {
                  "unsafeName": "32000",
                  "safeName": "_32000"
                }
              },
              "wireValue": "32000"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "48000",
                "camelCase": {
                  "unsafeName": "48000",
                  "safeName": "_48000"
                },
                "pascalCase": {
                  "unsafeName": "48000",
                  "safeName": "_48000"
                },
                "snakeCase": {
                  "unsafeName": "48000",
                  "safeName": "_48000"
                },
                "screamingSnakeCase": {
                  "unsafeName": "48000",
                  "safeName": "_48000"
                }
              },
              "wireValue": "48000"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - mp3(default). Supported bitrates - 32000, 48000(default) bps.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersBitRate0_example_autogenerated": 32000
        }
      }
    },
    "V1SpeakPostParametersBitRate": {
      "name": {
        "typeId": "V1SpeakPostParametersBitRate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersBitRate"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersBitRate0",
              "typeId": "V1SpeakPostParametersBitRate0",
              "displayName": "mp3(default)",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - mp3(default). Supported bitrates - 32000, 48000(default) bps."
          },
          {
            "type": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "max": 650000,
                    "min": 4000
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Encoding - opus. Bitrate range - 4000-650000 bps."
          },
          {
            "type": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "max": 192000,
                    "min": 4000
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Encoding -aac. Bitrate range - 4000-192000 bps."
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersBitRate_example_autogenerated": 48000
        }
      }
    },
    "V1SpeakPostParametersContainer0": {
      "name": {
        "typeId": "V1SpeakPostParametersContainer0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersContainer0",
        "displayName": "linear16"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "wav",
              "wireValue": "wav"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - linear16. Supported container - wav (default), or no container.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersContainer0_example_autogenerated": "wav"
        }
      }
    },
    "V1SpeakPostParametersContainer1": {
      "name": {
        "typeId": "V1SpeakPostParametersContainer1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersContainer1",
        "displayName": "mulaw"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "wav",
              "wireValue": "wav"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - mulaw. Supported container - wav (default), or no container.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersContainer1_example_autogenerated": "wav"
        }
      }
    },
    "V1SpeakPostParametersContainer2": {
      "name": {
        "typeId": "V1SpeakPostParametersContainer2",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersContainer2",
        "displayName": "alaw"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "wav",
              "wireValue": "wav"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - alaw. Supported container - wav (default), or no container.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersContainer2_example_autogenerated": "wav"
        }
      }
    },
    "V1SpeakPostParametersContainer3": {
      "name": {
        "typeId": "V1SpeakPostParametersContainer3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersContainer3",
        "displayName": "opus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "ogg",
              "wireValue": "ogg"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - opus. Supported container - ogg (default).",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersContainer3_example_autogenerated": "ogg"
        }
      }
    },
    "V1SpeakPostParametersContainer": {
      "name": {
        "typeId": "V1SpeakPostParametersContainer",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersContainer"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersContainer0",
              "typeId": "V1SpeakPostParametersContainer0",
              "displayName": "linear16",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - linear16. Supported container - wav (default), or no container."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersContainer1",
              "typeId": "V1SpeakPostParametersContainer1",
              "displayName": "mulaw",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - mulaw. Supported container - wav (default), or no container."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersContainer2",
              "typeId": "V1SpeakPostParametersContainer2",
              "displayName": "alaw",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - alaw. Supported container - wav (default), or no container."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersContainer3",
              "typeId": "V1SpeakPostParametersContainer3",
              "displayName": "opus",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - opus. Supported container - ogg (default)."
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersContainer_example_autogenerated": "wav"
        }
      }
    },
    "V1SpeakPostParametersSpeakEncoding0": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakEncoding0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakEncoding0",
        "displayName": "linear16"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "linear16",
              "wireValue": "linear16"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - linear16. Uncompressed, high-quality audio format often used for telephony or audio processing.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakEncoding0_example_autogenerated": "linear16"
        }
      }
    },
    "V1SpeakPostParametersSpeakEncoding1": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakEncoding1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakEncoding1",
        "displayName": "flac"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "flac",
              "wireValue": "flac"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - flac. Lossless audio format for high-quality compression.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakEncoding1_example_autogenerated": "flac"
        }
      }
    },
    "V1SpeakPostParametersSpeakEncoding2": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakEncoding2",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakEncoding2",
        "displayName": "mulaw"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "mulaw",
              "wireValue": "mulaw"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - mulaw. Compressed audio format commonly used in telephony.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakEncoding2_example_autogenerated": "mulaw"
        }
      }
    },
    "V1SpeakPostParametersSpeakEncoding3": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakEncoding3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakEncoding3",
        "displayName": "alaw"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "alaw",
              "wireValue": "alaw"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - alaw. Similar to mulaw but used in international telephony.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakEncoding3_example_autogenerated": "alaw"
        }
      }
    },
    "V1SpeakPostParametersSpeakEncoding4": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakEncoding4",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakEncoding4",
        "displayName": "mp3"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "mp3",
              "wireValue": "mp3"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - mp3. Popular compressed audio format for music and streaming.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakEncoding4_example_autogenerated": "mp3"
        }
      }
    },
    "V1SpeakPostParametersSpeakEncoding5": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakEncoding5",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakEncoding5",
        "displayName": "opus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "opus",
              "wireValue": "opus"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - opus. High-compression audio format optimized for real-time communications.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakEncoding5_example_autogenerated": "opus"
        }
      }
    },
    "V1SpeakPostParametersSpeakEncoding6": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakEncoding6",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakEncoding6",
        "displayName": "aac"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "aac",
              "wireValue": "aac"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - aac. Advanced audio format offering better quality at smaller file sizes than mp3.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakEncoding6_example_autogenerated": "aac"
        }
      }
    },
    "V1SpeakPostParametersSpeakEncoding": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakEncoding",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakEncoding"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersSpeakEncoding0",
              "typeId": "V1SpeakPostParametersSpeakEncoding0",
              "displayName": "linear16",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - linear16. Uncompressed, high-quality audio format often used for telephony or audio processing."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersSpeakEncoding1",
              "typeId": "V1SpeakPostParametersSpeakEncoding1",
              "displayName": "flac",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - flac. Lossless audio format for high-quality compression."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersSpeakEncoding2",
              "typeId": "V1SpeakPostParametersSpeakEncoding2",
              "displayName": "mulaw",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - mulaw. Compressed audio format commonly used in telephony."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersSpeakEncoding3",
              "typeId": "V1SpeakPostParametersSpeakEncoding3",
              "displayName": "alaw",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - alaw. Similar to mulaw but used in international telephony."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersSpeakEncoding4",
              "typeId": "V1SpeakPostParametersSpeakEncoding4",
              "displayName": "mp3",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - mp3. Popular compressed audio format for music and streaming."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersSpeakEncoding5",
              "typeId": "V1SpeakPostParametersSpeakEncoding5",
              "displayName": "opus",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - opus. High-compression audio format optimized for real-time communications."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersSpeakEncoding6",
              "typeId": "V1SpeakPostParametersSpeakEncoding6",
              "displayName": "aac",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - aac. Advanced audio format offering better quality at smaller file sizes than mp3."
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakEncoding_example_autogenerated": "mp3"
        }
      }
    },
    "V1SpeakPostParametersSpeakModel": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakModel"
      },
      "shape": {
        "default": {
          "name": {
            "name": "aura-asteria-en",
            "wireValue": "aura-asteria-en"
          }
        },
        "values": [
          {
            "name": {
              "name": "aura-asteria-en",
              "wireValue": "aura-asteria-en"
            }
          },
          {
            "name": {
              "name": "aura-luna-en",
              "wireValue": "aura-luna-en"
            }
          },
          {
            "name": {
              "name": "aura-stella-en",
              "wireValue": "aura-stella-en"
            }
          },
          {
            "name": {
              "name": "aura-athena-en",
              "wireValue": "aura-athena-en"
            }
          },
          {
            "name": {
              "name": "aura-hera-en",
              "wireValue": "aura-hera-en"
            }
          },
          {
            "name": {
              "name": "aura-orion-en",
              "wireValue": "aura-orion-en"
            }
          },
          {
            "name": {
              "name": "aura-arcas-en",
              "wireValue": "aura-arcas-en"
            }
          },
          {
            "name": {
              "name": "aura-perseus-en",
              "wireValue": "aura-perseus-en"
            }
          },
          {
            "name": {
              "name": "aura-angus-en",
              "wireValue": "aura-angus-en"
            }
          },
          {
            "name": {
              "name": "aura-orpheus-en",
              "wireValue": "aura-orpheus-en"
            }
          },
          {
            "name": {
              "name": "aura-helios-en",
              "wireValue": "aura-helios-en"
            }
          },
          {
            "name": {
              "name": "aura-zeus-en",
              "wireValue": "aura-zeus-en"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakModel_example_autogenerated": "aura-asteria-en"
        }
      }
    },
    "V1SpeakPostParametersSpeakSampleRate0": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakSampleRate0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakSampleRate0",
        "displayName": "linear16"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "8000",
                "camelCase": {
                  "unsafeName": "8000",
                  "safeName": "_8000"
                },
                "pascalCase": {
                  "unsafeName": "8000",
                  "safeName": "_8000"
                },
                "snakeCase": {
                  "unsafeName": "8000",
                  "safeName": "_8000"
                },
                "screamingSnakeCase": {
                  "unsafeName": "8000",
                  "safeName": "_8000"
                }
              },
              "wireValue": "8000"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "16000",
                "camelCase": {
                  "unsafeName": "16000",
                  "safeName": "_16000"
                },
                "pascalCase": {
                  "unsafeName": "16000",
                  "safeName": "_16000"
                },
                "snakeCase": {
                  "unsafeName": "16000",
                  "safeName": "_16000"
                },
                "screamingSnakeCase": {
                  "unsafeName": "16000",
                  "safeName": "_16000"
                }
              },
              "wireValue": "16000"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "24000",
                "camelCase": {
                  "unsafeName": "24000",
                  "safeName": "_24000"
                },
                "pascalCase": {
                  "unsafeName": "24000",
                  "safeName": "_24000"
                },
                "snakeCase": {
                  "unsafeName": "24000",
                  "safeName": "_24000"
                },
                "screamingSnakeCase": {
                  "unsafeName": "24000",
                  "safeName": "_24000"
                }
              },
              "wireValue": "24000"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "32000",
                "camelCase": {
                  "unsafeName": "32000",
                  "safeName": "_32000"
                },
                "pascalCase": {
                  "unsafeName": "32000",
                  "safeName": "_32000"
                },
                "snakeCase": {
                  "unsafeName": "32000",
                  "safeName": "_32000"
                },
                "screamingSnakeCase": {
                  "unsafeName": "32000",
                  "safeName": "_32000"
                }
              },
              "wireValue": "32000"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "48000",
                "camelCase": {
                  "unsafeName": "48000",
                  "safeName": "_48000"
                },
                "pascalCase": {
                  "unsafeName": "48000",
                  "safeName": "_48000"
                },
                "snakeCase": {
                  "unsafeName": "48000",
                  "safeName": "_48000"
                },
                "screamingSnakeCase": {
                  "unsafeName": "48000",
                  "safeName": "_48000"
                }
              },
              "wireValue": "48000"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - linear16. Supported sample rates - 8000, 16000, 24000, 32000, 48000 Hz.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakSampleRate0_example_autogenerated": 8000
        }
      }
    },
    "V1SpeakPostParametersSpeakSampleRate1": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakSampleRate1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakSampleRate1",
        "displayName": "mulaw"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "8000",
                "camelCase": {
                  "unsafeName": "8000",
                  "safeName": "_8000"
                },
                "pascalCase": {
                  "unsafeName": "8000",
                  "safeName": "_8000"
                },
                "snakeCase": {
                  "unsafeName": "8000",
                  "safeName": "_8000"
                },
                "screamingSnakeCase": {
                  "unsafeName": "8000",
                  "safeName": "_8000"
                }
              },
              "wireValue": "8000"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "16000",
                "camelCase": {
                  "unsafeName": "16000",
                  "safeName": "_16000"
                },
                "pascalCase": {
                  "unsafeName": "16000",
                  "safeName": "_16000"
                },
                "snakeCase": {
                  "unsafeName": "16000",
                  "safeName": "_16000"
                },
                "screamingSnakeCase": {
                  "unsafeName": "16000",
                  "safeName": "_16000"
                }
              },
              "wireValue": "16000"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - mulaw. Supported sample rates - 8000, 16000 Hz.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakSampleRate1_example_autogenerated": 8000
        }
      }
    },
    "V1SpeakPostParametersSpeakSampleRate2": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakSampleRate2",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakSampleRate2",
        "displayName": "alaw"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "8000",
                "camelCase": {
                  "unsafeName": "8000",
                  "safeName": "_8000"
                },
                "pascalCase": {
                  "unsafeName": "8000",
                  "safeName": "_8000"
                },
                "snakeCase": {
                  "unsafeName": "8000",
                  "safeName": "_8000"
                },
                "screamingSnakeCase": {
                  "unsafeName": "8000",
                  "safeName": "_8000"
                }
              },
              "wireValue": "8000"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "16000",
                "camelCase": {
                  "unsafeName": "16000",
                  "safeName": "_16000"
                },
                "pascalCase": {
                  "unsafeName": "16000",
                  "safeName": "_16000"
                },
                "snakeCase": {
                  "unsafeName": "16000",
                  "safeName": "_16000"
                },
                "screamingSnakeCase": {
                  "unsafeName": "16000",
                  "safeName": "_16000"
                }
              },
              "wireValue": "16000"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - alaw. Supported sample rates - 8000, 16000 Hz.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakSampleRate2_example_autogenerated": 8000
        }
      }
    },
    "V1SpeakPostParametersSpeakSampleRate3": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakSampleRate3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakSampleRate3",
        "displayName": "mp3"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "22050",
                "camelCase": {
                  "unsafeName": "22050",
                  "safeName": "_22050"
                },
                "pascalCase": {
                  "unsafeName": "22050",
                  "safeName": "_22050"
                },
                "snakeCase": {
                  "unsafeName": "22050",
                  "safeName": "_22050"
                },
                "screamingSnakeCase": {
                  "unsafeName": "22050",
                  "safeName": "_22050"
                }
              },
              "wireValue": "22050"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - mp3. Sample rate is fixed and not configurable (22050 Hz).",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakSampleRate3_example_autogenerated": 22050
        }
      }
    },
    "V1SpeakPostParametersSpeakSampleRate4": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakSampleRate4",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakSampleRate4",
        "displayName": "opus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "48000",
                "camelCase": {
                  "unsafeName": "48000",
                  "safeName": "_48000"
                },
                "pascalCase": {
                  "unsafeName": "48000",
                  "safeName": "_48000"
                },
                "snakeCase": {
                  "unsafeName": "48000",
                  "safeName": "_48000"
                },
                "screamingSnakeCase": {
                  "unsafeName": "48000",
                  "safeName": "_48000"
                }
              },
              "wireValue": "48000"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding - opus. Sample rate is fixed at 48000 Hz.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakSampleRate4_example_autogenerated": 48000
        }
      }
    },
    "V1SpeakPostParametersSpeakSampleRate": {
      "name": {
        "typeId": "V1SpeakPostParametersSpeakSampleRate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1SpeakPostParametersSpeakSampleRate"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersSpeakSampleRate0",
              "typeId": "V1SpeakPostParametersSpeakSampleRate0",
              "displayName": "linear16",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - linear16. Supported sample rates - 8000, 16000, 24000, 32000, 48000 Hz."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersSpeakSampleRate1",
              "typeId": "V1SpeakPostParametersSpeakSampleRate1",
              "displayName": "mulaw",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - mulaw. Supported sample rates - 8000, 16000 Hz."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersSpeakSampleRate2",
              "typeId": "V1SpeakPostParametersSpeakSampleRate2",
              "displayName": "alaw",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - alaw. Supported sample rates - 8000, 16000 Hz."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersSpeakSampleRate3",
              "typeId": "V1SpeakPostParametersSpeakSampleRate3",
              "displayName": "mp3",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - mp3. Sample rate is fixed and not configurable (22050 Hz)."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1SpeakPostParametersSpeakSampleRate4",
              "typeId": "V1SpeakPostParametersSpeakSampleRate4",
              "displayName": "opus",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding - opus. Sample rate is fixed at 48000 Hz."
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1SpeakPostParametersSpeakSampleRate_example_autogenerated": 24000
        }
      }
    },
    "SpeakRequestBadRequestError": {
      "name": {
        "typeId": "SpeakRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SpeakRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "err_code",
              "wireValue": "err_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error code",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1SpeakPostResponsesContentApplicationJsonSchemaErrCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "err_msg",
              "wireValue": "err_msg"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1SpeakPostResponsesContentApplicationJsonSchemaErrMsg_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1SpeakPostResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "SpeakRequestBadRequestError_example_0": {
            "err_code": "INVALID_QUERY_PARAMETER",
            "err_msg": "Failed to deserialize query parameters...",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "SpeakRequestForbiddenError": {
      "name": {
        "typeId": "SpeakRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SpeakRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "err_code",
              "wireValue": "err_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error code",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1SpeakPostResponsesContentApplicationJsonSchemaErrCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "err_msg",
              "wireValue": "err_msg"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1SpeakPostResponsesContentApplicationJsonSchemaErrMsg_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1SpeakPostResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "SpeakRequestForbiddenError_example_0": {
            "err_code": "INSUFFICIENT_PERMISSIONS",
            "err_msg": "Project does not have access to the requested model.",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "SpeakRequestContentTooLargeError": {
      "name": {
        "typeId": "SpeakRequestContentTooLargeError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SpeakRequestContentTooLargeError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "err_code",
              "wireValue": "err_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error code",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1SpeakPostResponsesContentApplicationJsonSchemaErrCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "err_msg",
              "wireValue": "err_msg"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1SpeakPostResponsesContentApplicationJsonSchemaErrMsg_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1SpeakPostResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "SpeakRequestContentTooLargeError_example_0": {
            "err_code": "Payload too large",
            "err_msg": "Input text exceeds maximum character limit of 2000.",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "SpeakRequestUnsupportedMediaTypeError": {
      "name": {
        "typeId": "SpeakRequestUnsupportedMediaTypeError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SpeakRequestUnsupportedMediaTypeError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "err_code",
              "wireValue": "err_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error code",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1SpeakPostResponsesContentApplicationJsonSchemaErrCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "err_msg",
              "wireValue": "err_msg"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1SpeakPostResponsesContentApplicationJsonSchemaErrMsg_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1SpeakPostResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "SpeakRequestUnsupportedMediaTypeError_example_0": {
            "err_code": "UNSUPPORTED_MEDIA_TYPE",
            "err_msg": "Content-Type header is not supported. Content-Type must be either text/plain or application/json.",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "V1ProjectsGetResponsesContentApplicationJsonSchemaProjectsItems": {
      "name": {
        "typeId": "V1ProjectsGetResponsesContentApplicationJsonSchemaProjectsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsGetResponsesContentApplicationJsonSchemaProjectsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsGetResponsesContentApplicationJsonSchemaProjectsItemsProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsGetResponsesContentApplicationJsonSchemaProjectsItemsName_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsGetResponsesContentApplicationJsonSchemaProjectsItems_example_autogenerated": {}
        }
      }
    },
    "Management API_listProjects_Response_200": {
      "name": {
        "typeId": "Management API_listProjects_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_listProjects_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "projects",
              "wireValue": "projects"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "V1ProjectsGetResponsesContentApplicationJsonSchemaProjectsItems",
                      "typeId": "V1ProjectsGetResponsesContentApplicationJsonSchemaProjectsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsGetResponsesContentApplicationJsonSchemaProjects_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_listProjects_Response_200_example_autogenerated": {}
        }
      }
    },
    "ListProjectsRequestForbiddenError": {
      "name": {
        "typeId": "ListProjectsRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectsRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListProjectsRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "Management API_getProject_Response_200": {
      "name": {
        "typeId": "Management API_getProject_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_getProject_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaName_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_getProject_Response_200_example_autogenerated": {}
        }
      }
    },
    "GetProjectRequestBadRequestError": {
      "name": {
        "typeId": "GetProjectRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error category",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Additional details about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "GetProjectRequestBadRequestError_example_0": {
            "category": "INVALID_JSON",
            "message": "Invalid JSON submitted.",
            "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "GetProjectRequestForbiddenError": {
      "name": {
        "typeId": "GetProjectRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetProjectRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "GetProjectRequestNotFoundError": {
      "name": {
        "typeId": "GetProjectRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetProjectRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_deleteProject_Response_200": {
      "name": {
        "typeId": "Management API_deleteProject_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_deleteProject_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "confirmation message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Management API_deleteProject_Response_200_example_0": {
            "message": "Successfully deleted a project."
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectRequestBadRequestError": {
      "name": {
        "typeId": "DeleteProjectRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error category",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Additional details about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "DeleteProjectRequestBadRequestError_example_0": {
            "category": "INVALID_JSON",
            "message": "Invalid JSON submitted.",
            "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectRequestForbiddenError": {
      "name": {
        "typeId": "DeleteProjectRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DeleteProjectRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "DeleteProjectRequestNotFoundError": {
      "name": {
        "typeId": "DeleteProjectRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DeleteProjectRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_updateProject_Response_200": {
      "name": {
        "typeId": "Management API_updateProject_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_updateProject_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "confirmation message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Management API_updateProject_Response_200_example_0": {
            "message": "Successfully updated project info."
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "UpdateProjectRequestBadRequestError": {
      "name": {
        "typeId": "UpdateProjectRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UpdateProjectRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error category",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Additional details about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "UpdateProjectRequestBadRequestError_example_0": {
            "category": "INVALID_JSON",
            "message": "Invalid JSON submitted.",
            "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "UpdateProjectRequestForbiddenError": {
      "name": {
        "typeId": "UpdateProjectRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UpdateProjectRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UpdateProjectRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "UpdateProjectRequestNotFoundError": {
      "name": {
        "typeId": "UpdateProjectRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UpdateProjectRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPatchResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UpdateProjectRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaBalancesItems": {
      "name": {
        "typeId": "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaBalancesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaBalancesItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "balance_id",
              "wireValue": "balance_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the balance",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaBalancesItemsBalanceId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of the balance",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaBalancesItemsAmount_example_autogenerated": 0
              }
            }
          },
          {
            "name": {
              "name": "units",
              "wireValue": "units"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The units of the balance, such as \"USD\"",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaBalancesItemsUnits_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "purchase_order_id",
              "wireValue": "purchase_order_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Description or reference of the purchase",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaBalancesItemsPurchaseOrderId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaBalancesItems_example_autogenerated": {}
        }
      }
    },
    "Management API_getProjectBalances_Response_200": {
      "name": {
        "typeId": "Management API_getProjectBalances_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_getProjectBalances_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "balances",
              "wireValue": "balances"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaBalancesItems",
                      "typeId": "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaBalancesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaBalances_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_getProjectBalances_Response_200_example_autogenerated": {}
        }
      }
    },
    "GetProjectBalancesRequestBadRequestError": {
      "name": {
        "typeId": "GetProjectBalancesRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectBalancesRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error category",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Additional details about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "GetProjectBalancesRequestBadRequestError_example_0": {
            "category": "INVALID_JSON",
            "message": "Invalid JSON submitted.",
            "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "GetProjectBalancesRequestForbiddenError": {
      "name": {
        "typeId": "GetProjectBalancesRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectBalancesRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetProjectBalancesRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "GetProjectBalancesRequestNotFoundError": {
      "name": {
        "typeId": "GetProjectBalancesRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectBalancesRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetProjectBalancesRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_getProjectBalance_Response_200": {
      "name": {
        "typeId": "Management API_getProjectBalance_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_getProjectBalance_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "balance_id",
              "wireValue": "balance_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the balance",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaBalanceId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of the balance",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaAmount_example_autogenerated": 0
              }
            }
          },
          {
            "name": {
              "name": "units",
              "wireValue": "units"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The units of the balance, such as \"USD\"",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaUnits_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "purchase_order_id",
              "wireValue": "purchase_order_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Description or reference of the purchase",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaPurchaseOrderId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_getProjectBalance_Response_200_example_autogenerated": {}
        }
      }
    },
    "GetProjectBalanceRequestBadRequestError": {
      "name": {
        "typeId": "GetProjectBalanceRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectBalanceRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error category",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Additional details about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "GetProjectBalanceRequestBadRequestError_example_0": {
            "category": "INVALID_JSON",
            "message": "Invalid JSON submitted.",
            "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "GetProjectBalanceRequestForbiddenError": {
      "name": {
        "typeId": "GetProjectBalanceRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectBalanceRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetProjectBalanceRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "GetProjectBalanceRequestNotFoundError": {
      "name": {
        "typeId": "GetProjectBalanceRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectBalanceRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdBalancesBalanceIdGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetProjectBalanceRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_listProjectModels_Response_200": {
      "name": {
        "typeId": "Management API_listProjectModels_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_listProjectModels_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "stt",
              "wireValue": "stt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "stt_models",
                      "typeId": "stt_models",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdModelsGetResponsesContentApplicationJsonSchemaStt_example_autogenerated": [
                  [
                    {}
                  ]
                ]
              }
            }
          },
          {
            "name": {
              "name": "tts",
              "wireValue": "tts"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "tts_models",
                      "typeId": "tts_models",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdModelsGetResponsesContentApplicationJsonSchemaTts_example_autogenerated": [
                  [
                    {}
                  ]
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_listProjectModels_Response_200_example_autogenerated": {}
        }
      }
    },
    "ListProjectModelsRequestBadRequestError": {
      "name": {
        "typeId": "ListProjectModelsRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectModelsRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error category",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdModelsGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdModelsGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Additional details about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdModelsGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdModelsGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ListProjectModelsRequestBadRequestError_example_0": {
            "category": "INVALID_JSON",
            "message": "Invalid JSON submitted.",
            "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "Management API_getProjectModel_Response_200": {
      "name": {
        "typeId": "Management API_getProjectModel_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_getProjectModel_Response_200"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "stt_models",
              "typeId": "stt_models",
              "inline": false,
              "displayName": "stt_models",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "tts_models",
              "typeId": "tts_models",
              "inline": false,
              "displayName": "tts_models",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_getProjectModel_Response_200_example_autogenerated": [
            {}
          ]
        }
      }
    },
    "GetProjectModelRequestBadRequestError": {
      "name": {
        "typeId": "GetProjectModelRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectModelRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error category",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdModelsModelIdGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdModelsModelIdGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Additional details about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdModelsModelIdGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdModelsModelIdGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "GetProjectModelRequestBadRequestError_example_0": {
            "category": "INVALID_JSON",
            "message": "Invalid JSON submitted.",
            "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "Management API_listProjectKeys_Response_200": {
      "name": {
        "typeId": "Management API_listProjectKeys_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_listProjectKeys_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "api_keys",
              "wireValue": "api_keys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "keys",
                      "typeId": "keys",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysGetResponsesContentApplicationJsonSchemaApiKeys_example_autogenerated": [
                  [
                    {}
                  ]
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_listProjectKeys_Response_200_example_autogenerated": {}
        }
      }
    },
    "ListProjectKeysRequestForbiddenError": {
      "name": {
        "typeId": "ListProjectKeysRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectKeysRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListProjectKeysRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "ListProjectKeysRequestNotFoundError": {
      "name": {
        "typeId": "ListProjectKeysRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectKeysRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListProjectKeysRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "CreateProjectKeyRequestForbiddenError": {
      "name": {
        "typeId": "CreateProjectKeyRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateProjectKeyRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysPostResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysPostResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysPostResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysPostResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateProjectKeyRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "CreateProjectKeyRequestNotFoundError": {
      "name": {
        "typeId": "CreateProjectKeyRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateProjectKeyRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysPostResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysPostResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysPostResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysPostResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateProjectKeyRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_getProjectKey_Response_200": {
      "name": {
        "typeId": "Management API_getProjectKey_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_getProjectKey_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "item",
              "wireValue": "item"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "key",
                  "typeId": "key",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_getProjectKey_Response_200_example_autogenerated": {}
        }
      }
    },
    "GetProjectKeyRequestForbiddenError": {
      "name": {
        "typeId": "GetProjectKeyRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectKeyRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetProjectKeyRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "GetProjectKeyRequestNotFoundError": {
      "name": {
        "typeId": "GetProjectKeyRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectKeyRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetProjectKeyRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_deleteProjectKey_Response_200": {
      "name": {
        "typeId": "Management API_deleteProjectKey_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_deleteProjectKey_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message indicating that the API key was deleted",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_deleteProjectKey_Response_200_example_autogenerated": {}
        }
      }
    },
    "DeleteProjectKeyRequestForbiddenError": {
      "name": {
        "typeId": "DeleteProjectKeyRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectKeyRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DeleteProjectKeyRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "DeleteProjectKeyRequestNotFoundError": {
      "name": {
        "typeId": "DeleteProjectKeyRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectKeyRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdKeysKeyIdDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DeleteProjectKeyRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaMembersItems": {
      "name": {
        "typeId": "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaMembersItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaMembersItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "member_id",
              "wireValue": "member_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the member",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaMembersItemsMemberId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaMembersItems_example_autogenerated": {}
        }
      }
    },
    "Management API_listProjectMembers_Response_200": {
      "name": {
        "typeId": "Management API_listProjectMembers_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_listProjectMembers_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "members",
              "wireValue": "members"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaMembersItems",
                      "typeId": "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaMembersItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaMembers_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_listProjectMembers_Response_200_example_autogenerated": {}
        }
      }
    },
    "ListProjectMembersRequestForbiddenError": {
      "name": {
        "typeId": "ListProjectMembersRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectMembersRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListProjectMembersRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "ListProjectMembersRequestNotFoundError": {
      "name": {
        "typeId": "ListProjectMembersRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectMembersRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListProjectMembersRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_deleteProjectMember_Response_200": {
      "name": {
        "typeId": "Management API_deleteProjectMember_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_deleteProjectMember_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "confirmation message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Management API_deleteProjectMember_Response_200_example_0": {
            "message": "Successfully removed account from project."
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectMemberRequestForbiddenError": {
      "name": {
        "typeId": "DeleteProjectMemberRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectMemberRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DeleteProjectMemberRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "DeleteProjectMemberRequestNotFoundError": {
      "name": {
        "typeId": "DeleteProjectMemberRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectMemberRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DeleteProjectMemberRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_listProjectMemberScopes_Response_200": {
      "name": {
        "typeId": "Management API_listProjectMemberScopes_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_listProjectMemberScopes_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "scopes",
              "wireValue": "scopes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The API scopes of the member",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesGetResponsesContentApplicationJsonSchemaScopes_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_listProjectMemberScopes_Response_200_example_autogenerated": {}
        }
      }
    },
    "ListProjectMemberScopesRequestForbiddenError": {
      "name": {
        "typeId": "ListProjectMemberScopesRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectMemberScopesRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListProjectMemberScopesRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "ListProjectMemberScopesRequestNotFoundError": {
      "name": {
        "typeId": "ListProjectMemberScopesRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectMemberScopesRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListProjectMemberScopesRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_updateProjectMemberScopes_Response_200": {
      "name": {
        "typeId": "Management API_updateProjectMemberScopes_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_updateProjectMemberScopes_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "confirmation message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesPutResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Management API_updateProjectMemberScopes_Response_200_example_0": {
            "message": "Successfully updated the account scopes."
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "UpdateProjectMemberScopesRequestForbiddenError": {
      "name": {
        "typeId": "UpdateProjectMemberScopesRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UpdateProjectMemberScopesRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesPutResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesPutResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesPutResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesPutResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UpdateProjectMemberScopesRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "UpdateProjectMemberScopesRequestNotFoundError": {
      "name": {
        "typeId": "UpdateProjectMemberScopesRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UpdateProjectMemberScopesRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesPutResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesPutResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesPutResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdMembersMemberIdScopesPutResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UpdateProjectMemberScopesRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "V1ProjectsProjectIdInvitesGetResponsesContentApplicationJsonSchemaInvitesItems": {
      "name": {
        "typeId": "V1ProjectsProjectIdInvitesGetResponsesContentApplicationJsonSchemaInvitesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdInvitesGetResponsesContentApplicationJsonSchemaInvitesItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The email address of the invitee",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesGetResponsesContentApplicationJsonSchemaInvitesItemsEmail_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "scope",
              "wireValue": "scope"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The scope of the invitee",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesGetResponsesContentApplicationJsonSchemaInvitesItemsScope_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdInvitesGetResponsesContentApplicationJsonSchemaInvitesItems_example_autogenerated": {}
        }
      }
    },
    "Management API_listProjectInvites_Response_200": {
      "name": {
        "typeId": "Management API_listProjectInvites_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_listProjectInvites_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "invites",
              "wireValue": "invites"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "V1ProjectsProjectIdInvitesGetResponsesContentApplicationJsonSchemaInvitesItems",
                      "typeId": "V1ProjectsProjectIdInvitesGetResponsesContentApplicationJsonSchemaInvitesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesGetResponsesContentApplicationJsonSchemaInvites_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_listProjectInvites_Response_200_example_autogenerated": {}
        }
      }
    },
    "Management API_createProjectInvite_Response_200": {
      "name": {
        "typeId": "Management API_createProjectInvite_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_createProjectInvite_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "confirmation message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesPostResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_createProjectInvite_Response_200_example_autogenerated": {}
        }
      }
    },
    "CreateProjectInviteRequestForbiddenError": {
      "name": {
        "typeId": "CreateProjectInviteRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateProjectInviteRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesPostResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesPostResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesPostResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesPostResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateProjectInviteRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "CreateProjectInviteRequestNotFoundError": {
      "name": {
        "typeId": "CreateProjectInviteRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateProjectInviteRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesPostResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesPostResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesPostResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesPostResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateProjectInviteRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_deleteProjectInvite_Response_200": {
      "name": {
        "typeId": "Management API_deleteProjectInvite_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_deleteProjectInvite_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "confirmation message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesEmailDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_deleteProjectInvite_Response_200_example_autogenerated": {}
        }
      }
    },
    "DeleteProjectInviteRequestForbiddenError": {
      "name": {
        "typeId": "DeleteProjectInviteRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectInviteRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesEmailDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesEmailDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesEmailDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesEmailDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DeleteProjectInviteRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "DeleteProjectInviteRequestNotFoundError": {
      "name": {
        "typeId": "DeleteProjectInviteRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectInviteRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesEmailDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesEmailDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesEmailDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdInvitesEmailDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DeleteProjectInviteRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_deleteProjectLeave_Response_200": {
      "name": {
        "typeId": "Management API_deleteProjectLeave_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_deleteProjectLeave_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "confirmation message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdLeaveDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_deleteProjectLeave_Response_200_example_autogenerated": {}
        }
      }
    },
    "DeleteProjectLeaveRequestForbiddenError": {
      "name": {
        "typeId": "DeleteProjectLeaveRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectLeaveRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdLeaveDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdLeaveDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdLeaveDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdLeaveDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DeleteProjectLeaveRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "DeleteProjectLeaveRequestNotFoundError": {
      "name": {
        "typeId": "DeleteProjectLeaveRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectLeaveRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdLeaveDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdLeaveDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdLeaveDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdLeaveDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DeleteProjectLeaveRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_listProjectRequests_Response_200": {
      "name": {
        "typeId": "Management API_listProjectRequests_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_listProjectRequests_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "page",
              "wireValue": "page"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The page number of the paginated response",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaPage_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "limit",
              "wireValue": "limit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The number of results per page",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaLimit_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "requests",
              "wireValue": "requests"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "request",
                      "typeId": "request",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaRequests_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_listProjectRequests_Response_200_example_autogenerated": {}
        }
      }
    },
    "ListProjectRequestsRequestBadRequestError": {
      "name": {
        "typeId": "ListProjectRequestsRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectRequestsRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error category",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Additional details about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ListProjectRequestsRequestBadRequestError_example_0": {
            "category": "INVALID_JSON",
            "message": "Invalid JSON submitted.",
            "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ListProjectRequestsRequestForbiddenError": {
      "name": {
        "typeId": "ListProjectRequestsRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectRequestsRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListProjectRequestsRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "ListProjectRequestsRequestNotFoundError": {
      "name": {
        "typeId": "ListProjectRequestsRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectRequestsRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdRequestsGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListProjectRequestsRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "Management API_getProjectRequest_Response_200": {
      "name": {
        "typeId": "Management API_getProjectRequest_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_getProjectRequest_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "request",
              "wireValue": "request"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "request",
                  "typeId": "request",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_getProjectRequest_Response_200_example_autogenerated": {}
        }
      }
    },
    "V1ProjectsProjectIdUsageGetParametersProjectFilters": {
      "name": {
        "typeId": "V1ProjectsProjectIdUsageGetParametersProjectFilters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdUsageGetParametersProjectFilters"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "alternatives.yml",
              "wireValue": "alternatives.yml"
            }
          },
          {
            "name": {
              "name": "callback_method.yml",
              "wireValue": "callback_method.yml"
            }
          },
          {
            "name": {
              "name": "callback.yml",
              "wireValue": "callback.yml"
            }
          },
          {
            "name": {
              "name": "channels.yml",
              "wireValue": "channels.yml"
            }
          },
          {
            "name": {
              "name": "custom_intent_mode.yml",
              "wireValue": "custom_intent_mode.yml"
            }
          },
          {
            "name": {
              "name": "custom_intent.yml",
              "wireValue": "custom_intent.yml"
            }
          },
          {
            "name": {
              "name": "custom_topic_mode.yml",
              "wireValue": "custom_topic_mode.yml"
            }
          },
          {
            "name": {
              "name": "custom_topic.yml",
              "wireValue": "custom_topic.yml"
            }
          },
          {
            "name": {
              "name": "detect_entities.yml",
              "wireValue": "detect_entities.yml"
            }
          },
          {
            "name": {
              "name": "detect_language.yml",
              "wireValue": "detect_language.yml"
            }
          },
          {
            "name": {
              "name": "diarize.yml",
              "wireValue": "diarize.yml"
            }
          },
          {
            "name": {
              "name": "diarize_version.yml",
              "wireValue": "diarize_version.yml"
            }
          },
          {
            "name": {
              "name": "dictation.yml",
              "wireValue": "dictation.yml"
            }
          },
          {
            "name": {
              "name": "detect_topics.yml",
              "wireValue": "detect_topics.yml"
            }
          },
          {
            "name": {
              "name": "encoding.yml",
              "wireValue": "encoding.yml"
            }
          },
          {
            "name": {
              "name": "extra.yml",
              "wireValue": "extra.yml"
            }
          },
          {
            "name": {
              "name": "filler_words.yml",
              "wireValue": "filler_words.yml"
            }
          },
          {
            "name": {
              "name": "intents.yml",
              "wireValue": "intents.yml"
            }
          },
          {
            "name": {
              "name": "keywords.yml",
              "wireValue": "keywords.yml"
            }
          },
          {
            "name": {
              "name": "language.yml",
              "wireValue": "language.yml"
            }
          },
          {
            "name": {
              "name": "measurements.yml",
              "wireValue": "measurements.yml"
            }
          },
          {
            "name": {
              "name": "model.yml",
              "wireValue": "model.yml"
            }
          },
          {
            "name": {
              "name": "multichannel.yml",
              "wireValue": "multichannel.yml"
            }
          },
          {
            "name": {
              "name": "numerals.yml",
              "wireValue": "numerals.yml"
            }
          },
          {
            "name": {
              "name": "paragraphs.yml",
              "wireValue": "paragraphs.yml"
            }
          },
          {
            "name": {
              "name": "profanity_filter.yml",
              "wireValue": "profanity_filter.yml"
            }
          },
          {
            "name": {
              "name": "punctuate.yml",
              "wireValue": "punctuate.yml"
            }
          },
          {
            "name": {
              "name": "redact.yml",
              "wireValue": "redact.yml"
            }
          },
          {
            "name": {
              "name": "replace.yml",
              "wireValue": "replace.yml"
            }
          },
          {
            "name": {
              "name": "sample_rate.yml",
              "wireValue": "sample_rate.yml"
            }
          },
          {
            "name": {
              "name": "smart_format.yml",
              "wireValue": "smart_format.yml"
            }
          },
          {
            "name": {
              "name": "search.yml",
              "wireValue": "search.yml"
            }
          },
          {
            "name": {
              "name": "sentiment.yml",
              "wireValue": "sentiment.yml"
            }
          },
          {
            "name": {
              "name": "summarize.yml",
              "wireValue": "summarize.yml"
            }
          },
          {
            "name": {
              "name": "tag.yml",
              "wireValue": "tag.yml"
            }
          },
          {
            "name": {
              "name": "topics.yml",
              "wireValue": "topics.yml"
            }
          },
          {
            "name": {
              "name": "utterances.yml",
              "wireValue": "utterances.yml"
            }
          },
          {
            "name": {
              "name": "utt_split.yml",
              "wireValue": "utt_split.yml"
            }
          },
          {
            "name": {
              "name": "version.yml",
              "wireValue": "version.yml"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdUsageGetParametersProjectFilters_example_autogenerated": "alternatives.yml"
        }
      }
    },
    "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaResolution": {
      "name": {
        "typeId": "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaResolution",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaResolution"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "units",
              "wireValue": "units"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaResolutionUnits_example_0": "day"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaResolutionAmount_example_0": 1
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaResolution_example_autogenerated": {}
        }
      }
    },
    "Management API_getProjectUsage_Response_200": {
      "name": {
        "typeId": "Management API_getProjectUsage_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_getProjectUsage_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaStart_example_0": "2024-10-16"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaEnd_example_0": "2024-10-23"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "resolution",
              "wireValue": "resolution"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaResolution",
                  "typeId": "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaResolution",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaResolution_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_getProjectUsage_Response_200_example_autogenerated": {}
        }
      }
    },
    "GetProjectUsageRequestForbiddenError": {
      "name": {
        "typeId": "GetProjectUsageRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectUsageRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetProjectUsageRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "GetProjectUsageRequestNotFoundError": {
      "name": {
        "typeId": "GetProjectUsageRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectUsageRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetProjectUsageRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaModelsItems": {
      "name": {
        "typeId": "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaModelsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaModelsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Name of the model.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaModelsItemsName_example_0": "2-medical-nova"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "language",
              "wireValue": "language"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The language supported by the model (IETF language tag).",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaModelsItemsLanguage_example_0": "en-MY"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "version",
              "wireValue": "version"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Version identifier of the model, typically with a date and a revision number.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaModelsItemsVersion_example_0": "2024-05-31.13574"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "model_id",
              "wireValue": "model_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Unique identifier for the model.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaModelsItemsModelId_example_0": "1234567890-12345-67890"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaModelsItems_example_autogenerated": {}
        }
      }
    },
    "Management API_listProjectUsageFields_Response_200": {
      "name": {
        "typeId": "Management API_listProjectUsageFields_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_listProjectUsageFields_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "tags",
              "wireValue": "tags"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of tags associated with the project",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaTags_example_0": [
                  "tag=dev",
                  "tag=production"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaModelsItems",
                      "typeId": "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaModelsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of models available for the project.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaModels_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "processing_methods",
              "wireValue": "processing_methods"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Processing methods supported by the API",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaProcessingMethods_example_0": [
                  "sync",
                  "streaming"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "features",
              "wireValue": "features"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "API features available to the project",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaFeatures_example_0": [
                  "alternatives",
                  "detect_entities",
                  "detect_language"
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_listProjectUsageFields_Response_200_example_autogenerated": {}
        }
      }
    },
    "ListProjectUsageFieldsRequestForbiddenError": {
      "name": {
        "typeId": "ListProjectUsageFieldsRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectUsageFieldsRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListProjectUsageFieldsRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "ListProjectUsageFieldsRequestNotFoundError": {
      "name": {
        "typeId": "ListProjectUsageFieldsRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectUsageFieldsRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageFieldsGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListProjectUsageFieldsRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "V1ProjectsProjectIdUsageBreakdownGetParametersProjectFilters": {
      "name": {
        "typeId": "V1ProjectsProjectIdUsageBreakdownGetParametersProjectFilters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdUsageBreakdownGetParametersProjectFilters"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "alternatives.yml",
              "wireValue": "alternatives.yml"
            }
          },
          {
            "name": {
              "name": "callback_method.yml",
              "wireValue": "callback_method.yml"
            }
          },
          {
            "name": {
              "name": "callback.yml",
              "wireValue": "callback.yml"
            }
          },
          {
            "name": {
              "name": "channels.yml",
              "wireValue": "channels.yml"
            }
          },
          {
            "name": {
              "name": "custom_intent_mode.yml",
              "wireValue": "custom_intent_mode.yml"
            }
          },
          {
            "name": {
              "name": "custom_intent.yml",
              "wireValue": "custom_intent.yml"
            }
          },
          {
            "name": {
              "name": "custom_topic_mode.yml",
              "wireValue": "custom_topic_mode.yml"
            }
          },
          {
            "name": {
              "name": "custom_topic.yml",
              "wireValue": "custom_topic.yml"
            }
          },
          {
            "name": {
              "name": "detect_entities.yml",
              "wireValue": "detect_entities.yml"
            }
          },
          {
            "name": {
              "name": "detect_language.yml",
              "wireValue": "detect_language.yml"
            }
          },
          {
            "name": {
              "name": "diarize.yml",
              "wireValue": "diarize.yml"
            }
          },
          {
            "name": {
              "name": "diarize_version.yml",
              "wireValue": "diarize_version.yml"
            }
          },
          {
            "name": {
              "name": "dictation.yml",
              "wireValue": "dictation.yml"
            }
          },
          {
            "name": {
              "name": "detect_topics.yml",
              "wireValue": "detect_topics.yml"
            }
          },
          {
            "name": {
              "name": "encoding.yml",
              "wireValue": "encoding.yml"
            }
          },
          {
            "name": {
              "name": "extra.yml",
              "wireValue": "extra.yml"
            }
          },
          {
            "name": {
              "name": "filler_words.yml",
              "wireValue": "filler_words.yml"
            }
          },
          {
            "name": {
              "name": "intents.yml",
              "wireValue": "intents.yml"
            }
          },
          {
            "name": {
              "name": "keywords.yml",
              "wireValue": "keywords.yml"
            }
          },
          {
            "name": {
              "name": "language.yml",
              "wireValue": "language.yml"
            }
          },
          {
            "name": {
              "name": "measurements.yml",
              "wireValue": "measurements.yml"
            }
          },
          {
            "name": {
              "name": "model.yml",
              "wireValue": "model.yml"
            }
          },
          {
            "name": {
              "name": "multichannel.yml",
              "wireValue": "multichannel.yml"
            }
          },
          {
            "name": {
              "name": "numerals.yml",
              "wireValue": "numerals.yml"
            }
          },
          {
            "name": {
              "name": "paragraphs.yml",
              "wireValue": "paragraphs.yml"
            }
          },
          {
            "name": {
              "name": "profanity_filter.yml",
              "wireValue": "profanity_filter.yml"
            }
          },
          {
            "name": {
              "name": "punctuate.yml",
              "wireValue": "punctuate.yml"
            }
          },
          {
            "name": {
              "name": "redact.yml",
              "wireValue": "redact.yml"
            }
          },
          {
            "name": {
              "name": "replace.yml",
              "wireValue": "replace.yml"
            }
          },
          {
            "name": {
              "name": "sample_rate.yml",
              "wireValue": "sample_rate.yml"
            }
          },
          {
            "name": {
              "name": "smart_format.yml",
              "wireValue": "smart_format.yml"
            }
          },
          {
            "name": {
              "name": "search.yml",
              "wireValue": "search.yml"
            }
          },
          {
            "name": {
              "name": "sentiment.yml",
              "wireValue": "sentiment.yml"
            }
          },
          {
            "name": {
              "name": "summarize.yml",
              "wireValue": "summarize.yml"
            }
          },
          {
            "name": {
              "name": "tag.yml",
              "wireValue": "tag.yml"
            }
          },
          {
            "name": {
              "name": "topics.yml",
              "wireValue": "topics.yml"
            }
          },
          {
            "name": {
              "name": "utterances.yml",
              "wireValue": "utterances.yml"
            }
          },
          {
            "name": {
              "name": "utt_split.yml",
              "wireValue": "utt_split.yml"
            }
          },
          {
            "name": {
              "name": "version.yml",
              "wireValue": "version.yml"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdUsageBreakdownGetParametersProjectFilters_example_autogenerated": "alternatives.yml"
        }
      }
    },
    "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFilters": {
      "name": {
        "typeId": "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFilters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFilters"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "accessor",
              "wireValue": "accessor"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Filter results by specific accessor ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFiltersSchemaAccessor_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "deployment",
              "wireValue": "deployment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Filter results by specific deployment type",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFiltersSchemaDeployment_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "endpoint",
              "wireValue": "endpoint"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Filter results by specific endpoint",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFiltersSchemaEndpoint_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "feature_set",
              "wireValue": "feature_set"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Filter results by specific feature set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFiltersSchemaFeatureSet_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "model",
              "wireValue": "model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Filter results by specific model ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFiltersSchemaModel_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "method",
              "wireValue": "method"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Filter results by specific processing method",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFiltersSchemaMethod_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tags",
              "wireValue": "tags"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Filter results by specific tags",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFiltersSchemaTags_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFilters_example_autogenerated": {}
        }
      }
    },
    "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResolution": {
      "name": {
        "typeId": "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResolution",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResolution"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "units",
              "wireValue": "units"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Time unit for the resolution",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResolutionUnits_example_0": "day"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Amount of units",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResolutionAmount_example_0": 1
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResolution_example_autogenerated": {
            "units": "day",
            "amount": 1
          }
        }
      }
    },
    "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGrouping": {
      "name": {
        "typeId": "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGrouping",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGrouping"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Start date for this group",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGroupingStart_example_0": "2025-01-16"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "End date for this group",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGroupingEnd_example_0": "2025-01-16"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "accessor",
              "wireValue": "accessor"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional accessor identifier",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGroupingAccessor_example_0": "123456789012345678901234"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "endpoint",
              "wireValue": "endpoint"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional endpoint identifier",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGroupingEndpoint_example_0": "listen"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "feature_set",
              "wireValue": "feature_set"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional feature set identifier",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGroupingFeatureSet_example_0": "punctuate"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional models identifier",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGroupingModels_example_0": "Nova-2"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "method",
              "wireValue": "method"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional method identifier",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGroupingMethod_example_0": "async"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "tags",
              "wireValue": "tags"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional tags",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGroupingTags_example_0": "tag1"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "deployment",
              "wireValue": "deployment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional deployment identifier",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGroupingDeployment_example_0": "self-hosted"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGrouping_example_autogenerated": {}
        }
      }
    },
    "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItems": {
      "name": {
        "typeId": "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "hours",
              "wireValue": "hours"
            },
            "valueType": {
              "primitive": {
                "v1": "FLOAT",
                "v2": {
                  "validation": {},
                  "type": "float"
                }
              },
              "type": "primitive"
            },
            "docs": "Audio hours processed",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsHours_example_0": 1619.7242069444444
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "total_hours",
              "wireValue": "total_hours"
            },
            "valueType": {
              "primitive": {
                "v1": "FLOAT",
                "v2": {
                  "validation": {},
                  "type": "float"
                }
              },
              "type": "primitive"
            },
            "docs": "Total hours including all processing",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsTotalHours_example_0": 1621.7395791666668
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "agent_hours",
              "wireValue": "agent_hours"
            },
            "valueType": {
              "primitive": {
                "v1": "FLOAT",
                "v2": {
                  "validation": {},
                  "type": "float"
                }
              },
              "type": "primitive"
            },
            "docs": "Agent hours used",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsAgentHours_example_0": 41.33564388888889
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "tokens_in",
              "wireValue": "tokens_in"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Number of input tokens",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsTokensIn_example_0": 0
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "tokens_out",
              "wireValue": "tokens_out"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Number of output tokens",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsTokensOut_example_0": 0
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "tts_characters",
              "wireValue": "tts_characters"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Number of text-to-speech characters processed",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsTtsCharacters_example_0": 9158866
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "requests",
              "wireValue": "requests"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Number of requests",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsRequests_example_0": 373381
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "grouping",
              "wireValue": "grouping"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGrouping",
              "typeId": "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGrouping",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItemsGrouping_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItems_example_autogenerated": {
            "hours": 1620,
            "total_hours": 1620,
            "agent_hours": 41.3,
            "tokens_in": 0,
            "tokens_out": 0,
            "tts_characters": 9158866,
            "requests": 373381,
            "grouping": {}
          }
        }
      }
    },
    "Management API_getProjectUsageBreakdown_Response_200": {
      "name": {
        "typeId": "Management API_getProjectUsageBreakdown_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_getProjectUsageBreakdown_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Start date of the usage period",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaStart_example_0": "2025-01-16"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "End date of the usage period",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaEnd_example_0": "2025-01-23"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "resolution",
              "wireValue": "resolution"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResolution",
              "typeId": "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResolution",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResolution_example_autogenerated": {
                  "units": "day",
                  "amount": 1
                }
              }
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItems",
                  "typeId": "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResultsItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaResults_example_autogenerated": [
                  {
                    "hours": 1620,
                    "total_hours": 1620,
                    "agent_hours": 41.3,
                    "tokens_in": 0,
                    "tokens_out": 0,
                    "tts_characters": 9158866,
                    "requests": 373381,
                    "grouping": {}
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_getProjectUsageBreakdown_Response_200_example_autogenerated": {
            "start": "2025-01-16",
            "end": "2025-01-23",
            "resolution": {
              "units": "day",
              "amount": 1
            },
            "results": [
              {
                "hours": 1620,
                "total_hours": 1620,
                "agent_hours": 41.3,
                "tokens_in": 0,
                "tokens_out": 0,
                "tts_characters": 9158866,
                "requests": 373381,
                "grouping": {}
              }
            ]
          }
        }
      }
    },
    "GetProjectUsageBreakdownRequestBadRequestError": {
      "name": {
        "typeId": "GetProjectUsageBreakdownRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectUsageBreakdownRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error category",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Additional details about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "GetProjectUsageBreakdownRequestBadRequestError_example_0": {
            "category": "INVALID_JSON",
            "message": "Invalid JSON submitted.",
            "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "GetProjectUsageBreakdownRequestNotFoundError": {
      "name": {
        "typeId": "GetProjectUsageBreakdownRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectUsageBreakdownRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdUsageBreakdownGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetProjectUsageBreakdownRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrdersItems": {
      "name": {
        "typeId": "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrdersItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrdersItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "order_id",
              "wireValue": "order_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrdersItemsOrderId_example_0": "025e19ba-b6d9-4a04-9f99-4fe715aca5f1"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "expiration",
              "wireValue": "expiration"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrdersItemsExpiration_example_0": "2026-03-04T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrdersItemsCreated_example_0": "2023-02-21T21:13:40.014373Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrdersItemsAmount_example_0": 150
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "units",
              "wireValue": "units"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrdersItemsUnits_example_0": "usd"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "order_type",
              "wireValue": "order_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrdersItemsOrderType_example_0": "promotional"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrdersItems_example_autogenerated": {}
        }
      }
    },
    "Management API_listProjectPurchases_Response_200": {
      "name": {
        "typeId": "Management API_listProjectPurchases_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_listProjectPurchases_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "orders",
              "wireValue": "orders"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrdersItems",
                      "typeId": "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrdersItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaOrders_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_listProjectPurchases_Response_200_example_autogenerated": {}
        }
      }
    },
    "ListProjectPurchasesRequestBadRequestError": {
      "name": {
        "typeId": "ListProjectPurchasesRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectPurchasesRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error category",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Additional details about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdPurchasesGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ListProjectPurchasesRequestBadRequestError_example_0": {
            "category": "INVALID_JSON",
            "message": "Invalid JSON submitted.",
            "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "V1ModelsGetResponsesContentApplicationJsonSchemaSttItems": {
      "name": {
        "typeId": "V1ModelsGetResponsesContentApplicationJsonSchemaSttItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ModelsGetResponsesContentApplicationJsonSchemaSttItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaSttItemsName_example_0": "general"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "canonical_name",
              "wireValue": "canonical_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaSttItemsCanonicalName_example_0": "enhanced-general"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "architecture",
              "wireValue": "architecture"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaSttItemsArchitecture_example_0": "polaris"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "languages",
              "wireValue": "languages"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaSttItemsLanguages_example_0": [
                  "en",
                  "en-us"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "version",
              "wireValue": "version"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaSttItemsVersion_example_0": "2022-05-18.1"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "uuid",
              "wireValue": "uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaSttItemsUuid_example_0": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "batch",
              "wireValue": "batch"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaSttItemsBatch_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "streaming",
              "wireValue": "streaming"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaSttItemsStreaming_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "formatted_output",
              "wireValue": "formatted_output"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaSttItemsFormattedOutput_example_0": false
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ModelsGetResponsesContentApplicationJsonSchemaSttItems_example_autogenerated": {}
        }
      }
    },
    "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsMetadata": {
      "name": {
        "typeId": "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsMetadata"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "accent",
              "wireValue": "accent"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsMetadataAccent_example_0": "Irish"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "color",
              "wireValue": "color"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsMetadataColor_example_0": "#BA80F5"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "image",
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsMetadataImage_example_0": "https://static.deepgram.com/examples/avatars/angus.jpg"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sample",
              "wireValue": "sample"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsMetadataSample_example_0": "https://static.deepgram.com/examples/voices/angus.wav"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "tags",
              "wireValue": "tags"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsMetadataTags_example_0": [
                  "masculine"
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsMetadata_example_autogenerated": {}
        }
      }
    },
    "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItems": {
      "name": {
        "typeId": "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsName_example_0": "angus"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "canonical_name",
              "wireValue": "canonical_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsCanonicalName_example_0": "aura-angus-en"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "architecture",
              "wireValue": "architecture"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsArchitecture_example_0": "aura"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "languages",
              "wireValue": "languages"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsLanguages_example_0": [
                  "en",
                  "en-us"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "version",
              "wireValue": "version"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsVersion_example_0": "2024-07-30.0"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "uuid",
              "wireValue": "uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsUuid_example_0": "eed36e9e-37aa-40a3-91fa-a2911e73a5da"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsMetadata",
                  "typeId": "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItemsMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItems_example_autogenerated": {}
        }
      }
    },
    "Management API_listModels_Response_200": {
      "name": {
        "typeId": "Management API_listModels_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_listModels_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "stt",
              "wireValue": "stt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "V1ModelsGetResponsesContentApplicationJsonSchemaSttItems",
                      "typeId": "V1ModelsGetResponsesContentApplicationJsonSchemaSttItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaStt_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "tts",
              "wireValue": "tts"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItems",
                      "typeId": "V1ModelsGetResponsesContentApplicationJsonSchemaTtsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaTts_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_listModels_Response_200_example_autogenerated": {}
        }
      }
    },
    "ListModelsRequestBadRequestError": {
      "name": {
        "typeId": "ListModelsRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListModelsRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error category",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Additional details about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ModelsGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ListModelsRequestBadRequestError_example_0": {
            "category": "INVALID_JSON",
            "message": "Invalid JSON submitted.",
            "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ManagementApiGetModelResponse2000": {
      "name": {
        "typeId": "ManagementApiGetModelResponse2000",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ManagementApiGetModelResponse2000",
        "displayName": "ManagementApiGetModelResponse2000"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf0Name_example_0": "general"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "canonical_name",
              "wireValue": "canonical_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf0CanonicalName_example_0": "enhanced-general"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "architecture",
              "wireValue": "architecture"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf0Architecture_example_0": "polaris"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "languages",
              "wireValue": "languages"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf0Languages_example_0": [
                  "en",
                  "en-us"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "version",
              "wireValue": "version"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf0Version_example_0": "2022-05-18.1"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "uuid",
              "wireValue": "uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf0Uuid_example_0": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "batch",
              "wireValue": "batch"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf0Batch_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "streaming",
              "wireValue": "streaming"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf0Streaming_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "formatted_output",
              "wireValue": "formatted_output"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf0FormattedOutput_example_0": false
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ManagementApiGetModelResponse2000_example_autogenerated": {}
        }
      }
    },
    "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1Metadata": {
      "name": {
        "typeId": "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1Metadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1Metadata"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "accent",
              "wireValue": "accent"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1MetadataAccent_example_0": "Irish"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "color",
              "wireValue": "color"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1MetadataColor_example_0": "#BA80F5"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "image",
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1MetadataImage_example_0": "https://static.deepgram.com/examples/avatars/angus.jpg"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sample",
              "wireValue": "sample"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1MetadataSample_example_0": "https://static.deepgram.com/examples/voices/angus.wav"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "tags",
              "wireValue": "tags"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1MetadataTags_example_0": [
                  "masculine"
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1Metadata_example_autogenerated": {}
        }
      }
    },
    "ManagementApiGetModelResponse2001": {
      "name": {
        "typeId": "ManagementApiGetModelResponse2001",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ManagementApiGetModelResponse2001",
        "displayName": "ManagementApiGetModelResponse2001"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1Name_example_0": "angus"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "canonical_name",
              "wireValue": "canonical_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1CanonicalName_example_0": "aura-angus-en"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "architecture",
              "wireValue": "architecture"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1Architecture_example_0": "aura"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "languages",
              "wireValue": "languages"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1Languages_example_0": [
                  "en",
                  "en-us"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "version",
              "wireValue": "version"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1Version_example_0": "2024-07-30.0"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "uuid",
              "wireValue": "uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1Uuid_example_0": "eed36e9e-37aa-40a3-91fa-a2911e73a5da"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1Metadata",
                  "typeId": "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1Metadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaOneOf1Metadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ManagementApiGetModelResponse2001_example_autogenerated": {}
        }
      }
    },
    "Management API_getModel_Response_200": {
      "name": {
        "typeId": "Management API_getModel_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_getModel_Response_200"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ManagementApiGetModelResponse2000",
              "typeId": "ManagementApiGetModelResponse2000",
              "displayName": "ManagementApiGetModelResponse2000",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ManagementApiGetModelResponse2001",
              "typeId": "ManagementApiGetModelResponse2001",
              "displayName": "ManagementApiGetModelResponse2001",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_getModel_Response_200_example_autogenerated": {}
        }
      }
    },
    "GetModelRequestBadRequestError": {
      "name": {
        "typeId": "GetModelRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetModelRequestBadRequestError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error category",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Additional details about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The request ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ModelsModelIdGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "GetModelRequestBadRequestError_example_0": {
            "category": "INVALID_JSON",
            "message": "Invalid JSON submitted.",
            "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
            "request_id": "123456-7890-1234-5678-901234"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsMember": {
      "name": {
        "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsMember",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsMember"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "member_id",
              "wireValue": "member_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the member",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsMemberMemberId_example_0": "3376abcd-8e5e-49d3-92d4-876d3a4f0363"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "email"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Email address of the member",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsMemberEmail_example_0": "email@example.com"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsMember_example_autogenerated": {
            "member_id": "3376abcd-8e5e-49d3-92d4-876d3a4f0363",
            "email": "email@example.com"
          }
        }
      }
    },
    "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsDistributionCredentials": {
      "name": {
        "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsDistributionCredentials",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsDistributionCredentials"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "distribution_credentials_id",
              "wireValue": "distribution_credentials_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the distribution credentials",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsDistributionCredentialsDistributionCredentialsId_example_0": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "provider",
              "wireValue": "provider"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The provider of the distribution service",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsDistributionCredentialsProvider_example_0": "quay"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "comment",
              "wireValue": "comment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional comment about the credentials",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsDistributionCredentialsComment_example_0": "My Self-Hosted Distribution Credentials"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "scopes",
              "wireValue": "scopes"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of permission scopes for the credentials",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsDistributionCredentialsScopes_example_0": [
                  "self-hosted:product:api",
                  "self-hosted:product:engine"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Timestamp when the credentials were created",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsDistributionCredentialsCreated_example_0": "2023-06-28T15:36:59.609841Z"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsDistributionCredentials_example_autogenerated": {
            "distribution_credentials_id": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
            "provider": "quay",
            "scopes": [
              "self-hosted:product:api",
              "self-hosted:product:engine"
            ],
            "created": "2023-06-28T15:36:59.609841Z"
          }
        }
      }
    },
    "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItems": {
      "name": {
        "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "member",
              "wireValue": "member"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsMember",
              "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsMember",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsMember_example_autogenerated": {
                  "member_id": "3376abcd-8e5e-49d3-92d4-876d3a4f0363",
                  "email": "email@example.com"
                }
              }
            }
          },
          {
            "name": {
              "name": "distribution_credentials",
              "wireValue": "distribution_credentials"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsDistributionCredentials",
              "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsDistributionCredentials",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItemsDistributionCredentials_example_autogenerated": {
                  "distribution_credentials_id": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
                  "provider": "quay",
                  "scopes": [
                    "self-hosted:product:api",
                    "self-hosted:product:engine"
                  ],
                  "created": "2023-06-28T15:36:59.609841Z"
                }
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItems_example_autogenerated": {
            "member": {
              "member_id": "3376abcd-8e5e-49d3-92d4-876d3a4f0363",
              "email": "email@example.com"
            },
            "distribution_credentials": {
              "distribution_credentials_id": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
              "provider": "quay",
              "scopes": [
                "self-hosted:product:api",
                "self-hosted:product:engine"
              ],
              "created": "2023-06-28T15:36:59.609841Z"
            }
          }
        }
      }
    },
    "Management API_listSelfHostedDistCreds_Response_200": {
      "name": {
        "typeId": "Management API_listSelfHostedDistCreds_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_listSelfHostedDistCreds_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "distribution_credentials",
              "wireValue": "distribution_credentials"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItems",
                      "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentialsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Array of distribution credentials with associated member information",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDistributionCredentials_example_autogenerated": [
                  {
                    "member": {
                      "member_id": "3376abcd-8e5e-49d3-92d4-876d3a4f0363",
                      "email": "email@example.com"
                    },
                    "distribution_credentials": {
                      "distribution_credentials_id": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
                      "provider": "quay",
                      "scopes": [
                        "self-hosted:product:api",
                        "self-hosted:product:engine"
                      ],
                      "created": "2023-06-28T15:36:59.609841Z"
                    }
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_listSelfHostedDistCreds_Response_200_example_autogenerated": {}
        }
      }
    },
    "ListSelfHostedDistCredsRequestForbiddenError": {
      "name": {
        "typeId": "ListSelfHostedDistCredsRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListSelfHostedDistCredsRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListSelfHostedDistCredsRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "ListSelfHostedDistCredsRequestNotFoundError": {
      "name": {
        "typeId": "ListSelfHostedDistCredsRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListSelfHostedDistCredsRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListSelfHostedDistCredsRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "V1ProjectsProjectIdSelfHostedDistributionCredentialsPostParametersScopesSchemaItems": {
      "name": {
        "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsPostParametersScopesSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsPostParametersScopesSchemaItems"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "self-hosted:products",
              "wireValue": "self-hosted:products"
            }
          },
          {
            "name": {
              "name": "self-hosted:product:api",
              "wireValue": "self-hosted:product:api"
            }
          },
          {
            "name": {
              "name": "self-hosted:product:engine",
              "wireValue": "self-hosted:product:engine"
            }
          },
          {
            "name": {
              "name": "self-hosted:product:license-proxy",
              "wireValue": "self-hosted:product:license-proxy"
            }
          },
          {
            "name": {
              "name": "self-hosted:product:dgtools",
              "wireValue": "self-hosted:product:dgtools"
            }
          },
          {
            "name": {
              "name": "self-hosted:product:billing",
              "wireValue": "self-hosted:product:billing"
            }
          },
          {
            "name": {
              "name": "self-hosted:product:hotpepper",
              "wireValue": "self-hosted:product:hotpepper"
            }
          },
          {
            "name": {
              "name": "self-hosted:product:metrics-server",
              "wireValue": "self-hosted:product:metrics-server"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdSelfHostedDistributionCredentialsPostParametersScopesSchemaItems_example_autogenerated": "self-hosted:products"
        }
      }
    },
    "V1ProjectsProjectIdSelfHostedDistributionCredentialsPostParametersProvider": {
      "name": {
        "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsPostParametersProvider",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsPostParametersProvider"
      },
      "shape": {
        "default": {
          "name": {
            "name": "quay",
            "wireValue": "quay"
          }
        },
        "values": [
          {
            "name": {
              "name": "quay",
              "wireValue": "quay"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdSelfHostedDistributionCredentialsPostParametersProvider_example_autogenerated": "quay"
        }
      }
    },
    "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaMember": {
      "name": {
        "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaMember",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaMember"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "member_id",
              "wireValue": "member_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the member",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaMemberMemberId_example_0": "c7b9b131-73f3-11d9-8665-0b00d2e44b83"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "email"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Email address of the member",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaMemberEmail_example_0": "email@example.com"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaMember_example_autogenerated": {
            "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
            "email": "email@example.com"
          }
        }
      }
    },
    "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDistributionCredentials": {
      "name": {
        "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDistributionCredentials",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDistributionCredentials"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "distribution_credentials_id",
              "wireValue": "distribution_credentials_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the distribution credentials",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDistributionCredentialsDistributionCredentialsId_example_0": "82c32c10-53b2-4d23-993f-864b3d44502a"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "provider",
              "wireValue": "provider"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The provider of the distribution service",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDistributionCredentialsProvider_example_0": "quay"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "comment",
              "wireValue": "comment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional comment about the credentials",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDistributionCredentialsComment_example_0": "My Self-Hosted Distribution Credentials"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "scopes",
              "wireValue": "scopes"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of permission scopes for the credentials",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDistributionCredentialsScopes_example_0": [
                  "self-hosted:product:api",
                  "self-hosted:product:engine"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Timestamp when the credentials were created",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDistributionCredentialsCreated_example_0": "2023-06-28T15:36:59.609841Z"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDistributionCredentials_example_autogenerated": {
            "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
            "provider": "quay",
            "scopes": [
              "self-hosted:product:api",
              "self-hosted:product:engine"
            ],
            "created": "2023-06-28T15:36:59.609841Z"
          }
        }
      }
    },
    "Management API_getSelfHostedCredentials_Response_200": {
      "name": {
        "typeId": "Management API_getSelfHostedCredentials_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_getSelfHostedCredentials_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "member",
              "wireValue": "member"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaMember",
              "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaMember",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaMember_example_autogenerated": {
                  "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                  "email": "email@example.com"
                }
              }
            }
          },
          {
            "name": {
              "name": "distribution_credentials",
              "wireValue": "distribution_credentials"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDistributionCredentials",
              "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDistributionCredentials",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDistributionCredentials_example_autogenerated": {
                  "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
                  "provider": "quay",
                  "scopes": [
                    "self-hosted:product:api",
                    "self-hosted:product:engine"
                  ],
                  "created": "2023-06-28T15:36:59.609841Z"
                }
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_getSelfHostedCredentials_Response_200_example_autogenerated": {
            "member": {
              "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
              "email": "email@example.com"
            },
            "distribution_credentials": {
              "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
              "provider": "quay",
              "scopes": [
                "self-hosted:product:api",
                "self-hosted:product:engine"
              ],
              "created": "2023-06-28T15:36:59.609841Z"
            }
          }
        }
      }
    },
    "GetSelfHostedCredentialsRequestForbiddenError": {
      "name": {
        "typeId": "GetSelfHostedCredentialsRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetSelfHostedCredentialsRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetSelfHostedCredentialsRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "GetSelfHostedCredentialsRequestNotFoundError": {
      "name": {
        "typeId": "GetSelfHostedCredentialsRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetSelfHostedCredentialsRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdGetResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetSelfHostedCredentialsRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaMember": {
      "name": {
        "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaMember",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaMember"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "member_id",
              "wireValue": "member_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the member",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaMemberMemberId_example_0": "c7b9b131-73f3-11d9-8665-0b00d2e44b83"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "email"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Email address of the member",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaMemberEmail_example_0": "email@example.com"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaMember_example_autogenerated": {
            "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
            "email": "email@example.com"
          }
        }
      }
    },
    "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDistributionCredentials": {
      "name": {
        "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDistributionCredentials",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDistributionCredentials"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "distribution_credentials_id",
              "wireValue": "distribution_credentials_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the distribution credentials",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDistributionCredentialsDistributionCredentialsId_example_0": "82c32c10-53b2-4d23-993f-864b3d44502a"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "provider",
              "wireValue": "provider"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The provider of the distribution service",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDistributionCredentialsProvider_example_0": "quay"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "comment",
              "wireValue": "comment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional comment about the credentials",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDistributionCredentialsComment_example_0": "My Self-Hosted Distribution Credentials"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "scopes",
              "wireValue": "scopes"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of permission scopes for the credentials",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDistributionCredentialsScopes_example_0": [
                  "self-hosted:product:api",
                  "self-hosted:product:engine"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Timestamp when the credentials were created",
            "v2Examples": {
              "userSpecifiedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDistributionCredentialsCreated_example_0": "2023-06-28T15:36:59.609841Z"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDistributionCredentials_example_autogenerated": {
            "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
            "provider": "quay",
            "scopes": [
              "self-hosted:product:api",
              "self-hosted:product:engine"
            ],
            "created": "2023-06-28T15:36:59.609841Z"
          }
        }
      }
    },
    "Management API_deleteSelfHostedDistCreds_Response_200": {
      "name": {
        "typeId": "Management API_deleteSelfHostedDistCreds_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Management API_deleteSelfHostedDistCreds_Response_200"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "member",
              "wireValue": "member"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaMember",
              "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaMember",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaMember_example_autogenerated": {
                  "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                  "email": "email@example.com"
                }
              }
            }
          },
          {
            "name": {
              "name": "distribution_credentials",
              "wireValue": "distribution_credentials"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDistributionCredentials",
              "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDistributionCredentials",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDistributionCredentials_example_autogenerated": {
                  "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
                  "provider": "quay",
                  "scopes": [
                    "self-hosted:product:api",
                    "self-hosted:product:engine"
                  ],
                  "created": "2023-06-28T15:36:59.609841Z"
                }
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Management API_deleteSelfHostedDistCreds_Response_200_example_autogenerated": {
            "member": {
              "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
              "email": "email@example.com"
            },
            "distribution_credentials": {
              "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
              "provider": "quay",
              "scopes": [
                "self-hosted:product:api",
                "self-hosted:product:engine"
              ],
              "created": "2023-06-28T15:36:59.609841Z"
            }
          }
        }
      }
    },
    "DeleteSelfHostedDistCredsRequestForbiddenError": {
      "name": {
        "typeId": "DeleteSelfHostedDistCredsRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteSelfHostedDistCredsRequestForbiddenError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DeleteSelfHostedDistCredsRequestForbiddenError_example_autogenerated": {}
        }
      }
    },
    "DeleteSelfHostedDistCredsRequestNotFoundError": {
      "name": {
        "typeId": "DeleteSelfHostedDistCredsRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteSelfHostedDistCredsRequestNotFoundError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaCategory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "details",
              "wireValue": "details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A description of the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaDetails_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A message about the error",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique identifier of the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V1ProjectsProjectIdSelfHostedDistributionCredentialsDistributionCredentialsIdDeleteResponsesContentApplicationJsonSchemaRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DeleteSelfHostedDistCredsRequestNotFoundError_example_autogenerated": {}
        }
      }
    },
    "ChannelsSpeakMessagesTextToSpeechRequestType": {
      "name": {
        "typeId": "ChannelsSpeakMessagesTextToSpeechRequestType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsSpeakMessagesTextToSpeechRequestType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "Speak",
              "wireValue": "Speak"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Message type indicating a text-to-speech request",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsSpeakMessagesTextToSpeechRequestType_example_autogenerated": "Speak"
        }
      }
    },
    "speak_textToSpeechRequest": {
      "name": {
        "typeId": "speak_textToSpeechRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_textToSpeechRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsSpeakMessagesTextToSpeechRequestType",
              "typeId": "ChannelsSpeakMessagesTextToSpeechRequestType",
              "inline": false,
              "type": "named"
            },
            "docs": "Message type indicating a text-to-speech request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesTextToSpeechRequestType_example_autogenerated": "Speak"
              }
            }
          },
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The input text to be converted to speech",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesTextToSpeechRequestText_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "speak_textToSpeechRequest_example_autogenerated": {
            "type": "Speak",
            "text": "string"
          }
        }
      }
    },
    "ChannelsSpeakMessagesControlMessagesRequestType": {
      "name": {
        "typeId": "ChannelsSpeakMessagesControlMessagesRequestType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsSpeakMessagesControlMessagesRequestType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "Flush",
              "wireValue": "Flush"
            }
          },
          {
            "name": {
              "name": "Clear",
              "wireValue": "Clear"
            }
          },
          {
            "name": {
              "name": "Close",
              "wireValue": "Close"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsSpeakMessagesControlMessagesRequestType_example_autogenerated": "Flush"
        }
      }
    },
    "speak_controlMessagesRequest": {
      "name": {
        "typeId": "speak_controlMessagesRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_controlMessagesRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsSpeakMessagesControlMessagesRequestType",
              "typeId": "ChannelsSpeakMessagesControlMessagesRequestType",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesControlMessagesRequestType_example_autogenerated": "Flush"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "speak_controlMessagesRequest_example_autogenerated": {
            "type": "Flush"
          }
        }
      }
    },
    "speak_textToSpeechResponse": {
      "name": {
        "typeId": "speak_textToSpeechResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_textToSpeechResponse"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "format": "binary"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "format": "binary"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Audio data in the format specified by the request parameters",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "speak_textToSpeechResponse_example_autogenerated": "string"
        }
      }
    },
    "ChannelsSpeakMessagesControlMessagesResponseType": {
      "name": {
        "typeId": "ChannelsSpeakMessagesControlMessagesResponseType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsSpeakMessagesControlMessagesResponseType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "flush",
              "wireValue": "flush"
            }
          },
          {
            "name": {
              "name": "clear",
              "wireValue": "clear"
            }
          },
          {
            "name": {
              "name": "close",
              "wireValue": "close"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The type of control message response",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsSpeakMessagesControlMessagesResponseType_example_autogenerated": "flush"
        }
      }
    },
    "speak_controlMessagesResponse": {
      "name": {
        "typeId": "speak_controlMessagesResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_controlMessagesResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsSpeakMessagesControlMessagesResponseType",
              "typeId": "ChannelsSpeakMessagesControlMessagesResponseType",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of control message response",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesControlMessagesResponseType_example_autogenerated": "flush"
              }
            }
          },
          {
            "name": {
              "name": "sequence_id",
              "wireValue": "sequence_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The sequence ID of the response",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesControlMessagesResponseSequenceId_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "speak_controlMessagesResponse_example_autogenerated": {
            "type": "flush"
          }
        }
      }
    },
    "speak_metadataResponse": {
      "name": {
        "typeId": "speak_metadataResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_metadataResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Message type identifier",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesMetadataResponseType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Unique identifier for the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesMetadataResponseRequestId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "model_name",
              "wireValue": "model_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Name of the model being used",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesMetadataResponseModelName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "model_version",
              "wireValue": "model_version"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Version of the model being used",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesMetadataResponseModelVersion_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "model_uuid",
              "wireValue": "model_uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Unique identifier for the model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesMetadataResponseModelUuid_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Text to Speech Metadata information sent immediately after completing the WebSocket handshake",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "speak_metadataResponse_example_autogenerated": {}
        }
      }
    },
    "ChannelsSpeakMessagesErrorResponseErrorCode": {
      "name": {
        "typeId": "ChannelsSpeakMessagesErrorResponseErrorCode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsSpeakMessagesErrorResponseErrorCode"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "BadRequest",
              "wireValue": "400"
            }
          },
          {
            "name": {
              "name": "Unauthorized",
              "wireValue": "401"
            }
          },
          {
            "name": {
              "name": "PaymentRequired",
              "wireValue": "402"
            }
          },
          {
            "name": {
              "name": "Forbidden",
              "wireValue": "403"
            }
          },
          {
            "name": {
              "name": "TooManyRequests",
              "wireValue": "429"
            }
          },
          {
            "name": {
              "name": "ServiceUnavailable",
              "wireValue": "503"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "HTTP status code equivalent",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsSpeakMessagesErrorResponseErrorCode_example_autogenerated": 400
        }
      }
    },
    "speak_errorResponse": {
      "name": {
        "typeId": "speak_errorResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_errorResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "error_code",
              "wireValue": "error_code"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsSpeakMessagesErrorResponseErrorCode",
              "typeId": "ChannelsSpeakMessagesErrorResponseErrorCode",
              "inline": false,
              "type": "named"
            },
            "docs": "HTTP status code equivalent",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesErrorResponseErrorCode_example_autogenerated": 400
              }
            }
          },
          {
            "name": {
              "name": "error_message",
              "wireValue": "error_message"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesErrorResponseErrorMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesErrorResponseRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "speak_errorResponse_example_autogenerated": {
            "error_code": 400,
            "error_message": "string",
            "request_id": "string"
          }
        }
      }
    },
    "ChannelsSpeakMessagesSuccessResponseSuccessCode": {
      "name": {
        "typeId": "ChannelsSpeakMessagesSuccessResponseSuccessCode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsSpeakMessagesSuccessResponseSuccessCode"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "OK",
              "wireValue": "200"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "HTTP status code equivalent",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsSpeakMessagesSuccessResponseSuccessCode_example_autogenerated": 200
        }
      }
    },
    "speak_successResponse": {
      "name": {
        "typeId": "speak_successResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_successResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "success_code",
              "wireValue": "success_code"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsSpeakMessagesSuccessResponseSuccessCode",
              "typeId": "ChannelsSpeakMessagesSuccessResponseSuccessCode",
              "inline": false,
              "type": "named"
            },
            "docs": "HTTP status code equivalent",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesSuccessResponseSuccessCode_example_autogenerated": 200
              }
            }
          },
          {
            "name": {
              "name": "success_message",
              "wireValue": "success_message"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Success message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesSuccessResponseSuccessMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesSuccessResponseRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "speak_successResponse_example_autogenerated": {
            "success_code": 200,
            "success_message": "string",
            "request_id": "string"
          }
        }
      }
    },
    "ChannelsSpeakMessagesCloseFrameCode": {
      "name": {
        "typeId": "ChannelsSpeakMessagesCloseFrameCode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsSpeakMessagesCloseFrameCode"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "NormalClosure",
              "wireValue": "1000"
            }
          },
          {
            "name": {
              "name": "ProtocolError",
              "wireValue": "1003"
            }
          },
          {
            "name": {
              "name": "PolicyViolation",
              "wireValue": "1008"
            }
          },
          {
            "name": {
              "name": "MessageTooBig",
              "wireValue": "1009"
            }
          },
          {
            "name": {
              "name": "InternalServerError",
              "wireValue": "1011"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "WebSocket close status code",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsSpeakMessagesCloseFrameCode_example_autogenerated": 1000
        }
      }
    },
    "ChannelsSpeakMessagesCloseFramePayload": {
      "name": {
        "typeId": "ChannelsSpeakMessagesCloseFramePayload",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsSpeakMessagesCloseFramePayload"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "None",
              "wireValue": "None"
            }
          },
          {
            "name": {
              "name": "MESSAGE-0000",
              "wireValue": "MESSAGE-0000"
            }
          },
          {
            "name": {
              "name": "DATA-0000",
              "wireValue": "DATA-0000"
            }
          },
          {
            "name": {
              "name": "BIG-0000",
              "wireValue": "BIG-0000"
            }
          },
          {
            "name": {
              "name": "BIG-0001",
              "wireValue": "BIG-0001"
            }
          },
          {
            "name": {
              "name": "NET-0000",
              "wireValue": "NET-0000"
            }
          },
          {
            "name": {
              "name": "NET-0001",
              "wireValue": "NET-0001"
            }
          },
          {
            "name": {
              "name": "NET-0002",
              "wireValue": "NET-0002"
            }
          },
          {
            "name": {
              "name": "NET-0003",
              "wireValue": "NET-0003"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Error reason code",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsSpeakMessagesCloseFramePayload_example_autogenerated": "None"
        }
      }
    },
    "speak_closeFrame": {
      "name": {
        "typeId": "speak_closeFrame",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_closeFrame"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "code",
              "wireValue": "code"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsSpeakMessagesCloseFrameCode",
              "typeId": "ChannelsSpeakMessagesCloseFrameCode",
              "inline": false,
              "type": "named"
            },
            "docs": "WebSocket close status code",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesCloseFrameCode_example_autogenerated": 1000
              }
            }
          },
          {
            "name": {
              "name": "payload",
              "wireValue": "payload"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsSpeakMessagesCloseFramePayload",
              "typeId": "ChannelsSpeakMessagesCloseFramePayload",
              "inline": false,
              "type": "named"
            },
            "docs": "Error reason code",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsSpeakMessagesCloseFramePayload_example_autogenerated": "None"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When Deepgram encounters an error during streaming text to speech, a WebSocket Close frame is sent. The frame contains a status code and UTF-8-encoded payload describing the error reason\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "speak_closeFrame_example_0": {
            "code": 1000,
            "payload": "None",
            "description": "Normal closure"
          },
          "speak_closeFrame_example_1": {
            "code": 1003,
            "payload": "MESSAGE-0000",
            "description": "Input message isn't a supported websocket message type"
          },
          "speak_closeFrame_example_2": {
            "code": 1008,
            "payload": "DATA-0000",
            "description": "Input message isn't recognized as a valid command"
          },
          "speak_closeFrame_example_3": {
            "code": 1009,
            "payload": "BIG-0000",
            "description": "Input message is too large"
          },
          "speak_closeFrame_example_4": {
            "code": 1009,
            "payload": "BIG-0001",
            "description": "Input text has too many characters"
          },
          "speak_closeFrame_example_5": {
            "code": 1011,
            "payload": "NET-0000",
            "description": "Internal server error"
          },
          "speak_closeFrame_example_6": {
            "code": 1011,
            "payload": "NET-0001",
            "description": "Failed to receive message"
          },
          "speak_closeFrame_example_7": {
            "code": 1011,
            "payload": "NET-0002",
            "description": "Failed to send message"
          },
          "speak_closeFrame_example_8": {
            "code": 1011,
            "payload": "NET-0003",
            "description": "Time limit exceeded"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_transcriptionRequest": {
      "name": {
        "typeId": "listen_transcriptionRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_transcriptionRequest"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "format": "binary"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "format": "binary"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Raw audio data to be transcribed. Should be sent as a binary WebSocket message without base64 encoding",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "listen_transcriptionRequest_example_autogenerated": "string"
        }
      }
    },
    "ChannelsListenMessagesControlMessagesRequestOneOf0Type": {
      "name": {
        "typeId": "ChannelsListenMessagesControlMessagesRequestOneOf0Type",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesControlMessagesRequestOneOf0Type"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "Finalize",
              "wireValue": "Finalize"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Used to handle specific scenarios where you need to force the server to process all unprocessed audio data and immediately return the final results",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesControlMessagesRequestOneOf0Type_example_autogenerated": "Finalize"
        }
      }
    },
    "ListenControlMessagesRequest0": {
      "name": {
        "typeId": "ListenControlMessagesRequest0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListenControlMessagesRequest0",
        "displayName": "ListenControlMessagesRequest0"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsListenMessagesControlMessagesRequestOneOf0Type",
                  "typeId": "ChannelsListenMessagesControlMessagesRequestOneOf0Type",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to handle specific scenarios where you need to force the server to process all unprocessed audio data and immediately return the final results",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessagesRequestOneOf0Type_example_autogenerated": "Finalize"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListenControlMessagesRequest0_example_autogenerated": {}
        }
      }
    },
    "ChannelsListenMessagesControlMessagesRequestOneOf1Type": {
      "name": {
        "typeId": "ChannelsListenMessagesControlMessagesRequestOneOf1Type",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesControlMessagesRequestOneOf1Type"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "CloseStream",
              "wireValue": "CloseStream"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Close the websocket connection",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesControlMessagesRequestOneOf1Type_example_autogenerated": "CloseStream"
        }
      }
    },
    "ListenControlMessagesRequest1": {
      "name": {
        "typeId": "ListenControlMessagesRequest1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListenControlMessagesRequest1",
        "displayName": "ListenControlMessagesRequest1"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsListenMessagesControlMessagesRequestOneOf1Type",
                  "typeId": "ChannelsListenMessagesControlMessagesRequestOneOf1Type",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Close the websocket connection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessagesRequestOneOf1Type_example_autogenerated": "CloseStream"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListenControlMessagesRequest1_example_autogenerated": {}
        }
      }
    },
    "ChannelsListenMessagesControlMessagesRequestOneOf2Type": {
      "name": {
        "typeId": "ChannelsListenMessagesControlMessagesRequestOneOf2Type",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesControlMessagesRequestOneOf2Type"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "KeepAlive",
              "wireValue": "KeepAlive"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Used to keep the websocket connection alive",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesControlMessagesRequestOneOf2Type_example_autogenerated": "KeepAlive"
        }
      }
    },
    "ListenControlMessagesRequest2": {
      "name": {
        "typeId": "ListenControlMessagesRequest2",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListenControlMessagesRequest2",
        "displayName": "ListenControlMessagesRequest2"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsListenMessagesControlMessagesRequestOneOf2Type",
                  "typeId": "ChannelsListenMessagesControlMessagesRequestOneOf2Type",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to keep the websocket connection alive",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessagesRequestOneOf2Type_example_autogenerated": "KeepAlive"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListenControlMessagesRequest2_example_autogenerated": {}
        }
      }
    },
    "listen_controlMessagesRequest": {
      "name": {
        "typeId": "listen_controlMessagesRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_controlMessagesRequest"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ListenControlMessagesRequest0",
              "typeId": "ListenControlMessagesRequest0",
              "displayName": "ListenControlMessagesRequest0",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ListenControlMessagesRequest1",
              "typeId": "ListenControlMessagesRequest1",
              "displayName": "ListenControlMessagesRequest1",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ListenControlMessagesRequest2",
              "typeId": "ListenControlMessagesRequest2",
              "displayName": "ListenControlMessagesRequest2",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "listen_controlMessagesRequest_example_autogenerated": {
            "type": "Finalize"
          }
        }
      }
    },
    "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsWordsItems": {
      "name": {
        "typeId": "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsWordsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsWordsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "word",
              "wireValue": "word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsWordsItemsWord_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsWordsItemsStart_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsWordsItemsEnd_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsWordsItemsConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "punctuated_word",
              "wireValue": "punctuated_word"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsWordsItemsPunctuatedWord_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsWordsItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItems": {
      "name": {
        "typeId": "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "transcript",
              "wireValue": "transcript"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Complete transcribed text",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsTranscript_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Overall confidence score",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "words",
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsWordsItems",
                      "typeId": "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsWordsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItemsWords_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsListenMessagesTranscriptionResponseChannel": {
      "name": {
        "typeId": "ChannelsListenMessagesTranscriptionResponseChannel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesTranscriptionResponseChannel"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "alternatives",
              "wireValue": "alternatives"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItems",
                      "typeId": "ChannelsListenMessagesTranscriptionResponseChannelAlternativesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseChannelAlternatives_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesTranscriptionResponseChannel_example_autogenerated": {}
        }
      }
    },
    "ChannelsListenMessagesTranscriptionResponseMetadataModelInfo": {
      "name": {
        "typeId": "ChannelsListenMessagesTranscriptionResponseMetadataModelInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesTranscriptionResponseMetadataModelInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseMetadataModelInfoName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "version",
              "wireValue": "version"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseMetadataModelInfoVersion_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "arch",
              "wireValue": "arch"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseMetadataModelInfoArch_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesTranscriptionResponseMetadataModelInfo_example_autogenerated": {}
        }
      }
    },
    "ChannelsListenMessagesTranscriptionResponseMetadata": {
      "name": {
        "typeId": "ChannelsListenMessagesTranscriptionResponseMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesTranscriptionResponseMetadata"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model_info",
              "wireValue": "model_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsListenMessagesTranscriptionResponseMetadataModelInfo",
                  "typeId": "ChannelsListenMessagesTranscriptionResponseMetadataModelInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseMetadataModelInfo_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseMetadataRequestId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "model_uuid",
              "wireValue": "model_uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseMetadataModelUuid_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesTranscriptionResponseMetadata_example_autogenerated": {}
        }
      }
    },
    "listen_transcriptionResponse": {
      "name": {
        "typeId": "listen_transcriptionResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_transcriptionResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "channel",
              "wireValue": "channel"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsListenMessagesTranscriptionResponseChannel",
                  "typeId": "ChannelsListenMessagesTranscriptionResponseChannel",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseChannel_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsListenMessagesTranscriptionResponseMetadata",
                  "typeId": "ChannelsListenMessagesTranscriptionResponseMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "channel_index",
              "wireValue": "channel_index"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseChannelIndex_example_autogenerated": [
                  1
                ]
              }
            }
          },
          {
            "name": {
              "name": "duration",
              "wireValue": "duration"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseDuration_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {},
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseStart_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "is_final",
              "wireValue": "is_final"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseIsFinal_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "from_finalize",
              "wireValue": "from_finalize"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseFromFinalize_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "speech_final",
              "wireValue": "speech_final"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesTranscriptionResponseSpeechFinal_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "listen_transcriptionResponse_example_autogenerated": {}
        }
      }
    },
    "ChannelsListenMessagesControlMessageResponseOneOf0Type": {
      "name": {
        "typeId": "ChannelsListenMessagesControlMessageResponseOneOf0Type",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesControlMessageResponseOneOf0Type"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "Finalize",
              "wireValue": "Finalize"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesControlMessageResponseOneOf0Type_example_autogenerated": "Finalize"
        }
      }
    },
    "ListenControlMessageResponse0": {
      "name": {
        "typeId": "ListenControlMessageResponse0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListenControlMessageResponse0"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsListenMessagesControlMessageResponseOneOf0Type",
              "typeId": "ChannelsListenMessagesControlMessageResponseOneOf0Type",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf0Type_example_autogenerated": "Finalize"
              }
            }
          },
          {
            "name": {
              "name": "channel",
              "wireValue": "channel"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The channel number being finalized",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf0Channel_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": true,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListenControlMessageResponse0_example_autogenerated": {
            "type": "Finalize",
            "channel": 1
          }
        }
      }
    },
    "ChannelsListenMessagesControlMessageResponseOneOf1Type": {
      "name": {
        "typeId": "ChannelsListenMessagesControlMessageResponseOneOf1Type",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesControlMessageResponseOneOf1Type"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "Metadata",
              "wireValue": "Metadata"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesControlMessageResponseOneOf1Type_example_autogenerated": "Metadata"
        }
      }
    },
    "ListenControlMessageResponse1": {
      "name": {
        "typeId": "ListenControlMessageResponse1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListenControlMessageResponse1"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsListenMessagesControlMessageResponseOneOf1Type",
              "typeId": "ChannelsListenMessagesControlMessageResponseOneOf1Type",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf1Type_example_autogenerated": "Metadata"
              }
            }
          },
          {
            "name": {
              "name": "transaction_key",
              "wireValue": "transaction_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Deprecated field",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf1TransactionKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf1RequestId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "sha256",
              "wireValue": "sha256"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[a-fA-F0-9]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "SHA-256 hash of the audio content",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf1Sha256_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Timestamp when the response was created",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf1Created_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "duration",
              "wireValue": "duration"
            },
            "valueType": {
              "primitive": {
                "v1": "FLOAT",
                "v2": {
                  "validation": {},
                  "type": "float"
                }
              },
              "type": "primitive"
            },
            "docs": "Duration of the audio in seconds",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf1Duration_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "channels",
              "wireValue": "channels"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Number of audio channels",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf1Channels_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": true,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListenControlMessageResponse1_example_autogenerated": {
            "type": "Metadata",
            "request_id": "string",
            "sha256": "string",
            "created": "2024-01-15T09:30:00Z",
            "duration": 1.1,
            "channels": 1
          }
        }
      }
    },
    "ChannelsListenMessagesControlMessageResponseOneOf2Type": {
      "name": {
        "typeId": "ChannelsListenMessagesControlMessageResponseOneOf2Type",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesControlMessageResponseOneOf2Type"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "CloseStream",
              "wireValue": "CloseStream"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesControlMessageResponseOneOf2Type_example_autogenerated": "CloseStream"
        }
      }
    },
    "ListenControlMessageResponse2": {
      "name": {
        "typeId": "ListenControlMessageResponse2",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListenControlMessageResponse2"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsListenMessagesControlMessageResponseOneOf2Type",
              "typeId": "ChannelsListenMessagesControlMessageResponseOneOf2Type",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf2Type_example_autogenerated": "CloseStream"
              }
            }
          },
          {
            "name": {
              "name": "transaction_key",
              "wireValue": "transaction_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Deprecated field",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf2TransactionKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf2RequestId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "sha256",
              "wireValue": "sha256"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[a-fA-F0-9]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "SHA-256 hash of the audio content",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf2Sha256_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Timestamp when the response was created",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf2Created_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "duration",
              "wireValue": "duration"
            },
            "valueType": {
              "primitive": {
                "v1": "FLOAT",
                "v2": {
                  "validation": {},
                  "type": "float"
                }
              },
              "type": "primitive"
            },
            "docs": "Duration of the audio in seconds",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf2Duration_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "channels",
              "wireValue": "channels"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Number of audio channels",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesControlMessageResponseOneOf2Channels_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": true,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ListenControlMessageResponse2_example_autogenerated": {
            "type": "CloseStream",
            "request_id": "string",
            "sha256": "string",
            "created": "2024-01-15T09:30:00Z",
            "duration": 1.1,
            "channels": 1
          }
        }
      }
    },
    "listen_controlMessageResponse": {
      "name": {
        "typeId": "listen_controlMessageResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_controlMessageResponse"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ListenControlMessageResponse0",
              "typeId": "ListenControlMessageResponse0",
              "displayName": "FinalizeResponse",
              "inline": false,
              "type": "named"
            },
            "docs": "The server will process all remaining audio data and return the final results. You may receive a response with the from_finalize attribute set to true, indicating that the finalization process is complete. This response typically occurs when there is a noticeable amount of audio buffered in the server.\n"
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ListenControlMessageResponse1",
              "typeId": "ListenControlMessageResponse1",
              "displayName": "MetadataResponse",
              "inline": false,
              "type": "named"
            },
            "docs": "Provides real-time metadata during audio streaming, including audio characteristics\nand processing details. This response is sent periodically during streaming to\nprovide updates about the audio being processed.\n"
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ListenControlMessageResponse2",
              "typeId": "ListenControlMessageResponse2",
              "displayName": "CloseStreamResponse",
              "inline": false,
              "type": "named"
            },
            "docs": "Indicates that the server has closed the WebSocket connection and the server will process all remaining audio data.\n"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "listen_controlMessageResponse_example_autogenerated": {
            "type": "Finalize"
          }
        }
      }
    },
    "listen_metadataResponse": {
      "name": {
        "typeId": "listen_metadataResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_metadataResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Message type identifier",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesMetadataResponseType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Unique identifier for the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesMetadataResponseRequestId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "model_name",
              "wireValue": "model_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Name of the model being used",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesMetadataResponseModelName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "model_version",
              "wireValue": "model_version"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Version of the model being used",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesMetadataResponseModelVersion_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "model_uuid",
              "wireValue": "model_uuid"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Unique identifier for the model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesMetadataResponseModelUuid_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Sent immediately after completing the WebSocket handshake",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "listen_metadataResponse_example_autogenerated": {}
        }
      }
    },
    "ChannelsListenMessagesErrorResponseErrorCode": {
      "name": {
        "typeId": "ChannelsListenMessagesErrorResponseErrorCode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesErrorResponseErrorCode"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "BadRequest",
              "wireValue": "400"
            }
          },
          {
            "name": {
              "name": "Unauthorized",
              "wireValue": "401"
            }
          },
          {
            "name": {
              "name": "PaymentRequired",
              "wireValue": "402"
            }
          },
          {
            "name": {
              "name": "Forbidden",
              "wireValue": "403"
            }
          },
          {
            "name": {
              "name": "TooManyRequests",
              "wireValue": "429"
            }
          },
          {
            "name": {
              "name": "ServiceUnavailable",
              "wireValue": "503"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "HTTP status code equivalent",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesErrorResponseErrorCode_example_autogenerated": 400
        }
      }
    },
    "listen_errorResponse": {
      "name": {
        "typeId": "listen_errorResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_errorResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "error_code",
              "wireValue": "error_code"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsListenMessagesErrorResponseErrorCode",
              "typeId": "ChannelsListenMessagesErrorResponseErrorCode",
              "inline": false,
              "type": "named"
            },
            "docs": "HTTP status code equivalent",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesErrorResponseErrorCode_example_autogenerated": 400
              }
            }
          },
          {
            "name": {
              "name": "error_message",
              "wireValue": "error_message"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesErrorResponseErrorMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesErrorResponseRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "listen_errorResponse_example_autogenerated": {
            "error_code": 400,
            "error_message": "string",
            "request_id": "string"
          }
        }
      }
    },
    "ChannelsListenMessagesSuccessResponseSuccessCode": {
      "name": {
        "typeId": "ChannelsListenMessagesSuccessResponseSuccessCode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesSuccessResponseSuccessCode"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "OK",
              "wireValue": "200"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "HTTP status code equivalent",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesSuccessResponseSuccessCode_example_autogenerated": 200
        }
      }
    },
    "listen_successResponse": {
      "name": {
        "typeId": "listen_successResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_successResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "success_code",
              "wireValue": "success_code"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsListenMessagesSuccessResponseSuccessCode",
              "typeId": "ChannelsListenMessagesSuccessResponseSuccessCode",
              "inline": false,
              "type": "named"
            },
            "docs": "HTTP status code equivalent",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesSuccessResponseSuccessCode_example_autogenerated": 200
              }
            }
          },
          {
            "name": {
              "name": "success_message",
              "wireValue": "success_message"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Success message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesSuccessResponseSuccessMessage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesSuccessResponseRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "listen_successResponse_example_autogenerated": {
            "success_code": 200,
            "success_message": "string",
            "request_id": "string"
          }
        }
      }
    },
    "ChannelsListenMessagesCloseFrameCode": {
      "name": {
        "typeId": "ChannelsListenMessagesCloseFrameCode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesCloseFrameCode"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "NormalClosure",
              "wireValue": "1000"
            }
          },
          {
            "name": {
              "name": "PolicyViolation",
              "wireValue": "1008"
            }
          },
          {
            "name": {
              "name": "InternalServerError",
              "wireValue": "1011"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "WebSocket close status code",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesCloseFrameCode_example_autogenerated": 1000
        }
      }
    },
    "ChannelsListenMessagesCloseFramePayload": {
      "name": {
        "typeId": "ChannelsListenMessagesCloseFramePayload",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsListenMessagesCloseFramePayload"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "None",
              "wireValue": "None"
            }
          },
          {
            "name": {
              "name": "DATA-0000",
              "wireValue": "DATA-0000"
            }
          },
          {
            "name": {
              "name": "NET-0000",
              "wireValue": "NET-0000"
            }
          },
          {
            "name": {
              "name": "NET-0001",
              "wireValue": "NET-0001"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Error reason code",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsListenMessagesCloseFramePayload_example_autogenerated": "None"
        }
      }
    },
    "listen_closeFrame": {
      "name": {
        "typeId": "listen_closeFrame",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_closeFrame"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "code",
              "wireValue": "code"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsListenMessagesCloseFrameCode",
              "typeId": "ChannelsListenMessagesCloseFrameCode",
              "inline": false,
              "type": "named"
            },
            "docs": "WebSocket close status code",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesCloseFrameCode_example_autogenerated": 1000
              }
            }
          },
          {
            "name": {
              "name": "payload",
              "wireValue": "payload"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsListenMessagesCloseFramePayload",
              "typeId": "ChannelsListenMessagesCloseFramePayload",
              "inline": false,
              "type": "named"
            },
            "docs": "Error reason code",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsListenMessagesCloseFramePayload_example_autogenerated": "None"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When Deepgram encounters an error during streaming speech to text, a WebSocket Close frame is sent. The frame contains a status code and UTF-8-encoded payload describing the error reason\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_closeFrame_example_0": {
            "code": 1000,
            "payload": "None",
            "description": "Normal closure"
          },
          "listen_closeFrame_example_1": {
            "code": 1008,
            "payload": "DATA-0000",
            "description": "The payload cannot be decoded as audio"
          },
          "listen_closeFrame_example_2": {
            "code": 1011,
            "payload": "NET-0000",
            "description": "Internal server error"
          },
          "listen_closeFrame_example_3": {
            "code": 1011,
            "payload": "NET-0001",
            "description": "Failed to receive message"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationAudioInput": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationAudioInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationAudioInput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "encoding",
              "wireValue": "encoding"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "linear16",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Audio encoding format",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAudioInputEncoding_example_autogenerated": "linear16"
              }
            }
          },
          {
            "name": {
              "name": "sample_rate",
              "wireValue": "sample_rate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 24000,
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Sample rate in Hz",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAudioInputSampleRate_example_autogenerated": 24000
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Optional audio input configuration settings",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationAudioInput_example_autogenerated": {}
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationAudioOutput": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationAudioOutput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationAudioOutput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "encoding",
              "wireValue": "encoding"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAudioOutputEncoding_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "sample_rate",
              "wireValue": "sample_rate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 24000,
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Sample rate in Hz",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAudioOutputSampleRate_example_autogenerated": 24000
              }
            }
          },
          {
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAudioOutputBitrate_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "container",
              "wireValue": "container"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAudioOutputContainer_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Audio output configuration settings",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationAudioOutput_example_autogenerated": {}
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationAudio": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationAudio",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationAudio"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "input",
              "wireValue": "input"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsAgentMessagesSettingsConfigurationAudioInput",
                      "typeId": "ChannelsAgentMessagesSettingsConfigurationAudioInput",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional audio input configuration settings",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAudioInput_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "output",
              "wireValue": "output"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsAgentMessagesSettingsConfigurationAudioOutput",
                      "typeId": "ChannelsAgentMessagesSettingsConfigurationAudioOutput",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Audio output configuration settings",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAudioOutput_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Optional audio configuration settings",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationAudio_example_autogenerated": {}
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationAgentListen": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentListen",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationAgentListen"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model",
              "wireValue": "model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "nova-3",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Model to use for speech recognition",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentListenModel_example_autogenerated": "nova-3"
              }
            }
          },
          {
            "name": {
              "name": "keyterms",
              "wireValue": "keyterms"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of keyterms to listen for, only available on nova-3",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentListenKeyterms_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationAgentListen_example_autogenerated": {}
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationAgentThinkProvider": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentThinkProvider",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationAgentThinkProvider"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "LLM provider type",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkProviderType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationAgentThinkProvider_example_autogenerated": {}
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsHeadersItems": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsHeadersItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsHeadersItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsHeadersItemsKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "value",
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsHeadersItemsValue_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsHeadersItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsParameters": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsParameters"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsParametersType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "properties",
              "wireValue": "properties"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsParameters",
                      "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsParameters",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsParameters_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "required",
              "wireValue": "required"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsParametersRequired_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsParameters_example_autogenerated": {}
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItems": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItems"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Function name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Description of function purpose and usage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "url",
              "wireValue": "url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Function endpoint URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsUrl_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "headers",
              "wireValue": "headers"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsHeadersItems",
                      "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsHeadersItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsHeaders_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "method",
              "wireValue": "method"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "post",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "HTTP method for function call",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsMethod_example_autogenerated": "post"
              }
            }
          },
          {
            "name": {
              "name": "parameters",
              "wireValue": "parameters"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsParameters",
                  "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsParameters",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItemsParameters_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationAgentThink": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentThink",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationAgentThink"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "provider",
              "wireValue": "provider"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsAgentMessagesSettingsConfigurationAgentThinkProvider",
                  "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentThinkProvider",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkProvider_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "model",
              "wireValue": "model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "LLM model to use",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkModel_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "instructions",
              "wireValue": "instructions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "LLM System prompt",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkInstructions_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "functions",
              "wireValue": "functions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItems",
                          "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctionsItems",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThinkFunctions_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationAgentThink_example_autogenerated": {}
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationAgentSpeakProvider": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentSpeakProvider",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationAgentSpeakProvider"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "eleven_labs",
              "wireValue": "eleven_labs"
            }
          },
          {
            "name": {
              "name": "cartesia",
              "wireValue": "cartesia"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Alternative TTS provider",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationAgentSpeakProvider_example_autogenerated": "eleven_labs"
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationAgentSpeak": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentSpeak",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationAgentSpeak"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model",
              "wireValue": "model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "aura-asteria-en",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Text-to-speech model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentSpeakModel_example_autogenerated": "aura-asteria-en"
              }
            }
          },
          {
            "name": {
              "name": "provider",
              "wireValue": "provider"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsAgentMessagesSettingsConfigurationAgentSpeakProvider",
                  "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentSpeakProvider",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Alternative TTS provider",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentSpeakProvider_example_autogenerated": "eleven_labs"
              }
            }
          },
          {
            "name": {
              "name": "voice_id",
              "wireValue": "voice_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Unique voice identifier for the selected provider",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentSpeakVoiceId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationAgentSpeak_example_autogenerated": {}
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationAgent": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationAgent",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationAgent"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "listen",
              "wireValue": "listen"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsAgentMessagesSettingsConfigurationAgentListen",
                  "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentListen",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentListen_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "think",
              "wireValue": "think"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsAgentMessagesSettingsConfigurationAgentThink",
                  "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentThink",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentThink_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "speak",
              "wireValue": "speak"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsAgentMessagesSettingsConfigurationAgentSpeak",
                      "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentSpeak",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgentSpeak_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationAgent_example_autogenerated": {}
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationContextMessagesItems": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationContextMessagesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationContextMessagesItems"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationContextMessagesItems_example_autogenerated": {}
        }
      }
    },
    "ChannelsAgentMessagesSettingsConfigurationContext": {
      "name": {
        "typeId": "ChannelsAgentMessagesSettingsConfigurationContext",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesSettingsConfigurationContext"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "messages",
              "wireValue": "messages"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsAgentMessagesSettingsConfigurationContextMessagesItems",
                      "typeId": "ChannelsAgentMessagesSettingsConfigurationContextMessagesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "LLM message history for conversation restoration",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationContextMessages_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "replay",
              "wireValue": "replay"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether to replay the last assistant message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationContextReplay_example_autogenerated": false
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesSettingsConfigurationContext_example_autogenerated": {}
        }
      }
    },
    "agent_settingsConfiguration": {
      "name": {
        "typeId": "agent_settingsConfiguration",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_settingsConfiguration"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "SettingsConfiguration",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "audio",
              "wireValue": "audio"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChannelsAgentMessagesSettingsConfigurationAudio",
                  "typeId": "ChannelsAgentMessagesSettingsConfigurationAudio",
                  "inline": false,
                  "type": "named"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Optional audio configuration settings",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAudio_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "agent",
              "wireValue": "agent"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsAgentMessagesSettingsConfigurationAgent",
              "typeId": "ChannelsAgentMessagesSettingsConfigurationAgent",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationAgent_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "context",
              "wireValue": "context"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChannelsAgentMessagesSettingsConfigurationContext",
                      "typeId": "ChannelsAgentMessagesSettingsConfigurationContext",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsConfigurationContext_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Configure the voice agent and sets the input and output audio formats",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_settingsConfiguration_example_autogenerated": {
            "type": "string",
            "audio": {},
            "agent": {}
          }
        }
      }
    },
    "agent_updateInstructions": {
      "name": {
        "typeId": "agent_updateInstructions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_updateInstructions"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "UpdateInstructions",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesUpdateInstructionsType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "instructions",
              "wireValue": "instructions"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The new instructions to give to the Think model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesUpdateInstructionsInstructions_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Send a message to give additional instructions to the Think model in the middle of a conversation",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_updateInstructions_example_autogenerated": {
            "type": "string",
            "instructions": "string"
          }
        }
      }
    },
    "agent_updateSpeak": {
      "name": {
        "typeId": "agent_updateSpeak",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_updateSpeak"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "UpdateSpeak",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for updating the speak model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesUpdateSpeakType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "model",
              "wireValue": "model"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The new Text-to-Speech model to use",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesUpdateSpeakModel_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Send a message to change the Speak model in the middle of a conversation",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_updateSpeak_example_autogenerated": {
            "type": "string",
            "model": "string"
          }
        }
      }
    },
    "agent_injectAgentMessage": {
      "name": {
        "typeId": "agent_injectAgentMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_injectAgentMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "InjectAgentMessage",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for injecting an agent message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesInjectAgentMessageType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The statement that the agent should say",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesInjectAgentMessageMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Send a message to change the Speak model in the middle of a conversation",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_injectAgentMessage_example_autogenerated": {
            "type": "string",
            "message": "string"
          }
        }
      }
    },
    "agent_injectionRefused": {
      "name": {
        "typeId": "agent_injectionRefused",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_injectionRefused"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "InjectionRefused",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for injection refused",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesInjectionRefusedType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Receive injection refused message",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_injectionRefused_example_autogenerated": {
            "type": "string"
          }
        }
      }
    },
    "agent_functionCallResponse": {
      "name": {
        "typeId": "agent_functionCallResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_functionCallResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "FunctionCallResponse",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for function call responses",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesFunctionCallResponseType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "function_call_id",
              "wireValue": "function_call_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier matching the original function call request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesFunctionCallResponseFunctionCallId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "output",
              "wireValue": "output"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The result of the function call execution",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesFunctionCallResponseOutput_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Configure the voice agent and configure the function call response",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_functionCallResponse_example_autogenerated": {
            "type": "string",
            "function_call_id": "string",
            "output": "string"
          }
        }
      }
    },
    "agent_agentKeepAlive": {
      "name": {
        "typeId": "agent_agentKeepAlive",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_agentKeepAlive"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "KeepAlive",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for agent keep alive signal",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesAgentKeepAliveType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Send messages ensuring uninterrupted communication for your agent",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_agentKeepAlive_example_autogenerated": {
            "type": "string"
          }
        }
      }
    },
    "agent_welcomeMessage": {
      "name": {
        "typeId": "agent_welcomeMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_welcomeMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "Welcome",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for welcome message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesWelcomeMessageType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "session_id",
              "wireValue": "session_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the websocket session",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesWelcomeMessageSessionId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Receive a welcome message from the server to confirm the websocket has opened",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_welcomeMessage_example_autogenerated": {
            "type": "string",
            "session_id": "string"
          }
        }
      }
    },
    "agent_settingsApplied": {
      "name": {
        "typeId": "agent_settingsApplied",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_settingsApplied"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "SettingsApplied",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for settings applied confirmation",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesSettingsAppliedType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Confirm the server has successfully received and applied the Settings Configuration message",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_settingsApplied_example_autogenerated": {
            "type": "string"
          }
        }
      }
    },
    "ChannelsAgentMessagesConversationTextRole": {
      "name": {
        "typeId": "ChannelsAgentMessagesConversationTextRole",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesConversationTextRole"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "user",
              "wireValue": "user"
            }
          },
          {
            "name": {
              "name": "assistant",
              "wireValue": "assistant"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Identifies who spoke the statement",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesConversationTextRole_example_autogenerated": "user"
        }
      }
    },
    "agent_ConversationText": {
      "name": {
        "typeId": "agent_ConversationText",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_ConversationText"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "ConversationText",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for conversation text",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesConversationTextType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "role",
              "wireValue": "role"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsAgentMessagesConversationTextRole",
              "typeId": "ChannelsAgentMessagesConversationTextRole",
              "inline": false,
              "type": "named"
            },
            "docs": "Identifies who spoke the statement",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesConversationTextRole_example_autogenerated": "user"
              }
            }
          },
          {
            "name": {
              "name": "content",
              "wireValue": "content"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The actual statement that was spoken",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesConversationTextContent_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Conversation Text facilitates real-time communication by relaying spoken statements from both the user and the assistant",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_ConversationText_example_autogenerated": {
            "type": "string",
            "role": "user",
            "content": "string"
          }
        }
      }
    },
    "agent_userStartedSpeaking": {
      "name": {
        "typeId": "agent_userStartedSpeaking",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_userStartedSpeaking"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "UserStartedSpeaking",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier indicating that the user has begun speaking",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesUserStartedSpeakingType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "User Started Speaking notifies the client that the user has begun speaking",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_userStartedSpeaking_example_autogenerated": {
            "type": "string"
          }
        }
      }
    },
    "agent_agentThinking": {
      "name": {
        "typeId": "agent_agentThinking",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_agentThinking"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "AgentThinking",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for agent thinking",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesAgentThinkingType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "content",
              "wireValue": "content"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The text of the agent's thought process",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesAgentThinkingContent_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Agent Thinking informs the client when the agent is processing information",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_agentThinking_example_autogenerated": {
            "type": "string",
            "content": "string"
          }
        }
      }
    },
    "ChannelsAgentMessagesFunctionCallRequestInput": {
      "name": {
        "typeId": "ChannelsAgentMessagesFunctionCallRequestInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChannelsAgentMessagesFunctionCallRequestInput"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Parameters defined for this function in the function definition",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChannelsAgentMessagesFunctionCallRequestInput_example_autogenerated": {}
        }
      }
    },
    "agent_functionCallRequest": {
      "name": {
        "typeId": "agent_functionCallRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_functionCallRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "FunctionCallRequest",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for function call requests",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesFunctionCallRequestType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "function_name",
              "wireValue": "function_name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name specified in the function definition",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesFunctionCallRequestFunctionName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "function_call_id",
              "wireValue": "function_call_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier to correlate the response with this request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesFunctionCallRequestFunctionCallId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "input",
              "wireValue": "input"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChannelsAgentMessagesFunctionCallRequestInput",
              "typeId": "ChannelsAgentMessagesFunctionCallRequestInput",
              "inline": false,
              "type": "named"
            },
            "docs": "Parameters defined for this function in the function definition",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesFunctionCallRequestInput_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Request to call a function by sending a Function Call Request message",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_functionCallRequest_example_autogenerated": {
            "type": "string",
            "function_name": "string",
            "function_call_id": "string",
            "input": {}
          }
        }
      }
    },
    "agent_functionCalling": {
      "name": {
        "typeId": "agent_functionCalling",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_functionCalling"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "FunctionCalling",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for function calling status",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesFunctionCallingType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Provides insights into function call workflows to assist in debugging",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_functionCalling_example_autogenerated": {
            "type": "string"
          }
        }
      }
    },
    "agent_agentStartedSpeaking": {
      "name": {
        "typeId": "agent_agentStartedSpeaking",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_agentStartedSpeaking"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "AgentStartedSpeaking",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for agent started speaking",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesAgentStartedSpeakingType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "total_latency",
              "wireValue": "total_latency"
            },
            "valueType": {
              "primitive": {
                "v1": "FLOAT",
                "v2": {
                  "validation": {},
                  "type": "float"
                }
              },
              "type": "primitive"
            },
            "docs": "Seconds from receiving the user's utterance to producing the agent's reply",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesAgentStartedSpeakingTotalLatency_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "tts_latency",
              "wireValue": "tts_latency"
            },
            "valueType": {
              "primitive": {
                "v1": "FLOAT",
                "v2": {
                  "validation": {},
                  "type": "float"
                }
              },
              "type": "primitive"
            },
            "docs": "The portion of total latency attributable to text-to-speech",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesAgentStartedSpeakingTtsLatency_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "ttt_latency",
              "wireValue": "ttt_latency"
            },
            "valueType": {
              "primitive": {
                "v1": "FLOAT",
                "v2": {
                  "validation": {},
                  "type": "float"
                }
              },
              "type": "primitive"
            },
            "docs": "The portion of total latency attributable to text-to-text (usually an LLM)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesAgentStartedSpeakingTttLatency_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Get notified when the server begins streaming an agent's audio response for playback",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_agentStartedSpeaking_example_autogenerated": {
            "type": "string",
            "total_latency": 1.1,
            "tts_latency": 1.1,
            "ttt_latency": 1.1
          }
        }
      }
    },
    "agent_agentAudioDone": {
      "name": {
        "typeId": "agent_agentAudioDone",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_agentAudioDone"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "AgentAudioDone",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier indicating the agent has finished sending audio",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesAgentAudioDoneType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Get signals that the server has finished sending the final audio segment to the client",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_agentAudioDone_example_autogenerated": {
            "type": "string"
          }
        }
      }
    },
    "agent_agentErrorResponse": {
      "name": {
        "typeId": "agent_agentErrorResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "agent_agentErrorResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "Error",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Message type identifier for error responses",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesAgentErrorResponseType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A description of what went wrong",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChannelsAgentMessagesAgentErrorResponseMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Receive an error message from the server when an error occurs",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "agent_agentErrorResponse_example_autogenerated": {
            "type": "string",
            "message": "string"
          }
        }
      }
    },
    "speak_encoding": {
      "name": {
        "typeId": "speak_encoding",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_encoding"
      },
      "shape": {
        "default": {
          "name": {
            "name": "mp3",
            "wireValue": "mp3"
          }
        },
        "values": [
          {
            "name": {
              "name": "linear16",
              "wireValue": "linear16"
            }
          },
          {
            "name": {
              "name": "mulaw",
              "wireValue": "mulaw"
            }
          },
          {
            "name": {
              "name": "alaw",
              "wireValue": "alaw"
            }
          },
          {
            "name": {
              "name": "opus",
              "wireValue": "opus"
            }
          },
          {
            "name": {
              "name": "mp3",
              "wireValue": "mp3"
            }
          },
          {
            "name": {
              "name": "flac",
              "wireValue": "flac"
            }
          },
          {
            "name": {
              "name": "aac",
              "wireValue": "aac"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Encoding allows you to specify the expected encoding of your audio output",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "speak_encoding_example_0": "mp3",
          "speak_encoding_example_1": "linear16"
        },
        "autogeneratedExamples": {}
      }
    },
    "speak_model": {
      "name": {
        "typeId": "speak_model",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_model"
      },
      "shape": {
        "default": {
          "name": {
            "name": "aura-asteria-en",
            "wireValue": "aura-asteria-en"
          }
        },
        "values": [
          {
            "name": {
              "name": "aura-asteria-en",
              "wireValue": "aura-asteria-en"
            }
          },
          {
            "name": {
              "name": "aura-luna-en",
              "wireValue": "aura-luna-en"
            }
          },
          {
            "name": {
              "name": "aura-stella-en",
              "wireValue": "aura-stella-en"
            }
          },
          {
            "name": {
              "name": "aura-athena-en",
              "wireValue": "aura-athena-en"
            }
          },
          {
            "name": {
              "name": "aura-hera-en",
              "wireValue": "aura-hera-en"
            }
          },
          {
            "name": {
              "name": "aura-orion-en",
              "wireValue": "aura-orion-en"
            }
          },
          {
            "name": {
              "name": "aura-arcas-en",
              "wireValue": "aura-arcas-en"
            }
          },
          {
            "name": {
              "name": "aura-perseus-en",
              "wireValue": "aura-perseus-en"
            }
          },
          {
            "name": {
              "name": "aura-angus-en",
              "wireValue": "aura-angus-en"
            }
          },
          {
            "name": {
              "name": "aura-orpheus-en",
              "wireValue": "aura-orpheus-en"
            }
          },
          {
            "name": {
              "name": "aura-helios-en",
              "wireValue": "aura-helios-en"
            }
          },
          {
            "name": {
              "name": "aura-zeus-en",
              "wireValue": "aura-zeus-en"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "AI model used to process submitted text",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "speak_model_example_0": "aura-asteria-en",
          "speak_model_example_1": "aura-asteria-en"
        },
        "autogeneratedExamples": {}
      }
    },
    "speak_sample_rate": {
      "name": {
        "typeId": "speak_sample_rate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "speak_sample_rate"
      },
      "shape": {
        "default": {
          "name": {
            "name": "TwentyFourThousand",
            "wireValue": "24000"
          }
        },
        "values": [
          {
            "name": {
              "name": "EightThousand",
              "wireValue": "8000"
            }
          },
          {
            "name": {
              "name": "SixteenThousand",
              "wireValue": "16000"
            }
          },
          {
            "name": {
              "name": "TwentyFourThousand",
              "wireValue": "24000"
            }
          },
          {
            "name": {
              "name": "FortyFourThousandOneHundred",
              "wireValue": "44100"
            }
          },
          {
            "name": {
              "name": "FortyEightThousand",
              "wireValue": "48000"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Sample Rate specifies the sample rate for the output audio. Based on encoding 8000 or 24000 are possible defaults. For some encodings sample rate is not configurable.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "speak_sample_rate_example_0": "24000",
          "speak_sample_rate_example_1": "24000"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_callback_method": {
      "name": {
        "typeId": "listen_callback_method",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_callback_method"
      },
      "shape": {
        "default": {
          "name": {
            "name": "POST",
            "wireValue": "POST"
          }
        },
        "values": [
          {
            "name": {
              "name": "POST",
              "wireValue": "POST"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "GET",
                "camelCase": {
                  "unsafeName": "get",
                  "safeName": "get_"
                },
                "snakeCase": {
                  "unsafeName": "get",
                  "safeName": "get_"
                }
              },
              "wireValue": "GET"
            }
          },
          {
            "name": {
              "name": "PUT",
              "wireValue": "PUT"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "DELETE",
                "camelCase": {
                  "unsafeName": "delete",
                  "safeName": "delete_"
                },
                "snakeCase": {
                  "unsafeName": "delete",
                  "safeName": "delete_"
                }
              },
              "wireValue": "DELETE"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "HTTP method by which the callback request will be made",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_callback_method_example_0": "POST",
          "listen_callback_method_example_1": "POST",
          "listen_callback_method_example_2": "GET",
          "listen_callback_method_example_3": "PUT",
          "listen_callback_method_example_4": "DELETE"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_dictation": {
      "name": {
        "typeId": "listen_dictation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_dictation"
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "false",
              "camelCase": {
                "unsafeName": "false",
                "safeName": "false_"
              },
              "snakeCase": {
                "unsafeName": "false",
                "safeName": "false_"
              }
            },
            "wireValue": "false"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "true",
                "camelCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                },
                "snakeCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                }
              },
              "wireValue": "true"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "false",
                "camelCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                },
                "snakeCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                }
              },
              "wireValue": "false"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Identify and extract key entities from content in submitted audio",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_dictation_example_0": "false",
          "listen_dictation_example_1": "true"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_encoding": {
      "name": {
        "typeId": "listen_encoding",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_encoding"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "linear16",
              "wireValue": "linear16"
            }
          },
          {
            "name": {
              "name": "flac",
              "wireValue": "flac"
            }
          },
          {
            "name": {
              "name": "mulaw",
              "wireValue": "mulaw"
            }
          },
          {
            "name": {
              "name": "amr-nb",
              "wireValue": "amr-nb"
            }
          },
          {
            "name": {
              "name": "amr-wb",
              "wireValue": "amr-wb"
            }
          },
          {
            "name": {
              "name": "opus",
              "wireValue": "opus"
            }
          },
          {
            "name": {
              "name": "speex",
              "wireValue": "speex"
            }
          },
          {
            "name": {
              "name": "g729",
              "wireValue": "g729"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Specify the expected encoding of your submitted audio",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_encoding_example_0": "linear16",
          "listen_encoding_example_1": "linear16"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_filler_words": {
      "name": {
        "typeId": "listen_filler_words",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_filler_words"
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "false",
              "camelCase": {
                "unsafeName": "false",
                "safeName": "false_"
              },
              "snakeCase": {
                "unsafeName": "false",
                "safeName": "false_"
              }
            },
            "wireValue": "false"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "true",
                "camelCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                },
                "snakeCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                }
              },
              "wireValue": "true"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "false",
                "camelCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                },
                "snakeCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                }
              },
              "wireValue": "false"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Filler Words can help transcribe interruptions in your audio, like \"uh\" and \"um\"",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_filler_words_example_0": "false",
          "listen_filler_words_example_1": "true"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_interim_results": {
      "name": {
        "typeId": "listen_interim_results",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_interim_results"
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "false",
              "camelCase": {
                "unsafeName": "false",
                "safeName": "false_"
              },
              "snakeCase": {
                "unsafeName": "false",
                "safeName": "false_"
              }
            },
            "wireValue": "false"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "true",
                "camelCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                },
                "snakeCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                }
              },
              "wireValue": "true"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "false",
                "camelCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                },
                "snakeCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                }
              },
              "wireValue": "false"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Specifies whether the streaming endpoint should provide ongoing transcription updates as more audio is received. When set to true, the endpoint sends continuous updates, meaning transcription results may evolve over time",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_interim_results_example_0": "false",
          "listen_interim_results_example_1": "true"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_language": {
      "name": {
        "typeId": "listen_language",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_language"
      },
      "shape": {
        "default": {
          "name": {
            "name": "en",
            "wireValue": "en"
          }
        },
        "values": [
          {
            "name": {
              "name": "bg",
              "wireValue": "bg"
            }
          },
          {
            "name": {
              "name": "ca",
              "wireValue": "ca"
            }
          },
          {
            "name": {
              "name": "cs",
              "wireValue": "cs"
            }
          },
          {
            "name": {
              "name": "da",
              "wireValue": "da"
            }
          },
          {
            "name": {
              "name": "da-DK",
              "wireValue": "da-DK"
            }
          },
          {
            "name": {
              "name": "de",
              "wireValue": "de"
            }
          },
          {
            "name": {
              "name": "de-CH",
              "wireValue": "de-CH"
            }
          },
          {
            "name": {
              "name": "el",
              "wireValue": "el"
            }
          },
          {
            "name": {
              "name": "en",
              "wireValue": "en"
            }
          },
          {
            "name": {
              "name": "en-AU",
              "wireValue": "en-AU"
            }
          },
          {
            "name": {
              "name": "en-GB",
              "wireValue": "en-GB"
            }
          },
          {
            "name": {
              "name": "en-IN",
              "wireValue": "en-IN"
            }
          },
          {
            "name": {
              "name": "en-NZ",
              "wireValue": "en-NZ"
            }
          },
          {
            "name": {
              "name": "en-US",
              "wireValue": "en-US"
            }
          },
          {
            "name": {
              "name": "es",
              "wireValue": "es"
            }
          },
          {
            "name": {
              "name": "es-419",
              "wireValue": "es-419"
            }
          },
          {
            "name": {
              "name": "es-LATAM",
              "wireValue": "es-LATAM"
            }
          },
          {
            "name": {
              "name": "et",
              "wireValue": "et"
            }
          },
          {
            "name": {
              "name": "fi",
              "wireValue": "fi"
            }
          },
          {
            "name": {
              "name": "fr",
              "wireValue": "fr"
            }
          },
          {
            "name": {
              "name": "fr-CA",
              "wireValue": "fr-CA"
            }
          },
          {
            "name": {
              "name": "hi",
              "wireValue": "hi"
            }
          },
          {
            "name": {
              "name": "hi-Latn",
              "wireValue": "hi-Latn"
            }
          },
          {
            "name": {
              "name": "hu",
              "wireValue": "hu"
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            }
          },
          {
            "name": {
              "name": "it",
              "wireValue": "it"
            }
          },
          {
            "name": {
              "name": "ja",
              "wireValue": "ja"
            }
          },
          {
            "name": {
              "name": "ko",
              "wireValue": "ko"
            }
          },
          {
            "name": {
              "name": "ko-KR",
              "wireValue": "ko-KR"
            }
          },
          {
            "name": {
              "name": "lt",
              "wireValue": "lt"
            }
          },
          {
            "name": {
              "name": "lv",
              "wireValue": "lv"
            }
          },
          {
            "name": {
              "name": "ms",
              "wireValue": "ms"
            }
          },
          {
            "name": {
              "name": "nl",
              "wireValue": "nl"
            }
          },
          {
            "name": {
              "name": "nl-BE",
              "wireValue": "nl-BE"
            }
          },
          {
            "name": {
              "name": "no",
              "wireValue": "no"
            }
          },
          {
            "name": {
              "name": "pl",
              "wireValue": "pl"
            }
          },
          {
            "name": {
              "name": "pt",
              "wireValue": "pt"
            }
          },
          {
            "name": {
              "name": "pt-BR",
              "wireValue": "pt-BR"
            }
          },
          {
            "name": {
              "name": "pt-PT",
              "wireValue": "pt-PT"
            }
          },
          {
            "name": {
              "name": "ro",
              "wireValue": "ro"
            }
          },
          {
            "name": {
              "name": "ru",
              "wireValue": "ru"
            }
          },
          {
            "name": {
              "name": "sk",
              "wireValue": "sk"
            }
          },
          {
            "name": {
              "name": "sv",
              "wireValue": "sv"
            }
          },
          {
            "name": {
              "name": "sv-SE",
              "wireValue": "sv-SE"
            }
          },
          {
            "name": {
              "name": "taq",
              "wireValue": "taq"
            }
          },
          {
            "name": {
              "name": "th",
              "wireValue": "th"
            }
          },
          {
            "name": {
              "name": "th-TH",
              "wireValue": "th-TH"
            }
          },
          {
            "name": {
              "name": "tr",
              "wireValue": "tr"
            }
          },
          {
            "name": {
              "name": "uk",
              "wireValue": "uk"
            }
          },
          {
            "name": {
              "name": "vi",
              "wireValue": "vi"
            }
          },
          {
            "name": {
              "name": "zh",
              "wireValue": "zh"
            }
          },
          {
            "name": {
              "name": "zh-CN",
              "wireValue": "zh-CN"
            }
          },
          {
            "name": {
              "name": "zh-HK",
              "wireValue": "zh-HK"
            }
          },
          {
            "name": {
              "name": "zh-Hans",
              "wireValue": "zh-Hans"
            }
          },
          {
            "name": {
              "name": "zh-Hant",
              "wireValue": "zh-Hant"
            }
          },
          {
            "name": {
              "name": "zh-TW",
              "wireValue": "zh-TW"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language. Depending on the Model you choose only certain languages are available",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_language_example_0": "en",
          "listen_language_example_1": "en"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_model": {
      "name": {
        "typeId": "listen_model",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_model"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "nova-3",
              "wireValue": "nova-3"
            }
          },
          {
            "name": {
              "name": "nova-3-general",
              "wireValue": "nova-3-general"
            }
          },
          {
            "name": {
              "name": "nova-3-medical",
              "wireValue": "nova-3-medical"
            }
          },
          {
            "name": {
              "name": "nova-2",
              "wireValue": "nova-2"
            }
          },
          {
            "name": {
              "name": "nova-2-general",
              "wireValue": "nova-2-general"
            }
          },
          {
            "name": {
              "name": "nova-2-meeting",
              "wireValue": "nova-2-meeting"
            }
          },
          {
            "name": {
              "name": "nova-2-finance",
              "wireValue": "nova-2-finance"
            }
          },
          {
            "name": {
              "name": "nova-2-conversationalai",
              "wireValue": "nova-2-conversationalai"
            }
          },
          {
            "name": {
              "name": "nova-2-voicemail",
              "wireValue": "nova-2-voicemail"
            }
          },
          {
            "name": {
              "name": "nova-2-video",
              "wireValue": "nova-2-video"
            }
          },
          {
            "name": {
              "name": "nova-2-medical",
              "wireValue": "nova-2-medical"
            }
          },
          {
            "name": {
              "name": "nova-2-drivethru",
              "wireValue": "nova-2-drivethru"
            }
          },
          {
            "name": {
              "name": "nova-2-automotive",
              "wireValue": "nova-2-automotive"
            }
          },
          {
            "name": {
              "name": "nova",
              "wireValue": "nova"
            }
          },
          {
            "name": {
              "name": "nova-general",
              "wireValue": "nova-general"
            }
          },
          {
            "name": {
              "name": "nova-phonecall",
              "wireValue": "nova-phonecall"
            }
          },
          {
            "name": {
              "name": "nova-medical",
              "wireValue": "nova-medical"
            }
          },
          {
            "name": {
              "name": "enhanced",
              "wireValue": "enhanced"
            }
          },
          {
            "name": {
              "name": "enhanced-general",
              "wireValue": "enhanced-general"
            }
          },
          {
            "name": {
              "name": "enhanced-meeting",
              "wireValue": "enhanced-meeting"
            }
          },
          {
            "name": {
              "name": "enhanced-phonecall",
              "wireValue": "enhanced-phonecall"
            }
          },
          {
            "name": {
              "name": "enhanced-finance",
              "wireValue": "enhanced-finance"
            }
          },
          {
            "name": {
              "name": "base",
              "wireValue": "base"
            }
          },
          {
            "name": {
              "name": "meeting",
              "wireValue": "meeting"
            }
          },
          {
            "name": {
              "name": "phonecall",
              "wireValue": "phonecall"
            }
          },
          {
            "name": {
              "name": "finance",
              "wireValue": "finance"
            }
          },
          {
            "name": {
              "name": "conversationalai",
              "wireValue": "conversationalai"
            }
          },
          {
            "name": {
              "name": "voicemail",
              "wireValue": "voicemail"
            }
          },
          {
            "name": {
              "name": "video",
              "wireValue": "video"
            }
          },
          {
            "name": {
              "name": "custom",
              "wireValue": "custom"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "AI model to use for the transcription",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_model_example_0": "nova-3",
          "listen_model_example_1": "nova-2",
          "listen_model_example_2": "nova-3"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_multichannel": {
      "name": {
        "typeId": "listen_multichannel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_multichannel"
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "false",
              "camelCase": {
                "unsafeName": "false",
                "safeName": "false_"
              },
              "snakeCase": {
                "unsafeName": "false",
                "safeName": "false_"
              }
            },
            "wireValue": "false"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "true",
                "camelCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                },
                "snakeCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                }
              },
              "wireValue": "true"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "false",
                "camelCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                },
                "snakeCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                }
              },
              "wireValue": "false"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Transcribe each audio channel independently",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_multichannel_example_0": "false",
          "listen_multichannel_example_1": "true"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_numerals": {
      "name": {
        "typeId": "listen_numerals",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_numerals"
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "false",
              "camelCase": {
                "unsafeName": "false",
                "safeName": "false_"
              },
              "snakeCase": {
                "unsafeName": "false",
                "safeName": "false_"
              }
            },
            "wireValue": "false"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "true",
                "camelCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                },
                "snakeCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                }
              },
              "wireValue": "true"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "false",
                "camelCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                },
                "snakeCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                }
              },
              "wireValue": "false"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Convert numbers from written format to numerical format",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_numerals_example_0": "false",
          "listen_numerals_example_1": "true"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_profanity_filter": {
      "name": {
        "typeId": "listen_profanity_filter",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_profanity_filter"
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "false",
              "camelCase": {
                "unsafeName": "false",
                "safeName": "false_"
              },
              "snakeCase": {
                "unsafeName": "false",
                "safeName": "false_"
              }
            },
            "wireValue": "false"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "true",
                "camelCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                },
                "snakeCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                }
              },
              "wireValue": "true"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "false",
                "camelCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                },
                "snakeCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                }
              },
              "wireValue": "false"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Profanity Filter looks for recognized profanity and converts it to the nearest recognized non-profane word or removes it from the transcript completely",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_profanity_filter_example_0": "false",
          "listen_profanity_filter_example_1": "true"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_punctuate": {
      "name": {
        "typeId": "listen_punctuate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_punctuate"
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "false",
              "camelCase": {
                "unsafeName": "false",
                "safeName": "false_"
              },
              "snakeCase": {
                "unsafeName": "false",
                "safeName": "false_"
              }
            },
            "wireValue": "false"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "true",
                "camelCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                },
                "snakeCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                }
              },
              "wireValue": "true"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "false",
                "camelCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                },
                "snakeCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                }
              },
              "wireValue": "false"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Add punctuation and capitalization to the transcript",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_punctuate_example_0": "false",
          "listen_punctuate_example_1": "true"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_redact": {
      "name": {
        "typeId": "listen_redact",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_redact"
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "false",
              "camelCase": {
                "unsafeName": "false",
                "safeName": "false_"
              },
              "snakeCase": {
                "unsafeName": "false",
                "safeName": "false_"
              }
            },
            "wireValue": "false"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "true",
                "camelCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                },
                "snakeCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                }
              },
              "wireValue": "true"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "false",
                "camelCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                },
                "snakeCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                }
              },
              "wireValue": "false"
            }
          },
          {
            "name": {
              "name": "pci",
              "wireValue": "pci"
            }
          },
          {
            "name": {
              "name": "numbers",
              "wireValue": "numbers"
            }
          },
          {
            "name": {
              "name": "aggressive_numbers",
              "wireValue": "aggressive_numbers"
            }
          },
          {
            "name": {
              "name": "ssn",
              "wireValue": "ssn"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Redaction removes sensitive information from your transcripts",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_redact_example_0": "false",
          "listen_redact_example_1": "true"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_smart_format": {
      "name": {
        "typeId": "listen_smart_format",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_smart_format"
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "false",
              "camelCase": {
                "unsafeName": "false",
                "safeName": "false_"
              },
              "snakeCase": {
                "unsafeName": "false",
                "safeName": "false_"
              }
            },
            "wireValue": "false"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "true",
                "camelCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                },
                "snakeCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                }
              },
              "wireValue": "true"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "false",
                "camelCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                },
                "snakeCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                }
              },
              "wireValue": "false"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Apply formatting to transcript output. When set to true, additional formatting will be applied to transcripts to improve readability",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_smart_format_example_0": "false",
          "listen_smart_format_example_1": "true"
        },
        "autogeneratedExamples": {}
      }
    },
    "listen_vad_events": {
      "name": {
        "typeId": "listen_vad_events",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "listen_vad_events"
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "false",
              "camelCase": {
                "unsafeName": "false",
                "safeName": "false_"
              },
              "snakeCase": {
                "unsafeName": "false",
                "safeName": "false_"
              }
            },
            "wireValue": "false"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "true",
                "camelCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                },
                "snakeCase": {
                  "unsafeName": "true",
                  "safeName": "true_"
                }
              },
              "wireValue": "true"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "false",
                "camelCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                },
                "snakeCase": {
                  "unsafeName": "false",
                  "safeName": "false_"
                }
              },
              "wireValue": "false"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Indicates that speech has started. You'll begin receiving Speech Started messages upon speech starting",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "listen_vad_events_example_0": "false",
          "listen_vad_events_example_1": "true"
        },
        "autogeneratedExamples": {}
      }
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": "errorInstanceId",
      "wireValue": "errorInstanceId"
    }
  },
  "errors": {
    "ListenRequestBadRequestError": {
      "name": {
        "name": "ListenRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListenRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "ListenRequestBadRequestError",
        "wireValue": "ListenRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListenRequestBadRequestError",
        "typeId": "ListenRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "TextReadRequestBadRequestError": {
      "name": {
        "name": "TextReadRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "TextReadRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "TextReadRequestBadRequestError",
        "wireValue": "TextReadRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TextReadRequestBadRequestError",
        "typeId": "TextReadRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "SpeakRequestBadRequestError": {
      "name": {
        "name": "SpeakRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "SpeakRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "SpeakRequestBadRequestError",
        "wireValue": "SpeakRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SpeakRequestBadRequestError",
        "typeId": "SpeakRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "SpeakRequestForbiddenError": {
      "name": {
        "name": "SpeakRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "SpeakRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "SpeakRequestForbiddenError",
        "wireValue": "SpeakRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SpeakRequestForbiddenError",
        "typeId": "SpeakRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Insufficient permissions, Model not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "SpeakRequestContentTooLargeError": {
      "name": {
        "name": "SpeakRequestContentTooLargeError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "SpeakRequestContentTooLargeError"
      },
      "displayName": "ContentTooLargeError",
      "discriminantValue": {
        "name": "SpeakRequestContentTooLargeError",
        "wireValue": "SpeakRequestContentTooLargeError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SpeakRequestContentTooLargeError",
        "typeId": "SpeakRequestContentTooLargeError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 413,
      "docs": "Payload too large",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "SpeakRequestUnsupportedMediaTypeError": {
      "name": {
        "name": "SpeakRequestUnsupportedMediaTypeError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "SpeakRequestUnsupportedMediaTypeError"
      },
      "displayName": "UnsupportedMediaTypeError",
      "discriminantValue": {
        "name": "SpeakRequestUnsupportedMediaTypeError",
        "wireValue": "SpeakRequestUnsupportedMediaTypeError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SpeakRequestUnsupportedMediaTypeError",
        "typeId": "SpeakRequestUnsupportedMediaTypeError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 415,
      "docs": "Unsupported media type",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectsRequestForbiddenError": {
      "name": {
        "name": "ListProjectsRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectsRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "ListProjectsRequestForbiddenError",
        "wireValue": "ListProjectsRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectsRequestForbiddenError",
        "typeId": "ListProjectsRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectRequestBadRequestError": {
      "name": {
        "name": "GetProjectRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "GetProjectRequestBadRequestError",
        "wireValue": "GetProjectRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectRequestBadRequestError",
        "typeId": "GetProjectRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Project Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectRequestForbiddenError": {
      "name": {
        "name": "GetProjectRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "GetProjectRequestForbiddenError",
        "wireValue": "GetProjectRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectRequestForbiddenError",
        "typeId": "GetProjectRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectRequestNotFoundError": {
      "name": {
        "name": "GetProjectRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "GetProjectRequestNotFoundError",
        "wireValue": "GetProjectRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectRequestNotFoundError",
        "typeId": "GetProjectRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectRequestBadRequestError": {
      "name": {
        "name": "DeleteProjectRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteProjectRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "DeleteProjectRequestBadRequestError",
        "wireValue": "DeleteProjectRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectRequestBadRequestError",
        "typeId": "DeleteProjectRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Project Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectRequestForbiddenError": {
      "name": {
        "name": "DeleteProjectRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteProjectRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "DeleteProjectRequestForbiddenError",
        "wireValue": "DeleteProjectRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectRequestForbiddenError",
        "typeId": "DeleteProjectRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectRequestNotFoundError": {
      "name": {
        "name": "DeleteProjectRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteProjectRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "DeleteProjectRequestNotFoundError",
        "wireValue": "DeleteProjectRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectRequestNotFoundError",
        "typeId": "DeleteProjectRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UpdateProjectRequestBadRequestError": {
      "name": {
        "name": "UpdateProjectRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UpdateProjectRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "UpdateProjectRequestBadRequestError",
        "wireValue": "UpdateProjectRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UpdateProjectRequestBadRequestError",
        "typeId": "UpdateProjectRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Project Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UpdateProjectRequestForbiddenError": {
      "name": {
        "name": "UpdateProjectRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UpdateProjectRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "UpdateProjectRequestForbiddenError",
        "wireValue": "UpdateProjectRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UpdateProjectRequestForbiddenError",
        "typeId": "UpdateProjectRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UpdateProjectRequestNotFoundError": {
      "name": {
        "name": "UpdateProjectRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UpdateProjectRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "UpdateProjectRequestNotFoundError",
        "wireValue": "UpdateProjectRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UpdateProjectRequestNotFoundError",
        "typeId": "UpdateProjectRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectBalancesRequestBadRequestError": {
      "name": {
        "name": "GetProjectBalancesRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectBalancesRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "GetProjectBalancesRequestBadRequestError",
        "wireValue": "GetProjectBalancesRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectBalancesRequestBadRequestError",
        "typeId": "GetProjectBalancesRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Project Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectBalancesRequestForbiddenError": {
      "name": {
        "name": "GetProjectBalancesRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectBalancesRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "GetProjectBalancesRequestForbiddenError",
        "wireValue": "GetProjectBalancesRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectBalancesRequestForbiddenError",
        "typeId": "GetProjectBalancesRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectBalancesRequestNotFoundError": {
      "name": {
        "name": "GetProjectBalancesRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectBalancesRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "GetProjectBalancesRequestNotFoundError",
        "wireValue": "GetProjectBalancesRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectBalancesRequestNotFoundError",
        "typeId": "GetProjectBalancesRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectBalanceRequestBadRequestError": {
      "name": {
        "name": "GetProjectBalanceRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectBalanceRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "GetProjectBalanceRequestBadRequestError",
        "wireValue": "GetProjectBalanceRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectBalanceRequestBadRequestError",
        "typeId": "GetProjectBalanceRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Project Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectBalanceRequestForbiddenError": {
      "name": {
        "name": "GetProjectBalanceRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectBalanceRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "GetProjectBalanceRequestForbiddenError",
        "wireValue": "GetProjectBalanceRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectBalanceRequestForbiddenError",
        "typeId": "GetProjectBalanceRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectBalanceRequestNotFoundError": {
      "name": {
        "name": "GetProjectBalanceRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectBalanceRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "GetProjectBalanceRequestNotFoundError",
        "wireValue": "GetProjectBalanceRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectBalanceRequestNotFoundError",
        "typeId": "GetProjectBalanceRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectModelsRequestBadRequestError": {
      "name": {
        "name": "ListProjectModelsRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectModelsRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "ListProjectModelsRequestBadRequestError",
        "wireValue": "ListProjectModelsRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectModelsRequestBadRequestError",
        "typeId": "ListProjectModelsRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Project Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectModelRequestBadRequestError": {
      "name": {
        "name": "GetProjectModelRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectModelRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "GetProjectModelRequestBadRequestError",
        "wireValue": "GetProjectModelRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectModelRequestBadRequestError",
        "typeId": "GetProjectModelRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Project Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectKeysRequestForbiddenError": {
      "name": {
        "name": "ListProjectKeysRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectKeysRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "ListProjectKeysRequestForbiddenError",
        "wireValue": "ListProjectKeysRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectKeysRequestForbiddenError",
        "typeId": "ListProjectKeysRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectKeysRequestNotFoundError": {
      "name": {
        "name": "ListProjectKeysRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectKeysRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "ListProjectKeysRequestNotFoundError",
        "wireValue": "ListProjectKeysRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectKeysRequestNotFoundError",
        "typeId": "ListProjectKeysRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "CreateProjectKeyRequestForbiddenError": {
      "name": {
        "name": "CreateProjectKeyRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateProjectKeyRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "CreateProjectKeyRequestForbiddenError",
        "wireValue": "CreateProjectKeyRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateProjectKeyRequestForbiddenError",
        "typeId": "CreateProjectKeyRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "CreateProjectKeyRequestNotFoundError": {
      "name": {
        "name": "CreateProjectKeyRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateProjectKeyRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "CreateProjectKeyRequestNotFoundError",
        "wireValue": "CreateProjectKeyRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateProjectKeyRequestNotFoundError",
        "typeId": "CreateProjectKeyRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectKeyRequestForbiddenError": {
      "name": {
        "name": "GetProjectKeyRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectKeyRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "GetProjectKeyRequestForbiddenError",
        "wireValue": "GetProjectKeyRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectKeyRequestForbiddenError",
        "typeId": "GetProjectKeyRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectKeyRequestNotFoundError": {
      "name": {
        "name": "GetProjectKeyRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectKeyRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "GetProjectKeyRequestNotFoundError",
        "wireValue": "GetProjectKeyRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectKeyRequestNotFoundError",
        "typeId": "GetProjectKeyRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectKeyRequestForbiddenError": {
      "name": {
        "name": "DeleteProjectKeyRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteProjectKeyRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "DeleteProjectKeyRequestForbiddenError",
        "wireValue": "DeleteProjectKeyRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectKeyRequestForbiddenError",
        "typeId": "DeleteProjectKeyRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectKeyRequestNotFoundError": {
      "name": {
        "name": "DeleteProjectKeyRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteProjectKeyRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "DeleteProjectKeyRequestNotFoundError",
        "wireValue": "DeleteProjectKeyRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectKeyRequestNotFoundError",
        "typeId": "DeleteProjectKeyRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectMembersRequestForbiddenError": {
      "name": {
        "name": "ListProjectMembersRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectMembersRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "ListProjectMembersRequestForbiddenError",
        "wireValue": "ListProjectMembersRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectMembersRequestForbiddenError",
        "typeId": "ListProjectMembersRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectMembersRequestNotFoundError": {
      "name": {
        "name": "ListProjectMembersRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectMembersRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "ListProjectMembersRequestNotFoundError",
        "wireValue": "ListProjectMembersRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectMembersRequestNotFoundError",
        "typeId": "ListProjectMembersRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectMemberRequestForbiddenError": {
      "name": {
        "name": "DeleteProjectMemberRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteProjectMemberRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "DeleteProjectMemberRequestForbiddenError",
        "wireValue": "DeleteProjectMemberRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectMemberRequestForbiddenError",
        "typeId": "DeleteProjectMemberRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectMemberRequestNotFoundError": {
      "name": {
        "name": "DeleteProjectMemberRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteProjectMemberRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "DeleteProjectMemberRequestNotFoundError",
        "wireValue": "DeleteProjectMemberRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectMemberRequestNotFoundError",
        "typeId": "DeleteProjectMemberRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectMemberScopesRequestForbiddenError": {
      "name": {
        "name": "ListProjectMemberScopesRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectMemberScopesRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "ListProjectMemberScopesRequestForbiddenError",
        "wireValue": "ListProjectMemberScopesRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectMemberScopesRequestForbiddenError",
        "typeId": "ListProjectMemberScopesRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectMemberScopesRequestNotFoundError": {
      "name": {
        "name": "ListProjectMemberScopesRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectMemberScopesRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "ListProjectMemberScopesRequestNotFoundError",
        "wireValue": "ListProjectMemberScopesRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectMemberScopesRequestNotFoundError",
        "typeId": "ListProjectMemberScopesRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UpdateProjectMemberScopesRequestForbiddenError": {
      "name": {
        "name": "UpdateProjectMemberScopesRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UpdateProjectMemberScopesRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "UpdateProjectMemberScopesRequestForbiddenError",
        "wireValue": "UpdateProjectMemberScopesRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UpdateProjectMemberScopesRequestForbiddenError",
        "typeId": "UpdateProjectMemberScopesRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UpdateProjectMemberScopesRequestNotFoundError": {
      "name": {
        "name": "UpdateProjectMemberScopesRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UpdateProjectMemberScopesRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "UpdateProjectMemberScopesRequestNotFoundError",
        "wireValue": "UpdateProjectMemberScopesRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UpdateProjectMemberScopesRequestNotFoundError",
        "typeId": "UpdateProjectMemberScopesRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "CreateProjectInviteRequestForbiddenError": {
      "name": {
        "name": "CreateProjectInviteRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateProjectInviteRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "CreateProjectInviteRequestForbiddenError",
        "wireValue": "CreateProjectInviteRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateProjectInviteRequestForbiddenError",
        "typeId": "CreateProjectInviteRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "CreateProjectInviteRequestNotFoundError": {
      "name": {
        "name": "CreateProjectInviteRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateProjectInviteRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "CreateProjectInviteRequestNotFoundError",
        "wireValue": "CreateProjectInviteRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateProjectInviteRequestNotFoundError",
        "typeId": "CreateProjectInviteRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectInviteRequestForbiddenError": {
      "name": {
        "name": "DeleteProjectInviteRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteProjectInviteRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "DeleteProjectInviteRequestForbiddenError",
        "wireValue": "DeleteProjectInviteRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectInviteRequestForbiddenError",
        "typeId": "DeleteProjectInviteRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectInviteRequestNotFoundError": {
      "name": {
        "name": "DeleteProjectInviteRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteProjectInviteRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "DeleteProjectInviteRequestNotFoundError",
        "wireValue": "DeleteProjectInviteRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectInviteRequestNotFoundError",
        "typeId": "DeleteProjectInviteRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectLeaveRequestForbiddenError": {
      "name": {
        "name": "DeleteProjectLeaveRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteProjectLeaveRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "DeleteProjectLeaveRequestForbiddenError",
        "wireValue": "DeleteProjectLeaveRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectLeaveRequestForbiddenError",
        "typeId": "DeleteProjectLeaveRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteProjectLeaveRequestNotFoundError": {
      "name": {
        "name": "DeleteProjectLeaveRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteProjectLeaveRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "DeleteProjectLeaveRequestNotFoundError",
        "wireValue": "DeleteProjectLeaveRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteProjectLeaveRequestNotFoundError",
        "typeId": "DeleteProjectLeaveRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectRequestsRequestBadRequestError": {
      "name": {
        "name": "ListProjectRequestsRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectRequestsRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "ListProjectRequestsRequestBadRequestError",
        "wireValue": "ListProjectRequestsRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectRequestsRequestBadRequestError",
        "typeId": "ListProjectRequestsRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Project Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectRequestsRequestForbiddenError": {
      "name": {
        "name": "ListProjectRequestsRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectRequestsRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "ListProjectRequestsRequestForbiddenError",
        "wireValue": "ListProjectRequestsRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectRequestsRequestForbiddenError",
        "typeId": "ListProjectRequestsRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectRequestsRequestNotFoundError": {
      "name": {
        "name": "ListProjectRequestsRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectRequestsRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "ListProjectRequestsRequestNotFoundError",
        "wireValue": "ListProjectRequestsRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectRequestsRequestNotFoundError",
        "typeId": "ListProjectRequestsRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectUsageRequestForbiddenError": {
      "name": {
        "name": "GetProjectUsageRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectUsageRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "GetProjectUsageRequestForbiddenError",
        "wireValue": "GetProjectUsageRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectUsageRequestForbiddenError",
        "typeId": "GetProjectUsageRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectUsageRequestNotFoundError": {
      "name": {
        "name": "GetProjectUsageRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectUsageRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "GetProjectUsageRequestNotFoundError",
        "wireValue": "GetProjectUsageRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectUsageRequestNotFoundError",
        "typeId": "GetProjectUsageRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectUsageFieldsRequestForbiddenError": {
      "name": {
        "name": "ListProjectUsageFieldsRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectUsageFieldsRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "ListProjectUsageFieldsRequestForbiddenError",
        "wireValue": "ListProjectUsageFieldsRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectUsageFieldsRequestForbiddenError",
        "typeId": "ListProjectUsageFieldsRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectUsageFieldsRequestNotFoundError": {
      "name": {
        "name": "ListProjectUsageFieldsRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectUsageFieldsRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "ListProjectUsageFieldsRequestNotFoundError",
        "wireValue": "ListProjectUsageFieldsRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectUsageFieldsRequestNotFoundError",
        "typeId": "ListProjectUsageFieldsRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectUsageBreakdownRequestBadRequestError": {
      "name": {
        "name": "GetProjectUsageBreakdownRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectUsageBreakdownRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "GetProjectUsageBreakdownRequestBadRequestError",
        "wireValue": "GetProjectUsageBreakdownRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectUsageBreakdownRequestBadRequestError",
        "typeId": "GetProjectUsageBreakdownRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Project Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetProjectUsageBreakdownRequestNotFoundError": {
      "name": {
        "name": "GetProjectUsageBreakdownRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetProjectUsageBreakdownRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "GetProjectUsageBreakdownRequestNotFoundError",
        "wireValue": "GetProjectUsageBreakdownRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetProjectUsageBreakdownRequestNotFoundError",
        "typeId": "GetProjectUsageBreakdownRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListProjectPurchasesRequestBadRequestError": {
      "name": {
        "name": "ListProjectPurchasesRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListProjectPurchasesRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "ListProjectPurchasesRequestBadRequestError",
        "wireValue": "ListProjectPurchasesRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListProjectPurchasesRequestBadRequestError",
        "typeId": "ListProjectPurchasesRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Project Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListModelsRequestBadRequestError": {
      "name": {
        "name": "ListModelsRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListModelsRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "ListModelsRequestBadRequestError",
        "wireValue": "ListModelsRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListModelsRequestBadRequestError",
        "typeId": "ListModelsRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Project Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetModelRequestBadRequestError": {
      "name": {
        "name": "GetModelRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetModelRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "GetModelRequestBadRequestError",
        "wireValue": "GetModelRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetModelRequestBadRequestError",
        "typeId": "GetModelRequestBadRequestError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Project Bad Request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListSelfHostedDistCredsRequestForbiddenError": {
      "name": {
        "name": "ListSelfHostedDistCredsRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListSelfHostedDistCredsRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "ListSelfHostedDistCredsRequestForbiddenError",
        "wireValue": "ListSelfHostedDistCredsRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListSelfHostedDistCredsRequestForbiddenError",
        "typeId": "ListSelfHostedDistCredsRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ListSelfHostedDistCredsRequestNotFoundError": {
      "name": {
        "name": "ListSelfHostedDistCredsRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListSelfHostedDistCredsRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "ListSelfHostedDistCredsRequestNotFoundError",
        "wireValue": "ListSelfHostedDistCredsRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ListSelfHostedDistCredsRequestNotFoundError",
        "typeId": "ListSelfHostedDistCredsRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetSelfHostedCredentialsRequestForbiddenError": {
      "name": {
        "name": "GetSelfHostedCredentialsRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSelfHostedCredentialsRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "GetSelfHostedCredentialsRequestForbiddenError",
        "wireValue": "GetSelfHostedCredentialsRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetSelfHostedCredentialsRequestForbiddenError",
        "typeId": "GetSelfHostedCredentialsRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetSelfHostedCredentialsRequestNotFoundError": {
      "name": {
        "name": "GetSelfHostedCredentialsRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSelfHostedCredentialsRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "GetSelfHostedCredentialsRequestNotFoundError",
        "wireValue": "GetSelfHostedCredentialsRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetSelfHostedCredentialsRequestNotFoundError",
        "typeId": "GetSelfHostedCredentialsRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteSelfHostedDistCredsRequestForbiddenError": {
      "name": {
        "name": "DeleteSelfHostedDistCredsRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteSelfHostedDistCredsRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "DeleteSelfHostedDistCredsRequestForbiddenError",
        "wireValue": "DeleteSelfHostedDistCredsRequestForbiddenError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteSelfHostedDistCredsRequestForbiddenError",
        "typeId": "DeleteSelfHostedDistCredsRequestForbiddenError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 403,
      "docs": "Authentication failed",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteSelfHostedDistCredsRequestNotFoundError": {
      "name": {
        "name": "DeleteSelfHostedDistCredsRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteSelfHostedDistCredsRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "DeleteSelfHostedDistCredsRequestNotFoundError",
        "wireValue": "DeleteSelfHostedDistCredsRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DeleteSelfHostedDistCredsRequestNotFoundError",
        "typeId": "DeleteSelfHostedDistCredsRequestNotFoundError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Project not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    }
  },
  "services": {
    "service_speechToText": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Speech to Text"
          ],
          "packagePath": [],
          "file": "Speech to Text"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Transcribe and analyze pre-recorded audio",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/listen",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "callback",
                "wireValue": "callback"
              },
              "docs": "URL to which we'll make the callback request",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "callback_example": "https://example.com"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "callback_method",
                "wireValue": "callback_method"
              },
              "docs": "HTTP method by which the callback request will be made",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersCallbackMethod",
                    "typeId": "V1ListenPostParametersCallbackMethod",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "callback_method_example": "PUT"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "custom_topic",
                "wireValue": "custom_topic"
              },
              "docs": "Custom topics you want the model to detect within your input audio or text if present Submit up to 100",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersCustomTopic",
                    "typeId": "V1ListenPostParametersCustomTopic",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "custom_topic_example": [
                    "unsubscribe",
                    "account%20deletion"
                  ]
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "custom_topic_mode",
                "wireValue": "custom_topic_mode"
              },
              "docs": "Sets how the model will interpret strings submitted to the `custom_topic` param. When `strict`, the model will only return topics submitted using the `custom_topic` param. When `extended`, the model will return its own detected topics in addition to those submitted using the `custom_topic` param",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersCustomTopicMode",
                    "typeId": "V1ListenPostParametersCustomTopicMode",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "custom_topic_mode_example": "strict"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "custom_intent",
                "wireValue": "custom_intent"
              },
              "docs": "Custom intents you want the model to detect within your input audio if present",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersCustomIntent",
                    "typeId": "V1ListenPostParametersCustomIntent",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "custom_intent_example": "unsubscribe"
                }
              }
            },
            {
              "name": {
                "name": "custom_intent_mode",
                "wireValue": "custom_intent_mode"
              },
              "docs": "Sets how the model will interpret intents submitted to the `custom_intent` param. When `strict`, the model will only return intents submitted using the `custom_intent` param. When `extended`, the model will return its own detected intents in addition those submitted using the `custom_intents` param",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersCustomIntentMode",
                    "typeId": "V1ListenPostParametersCustomIntentMode",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "custom_intent_mode_example": "strict"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "detect_entities",
                "wireValue": "detect_entities"
              },
              "docs": "Identifies and extracts key entities from content in submitted audio",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "detect_entities_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "detect_language",
                "wireValue": "detect_language"
              },
              "docs": "Identifies the dominant language spoken in submitted audio",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersDetectLanguage",
                    "typeId": "V1ListenPostParametersDetectLanguage",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "detect_language_example": false
                }
              }
            },
            {
              "name": {
                "name": "diarize_version",
                "wireValue": "diarize_version"
              },
              "docs": "Version of the diarization feature to use. Only used when the diarization feature is enabled (`diarize=true` is passed to the API)",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "v2",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "diarize_version_example": "v2"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "diarize",
                "wireValue": "diarize"
              },
              "docs": "Recognize speaker changes. Each word in the transcript will be assigned a speaker number starting at 0",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "diarize_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "dictation",
                "wireValue": "dictation"
              },
              "docs": "Identify and extract key entities from content in submitted audio",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "dictation_example": false
                }
              }
            },
            {
              "name": {
                "name": "encoding",
                "wireValue": "encoding"
              },
              "docs": "Specify the expected encoding of your submitted audio",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersEncoding",
                    "typeId": "V1ListenPostParametersEncoding",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "encoding_example": "linear16"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "extra",
                "wireValue": "extra"
              },
              "docs": "Arbitrary key-value pairs that are attached to the API response for usage in downstream processing",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersExtra",
                    "typeId": "V1ListenPostParametersExtra",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "extra_example": [
                    "key:value",
                    "user:1234567890"
                  ]
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "filler_words",
                "wireValue": "filler_words"
              },
              "docs": "Filler Words can help transcribe interruptions in your audio, like \"uh\" and \"um\"",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "filler_words_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "intents",
                "wireValue": "intents"
              },
              "docs": "Recognizes speaker intent throughout a transcript or text",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "intents_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "keyterm",
                "wireValue": "keyterm"
              },
              "docs": "Key term prompting can boost or suppress specialized terminology and brands. Only compatible with Nova-3",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "primitive": {
                          "v1": "STRING",
                          "v2": {
                            "validation": {},
                            "type": "string"
                          }
                        },
                        "type": "primitive"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "keyterm_example": [
                    "Snuffleupagus",
                    "Sesame Street"
                  ]
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "keywords",
                "wireValue": "keywords"
              },
              "docs": "Keywords can boost or suppress specialized terminology and brands",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersKeywords",
                    "typeId": "V1ListenPostParametersKeywords",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "keywords_example": [
                    "Twilio:2",
                    "Algolia"
                  ]
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "language",
                "wireValue": "language"
              },
              "docs": "The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language. Depending on the Model you choose only certain languages are available",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersLanguage",
                    "typeId": "V1ListenPostParametersLanguage",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "language_example": "en"
                }
              }
            },
            {
              "name": {
                "name": "measurements",
                "wireValue": "measurements"
              },
              "docs": "Spoken measurements will be converted to their corresponding abbreviations",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "measurements_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "model",
                "wireValue": "model"
              },
              "docs": "AI model used to process submitted audio",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersModel",
                    "typeId": "V1ListenPostParametersModel",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "model_example": "base-general"
                }
              }
            },
            {
              "name": {
                "name": "multichannel",
                "wireValue": "multichannel"
              },
              "docs": "Transcribe each audio channel independently",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "multichannel_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "numerals",
                "wireValue": "numerals"
              },
              "docs": "Numerals converts numbers from written format to numerical format",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "numerals_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "paragraphs",
                "wireValue": "paragraphs"
              },
              "docs": "Splits audio into paragraphs to improve transcript readability",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "paragraphs_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "profanity_filter",
                "wireValue": "profanity_filter"
              },
              "docs": "Profanity Filter looks for recognized profanity and converts it to the nearest recognized non-profane word or removes it from the transcript completely",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "profanity_filter_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "punctuate",
                "wireValue": "punctuate"
              },
              "docs": "Add punctuation and capitalization to the transcript",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "punctuate_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "redact",
                "wireValue": "redact"
              },
              "docs": "Redaction removes sensitive information from your transcripts",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersRedact",
                    "typeId": "V1ListenPostParametersRedact",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "redact_example": [
                    "pii",
                    "pci"
                  ]
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "replace",
                "wireValue": "replace"
              },
              "docs": "Search for terms or phrases in submitted audio and replaces them",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersReplace",
                    "typeId": "V1ListenPostParametersReplace",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "replace_example": [
                    "monika:Monica",
                    "jon:John"
                  ]
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "search",
                "wireValue": "search"
              },
              "docs": "Search for terms or phrases in submitted audio",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersSearch",
                    "typeId": "V1ListenPostParametersSearch",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "search_example": [
                    "Deepgram",
                    "Text to Speech"
                  ]
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "sentiment",
                "wireValue": "sentiment"
              },
              "docs": "Recognizes the sentiment throughout a transcript or text",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "sentiment_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "smart_format",
                "wireValue": "smart_format"
              },
              "docs": "Apply formatting to transcript output. When set to true, additional formatting will be applied to transcripts to improve readability",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "smart_format_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "summarize",
                "wireValue": "summarize"
              },
              "docs": "Summarize content",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersSummarize",
                    "typeId": "V1ListenPostParametersSummarize",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "summarize_example": "v2"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "tag",
                "wireValue": "tag"
              },
              "docs": "Label your requests for the purpose of identification during usage reporting",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersTag",
                    "typeId": "V1ListenPostParametersTag",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "tag_example": [
                    "test"
                  ]
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "topics",
                "wireValue": "topics"
              },
              "docs": "Detect topics throughout a transcript or text",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "topics_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "utterances",
                "wireValue": "utterances"
              },
              "docs": "Segments speech into meaningful semantic units",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "utterances_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "utt_split",
                "wireValue": "utt_split"
              },
              "docs": "Seconds to wait before detecting a pause between words in submitted audio",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "DOUBLE",
                      "v2": {
                        "default": 0.8,
                        "validation": {},
                        "type": "double"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "utt_split_example": 1.2
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "version",
                "wireValue": "version"
              },
              "docs": "Version of an AI model to use",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ListenPostParametersVersion",
                    "typeId": "V1ListenPostParametersVersion",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": "latest"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "ListenRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListenRequestBadRequestError"
              },
              "docs": "Bad Request"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/listen",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_speechToText.listen",
          "name": "listen",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Transcribe an audio file",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ListenRequest",
              "typeId": "ListenRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "speechToTextListenExample": {
                  "url": "https://dpgr.am/spacewalk.wav"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Transcribe an audio file",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ListenRequest",
                  "typeId": "ListenRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "speechToTextListenExample": {
                      "url": "https://dpgr.am/spacewalk.wav"
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "audio/*",
                "isOptional": false,
                "docs": "Transcribe an audio file",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "speechToTextListenExample": "<audiofile>"
                  }
                },
                "type": "bytes"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "response",
                  "typeId": "response",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful transcription",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "speechToTextListenExample": {
                      "metadata": {
                        "transaction_key": "deprecated",
                        "request_id": "a847f427-4ad5-4d67-9b95-db801e58251c",
                        "sha256": "154e291ecfa8be6ab8343560bcc109008fa7853eb5372533e8efdefc9b504c33",
                        "created": "2024-05-12T18:57:13.426Z",
                        "duration": 25.9,
                        "channels": 1,
                        "models": [
                          "30089e05-99d1-4376-b32e-c263170674af"
                        ],
                        "model_info": {},
                        "summary_info": {
                          "model_uuid": "67875a7f-c9c4-48a0-aa55-5bdb8a91c34a",
                          "input_tokens": 95,
                          "output_tokens": 63
                        },
                        "sentiment_info": {
                          "model_uuid": "80ab3179-d113-4254-bd6b-4a2f96498695",
                          "input_tokens": 105,
                          "output_tokens": 105
                        },
                        "topics_info": {
                          "model_uuid": "80ab3179-d113-4254-bd6b-4a2f96498695",
                          "input_tokens": 105,
                          "output_tokens": 7
                        },
                        "intents_info": {
                          "model_uuid": "80ab3179-d113-4254-bd6b-4a2f96498695",
                          "input_tokens": 105,
                          "output_tokens": 4
                        },
                        "tags": [
                          "test"
                        ]
                      },
                      "results": {
                        "channels": [
                          {
                            "search": [
                              {
                                "query": "string",
                                "hits": [
                                  {
                                    "confidence": 1.1,
                                    "start": 1.1,
                                    "end": 1.1,
                                    "snippet": "string"
                                  }
                                ]
                              }
                            ],
                            "alternatives": [
                              {
                                "transcript": "string",
                                "confidence": 1.1,
                                "words": [
                                  {
                                    "word": "string",
                                    "start": 1.1,
                                    "end": 1.1,
                                    "confidence": 1.1
                                  }
                                ],
                                "paragraphs": {
                                  "transcript": "string",
                                  "paragraphs": [
                                    {
                                      "sentences": [
                                        {
                                          "text": "string",
                                          "start": 1.1,
                                          "end": 1.1
                                        }
                                      ],
                                      "speaker": 1,
                                      "num_words": 1,
                                      "start": 1.1,
                                      "end": 1.1
                                    }
                                  ]
                                },
                                "summaries": [
                                  {
                                    "summary": "string",
                                    "start_word": 1,
                                    "end_word": 1
                                  }
                                ],
                                "topics": [
                                  {
                                    "text": "string",
                                    "start_word": 1,
                                    "end_word": 1,
                                    "topics": [
                                      "string"
                                    ]
                                  }
                                ]
                              }
                            ],
                            "detected_language": "string"
                          }
                        ],
                        "utterances": [
                          {
                            "start": 1.1,
                            "end": 1.1,
                            "confidence": 1.1,
                            "channel": 1,
                            "transcript": "string",
                            "words": [
                              {
                                "word": "string",
                                "start": 1.1,
                                "end": 1.1,
                                "confidence": 1.1,
                                "speaker": 1,
                                "speaker_confidence": 1,
                                "punctuated_word": "string"
                              }
                            ],
                            "speaker": 1,
                            "id": "string"
                          }
                        ],
                        "summary": {
                          "result": "success",
                          "short": "Speaker 0 discusses the significance of the first all-female spacewalk with an all-female team, stating that it is a tribute to the skilled and qualified women who were denied opportunities in the past."
                        },
                        "topics": {
                          "results": {
                            "topics": {
                              "segments": [
                                {
                                  "text": "And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                                  "start_word": 32,
                                  "end_word": 69,
                                  "topics": [
                                    {
                                      "topic": "Spacewalk",
                                      "confidence_score": 0.916
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        "intents": {
                          "results": {
                            "intents": {
                              "segments": [
                                {
                                  "text": "If you found this valuable, you can subscribe to the show on spotify or your favorite podcast app.",
                                  "start_word": 354,
                                  "end_word": 414,
                                  "intents": [
                                    {
                                      "intent": "Encourage podcasting",
                                      "confidence_score": 0.0039
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        "sentiments": {
                          "segments": [
                            {
                              "text": "Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                              "start_word": 0,
                              "end_word": 69,
                              "sentiment": "positive",
                              "sentiment_score": 0.581
                            }
                          ],
                          "average": {
                            "sentiment": "positive",
                            "sentiment_score": 0.581
                          }
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Transcribe audio using Deepgram's speech-to-text API",
          "v2Examples": {
            "autogeneratedExamples": {
              "speechToTextListenExample_200": {
                "displayName": "speechToTextListenExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v1/listen"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {},
                  "queryParameters": {
                    "callback": "https://example.com",
                    "callback_method": "PUT",
                    "custom_topic": [
                      "unsubscribe",
                      "account%20deletion"
                    ],
                    "custom_topic_mode": "strict",
                    "custom_intent_mode": "strict",
                    "detect_entities": true,
                    "diarize_version": "v2",
                    "diarize": true,
                    "encoding": "linear16",
                    "extra": [
                      "key:value",
                      "user:1234567890"
                    ],
                    "filler_words": true,
                    "intents": true,
                    "keyterm": [
                      "Snuffleupagus",
                      "Sesame Street"
                    ],
                    "keywords": [
                      "Twilio:2",
                      "Algolia"
                    ],
                    "measurements": true,
                    "multichannel": true,
                    "numerals": true,
                    "paragraphs": true,
                    "profanity_filter": true,
                    "punctuate": true,
                    "redact": [
                      "pii",
                      "pci"
                    ],
                    "replace": [
                      "monika:Monica",
                      "jon:John"
                    ],
                    "search": [
                      "Deepgram",
                      "Text to Speech"
                    ],
                    "sentiment": true,
                    "smart_format": true,
                    "summarize": "v2",
                    "tag": [
                      "test"
                    ],
                    "topics": true,
                    "utterances": true,
                    "utt_split": 1.2
                  },
                  "headers": {},
                  "requestBody": {
                    "url": "https://dpgr.am/spacewalk.wav"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "metadata": {
                        "transaction_key": "deprecated",
                        "request_id": "a847f427-4ad5-4d67-9b95-db801e58251c",
                        "sha256": "154e291ecfa8be6ab8343560bcc109008fa7853eb5372533e8efdefc9b504c33",
                        "created": "2024-05-12T18:57:13.426Z",
                        "duration": 25.9,
                        "channels": 1,
                        "models": [
                          "30089e05-99d1-4376-b32e-c263170674af"
                        ],
                        "model_info": {},
                        "summary_info": {
                          "model_uuid": "67875a7f-c9c4-48a0-aa55-5bdb8a91c34a",
                          "input_tokens": 95,
                          "output_tokens": 63
                        },
                        "sentiment_info": {
                          "model_uuid": "80ab3179-d113-4254-bd6b-4a2f96498695",
                          "input_tokens": 105,
                          "output_tokens": 105
                        },
                        "topics_info": {
                          "model_uuid": "80ab3179-d113-4254-bd6b-4a2f96498695",
                          "input_tokens": 105,
                          "output_tokens": 7
                        },
                        "intents_info": {
                          "model_uuid": "80ab3179-d113-4254-bd6b-4a2f96498695",
                          "input_tokens": 105,
                          "output_tokens": 4
                        },
                        "tags": [
                          "test"
                        ]
                      },
                      "results": {
                        "channels": [
                          {
                            "search": [
                              {
                                "query": "string",
                                "hits": [
                                  {
                                    "confidence": 1.1,
                                    "start": 1.1,
                                    "end": 1.1,
                                    "snippet": "string"
                                  }
                                ]
                              }
                            ],
                            "alternatives": [
                              {
                                "transcript": "string",
                                "confidence": 1.1,
                                "words": [
                                  {
                                    "word": "string",
                                    "start": 1.1,
                                    "end": 1.1,
                                    "confidence": 1.1
                                  }
                                ],
                                "paragraphs": {
                                  "transcript": "string",
                                  "paragraphs": [
                                    {
                                      "sentences": [
                                        {
                                          "text": "string",
                                          "start": 1.1,
                                          "end": 1.1
                                        }
                                      ],
                                      "speaker": 1,
                                      "num_words": 1,
                                      "start": 1.1,
                                      "end": 1.1
                                    }
                                  ]
                                },
                                "summaries": [
                                  {
                                    "summary": "string",
                                    "start_word": 1,
                                    "end_word": 1
                                  }
                                ],
                                "topics": [
                                  {
                                    "text": "string",
                                    "start_word": 1,
                                    "end_word": 1,
                                    "topics": [
                                      "string"
                                    ]
                                  }
                                ]
                              }
                            ],
                            "detected_language": "string"
                          }
                        ],
                        "utterances": [
                          {
                            "start": 1.1,
                            "end": 1.1,
                            "confidence": 1.1,
                            "channel": 1,
                            "transcript": "string",
                            "words": [
                              {
                                "word": "string",
                                "start": 1.1,
                                "end": 1.1,
                                "confidence": 1.1,
                                "speaker": 1,
                                "speaker_confidence": 1,
                                "punctuated_word": "string"
                              }
                            ],
                            "speaker": 1,
                            "id": "string"
                          }
                        ],
                        "summary": {
                          "result": "success",
                          "short": "Speaker 0 discusses the significance of the first all-female spacewalk with an all-female team, stating that it is a tribute to the skilled and qualified women who were denied opportunities in the past."
                        },
                        "topics": {
                          "results": {
                            "topics": {
                              "segments": [
                                {
                                  "text": "And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                                  "start_word": 32,
                                  "end_word": 69,
                                  "topics": [
                                    {
                                      "topic": "Spacewalk",
                                      "confidence_score": 0.916
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        "intents": {
                          "results": {
                            "intents": {
                              "segments": [
                                {
                                  "text": "If you found this valuable, you can subscribe to the show on spotify or your favorite podcast app.",
                                  "start_word": 354,
                                  "end_word": 414,
                                  "intents": [
                                    {
                                      "intent": "Encourage podcasting",
                                      "confidence_score": 0.0039
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        "sentiments": {
                          "segments": [
                            {
                              "text": "Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                              "start_word": 0,
                              "end_word": 69,
                              "sentiment": "positive",
                              "sentiment_score": 0.581
                            }
                          ],
                          "average": {
                            "sentiment": "positive",
                            "sentiment_score": 0.581
                          }
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "response",
                      "typeId": "response",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful transcription",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "speechToTextListenExample": {
                          "metadata": {
                            "transaction_key": "deprecated",
                            "request_id": "a847f427-4ad5-4d67-9b95-db801e58251c",
                            "sha256": "154e291ecfa8be6ab8343560bcc109008fa7853eb5372533e8efdefc9b504c33",
                            "created": "2024-05-12T18:57:13.426Z",
                            "duration": 25.9,
                            "channels": 1,
                            "models": [
                              "30089e05-99d1-4376-b32e-c263170674af"
                            ],
                            "model_info": {},
                            "summary_info": {
                              "model_uuid": "67875a7f-c9c4-48a0-aa55-5bdb8a91c34a",
                              "input_tokens": 95,
                              "output_tokens": 63
                            },
                            "sentiment_info": {
                              "model_uuid": "80ab3179-d113-4254-bd6b-4a2f96498695",
                              "input_tokens": 105,
                              "output_tokens": 105
                            },
                            "topics_info": {
                              "model_uuid": "80ab3179-d113-4254-bd6b-4a2f96498695",
                              "input_tokens": 105,
                              "output_tokens": 7
                            },
                            "intents_info": {
                              "model_uuid": "80ab3179-d113-4254-bd6b-4a2f96498695",
                              "input_tokens": 105,
                              "output_tokens": 4
                            },
                            "tags": [
                              "test"
                            ]
                          },
                          "results": {
                            "channels": [
                              {
                                "search": [
                                  {
                                    "query": "string",
                                    "hits": [
                                      {
                                        "confidence": 1.1,
                                        "start": 1.1,
                                        "end": 1.1,
                                        "snippet": "string"
                                      }
                                    ]
                                  }
                                ],
                                "alternatives": [
                                  {
                                    "transcript": "string",
                                    "confidence": 1.1,
                                    "words": [
                                      {
                                        "word": "string",
                                        "start": 1.1,
                                        "end": 1.1,
                                        "confidence": 1.1
                                      }
                                    ],
                                    "paragraphs": {
                                      "transcript": "string",
                                      "paragraphs": [
                                        {
                                          "sentences": [
                                            {
                                              "text": "string",
                                              "start": 1.1,
                                              "end": 1.1
                                            }
                                          ],
                                          "speaker": 1,
                                          "num_words": 1,
                                          "start": 1.1,
                                          "end": 1.1
                                        }
                                      ]
                                    },
                                    "summaries": [
                                      {
                                        "summary": "string",
                                        "start_word": 1,
                                        "end_word": 1
                                      }
                                    ],
                                    "topics": [
                                      {
                                        "text": "string",
                                        "start_word": 1,
                                        "end_word": 1,
                                        "topics": [
                                          "string"
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "detected_language": "string"
                              }
                            ],
                            "utterances": [
                              {
                                "start": 1.1,
                                "end": 1.1,
                                "confidence": 1.1,
                                "channel": 1,
                                "transcript": "string",
                                "words": [
                                  {
                                    "word": "string",
                                    "start": 1.1,
                                    "end": 1.1,
                                    "confidence": 1.1,
                                    "speaker": 1,
                                    "speaker_confidence": 1,
                                    "punctuated_word": "string"
                                  }
                                ],
                                "speaker": 1,
                                "id": "string"
                              }
                            ],
                            "summary": {
                              "result": "success",
                              "short": "Speaker 0 discusses the significance of the first all-female spacewalk with an all-female team, stating that it is a tribute to the skilled and qualified women who were denied opportunities in the past."
                            },
                            "topics": {
                              "results": {
                                "topics": {
                                  "segments": [
                                    {
                                      "text": "And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                                      "start_word": 32,
                                      "end_word": 69,
                                      "topics": [
                                        {
                                          "topic": "Spacewalk",
                                          "confidence_score": 0.916
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "intents": {
                              "results": {
                                "intents": {
                                  "segments": [
                                    {
                                      "text": "If you found this valuable, you can subscribe to the show on spotify or your favorite podcast app.",
                                      "start_word": 354,
                                      "end_word": 414,
                                      "intents": [
                                        {
                                          "intent": "Encourage podcasting",
                                          "confidence_score": 0.0039
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "sentiments": {
                              "segments": [
                                {
                                  "text": "Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                                  "start_word": 0,
                                  "end_word": 69,
                                  "sentiment": "positive",
                                  "sentiment_score": 0.581
                                }
                              ],
                              "average": {
                                "sentiment": "positive",
                                "sentiment_score": 0.581
                              }
                            }
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_textIntelligence": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Text Intelligence"
          ],
          "packagePath": [],
          "file": "Text Intelligence"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Analyze text content",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/read",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "callback",
                "wireValue": "callback"
              },
              "docs": "URL to which we'll make the callback request",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "callback_example": "https://example.com"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "callback_method",
                "wireValue": "callback_method"
              },
              "docs": "HTTP method by which the callback request will be made",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ReadPostParametersCallbackMethod",
                    "typeId": "V1ReadPostParametersCallbackMethod",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "callback_method_example": "PUT"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "custom_topic",
                "wireValue": "custom_topic"
              },
              "docs": "Custom topics you want the model to detect within your input audio or text if present Submit up to 100",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ReadPostParametersCustomTopic",
                    "typeId": "V1ReadPostParametersCustomTopic",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "custom_topic_example": [
                    "unsubscribe",
                    "account%20deletion"
                  ]
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "custom_topic_mode",
                "wireValue": "custom_topic_mode"
              },
              "docs": "Sets how the model will interpret strings submitted to the `custom_topic` param. When `strict`, the model will only return topics submitted using the `custom_topic` param. When `extended`, the model will return its own detected topics in addition to those submitted using the `custom_topic` param",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ReadPostParametersCustomTopicMode",
                    "typeId": "V1ReadPostParametersCustomTopicMode",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "custom_topic_mode_example": "strict"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "intents",
                "wireValue": "intents"
              },
              "docs": "Recognizes speaker intent throughout a transcript or text",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "intents_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "read_language",
                "wireValue": "read_language"
              },
              "docs": "The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ReadPostParametersReadLanguage",
                    "typeId": "V1ReadPostParametersReadLanguage",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "read_language_example": "en"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "sentiment",
                "wireValue": "sentiment"
              },
              "docs": "Recognizes the sentiment throughout a transcript or text",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "sentiment_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "read_summarize",
                "wireValue": "read_summarize"
              },
              "docs": "Summarize text",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "read_summarize_example": true
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "topics",
                "wireValue": "topics"
              },
              "docs": "Detect topics throughout a transcript or text",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "topics_example": true
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "TextReadRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "TextReadRequestBadRequestError"
              },
              "docs": "Bad Request"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/read",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_textIntelligence.TextRead",
          "name": "TextRead",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Analyze a text file",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "text_request",
              "typeId": "text_request",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "textIntelligenceTextReadExample": {
                  "url": "string"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Analyze a text file",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "text_request",
                  "typeId": "text_request",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "textIntelligenceTextReadExample": {
                      "url": "string"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "text_response",
                  "typeId": "text_response",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful text analysis",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "textIntelligenceTextReadExample": {
                      "metadata": {
                        "metadata": {
                          "request_id": "d04af392-db11-4c1d-83e1-20e34f0b8999",
                          "created": "2024-11-18T23:47:44.674Z",
                          "language": "en",
                          "summary_info": {
                            "model_uuid": "string",
                            "input_tokens": 1,
                            "output_tokens": 1
                          },
                          "sentiment_info": {
                            "model_uuid": "string",
                            "input_tokens": 1,
                            "output_tokens": 1
                          },
                          "topics_info": {
                            "model_uuid": "string",
                            "input_tokens": 1,
                            "output_tokens": 1
                          },
                          "intents_info": {
                            "model_uuid": "string",
                            "input_tokens": 1,
                            "output_tokens": 1
                          }
                        }
                      },
                      "results": {
                        "summary": {
                          "results": {
                            "summary": {
                              "text": "The summary of the text submitted."
                            }
                          }
                        },
                        "topics": {
                          "results": {
                            "topics": {
                              "segments": [
                                {
                                  "text": "And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                                  "start_word": 32,
                                  "end_word": 69,
                                  "topics": [
                                    {
                                      "topic": "Spacewalk",
                                      "confidence_score": 0.916
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        "intents": {
                          "results": {
                            "intents": {
                              "segments": [
                                {
                                  "text": "If you found this valuable, you can subscribe to the show on spotify or your favorite podcast app.",
                                  "start_word": 354,
                                  "end_word": 414,
                                  "intents": [
                                    {
                                      "intent": "Encourage podcasting",
                                      "confidence_score": 0.0039
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        "sentiments": {
                          "segments": [
                            {
                              "text": "Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                              "start_word": 0,
                              "end_word": 69,
                              "sentiment": "positive",
                              "sentiment_score": 0.581
                            }
                          ],
                          "average": {
                            "sentiment": "positive",
                            "sentiment_score": 0.581
                          }
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Analyze text content using Deepgram's text analysis API",
          "v2Examples": {
            "autogeneratedExamples": {
              "textIntelligenceTextReadExample_200": {
                "displayName": "textIntelligenceTextReadExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v1/read"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {},
                  "queryParameters": {
                    "callback": "https://example.com",
                    "callback_method": "PUT",
                    "custom_topic": [
                      "unsubscribe",
                      "account%20deletion"
                    ],
                    "custom_topic_mode": "strict",
                    "intents": true,
                    "read_language": "en",
                    "sentiment": true,
                    "read_summarize": true,
                    "topics": true
                  },
                  "headers": {},
                  "requestBody": {
                    "url": "string"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "metadata": {
                        "metadata": {
                          "request_id": "d04af392-db11-4c1d-83e1-20e34f0b8999",
                          "created": "2024-11-18T23:47:44.674Z",
                          "language": "en",
                          "summary_info": {
                            "model_uuid": "string",
                            "input_tokens": 1,
                            "output_tokens": 1
                          },
                          "sentiment_info": {
                            "model_uuid": "string",
                            "input_tokens": 1,
                            "output_tokens": 1
                          },
                          "topics_info": {
                            "model_uuid": "string",
                            "input_tokens": 1,
                            "output_tokens": 1
                          },
                          "intents_info": {
                            "model_uuid": "string",
                            "input_tokens": 1,
                            "output_tokens": 1
                          }
                        }
                      },
                      "results": {
                        "summary": {
                          "results": {
                            "summary": {
                              "text": "The summary of the text submitted."
                            }
                          }
                        },
                        "topics": {
                          "results": {
                            "topics": {
                              "segments": [
                                {
                                  "text": "And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                                  "start_word": 32,
                                  "end_word": 69,
                                  "topics": [
                                    {
                                      "topic": "Spacewalk",
                                      "confidence_score": 0.916
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        "intents": {
                          "results": {
                            "intents": {
                              "segments": [
                                {
                                  "text": "If you found this valuable, you can subscribe to the show on spotify or your favorite podcast app.",
                                  "start_word": 354,
                                  "end_word": 414,
                                  "intents": [
                                    {
                                      "intent": "Encourage podcasting",
                                      "confidence_score": 0.0039
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        "sentiments": {
                          "segments": [
                            {
                              "text": "Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                              "start_word": 0,
                              "end_word": 69,
                              "sentiment": "positive",
                              "sentiment_score": 0.581
                            }
                          ],
                          "average": {
                            "sentiment": "positive",
                            "sentiment_score": 0.581
                          }
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "text_response",
                      "typeId": "text_response",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful text analysis",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "textIntelligenceTextReadExample": {
                          "metadata": {
                            "metadata": {
                              "request_id": "d04af392-db11-4c1d-83e1-20e34f0b8999",
                              "created": "2024-11-18T23:47:44.674Z",
                              "language": "en",
                              "summary_info": {
                                "model_uuid": "string",
                                "input_tokens": 1,
                                "output_tokens": 1
                              },
                              "sentiment_info": {
                                "model_uuid": "string",
                                "input_tokens": 1,
                                "output_tokens": 1
                              },
                              "topics_info": {
                                "model_uuid": "string",
                                "input_tokens": 1,
                                "output_tokens": 1
                              },
                              "intents_info": {
                                "model_uuid": "string",
                                "input_tokens": 1,
                                "output_tokens": 1
                              }
                            }
                          },
                          "results": {
                            "summary": {
                              "results": {
                                "summary": {
                                  "text": "The summary of the text submitted."
                                }
                              }
                            },
                            "topics": {
                              "results": {
                                "topics": {
                                  "segments": [
                                    {
                                      "text": "And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                                      "start_word": 32,
                                      "end_word": 69,
                                      "topics": [
                                        {
                                          "topic": "Spacewalk",
                                          "confidence_score": 0.916
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "intents": {
                              "results": {
                                "intents": {
                                  "segments": [
                                    {
                                      "text": "If you found this valuable, you can subscribe to the show on spotify or your favorite podcast app.",
                                      "start_word": 354,
                                      "end_word": 414,
                                      "intents": [
                                        {
                                          "intent": "Encourage podcasting",
                                          "confidence_score": 0.0039
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "sentiments": {
                              "segments": [
                                {
                                  "text": "Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                                  "start_word": 0,
                                  "end_word": 69,
                                  "sentiment": "positive",
                                  "sentiment_score": 0.581
                                }
                              ],
                              "average": {
                                "sentiment": "positive",
                                "sentiment_score": 0.581
                              }
                            }
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_textToSpeech": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Text to Speech"
          ],
          "packagePath": [],
          "file": "Text to Speech"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Text to Speech transformation",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/speak",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "bit_rate",
                "wireValue": "bit_rate"
              },
              "docs": "The bitrate of the audio in bits per second. Choose from predefined ranges or specific values based on the encoding type.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1SpeakPostParametersBitRate",
                    "typeId": "V1SpeakPostParametersBitRate",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "bit_rate_example": 48000
                }
              }
            },
            {
              "name": {
                "name": "callback",
                "wireValue": "callback"
              },
              "docs": "URL to which we'll make the callback request",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "callback_example": "https://example.com"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "container",
                "wireValue": "container"
              },
              "docs": "Container specifies the file format wrapper for the output audio. The available options depend on the encoding type.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1SpeakPostParametersContainer",
                    "typeId": "V1SpeakPostParametersContainer",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "container_example": "wav"
                }
              }
            },
            {
              "name": {
                "name": "speak_encoding",
                "wireValue": "speak_encoding"
              },
              "docs": "Encoding allows you to specify the expected encoding of your audio output",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1SpeakPostParametersSpeakEncoding",
                    "typeId": "V1SpeakPostParametersSpeakEncoding",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "speak_encoding_example": "linear16"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "speak_model",
                "wireValue": "speak_model"
              },
              "docs": "AI model used to process submitted text",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1SpeakPostParametersSpeakModel",
                    "typeId": "V1SpeakPostParametersSpeakModel",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "speak_model_example": "aura-asteria-en"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "speak_sample_rate",
                "wireValue": "speak_sample_rate"
              },
              "docs": "Sample Rate specifies the sample rate for the output audio. Based on the encoding, different sample rates are supported. For some encodings, the sample rate is not configurable",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1SpeakPostParametersSpeakSampleRate",
                    "typeId": "V1SpeakPostParametersSpeakSampleRate",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "speak_sample_rate_example": 24000
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "SpeakRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "SpeakRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": "SpeakRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "SpeakRequestForbiddenError"
              },
              "docs": "Insufficient permissions, Model not found"
            },
            {
              "error": {
                "name": "SpeakRequestContentTooLargeError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "SpeakRequestContentTooLargeError"
              },
              "docs": "Payload too large"
            },
            {
              "error": {
                "name": "SpeakRequestUnsupportedMediaTypeError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "SpeakRequestUnsupportedMediaTypeError"
              },
              "docs": "Unsupported media type"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/speak",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_textToSpeech.speak",
          "name": "speak",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Transform text to speech",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "speak_request",
              "typeId": "speak_request",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "textToSpeechSpeakExample": {
                  "text": "Hello, welcome to Deepgram!"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Transform text to speech",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "speak_request",
                  "typeId": "speak_request",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "textToSpeechSpeakExample": {
                      "text": "Hello, welcome to Deepgram!"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "docs": "Successful text to speech",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "textToSpeechSpeakExample": "string"
                }
              },
              "type": "fileDownload"
            }
          },
          "docs": "Convert text into natural-sounding speech using Deepgram's TTS API",
          "v2Examples": {
            "autogeneratedExamples": {
              "textToSpeechSpeakExample_base_200": {
                "displayName": "textToSpeechSpeakExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v1/speak"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {},
                  "queryParameters": {
                    "callback": "https://example.com",
                    "speak_encoding": "linear16",
                    "speak_model": "aura-asteria-en",
                    "speak_sample_rate": 24000
                  },
                  "headers": {},
                  "requestBody": {
                    "text": "Hello, welcome to Deepgram!"
                  }
                },
                "response": {
                  "statusCode": 200
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "docs": "Successful text to speech",
                  "v2Examples": {
                    "userSpecifiedExamples": {},
                    "autogeneratedExamples": {
                      "textToSpeechSpeakExample": "string"
                    }
                  },
                  "type": "fileDownload"
                }
              }
            ]
          }
        }
      ]
    },
    "service_managementApi": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Management API"
          ],
          "packagePath": [],
          "file": "Management API"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Projects",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "ListProjectsRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectsRequestForbiddenError"
              },
              "docs": "Authentication failed"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.listProjects",
          "name": "listProjects",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_listProjects_Response_200",
                  "typeId": "Management API_listProjects_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A list of projects",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiListProjectsExample": {
                      "projects": [
                        {
                          "project_id": "string",
                          "name": "string"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves basic information about the projects associated with the API key",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiListProjectsExample_200": {
                "displayName": "listProjectsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "projects": [
                        {
                          "project_id": "string",
                          "name": "string"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_listProjects_Response_200",
                      "typeId": "Management API_listProjects_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A list of projects",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiListProjectsExample": {
                          "projects": [
                            {
                              "project_id": "string",
                              "name": "string"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get a Project",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "project_id_example": "project_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "limit",
                "wireValue": "limit"
              },
              "docs": "Number of results to return per page. Default 10. Range [1,1000]",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 10,
                        "validation": {
                          "max": 1000,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "limit_example": 10
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "start",
                "wireValue": "start"
              },
              "docs": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "start_example": "2024-07-01T00:00:00"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "end",
                "wireValue": "end"
              },
              "docs": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "end_example": "2024-07-31T00:00:00"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Navigate and return the results to retrieve specific portions of information of the response",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "page_example": 10
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetProjectRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectRequestBadRequestError"
              },
              "docs": "Project Bad Request"
            },
            {
              "error": {
                "name": "GetProjectRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "GetProjectRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "project_id_example": "project_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.getProject",
          "name": "getProject",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_getProject_Response_200",
                  "typeId": "Management API_getProject_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A project",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiGetProjectExample": {
                      "project_id": "string",
                      "name": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves information about the specified project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiGetProjectExample_200": {
                "displayName": "getProjectExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/project_id"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "project_id"
                  },
                  "queryParameters": {
                    "limit": 10,
                    "start": "2024-07-01T00:00:00",
                    "end": "2024-07-31T00:00:00",
                    "page": 10
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "project_id": "string",
                      "name": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_getProject_Response_200",
                      "typeId": "Management API_getProject_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A project",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiGetProjectExample": {
                          "project_id": "string",
                          "name": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete a Project",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "DeleteProjectRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteProjectRequestBadRequestError"
              },
              "docs": "Project Bad Request"
            },
            {
              "error": {
                "name": "DeleteProjectRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteProjectRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "DeleteProjectRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteProjectRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.deleteProject",
          "name": "deleteProject",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_deleteProject_Response_200",
                  "typeId": "Management API_deleteProject_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A project",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiDeleteProjectExample": {
                      "message": "Successfully deleted a project."
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes the specified project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiDeleteProjectExample_200": {
                "displayName": "deleteProjectExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v1/projects/123456-7890-1234-5678-901234"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "message": "Successfully deleted a project."
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_deleteProject_Response_200",
                      "typeId": "Management API_deleteProject_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A project",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiDeleteProjectExample": {
                          "message": "Successfully deleted a project."
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update a Project",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UpdateProjectRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdateProjectRequestBadRequestError"
              },
              "docs": "Project Bad Request"
            },
            {
              "error": {
                "name": "UpdateProjectRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdateProjectRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "UpdateProjectRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdateProjectRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.updateProject",
          "name": "updateProject",
          "requestBody": {
            "contentType": "application/json",
            "docs": "The name of the project",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "update_projects",
              "typeId": "update_projects",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "managementApiUpdateProjectExample": {
                  "name": "My Project"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "The name of the project",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "update_projects",
                  "typeId": "update_projects",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiUpdateProjectExample": {
                      "name": "My Project"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_updateProject_Response_200",
                  "typeId": "Management API_updateProject_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A project",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiUpdateProjectExample": {
                      "message": "Successfully updated project info."
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Updates the name or other properties of an existing project",
          "v2Examples": {
            "autogeneratedExamples": {
              "managementApiUpdateProjectExample_200": {
                "displayName": "managementApiUpdateProjectExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v1/projects/123456-7890-1234-5678-901234"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "My Project"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "message": "Successfully updated project info."
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_updateProject_Response_200",
                      "typeId": "Management API_updateProject_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A project",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiUpdateProjectExample": {
                          "message": "Successfully updated project info."
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Project Balances",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/balances"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetProjectBalancesRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectBalancesRequestBadRequestError"
              },
              "docs": "Project Bad Request"
            },
            {
              "error": {
                "name": "GetProjectBalancesRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectBalancesRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "GetProjectBalancesRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectBalancesRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/balances"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.getProjectBalances",
          "name": "getProjectBalances",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_getProjectBalances_Response_200",
                  "typeId": "Management API_getProjectBalances_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A list of outstanding balances",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Management API_getProjectBalances_example": {
                      "balances": [
                        {
                          "balance_id": "b123456-7890-1234-5678-901234",
                          "amount": 250,
                          "units": "usd",
                          "purchase_order_id": "b123456-7890-1234-5678-901234"
                        }
                      ]
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Generates a list of outstanding balances for the specified project",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "base_Management API_getProjectBalances_example_200": {
                "displayName": "Management API_getProjectBalances_example",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/balances"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "balances": [
                        {
                          "balance_id": "b123456-7890-1234-5678-901234",
                          "amount": 250,
                          "units": "usd",
                          "purchase_order_id": "b123456-7890-1234-5678-901234"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            }
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_getProjectBalances_Response_200",
                      "typeId": "Management API_getProjectBalances_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A list of outstanding balances",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "Management API_getProjectBalances_example": {
                          "balances": [
                            {
                              "balance_id": "b123456-7890-1234-5678-901234",
                              "amount": 250,
                              "units": "usd",
                              "purchase_order_id": "b123456-7890-1234-5678-901234"
                            }
                          ]
                        }
                      },
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get a Project Balance",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/balances/"
              },
              {
                "pathParameter": "balance_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "balance_id",
              "docs": "The unique identifier of the balance",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "balance_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetProjectBalanceRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectBalanceRequestBadRequestError"
              },
              "docs": "Project Bad Request"
            },
            {
              "error": {
                "name": "GetProjectBalanceRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectBalanceRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "GetProjectBalanceRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectBalanceRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/balances/"
              },
              {
                "pathParameter": "balance_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "balance_id",
              "docs": "The unique identifier of the balance",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "balance_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.getProjectBalance",
          "name": "getProjectBalance",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_getProjectBalance_Response_200",
                  "typeId": "Management API_getProjectBalance_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A specific balance",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Management API_getProjectBalance_example": {
                      "balance_id": "b123456-7890-1234-5678-901234",
                      "amount": 250,
                      "units": "usd",
                      "purchase_order_id": "b123456-7890-1234-5678-901234"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves details about the specified balance",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "base_Management API_getProjectBalance_example_200": {
                "displayName": "Management API_getProjectBalance_example",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/balances/123456-7890-1234-5678-901234"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                    "balance_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "balance_id": "b123456-7890-1234-5678-901234",
                      "amount": 250,
                      "units": "usd",
                      "purchase_order_id": "b123456-7890-1234-5678-901234"
                    },
                    "type": "json"
                  }
                }
              }
            }
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_getProjectBalance_Response_200",
                      "typeId": "Management API_getProjectBalance_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A specific balance",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "Management API_getProjectBalance_example": {
                          "balance_id": "b123456-7890-1234-5678-901234",
                          "amount": 250,
                          "units": "usd",
                          "purchase_order_id": "b123456-7890-1234-5678-901234"
                        }
                      },
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Returns metadata on all the latest models",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/models"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "include_outdated",
                "wireValue": "include_outdated"
              },
              "docs": "returns non-latest versions of models",
              "valueType": {
                "primitive": {
                  "v1": "BOOLEAN",
                  "v2": {
                    "type": "boolean"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "include_outdated_example": true
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "ListProjectModelsRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectModelsRequestBadRequestError"
              },
              "docs": "Project Bad Request"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/models"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.listProjectModels",
          "name": "listProjectModels",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_listProjectModels_Response_200",
                  "typeId": "Management API_listProjectModels_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A list of models",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiListProjectModelsExample": {
                      "stt": [
                        [
                          {
                            "name": "conversationalai",
                            "canonical_name": "conversationalai",
                            "architecture": "base",
                            "languages": [
                              "en",
                              "en-us"
                            ],
                            "version": "2021-11-10.1",
                            "uuid": "6b28e919-8427-4f32-9847-492e2efd7daf",
                            "batch": true,
                            "streaming": true,
                            "formatted_output": true
                          }
                        ]
                      ],
                      "tts": [
                        [
                          {
                            "name": "zeus",
                            "canonical_name": "aura-zeus-en",
                            "architecture": "aura",
                            "languages": [
                              "en",
                              "en-us"
                            ],
                            "version": "2024-07-30.0",
                            "uuid": "9c28bce5-f144-4d32-9034-843aa7aed63e",
                            "metadata": {
                              "accent": "American",
                              "color": "#949498",
                              "image": "https://static.deepgram.com/examples/avatars/zeus.jpg",
                              "sample": "https://static.deepgram.com/examples/voices/zeus.wav",
                              "tags": [
                                "masculine"
                              ]
                            }
                          }
                        ]
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns metadata on all the latest models that a specific project has access to, including non-public models",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiListProjectModelsExample_200": {
                "displayName": "listProjectModelsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/models"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {
                    "include_outdated": true
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "stt": [
                        [
                          {
                            "name": "conversationalai",
                            "canonical_name": "conversationalai",
                            "architecture": "base",
                            "languages": [
                              "en",
                              "en-us"
                            ],
                            "version": "2021-11-10.1",
                            "uuid": "6b28e919-8427-4f32-9847-492e2efd7daf",
                            "batch": true,
                            "streaming": true,
                            "formatted_output": true
                          }
                        ]
                      ],
                      "tts": [
                        [
                          {
                            "name": "zeus",
                            "canonical_name": "aura-zeus-en",
                            "architecture": "aura",
                            "languages": [
                              "en",
                              "en-us"
                            ],
                            "version": "2024-07-30.0",
                            "uuid": "9c28bce5-f144-4d32-9034-843aa7aed63e",
                            "metadata": {
                              "accent": "American",
                              "color": "#949498",
                              "image": "https://static.deepgram.com/examples/avatars/zeus.jpg",
                              "sample": "https://static.deepgram.com/examples/voices/zeus.wav",
                              "tags": [
                                "masculine"
                              ]
                            }
                          }
                        ]
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_listProjectModels_Response_200",
                      "typeId": "Management API_listProjectModels_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A list of models",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiListProjectModelsExample": {
                          "stt": [
                            [
                              {
                                "name": "conversationalai",
                                "canonical_name": "conversationalai",
                                "architecture": "base",
                                "languages": [
                                  "en",
                                  "en-us"
                                ],
                                "version": "2021-11-10.1",
                                "uuid": "6b28e919-8427-4f32-9847-492e2efd7daf",
                                "batch": true,
                                "streaming": true,
                                "formatted_output": true
                              }
                            ]
                          ],
                          "tts": [
                            [
                              {
                                "name": "zeus",
                                "canonical_name": "aura-zeus-en",
                                "architecture": "aura",
                                "languages": [
                                  "en",
                                  "en-us"
                                ],
                                "version": "2024-07-30.0",
                                "uuid": "9c28bce5-f144-4d32-9034-843aa7aed63e",
                                "metadata": {
                                  "accent": "American",
                                  "color": "#949498",
                                  "image": "https://static.deepgram.com/examples/avatars/zeus.jpg",
                                  "sample": "https://static.deepgram.com/examples/voices/zeus.wav",
                                  "tags": [
                                    "masculine"
                                  ]
                                }
                              }
                            ]
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get a Project Model",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/models/"
              },
              {
                "pathParameter": "model_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "project_id_example": "project_id"
                }
              }
            },
            {
              "name": "model_id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "model_id_example": "model_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetProjectModelRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectModelRequestBadRequestError"
              },
              "docs": "Project Bad Request"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/models/"
              },
              {
                "pathParameter": "model_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "project_id_example": "project_id"
                }
              }
            },
            {
              "name": "model_id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "model_id_example": "model_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.getProjectModel",
          "name": "getProjectModel",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_getProjectModel_Response_200",
                  "typeId": "Management API_getProjectModel_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A specific model",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiGetProjectModelExample": [
                      {
                        "name": "conversationalai",
                        "canonical_name": "conversationalai",
                        "architecture": "base",
                        "languages": [
                          "en",
                          "en-us"
                        ],
                        "version": "2021-11-10.1",
                        "uuid": "6b28e919-8427-4f32-9847-492e2efd7daf",
                        "batch": true,
                        "streaming": true,
                        "formatted_output": true
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns metadata for a specific model",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiGetProjectModelExample_200": {
                "displayName": "getProjectModelExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/project_id/models/model_id"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "project_id",
                    "model_id": "model_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "name": "conversationalai",
                        "canonical_name": "conversationalai",
                        "architecture": "base",
                        "languages": [
                          "en",
                          "en-us"
                        ],
                        "version": "2021-11-10.1",
                        "uuid": "6b28e919-8427-4f32-9847-492e2efd7daf",
                        "batch": true,
                        "streaming": true,
                        "formatted_output": true
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_getProjectModel_Response_200",
                      "typeId": "Management API_getProjectModel_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A specific model",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiGetProjectModelExample": [
                          {
                            "name": "conversationalai",
                            "canonical_name": "conversationalai",
                            "architecture": "base",
                            "languages": [
                              "en",
                              "en-us"
                            ],
                            "version": "2021-11-10.1",
                            "uuid": "6b28e919-8427-4f32-9847-492e2efd7daf",
                            "batch": true,
                            "streaming": true,
                            "formatted_output": true
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List Project Keys",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/keys"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "ListProjectKeysRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectKeysRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "ListProjectKeysRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectKeysRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/keys"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.listProjectKeys",
          "name": "listProjectKeys",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_listProjectKeys_Response_200",
                  "typeId": "Management API_listProjectKeys_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A list of API keys",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiListProjectKeysExample": {
                      "api_keys": [
                        [
                          {
                            "member": {
                              "member_id": "1000-2000-3000-4000",
                              "email": "john@test.com"
                            },
                            "api_key": {
                              "api_key_id": "1234567890abcdef1234567890abcdef",
                              "comment": "A comment",
                              "scopes": [
                                "admin"
                              ],
                              "created": "2021-01-01T00:00:00Z"
                            }
                          }
                        ]
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves all API keys associated with the specified project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiListProjectKeysExample_200": {
                "displayName": "listProjectKeysExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/keys"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "api_keys": [
                        [
                          {
                            "member": {
                              "member_id": "1000-2000-3000-4000",
                              "email": "john@test.com"
                            },
                            "api_key": {
                              "api_key_id": "1234567890abcdef1234567890abcdef",
                              "comment": "A comment",
                              "scopes": [
                                "admin"
                              ],
                              "created": "2021-01-01T00:00:00Z"
                            }
                          }
                        ]
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_listProjectKeys_Response_200",
                      "typeId": "Management API_listProjectKeys_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A list of API keys",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiListProjectKeysExample": {
                          "api_keys": [
                            [
                              {
                                "member": {
                                  "member_id": "1000-2000-3000-4000",
                                  "email": "john@test.com"
                                },
                                "api_key": {
                                  "api_key_id": "1234567890abcdef1234567890abcdef",
                                  "comment": "A comment",
                                  "scopes": [
                                    "admin"
                                  ],
                                  "created": "2021-01-01T00:00:00Z"
                                }
                              }
                            ]
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create a Project Key",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/keys"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "CreateProjectKeyRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateProjectKeyRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "CreateProjectKeyRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateProjectKeyRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/keys"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.createProjectKey",
          "name": "createProjectKey",
          "requestBody": {
            "contentType": "application/json",
            "docs": "The API key settings",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "keys",
              "typeId": "keys",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "managementApiCreateProjectKeyExample": [
                  {}
                ]
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "The API key settings",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "keys",
                  "typeId": "keys",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiCreateProjectKeyExample": [
                      {}
                    ]
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "key_created",
                  "typeId": "key_created",
                  "inline": false,
                  "type": "named"
                },
                "docs": "API key created successfully",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiCreateProjectKeyExample": {
                      "api_key_id": "1234567890abcdef1234567890abcdef",
                      "key": "1234567890abcdef1234567890abcdef",
                      "scopes": [
                        "member"
                      ],
                      "tags": [
                        "tag-1"
                      ],
                      "comments": "a comment",
                      "expiration_date": "2024-05-01T00:00:00.000000Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new API key with specified settings for the project",
          "v2Examples": {
            "autogeneratedExamples": {
              "managementApiCreateProjectKeyExample_200": {
                "displayName": "managementApiCreateProjectKeyExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/keys"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {}
                  ]
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "api_key_id": "1234567890abcdef1234567890abcdef",
                      "key": "1234567890abcdef1234567890abcdef",
                      "scopes": [
                        "member"
                      ],
                      "tags": [
                        "tag-1"
                      ],
                      "comments": "a comment",
                      "expiration_date": "2024-05-01T00:00:00.000000Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "key_created",
                      "typeId": "key_created",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "API key created successfully",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiCreateProjectKeyExample": {
                          "api_key_id": "1234567890abcdef1234567890abcdef",
                          "key": "1234567890abcdef1234567890abcdef",
                          "scopes": [
                            "member"
                          ],
                          "tags": [
                            "tag-1"
                          ],
                          "comments": "a comment",
                          "expiration_date": "2024-05-01T00:00:00.000000Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get a Project Key",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/keys/"
              },
              {
                "pathParameter": "key_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "key_id",
              "docs": "The unique identifier of the API key",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "key_id_example": "123456789012345678901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetProjectKeyRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectKeyRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "GetProjectKeyRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectKeyRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/keys/"
              },
              {
                "pathParameter": "key_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "key_id",
              "docs": "The unique identifier of the API key",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "key_id_example": "123456789012345678901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.getProjectKey",
          "name": "getProjectKey",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_getProjectKey_Response_200",
                  "typeId": "Management API_getProjectKey_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A specific API key",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiGetProjectKeyExample": {
                      "item": {
                        "member": {
                          "member_id": "1000-2000-3000-4000",
                          "email": "john@test.com",
                          "first_name": "John",
                          "last_name": "Doe",
                          "api_key": {
                            "api_key_id": "1234567890abcdef1234567890abcdef",
                            "comment": "A comment",
                            "scopes": [
                              "admin"
                            ],
                            "created": "2021-01-01T00:00:00Z"
                          }
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves information about a specified API key",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiGetProjectKeyExample_200": {
                "displayName": "getProjectKeyExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/keys/123456789012345678901234"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                    "key_id": "123456789012345678901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "item": {
                        "member": {
                          "member_id": "1000-2000-3000-4000",
                          "email": "john@test.com",
                          "first_name": "John",
                          "last_name": "Doe",
                          "api_key": {
                            "api_key_id": "1234567890abcdef1234567890abcdef",
                            "comment": "A comment",
                            "scopes": [
                              "admin"
                            ],
                            "created": "2021-01-01T00:00:00Z"
                          }
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_getProjectKey_Response_200",
                      "typeId": "Management API_getProjectKey_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A specific API key",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiGetProjectKeyExample": {
                          "item": {
                            "member": {
                              "member_id": "1000-2000-3000-4000",
                              "email": "john@test.com",
                              "first_name": "John",
                              "last_name": "Doe",
                              "api_key": {
                                "api_key_id": "1234567890abcdef1234567890abcdef",
                                "comment": "A comment",
                                "scopes": [
                                  "admin"
                                ],
                                "created": "2021-01-01T00:00:00Z"
                              }
                            }
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Deletes an API key for a specific project",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/keys/"
              },
              {
                "pathParameter": "key_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "key_id",
              "docs": "The unique identifier of the API key",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "key_id_example": "123456789012345678901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "DeleteProjectKeyRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteProjectKeyRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "DeleteProjectKeyRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteProjectKeyRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/keys/"
              },
              {
                "pathParameter": "key_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "key_id",
              "docs": "The unique identifier of the API key",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "key_id_example": "123456789012345678901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.deleteProjectKey",
          "name": "deleteProjectKey",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_deleteProjectKey_Response_200",
                  "typeId": "Management API_deleteProjectKey_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "API key deleted",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Management API_deleteProjectKey_example": {
                      "message": "Successfully deleted the API key!"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes an API key for a specific project",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "base_Management API_deleteProjectKey_example_200": {
                "displayName": "Management API_deleteProjectKey_example",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/keys/123456789012345678901234"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                    "key_id": "123456789012345678901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "message": "Successfully deleted the API key!"
                    },
                    "type": "json"
                  }
                }
              }
            }
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_deleteProjectKey_Response_200",
                      "typeId": "Management API_deleteProjectKey_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "API key deleted",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "Management API_deleteProjectKey_example": {
                          "message": "Successfully deleted the API key!"
                        }
                      },
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List Project Members",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/members"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "ListProjectMembersRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectMembersRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "ListProjectMembersRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectMembersRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/members"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.listProjectMembers",
          "name": "listProjectMembers",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_listProjectMembers_Response_200",
                  "typeId": "Management API_listProjectMembers_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A list of account objects",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiListProjectMembersExample": {
                      "members": [
                        {
                          "member_id": "string"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves a list of account objects for a specific project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiListProjectMembersExample_200": {
                "displayName": "listProjectMembersExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/members"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "members": [
                        {
                          "member_id": "string"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_listProjectMembers_Response_200",
                      "typeId": "Management API_listProjectMembers_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A list of account objects",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiListProjectMembersExample": {
                          "members": [
                            {
                              "member_id": "string"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete a Project Member",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/members/"
              },
              {
                "pathParameter": "member_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "member_id",
              "docs": "The unique identifier of the Member",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "member_id_example": "123456789012345678901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "DeleteProjectMemberRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteProjectMemberRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "DeleteProjectMemberRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteProjectMemberRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/members/"
              },
              {
                "pathParameter": "member_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "member_id",
              "docs": "The unique identifier of the Member",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "member_id_example": "123456789012345678901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.deleteProjectMember",
          "name": "deleteProjectMember",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_deleteProjectMember_Response_200",
                  "typeId": "Management API_deleteProjectMember_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Delete the specific member from the project",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiDeleteProjectMemberExample": {
                      "message": "Successfully removed account from project."
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Removes a member from the project using their unique member ID",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiDeleteProjectMemberExample_200": {
                "displayName": "deleteProjectMemberExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/members/123456789012345678901234"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                    "member_id": "123456789012345678901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "message": "Successfully removed account from project."
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_deleteProjectMember_Response_200",
                      "typeId": "Management API_deleteProjectMember_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Delete the specific member from the project",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiDeleteProjectMemberExample": {
                          "message": "Successfully removed account from project."
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List Project Member Scopes",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/members/"
              },
              {
                "pathParameter": "member_id",
                "tail": "/scopes"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "member_id",
              "docs": "The unique identifier of the Member",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "member_id_example": "123456789012345678901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "ListProjectMemberScopesRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectMemberScopesRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "ListProjectMemberScopesRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectMemberScopesRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/members/"
              },
              {
                "pathParameter": "member_id",
                "tail": "/scopes"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "member_id",
              "docs": "The unique identifier of the Member",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "member_id_example": "123456789012345678901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.listProjectMemberScopes",
          "name": "listProjectMemberScopes",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_listProjectMemberScopes_Response_200",
                  "typeId": "Management API_listProjectMemberScopes_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A list of scopes for a specific member",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiListProjectMemberScopesExample": {
                      "scopes": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves a list of scopes for a specific member",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiListProjectMemberScopesExample_200": {
                "displayName": "listProjectMemberScopesExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/members/123456789012345678901234/scopes"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                    "member_id": "123456789012345678901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "scopes": [
                        "string"
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_listProjectMemberScopes_Response_200",
                      "typeId": "Management API_listProjectMemberScopes_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A list of scopes for a specific member",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiListProjectMemberScopesExample": {
                          "scopes": [
                            "string"
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Project Member Scopes",
          "method": "PUT",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/members/"
              },
              {
                "pathParameter": "member_id",
                "tail": "/scopes"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "member_id",
              "docs": "The unique identifier of the Member",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "member_id_example": "123456789012345678901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UpdateProjectMemberScopesRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdateProjectMemberScopesRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "UpdateProjectMemberScopesRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdateProjectMemberScopesRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/members/"
              },
              {
                "pathParameter": "member_id",
                "tail": "/scopes"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "member_id",
              "docs": "The unique identifier of the Member",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "member_id_example": "123456789012345678901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.updateProjectMemberScopes",
          "name": "updateProjectMemberScopes",
          "requestBody": {
            "contentType": "application/json",
            "docs": "A scope to update",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "update_member_scope",
              "typeId": "update_member_scope",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "managementApiUpdateProjectMemberScopesExample": {
                  "scope": "admin"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "A scope to update",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "update_member_scope",
                  "typeId": "update_member_scope",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiUpdateProjectMemberScopesExample": {
                      "scope": "admin"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_updateProjectMemberScopes_Response_200",
                  "typeId": "Management API_updateProjectMemberScopes_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Updated the scopes for a specific member",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiUpdateProjectMemberScopesExample": {
                      "message": "Successfully updated the account scopes."
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Updates the scopes for a specific member",
          "v2Examples": {
            "autogeneratedExamples": {
              "managementApiUpdateProjectMemberScopesExample_200": {
                "displayName": "managementApiUpdateProjectMemberScopesExample",
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/members/123456789012345678901234/scopes"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                    "member_id": "123456789012345678901234"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "scope": "admin"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "message": "Successfully updated the account scopes."
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_updateProjectMemberScopes_Response_200",
                      "typeId": "Management API_updateProjectMemberScopes_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Updated the scopes for a specific member",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiUpdateProjectMemberScopesExample": {
                          "message": "Successfully updated the account scopes."
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List Project Invites",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/invites"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/invites"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.listProjectInvites",
          "name": "listProjectInvites",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_listProjectInvites_Response_200",
                  "typeId": "Management API_listProjectInvites_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A list of invites for a specific project",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiListProjectInvitesExample": {
                      "invites": [
                        {
                          "email": "string",
                          "scope": "string"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Generates a list of invites for a specific project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiListProjectInvitesExample_200": {
                "displayName": "listProjectInvitesExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/invites"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "invites": [
                        {
                          "email": "string",
                          "scope": "string"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_listProjectInvites_Response_200",
                      "typeId": "Management API_listProjectInvites_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A list of invites for a specific project",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiListProjectInvitesExample": {
                          "invites": [
                            {
                              "email": "string",
                              "scope": "string"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create a Project Invite",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/invites"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "CreateProjectInviteRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateProjectInviteRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "CreateProjectInviteRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateProjectInviteRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/invites"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.createProjectInvite",
          "name": "createProjectInvite",
          "requestBody": {
            "contentType": "application/json",
            "docs": "email to invite to the project",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "create_project_invite",
              "typeId": "create_project_invite",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "managementApiCreateProjectInviteExample": {
                  "email": "string",
                  "scope": "string"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "email to invite to the project",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "create_project_invite",
                  "typeId": "create_project_invite",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiCreateProjectInviteExample": {
                      "email": "string",
                      "scope": "string"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_createProjectInvite_Response_200",
                  "typeId": "Management API_createProjectInvite_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "The invite was successfully generated",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiCreateProjectInviteExample": {
                      "message": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Generates an invite for a specific project",
          "v2Examples": {
            "autogeneratedExamples": {
              "managementApiCreateProjectInviteExample_200": {
                "displayName": "managementApiCreateProjectInviteExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/invites"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "email": "string",
                    "scope": "string"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "message": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_createProjectInvite_Response_200",
                      "typeId": "Management API_createProjectInvite_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "The invite was successfully generated",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiCreateProjectInviteExample": {
                          "message": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete a Project Invite",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/invites/"
              },
              {
                "pathParameter": "email",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "email",
              "docs": "The email address of the member",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "email_example": "john.doe@example.com"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "DeleteProjectInviteRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteProjectInviteRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "DeleteProjectInviteRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteProjectInviteRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/invites/"
              },
              {
                "pathParameter": "email",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "email",
              "docs": "The email address of the member",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "email_example": "john.doe@example.com"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.deleteProjectInvite",
          "name": "deleteProjectInvite",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_deleteProjectInvite_Response_200",
                  "typeId": "Management API_deleteProjectInvite_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "The invite was successfully deleted",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiDeleteProjectInviteExample": {
                      "message": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes an invite for a specific project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiDeleteProjectInviteExample_200": {
                "displayName": "deleteProjectInviteExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/invites/john.doe%40example.com"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                    "email": "john.doe@example.com"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "message": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_deleteProjectInvite_Response_200",
                      "typeId": "Management API_deleteProjectInvite_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "The invite was successfully deleted",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiDeleteProjectInviteExample": {
                          "message": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Leave a Project",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/leave"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "DeleteProjectLeaveRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteProjectLeaveRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "DeleteProjectLeaveRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteProjectLeaveRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/leave"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.deleteProjectLeave",
          "name": "deleteProjectLeave",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_deleteProjectLeave_Response_200",
                  "typeId": "Management API_deleteProjectLeave_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successfully removed account from project",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiDeleteProjectLeaveExample": {
                      "message": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Removes the authenticated account from the specific project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiDeleteProjectLeaveExample_200": {
                "displayName": "deleteProjectLeaveExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/leave"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "message": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_deleteProjectLeave_Response_200",
                      "typeId": "Management API_deleteProjectLeave_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successfully removed account from project",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiDeleteProjectLeaveExample": {
                          "message": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List Project Requests",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/requests"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "start",
                "wireValue": "start"
              },
              "docs": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "start_example": "2024-07-01T00:00:00"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "end",
                "wireValue": "end"
              },
              "docs": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "end_example": "2024-07-31T00:00:00"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "limit",
                "wireValue": "limit"
              },
              "docs": "Number of results to return per page. Default 10. Range [1,1000]",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 10,
                        "validation": {
                          "max": 1000,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "limit_example": 10
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Navigate and return the results to retrieve specific portions of information of the response",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "page_example": 10
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "ListProjectRequestsRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectRequestsRequestBadRequestError"
              },
              "docs": "Project Bad Request"
            },
            {
              "error": {
                "name": "ListProjectRequestsRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectRequestsRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "ListProjectRequestsRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectRequestsRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/requests"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.listProjectRequests",
          "name": "listProjectRequests",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_listProjectRequests_Response_200",
                  "typeId": "Management API_listProjectRequests_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A list of requests for a specific project",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiListProjectRequestsExample": {
                      "page": 1,
                      "limit": 1,
                      "requests": [
                        {
                          "request_id": "string",
                          "project_uuid": "string",
                          "created": "2024-01-15T09:30:00Z",
                          "path": "string",
                          "api_key_id": "string",
                          "response": {},
                          "code": 1,
                          "deployment": "string",
                          "callback": "string"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Generates a list of requests for a specific project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiListProjectRequestsExample_200": {
                "displayName": "listProjectRequestsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/requests"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {
                    "start": "2024-07-01T00:00:00",
                    "end": "2024-07-31T00:00:00",
                    "limit": 10,
                    "page": 10
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "page": 1,
                      "limit": 1,
                      "requests": [
                        {
                          "request_id": "string",
                          "project_uuid": "string",
                          "created": "2024-01-15T09:30:00Z",
                          "path": "string",
                          "api_key_id": "string",
                          "response": {},
                          "code": 1,
                          "deployment": "string",
                          "callback": "string"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_listProjectRequests_Response_200",
                      "typeId": "Management API_listProjectRequests_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A list of requests for a specific project",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiListProjectRequestsExample": {
                          "page": 1,
                          "limit": 1,
                          "requests": [
                            {
                              "request_id": "string",
                              "project_uuid": "string",
                              "created": "2024-01-15T09:30:00Z",
                              "path": "string",
                              "api_key_id": "string",
                              "response": {},
                              "code": 1,
                              "deployment": "string",
                              "callback": "string"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get a Project Request",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/requests/"
              },
              {
                "pathParameter": "request_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "request_id",
              "docs": "The unique identifier of the request",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "request_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/requests/"
              },
              {
                "pathParameter": "request_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "request_id",
              "docs": "The unique identifier of the request",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "request_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.getProjectRequest",
          "name": "getProjectRequest",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_getProjectRequest_Response_200",
                  "typeId": "Management API_getProjectRequest_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A specific request for a specific project",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiGetProjectRequestExample": {
                      "request": {
                        "request_id": "string",
                        "project_uuid": "string",
                        "created": "2024-01-15T09:30:00Z",
                        "path": "string",
                        "api_key_id": "string",
                        "response": {},
                        "code": 1,
                        "deployment": "string",
                        "callback": "string"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves a specific request for a specific project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiGetProjectRequestExample_200": {
                "displayName": "getProjectRequestExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/requests/123456-7890-1234-5678-901234"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                    "request_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "request": {
                        "request_id": "string",
                        "project_uuid": "string",
                        "created": "2024-01-15T09:30:00Z",
                        "path": "string",
                        "api_key_id": "string",
                        "response": {},
                        "code": 1,
                        "deployment": "string",
                        "callback": "string"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_getProjectRequest_Response_200",
                      "typeId": "Management API_getProjectRequest_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A specific request for a specific project",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiGetProjectRequestExample": {
                          "request": {
                            "request_id": "string",
                            "project_uuid": "string",
                            "created": "2024-01-15T09:30:00Z",
                            "path": "string",
                            "api_key_id": "string",
                            "response": {},
                            "code": 1,
                            "deployment": "string",
                            "callback": "string"
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Project Usage",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/usage"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "start",
                "wireValue": "start"
              },
              "docs": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "start_example": "2024-07-01T00:00:00"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "end",
                "wireValue": "end"
              },
              "docs": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "end_example": "2024-07-31T00:00:00"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "project_filters",
                "wireValue": "project_filters"
              },
              "docs": "Common filter parameters",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ProjectsProjectIdUsageGetParametersProjectFilters",
                    "typeId": "V1ProjectsProjectIdUsageGetParametersProjectFilters",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "project_filters_example": "alternatives.yml"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetProjectUsageRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectUsageRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "GetProjectUsageRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectUsageRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/usage"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.getProjectUsage",
          "name": "getProjectUsage",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_getProjectUsage_Response_200",
                  "typeId": "Management API_getProjectUsage_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Usage Summary",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiGetProjectUsageExample": {
                      "start": "2024-10-16",
                      "end": "2024-10-23",
                      "resolution": {
                        "units": "day",
                        "amount": 1
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves the usage for a specific project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiGetProjectUsageExample_200": {
                "displayName": "getProjectUsageExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/usage"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {
                    "start": "2024-07-01T00:00:00",
                    "end": "2024-07-31T00:00:00"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "start": "2024-10-16",
                      "end": "2024-10-23",
                      "resolution": {
                        "units": "day",
                        "amount": 1
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_getProjectUsage_Response_200",
                      "typeId": "Management API_getProjectUsage_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Usage Summary",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiGetProjectUsageExample": {
                          "start": "2024-10-16",
                          "end": "2024-10-23",
                          "resolution": {
                            "units": "day",
                            "amount": 1
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List Project Usage Fields",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/usage/fields"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "start",
                "wireValue": "start"
              },
              "docs": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "start_example": "2024-07-01T00:00:00"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "end",
                "wireValue": "end"
              },
              "docs": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "end_example": "2024-07-31T00:00:00"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "ListProjectUsageFieldsRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectUsageFieldsRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "ListProjectUsageFieldsRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectUsageFieldsRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/usage/fields"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.listProjectUsageFields",
          "name": "listProjectUsageFields",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_listProjectUsageFields_Response_200",
                  "typeId": "Management API_listProjectUsageFields_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A list of fields for a specific project",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiListProjectUsageFieldsExample": {
                      "tags": [
                        "tag=dev",
                        "tag=production"
                      ],
                      "models": [
                        {
                          "name": "2-medical-nova",
                          "language": "en-MY",
                          "version": "2024-05-31.13574",
                          "model_id": "1234567890-12345-67890"
                        }
                      ],
                      "processing_methods": [
                        "sync",
                        "streaming"
                      ],
                      "features": [
                        "alternatives",
                        "detect_entities",
                        "detect_language"
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists the features, models, tags, languages, and processing method used for requests in the specified project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiListProjectUsageFieldsExample_200": {
                "displayName": "listProjectUsageFieldsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/usage/fields"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {
                    "start": "2024-07-01T00:00:00",
                    "end": "2024-07-31T00:00:00"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "tags": [
                        "tag=dev",
                        "tag=production"
                      ],
                      "models": [
                        {
                          "name": "2-medical-nova",
                          "language": "en-MY",
                          "version": "2024-05-31.13574",
                          "model_id": "1234567890-12345-67890"
                        }
                      ],
                      "processing_methods": [
                        "sync",
                        "streaming"
                      ],
                      "features": [
                        "alternatives",
                        "detect_entities",
                        "detect_language"
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_listProjectUsageFields_Response_200",
                      "typeId": "Management API_listProjectUsageFields_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A list of fields for a specific project",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiListProjectUsageFieldsExample": {
                          "tags": [
                            "tag=dev",
                            "tag=production"
                          ],
                          "models": [
                            {
                              "name": "2-medical-nova",
                              "language": "en-MY",
                              "version": "2024-05-31.13574",
                              "model_id": "1234567890-12345-67890"
                            }
                          ],
                          "processing_methods": [
                            "sync",
                            "streaming"
                          ],
                          "features": [
                            "alternatives",
                            "detect_entities",
                            "detect_language"
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Project Usage Breakdown",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/usage/breakdown"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "start",
                "wireValue": "start"
              },
              "docs": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "start_example": "2024-07-01T00:00:00"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "end",
                "wireValue": "end"
              },
              "docs": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "end_example": "2024-07-31T00:00:00"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "project_filters",
                "wireValue": "project_filters"
              },
              "docs": "Common filter parameters",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ProjectsProjectIdUsageBreakdownGetParametersProjectFilters",
                    "typeId": "V1ProjectsProjectIdUsageBreakdownGetParametersProjectFilters",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "project_filters_example": "alternatives.yml"
                }
              }
            },
            {
              "name": {
                "name": "usage_breakdown_filters",
                "wireValue": "usage_breakdown_filters"
              },
              "docs": "Filter options for usage breakdown. Multiple filters can be used with '&' prefix.\nExample: &model={model_id}&tags={tag}&accessor={accessor_id}\n",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFilters",
                    "typeId": "V1ProjectsProjectIdUsageBreakdownGetParametersUsageBreakdownFilters",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "usage_breakdown_filters_example": {}
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetProjectUsageBreakdownRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectUsageBreakdownRequestBadRequestError"
              },
              "docs": "Project Bad Request"
            },
            {
              "error": {
                "name": "GetProjectUsageBreakdownRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetProjectUsageBreakdownRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/usage/breakdown"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.getProjectUsageBreakdown",
          "name": "getProjectUsageBreakdown",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_getProjectUsageBreakdown_Response_200",
                  "typeId": "Management API_getProjectUsageBreakdown_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Usage breakdown response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiGetProjectUsageBreakdownExample": {
                      "start": "2025-01-16",
                      "end": "2025-01-23",
                      "resolution": {
                        "units": "day",
                        "amount": 1
                      },
                      "results": [
                        {
                          "hours": 1620,
                          "total_hours": 1620,
                          "agent_hours": 41.3,
                          "tokens_in": 0,
                          "tokens_out": 0,
                          "tts_characters": 9158866,
                          "requests": 373381,
                          "grouping": {
                            "start": "2025-01-16",
                            "end": "2025-01-16",
                            "accessor": "123456789012345678901234",
                            "endpoint": "listen",
                            "feature_set": "punctuate",
                            "models": "Nova-2",
                            "method": "async",
                            "tags": "tag1",
                            "deployment": "self-hosted"
                          }
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns the breakdown of usage for a specific project. Supports the following filter options:\n- &accessor={accessor_id} - The public API key accessor used\n- &deployment={deployment} - The deployment type used\n- &endpoint={endpoint} - The endpoint used\n- &feature_set={feature_set} - The collection of features used\n- &model={model_id} - The model used\n- &method={method} - The processing method used\n- &tags={tag} - Any tags used\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiGetProjectUsageBreakdownExample_200": {
                "displayName": "getProjectUsageBreakdownExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/usage/breakdown"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {
                    "start": "2024-07-01T00:00:00",
                    "end": "2024-07-31T00:00:00"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "start": "2025-01-16",
                      "end": "2025-01-23",
                      "resolution": {
                        "units": "day",
                        "amount": 1
                      },
                      "results": [
                        {
                          "hours": 1620,
                          "total_hours": 1620,
                          "agent_hours": 41.3,
                          "tokens_in": 0,
                          "tokens_out": 0,
                          "tts_characters": 9158866,
                          "requests": 373381,
                          "grouping": {
                            "start": "2025-01-16",
                            "end": "2025-01-16",
                            "accessor": "123456789012345678901234",
                            "endpoint": "listen",
                            "feature_set": "punctuate",
                            "models": "Nova-2",
                            "method": "async",
                            "tags": "tag1",
                            "deployment": "self-hosted"
                          }
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_getProjectUsageBreakdown_Response_200",
                      "typeId": "Management API_getProjectUsageBreakdown_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Usage breakdown response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiGetProjectUsageBreakdownExample": {
                          "start": "2025-01-16",
                          "end": "2025-01-23",
                          "resolution": {
                            "units": "day",
                            "amount": 1
                          },
                          "results": [
                            {
                              "hours": 1620,
                              "total_hours": 1620,
                              "agent_hours": 41.3,
                              "tokens_in": 0,
                              "tokens_out": 0,
                              "tts_characters": 9158866,
                              "requests": 373381,
                              "grouping": {
                                "start": "2025-01-16",
                                "end": "2025-01-16",
                                "accessor": "123456789012345678901234",
                                "endpoint": "listen",
                                "feature_set": "punctuate",
                                "models": "Nova-2",
                                "method": "async",
                                "tags": "tag1",
                                "deployment": "self-hosted"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List Project Purchases",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/purchases"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "start",
                "wireValue": "start"
              },
              "docs": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "start_example": "2024-07-01T00:00:00"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "limit",
                "wireValue": "limit"
              },
              "docs": "Number of results to return per page. Default 10. Range [1,1000]",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 10,
                        "validation": {
                          "max": 1000,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "limit_example": 10
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "ListProjectPurchasesRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListProjectPurchasesRequestBadRequestError"
              },
              "docs": "Project Bad Request"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/purchases"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.listProjectPurchases",
          "name": "listProjectPurchases",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_listProjectPurchases_Response_200",
                  "typeId": "Management API_listProjectPurchases_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful response with orders list",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiListProjectPurchasesExample": {
                      "orders": [
                        {
                          "order_id": "025e19ba-b6d9-4a04-9f99-4fe715aca5f1",
                          "expiration": "2026-03-04T00:00:00Z",
                          "created": "2023-02-21T21:13:40.014373Z",
                          "amount": 150,
                          "units": "usd",
                          "order_type": "promotional"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns the original purchased amount on an order transaction",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiListProjectPurchasesExample_200": {
                "displayName": "listProjectPurchasesExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/purchases"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {
                    "start": "2024-07-01T00:00:00",
                    "limit": 10
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "orders": [
                        {
                          "order_id": "025e19ba-b6d9-4a04-9f99-4fe715aca5f1",
                          "expiration": "2026-03-04T00:00:00Z",
                          "created": "2023-02-21T21:13:40.014373Z",
                          "amount": 150,
                          "units": "usd",
                          "order_type": "promotional"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_listProjectPurchases_Response_200",
                      "typeId": "Management API_listProjectPurchases_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful response with orders list",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiListProjectPurchasesExample": {
                          "orders": [
                            {
                              "order_id": "025e19ba-b6d9-4a04-9f99-4fe715aca5f1",
                              "expiration": "2026-03-04T00:00:00Z",
                              "created": "2023-02-21T21:13:40.014373Z",
                              "amount": 150,
                              "units": "usd",
                              "order_type": "promotional"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List Project Models",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/models",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "include_outdated",
                "wireValue": "include_outdated"
              },
              "docs": "returns non-latest versions of models",
              "valueType": {
                "primitive": {
                  "v1": "BOOLEAN",
                  "v2": {
                    "type": "boolean"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "include_outdated_example": true
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "ListModelsRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListModelsRequestBadRequestError"
              },
              "docs": "Project Bad Request"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/models",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.listModels",
          "name": "listModels",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_listModels_Response_200",
                  "typeId": "Management API_listModels_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A list of all public models",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiListModelsExample": {
                      "stt": [
                        {
                          "name": "general",
                          "canonical_name": "enhanced-general",
                          "architecture": "polaris",
                          "languages": [
                            "en",
                            "en-us"
                          ],
                          "version": "2022-05-18.1",
                          "uuid": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588",
                          "batch": true,
                          "streaming": true,
                          "formatted_output": false
                        }
                      ],
                      "tts": [
                        {
                          "name": "angus",
                          "canonical_name": "aura-angus-en",
                          "architecture": "aura",
                          "languages": [
                            "en",
                            "en-us"
                          ],
                          "version": "2024-07-30.0",
                          "uuid": "eed36e9e-37aa-40a3-91fa-a2911e73a5da",
                          "metadata": {
                            "accent": "Irish",
                            "color": "#BA80F5",
                            "image": "https://static.deepgram.com/examples/avatars/angus.jpg",
                            "sample": "https://static.deepgram.com/examples/voices/angus.wav",
                            "tags": [
                              "masculine"
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns metadata on all the latest public models",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiListModelsExample_200": {
                "displayName": "listModelsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/models"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {},
                  "queryParameters": {
                    "include_outdated": true
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "stt": [
                        {
                          "name": "general",
                          "canonical_name": "enhanced-general",
                          "architecture": "polaris",
                          "languages": [
                            "en",
                            "en-us"
                          ],
                          "version": "2022-05-18.1",
                          "uuid": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588",
                          "batch": true,
                          "streaming": true,
                          "formatted_output": false
                        }
                      ],
                      "tts": [
                        {
                          "name": "angus",
                          "canonical_name": "aura-angus-en",
                          "architecture": "aura",
                          "languages": [
                            "en",
                            "en-us"
                          ],
                          "version": "2024-07-30.0",
                          "uuid": "eed36e9e-37aa-40a3-91fa-a2911e73a5da",
                          "metadata": {
                            "accent": "Irish",
                            "color": "#BA80F5",
                            "image": "https://static.deepgram.com/examples/avatars/angus.jpg",
                            "sample": "https://static.deepgram.com/examples/voices/angus.wav",
                            "tags": [
                              "masculine"
                            ]
                          }
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_listModels_Response_200",
                      "typeId": "Management API_listModels_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A list of all public models",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiListModelsExample": {
                          "stt": [
                            {
                              "name": "general",
                              "canonical_name": "enhanced-general",
                              "architecture": "polaris",
                              "languages": [
                                "en",
                                "en-us"
                              ],
                              "version": "2022-05-18.1",
                              "uuid": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588",
                              "batch": true,
                              "streaming": true,
                              "formatted_output": false
                            }
                          ],
                          "tts": [
                            {
                              "name": "angus",
                              "canonical_name": "aura-angus-en",
                              "architecture": "aura",
                              "languages": [
                                "en",
                                "en-us"
                              ],
                              "version": "2024-07-30.0",
                              "uuid": "eed36e9e-37aa-40a3-91fa-a2911e73a5da",
                              "metadata": {
                                "accent": "Irish",
                                "color": "#BA80F5",
                                "image": "https://static.deepgram.com/examples/avatars/angus.jpg",
                                "sample": "https://static.deepgram.com/examples/voices/angus.wav",
                                "tags": [
                                  "masculine"
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Returns metadata for a specific model",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/models/",
            "parts": [
              {
                "pathParameter": "model_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "model_id",
              "docs": "The specific UUID of the model",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "model_id_example": "af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetModelRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetModelRequestBadRequestError"
              },
              "docs": "Project Bad Request"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/models/",
            "parts": [
              {
                "pathParameter": "model_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "model_id",
              "docs": "The specific UUID of the model",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "model_id_example": "af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.getModel",
          "name": "getModel",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_getModel_Response_200",
                  "typeId": "Management API_getModel_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A model object that can be either STT or TTS",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiGetModelExample": {
                      "name": "general",
                      "canonical_name": "enhanced-general",
                      "architecture": "polaris",
                      "languages": [
                        "en",
                        "en-us"
                      ],
                      "version": "2022-05-18.1",
                      "uuid": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588",
                      "batch": true,
                      "streaming": true,
                      "formatted_output": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns metadata for a specific model",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiGetModelExample_200": {
                "displayName": "getModelExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/models/af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "model_id": "af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "general",
                      "canonical_name": "enhanced-general",
                      "architecture": "polaris",
                      "languages": [
                        "en",
                        "en-us"
                      ],
                      "version": "2022-05-18.1",
                      "uuid": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588",
                      "batch": true,
                      "streaming": true,
                      "formatted_output": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_getModel_Response_200",
                      "typeId": "Management API_getModel_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A model object that can be either STT or TTS",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiGetModelExample": {
                          "name": "general",
                          "canonical_name": "enhanced-general",
                          "architecture": "polaris",
                          "languages": [
                            "en",
                            "en-us"
                          ],
                          "version": "2022-05-18.1",
                          "uuid": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588",
                          "batch": true,
                          "streaming": true,
                          "formatted_output": false
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List Project Self-Hosted Distribution Credentials",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/self-hosted/distribution/credentials"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "ListSelfHostedDistCredsRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListSelfHostedDistCredsRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "ListSelfHostedDistCredsRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListSelfHostedDistCredsRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/self-hosted/distribution/credentials"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.listSelfHostedDistCreds",
          "name": "listSelfHostedDistCreds",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_listSelfHostedDistCreds_Response_200",
                  "typeId": "Management API_listSelfHostedDistCreds_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "List of distribution credentials",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiListSelfHostedDistCredsExample": {
                      "distribution_credentials": [
                        {
                          "member": {
                            "member_id": "3376abcd-8e5e-49d3-92d4-876d3a4f0363",
                            "email": "email@example.com"
                          },
                          "distribution_credentials": {
                            "distribution_credentials_id": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
                            "provider": "quay",
                            "comment": "My Self-Hosted Distribution Credentials",
                            "scopes": [
                              "self-hosted:product:api",
                              "self-hosted:product:engine"
                            ],
                            "created": "2023-06-28T15:36:59.609841Z"
                          }
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists sets of distribution credentials for the specified project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiListSelfHostedDistCredsExample_200": {
                "displayName": "listSelfHostedDistCredsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/self-hosted/distribution/credentials"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "distribution_credentials": [
                        {
                          "member": {
                            "member_id": "3376abcd-8e5e-49d3-92d4-876d3a4f0363",
                            "email": "email@example.com"
                          },
                          "distribution_credentials": {
                            "distribution_credentials_id": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
                            "provider": "quay",
                            "comment": "My Self-Hosted Distribution Credentials",
                            "scopes": [
                              "self-hosted:product:api",
                              "self-hosted:product:engine"
                            ],
                            "created": "2023-06-28T15:36:59.609841Z"
                          }
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_listSelfHostedDistCreds_Response_200",
                      "typeId": "Management API_listSelfHostedDistCreds_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "List of distribution credentials",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiListSelfHostedDistCredsExample": {
                          "distribution_credentials": [
                            {
                              "member": {
                                "member_id": "3376abcd-8e5e-49d3-92d4-876d3a4f0363",
                                "email": "email@example.com"
                              },
                              "distribution_credentials": {
                                "distribution_credentials_id": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
                                "provider": "quay",
                                "comment": "My Self-Hosted Distribution Credentials",
                                "scopes": [
                                  "self-hosted:product:api",
                                  "self-hosted:product:engine"
                                ],
                                "created": "2023-06-28T15:36:59.609841Z"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create a Project Self-Hosted Distribution Credential",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/self-hosted/distribution/credentials"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "comment",
                "wireValue": "comment"
              },
              "docs": "Optional comment about the credentials",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "comment_example": "My Self-Hosted Distribution Credentials"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "scopes",
                "wireValue": "scopes"
              },
              "docs": "List of permission scopes for the credentials",
              "valueType": {
                "container": {
                  "list": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsPostParametersScopesSchemaItems",
                    "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsPostParametersScopesSchemaItems",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "list"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "scopes_example": [
                    "self-hosted:products"
                  ]
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "provider",
                "wireValue": "provider"
              },
              "docs": "The provider of the distribution service",
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "V1ProjectsProjectIdSelfHostedDistributionCredentialsPostParametersProvider",
                "typeId": "V1ProjectsProjectIdSelfHostedDistributionCredentialsPostParametersProvider",
                "inline": false,
                "type": "named"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "provider_example": "quay"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/self-hosted/distribution/credentials"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.createSelfHostedDistCreds",
          "name": "createSelfHostedDistCreds",
          "requestBody": {
            "contentType": "application/json",
            "docs": "The set of distribution credentials to create",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "create_distribution_creds",
              "typeId": "create_distribution_creds",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "managementApiCreateSelfHostedDistCredsExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "The set of distribution credentials to create",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "create_distribution_creds",
                  "typeId": "create_distribution_creds",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiCreateSelfHostedDistCredsExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "docs": "Creates a set of distribution credentials for the specified project",
          "v2Examples": {
            "autogeneratedExamples": {
              "managementApiCreateSelfHostedDistCredsExample_base": {
                "displayName": "managementApiCreateSelfHostedDistCredsExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/self-hosted/distribution/credentials"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234"
                  },
                  "queryParameters": {
                    "comment": "My Self-Hosted Distribution Credentials",
                    "scopes": [
                      "self-hosted:products"
                    ],
                    "provider": "quay"
                  },
                  "headers": {},
                  "requestBody": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {}
        },
        {
          "displayName": "Get a Project Self-Hosted Distribution Credential",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/self-hosted/distribution/credentials/"
              },
              {
                "pathParameter": "distribution_credentials_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "distribution_credentials_id",
              "docs": "The UUID of the distribution credentials",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "distribution_credentials_id_example": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetSelfHostedCredentialsRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSelfHostedCredentialsRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "GetSelfHostedCredentialsRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSelfHostedCredentialsRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/self-hosted/distribution/credentials/"
              },
              {
                "pathParameter": "distribution_credentials_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "distribution_credentials_id",
              "docs": "The UUID of the distribution credentials",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "distribution_credentials_id_example": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.getSelfHostedCredentials",
          "name": "getSelfHostedCredentials",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_getSelfHostedCredentials_Response_200",
                  "typeId": "Management API_getSelfHostedCredentials_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Single distribution credential",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiGetSelfHostedCredentialsExample": {
                      "member": {
                        "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                        "email": "email@example.com"
                      },
                      "distribution_credentials": {
                        "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
                        "provider": "quay",
                        "comment": "My Self-Hosted Distribution Credentials",
                        "scopes": [
                          "self-hosted:product:api",
                          "self-hosted:product:engine"
                        ],
                        "created": "2023-06-28T15:36:59.609841Z"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a set of distribution credentials for the specified project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiGetSelfHostedCredentialsExample_200": {
                "displayName": "getSelfHostedCredentialsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/self-hosted/distribution/credentials/8b36cfd0-472f-4a21-833f-2d6343c3a2f3"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                    "distribution_credentials_id": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "member": {
                        "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                        "email": "email@example.com"
                      },
                      "distribution_credentials": {
                        "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
                        "provider": "quay",
                        "comment": "My Self-Hosted Distribution Credentials",
                        "scopes": [
                          "self-hosted:product:api",
                          "self-hosted:product:engine"
                        ],
                        "created": "2023-06-28T15:36:59.609841Z"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_getSelfHostedCredentials_Response_200",
                      "typeId": "Management API_getSelfHostedCredentials_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Single distribution credential",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiGetSelfHostedCredentialsExample": {
                          "member": {
                            "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                            "email": "email@example.com"
                          },
                          "distribution_credentials": {
                            "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
                            "provider": "quay",
                            "comment": "My Self-Hosted Distribution Credentials",
                            "scopes": [
                              "self-hosted:product:api",
                              "self-hosted:product:engine"
                            ],
                            "created": "2023-06-28T15:36:59.609841Z"
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete a Project Self-Hosted Distribution Credential",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/self-hosted/distribution/credentials/"
              },
              {
                "pathParameter": "distribution_credentials_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "distribution_credentials_id",
              "docs": "The UUID of the distribution credentials",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "distribution_credentials_id_example": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "DeleteSelfHostedDistCredsRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteSelfHostedDistCredsRequestForbiddenError"
              },
              "docs": "Authentication failed"
            },
            {
              "error": {
                "name": "DeleteSelfHostedDistCredsRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteSelfHostedDistCredsRequestNotFoundError"
              },
              "docs": "Project not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/projects/",
            "parts": [
              {
                "pathParameter": "project_id",
                "tail": "/self-hosted/distribution/credentials/"
              },
              {
                "pathParameter": "distribution_credentials_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "project_id",
              "docs": "The unique identifier of the project",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "project_id_example": "123456-7890-1234-5678-901234"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": "distribution_credentials_id",
              "docs": "The UUID of the distribution credentials",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {
                  "distribution_credentials_id_example": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_managementApi.deleteSelfHostedDistCreds",
          "name": "deleteSelfHostedDistCreds",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Management API_deleteSelfHostedDistCreds_Response_200",
                  "typeId": "Management API_deleteSelfHostedDistCreds_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Single distribution credential",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "managementApiDeleteSelfHostedDistCredsExample": {
                      "member": {
                        "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                        "email": "email@example.com"
                      },
                      "distribution_credentials": {
                        "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
                        "provider": "quay",
                        "comment": "My Self-Hosted Distribution Credentials",
                        "scopes": [
                          "self-hosted:product:api",
                          "self-hosted:product:engine"
                        ],
                        "created": "2023-06-28T15:36:59.609841Z"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes a set of distribution credentials for the specified project",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_managementApiDeleteSelfHostedDistCredsExample_200": {
                "displayName": "deleteSelfHostedDistCredsExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v1/projects/123456-7890-1234-5678-901234/self-hosted/distribution/credentials/8b36cfd0-472f-4a21-833f-2d6343c3a2f3"
                  },
                  "environment": "Deepgram Production API",
                  "pathParameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                    "distribution_credentials_id": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "member": {
                        "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                        "email": "email@example.com"
                      },
                      "distribution_credentials": {
                        "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
                        "provider": "quay",
                        "comment": "My Self-Hosted Distribution Credentials",
                        "scopes": [
                          "self-hosted:product:api",
                          "self-hosted:product:engine"
                        ],
                        "created": "2023-06-28T15:36:59.609841Z"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Management API_deleteSelfHostedDistCreds_Response_200",
                      "typeId": "Management API_deleteSelfHostedDistCreds_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Single distribution credential",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "managementApiDeleteSelfHostedDistCredsExample": {
                          "member": {
                            "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                            "email": "email@example.com"
                          },
                          "distribution_credentials": {
                            "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
                            "provider": "quay",
                            "comment": "My Self-Hosted Distribution Credentials",
                            "scopes": [
                              "self-hosted:product:api",
                              "self-hosted:product:engine"
                            ],
                            "created": "2023-06-28T15:36:59.609841Z"
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "webhookGroups": {},
  "subpackages": {
    "subpackage_speechToText": {
      "name": "speechToText",
      "fernFilepath": {
        "allParts": [
          "speechToText"
        ],
        "packagePath": [],
        "file": "speechToText"
      },
      "hasEndpointsInTree": false,
      "service": "service_speechToText",
      "subpackages": [],
      "websocket": "channel_speechToText",
      "errors": [],
      "types": []
    },
    "subpackage_textIntelligence": {
      "name": "textIntelligence",
      "fernFilepath": {
        "allParts": [
          "textIntelligence"
        ],
        "packagePath": [],
        "file": "textIntelligence"
      },
      "service": "service_textIntelligence",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_textToSpeech": {
      "name": "textToSpeech",
      "fernFilepath": {
        "allParts": [
          "textToSpeech"
        ],
        "packagePath": [],
        "file": "textToSpeech"
      },
      "hasEndpointsInTree": false,
      "service": "service_textToSpeech",
      "subpackages": [],
      "websocket": "channel_textToSpeech",
      "errors": [],
      "types": []
    },
    "subpackage_managementApi": {
      "name": "managementApi",
      "fernFilepath": {
        "allParts": [
          "managementApi"
        ],
        "packagePath": [],
        "file": "managementApi"
      },
      "service": "service_managementApi",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_agent": {
      "name": "agent",
      "fernFilepath": {
        "allParts": [
          "agent"
        ],
        "packagePath": [],
        "file": "agent"
      },
      "types": [],
      "errors": [],
      "subpackages": [],
      "websocket": "channel_agent",
      "hasEndpointsInTree": false
    }
  },
  "websocketChannels": {
    "channel_textToSpeech": {
      "name": "textToSpeech",
      "displayName": "textToSpeech",
      "baseUrl": "public",
      "path": {
        "head": "/v1/speak",
        "parts": []
      },
      "auth": false,
      "headers": [
        {
          "name": {
            "name": "Authorization",
            "wireValue": "Authorization"
          },
          "docs": "API key for authentication. Format should be token <DEEPGRAM_API_KEY>",
          "valueType": {
            "primitive": {
              "v1": "STRING",
              "v2": {
                "validation": {},
                "type": "string"
              }
            },
            "type": "primitive"
          },
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "token YOUR_DEEPGRAM_API_KEY"
            },
            "autogeneratedExamples": {}
          }
        }
      ],
      "queryParameters": [
        {
          "name": {
            "name": "encoding",
            "wireValue": "encoding"
          },
          "docs": "Encoding allows you to specify the expected encoding of your audio output",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "speak_encoding",
                "typeId": "speak_encoding",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "linear16"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "model",
            "wireValue": "model"
          },
          "docs": "AI model used to process submitted text",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "speak_model",
                "typeId": "speak_model",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "aura-asteria-en"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "sample_rate",
            "wireValue": "sample_rate"
          },
          "docs": "Sample Rate specifies the sample rate for the output audio. Based on encoding 8000 or 24000 are possible defaults. For some encodings sample rate is not configurable.",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "speak_sample_rate",
                "typeId": "speak_sample_rate",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "24000"
            },
            "autogeneratedExamples": {}
          }
        }
      ],
      "pathParameters": [],
      "messages": [
        {
          "type": "sendText",
          "displayName": "sendText",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "speak_textToSpeechRequest",
              "typeId": "speak_textToSpeechRequest",
              "inline": false,
              "type": "named"
            },
            "docs": "Send text to Deepgram's Text to Speech API",
            "type": "reference"
          },
          "docs": "Send text to Deepgram's Text to Speech API"
        },
        {
          "type": "sendSpeakControlMessage",
          "displayName": "sendSpeakControlMessage",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "speak_controlMessagesRequest",
              "typeId": "speak_controlMessagesRequest",
              "inline": false,
              "type": "named"
            },
            "docs": "Send control messages to Deepgram's Text to Speech API",
            "type": "reference"
          },
          "docs": "Send control messages to Deepgram's Text to Speech API"
        },
        {
          "type": "receiveAudio",
          "displayName": "receiveAudio",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "speak_textToSpeechResponse",
              "typeId": "speak_textToSpeechResponse",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive audio from Deepgram's Text to Speech API",
            "type": "reference"
          },
          "docs": "Receive audio from Deepgram's Text to Speech API"
        },
        {
          "type": "receiveSpeakControlResponse",
          "displayName": "receiveSpeakControlResponse",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "speak_controlMessagesResponse",
              "typeId": "speak_controlMessagesResponse",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive control messages from Deepgram's Text to Speech API",
            "type": "reference"
          },
          "docs": "Receive control messages from Deepgram's Text to Speech API"
        },
        {
          "type": "receiveSpeakCloseFrame",
          "displayName": "receiveSpeakCloseFrame",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "speak_closeFrame",
              "typeId": "speak_closeFrame",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive close frame from Deepgram's Text to Speech API",
            "type": "reference"
          },
          "docs": "Receive close frame from Deepgram's Text to Speech API"
        }
      ],
      "docs": "Deepgram Text to Speech WebSocket",
      "examples": [
        {
          "pathParameters": [],
          "headers": [
            {
              "name": {
                "name": "Authorization",
                "wireValue": "Authorization"
              },
              "value": {
                "jsonExample": "Authorization",
                "shape": {
                  "primitive": {
                    "string": {
                      "original": "Authorization"
                    },
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            }
          ],
          "queryParameters": [],
          "messages": [
            {
              "type": "sendText",
              "body": {
                "jsonExample": {
                  "type": "Speak",
                  "text": "text"
                },
                "shape": {
                  "shape": {
                    "properties": [
                      {
                        "name": {
                          "name": {
                            "originalName": "type",
                            "camelCase": {
                              "unsafeName": "type",
                              "safeName": "type_"
                            },
                            "snakeCase": {
                              "unsafeName": "type",
                              "safeName": "type_"
                            }
                          },
                          "wireValue": "type"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "speak_textToSpeechRequest",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "speak_textToSpeechRequest"
                        },
                        "value": {
                          "jsonExample": "Speak",
                          "shape": {
                            "shape": {
                              "value": {
                                "name": "Speak",
                                "wireValue": "Speak"
                              },
                              "type": "enum"
                            },
                            "typeName": {
                              "typeId": "ChannelsSpeakMessagesTextToSpeechRequestType",
                              "fernFilepath": {
                                "allParts": [],
                                "packagePath": []
                              },
                              "name": "ChannelsSpeakMessagesTextToSpeechRequestType"
                            },
                            "type": "named"
                          }
                        }
                      },
                      {
                        "name": {
                          "name": "text",
                          "wireValue": "text"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "speak_textToSpeechRequest",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "speak_textToSpeechRequest"
                        },
                        "value": {
                          "jsonExample": "text",
                          "shape": {
                            "primitive": {
                              "string": {
                                "original": "text"
                              },
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      }
                    ],
                    "type": "object"
                  },
                  "typeName": {
                    "typeId": "speak_textToSpeechRequest",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "speak_textToSpeechRequest"
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            },
            {
              "type": "receiveAudio",
              "body": {
                "jsonExample": "string",
                "shape": {
                  "shape": {
                    "value": {
                      "jsonExample": "string",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "string"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "alias"
                  },
                  "typeName": {
                    "typeId": "speak_textToSpeechResponse",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "speak_textToSpeechResponse"
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            }
          ],
          "url": "/v1/speak"
        }
      ],
      "v2Examples": {
        "autogeneratedExamples": {},
        "userSpecifiedExamples": {
          "0": {
            "channel": {
              "method": "GET",
              "path": "/v1/speak"
            },
            "baseUrl": "/v1/speak",
            "environment": "public",
            "pathParameters": {},
            "messages": [
              {
                "type": "textToSpeechRequest",
                "body": {
                  "type": "Speak",
                  "text": "Hello, world!"
                }
              },
              {
                "type": "textToSpeechRequest",
                "body": {
                  "type": "Speak",
                  "text": "Welcome to Deepgram!"
                }
              },
              {
                "type": "textToSpeechResponse",
                "body": "Y3VyaW91cyBtaW5kcyB0aGluayBhbGlrZSA6KQ=="
              }
            ]
          }
        }
      }
    },
    "channel_speechToText": {
      "name": "speechToText",
      "displayName": "speechToText",
      "baseUrl": "public",
      "path": {
        "head": "/v1/listen",
        "parts": []
      },
      "auth": false,
      "headers": [
        {
          "name": {
            "name": "Authorization",
            "wireValue": "Authorization"
          },
          "docs": "API key for authentication. Format should be token <DEEPGRAM_API_KEY>",
          "valueType": {
            "primitive": {
              "v1": "STRING",
              "v2": {
                "validation": {},
                "type": "string"
              }
            },
            "type": "primitive"
          },
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "token YOUR_DEEPGRAM_API_KEY"
            },
            "autogeneratedExamples": {}
          }
        }
      ],
      "queryParameters": [
        {
          "name": {
            "name": "callback",
            "wireValue": "callback"
          },
          "docs": "URL to which we'll make the callback request",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "https://example.com"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "callback_method",
            "wireValue": "callback_method"
          },
          "docs": "HTTP method by which the callback request will be made",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_callback_method",
                "typeId": "listen_callback_method",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "POST",
              "1": "GET",
              "2": "PUT",
              "3": "DELETE"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "channels",
            "wireValue": "channels"
          },
          "docs": "The number of channels in the submitted audio",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "1",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "1"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "diarize",
            "wireValue": "diarize"
          },
          "docs": "Recognize speaker changes. Each word in the transcript will be assigned a speaker number starting at 0",
          "valueType": {
            "container": {
              "optional": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "true"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "diarize_version",
            "wireValue": "diarize_version"
          },
          "docs": "Version of the diarization feature to use. Only used when the diarization feature is enabled (`diarize=true` is passed to the API)",
          "valueType": {
            "primitive": {
              "v1": "STRING",
              "v2": {
                "default": "v2",
                "validation": {},
                "type": "string"
              }
            },
            "type": "primitive"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "v1",
              "1": "v2"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "dictation",
            "wireValue": "dictation"
          },
          "docs": "Identify and extract key entities from content in submitted audio",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_dictation",
                "typeId": "listen_dictation",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "true"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "encoding",
            "wireValue": "encoding"
          },
          "docs": "Specify the expected encoding of your submitted audio",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_encoding",
                "typeId": "listen_encoding",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "linear16"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "endpointing",
            "wireValue": "endpointing"
          },
          "docs": "Indicates how long Deepgram will wait to detect whether a speaker has finished speaking or pauses for a significant period of time. When set to a value, the streaming endpoint immediately finalizes the transcription for the processed time range and returns the transcript with a speech_final parameter set to true. Can also be set to false to disable endpointing",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "10",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "300",
              "1": "false\""
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "extra",
            "wireValue": "extra"
          },
          "docs": "Arbitrary key-value pairs that are attached to the API response for usage in downstream processing",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "key:value"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "filler_words",
            "wireValue": "filler_words"
          },
          "docs": "Filler Words can help transcribe interruptions in your audio, like \"uh\" and \"um\"",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_filler_words",
                "typeId": "listen_filler_words",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "true"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "interim_results",
            "wireValue": "interim_results"
          },
          "docs": "Specifies whether the streaming endpoint should provide ongoing transcription updates as more audio is received. When set to true, the endpoint sends continuous updates, meaning transcription results may evolve over time",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_interim_results",
                "typeId": "listen_interim_results",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "true"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "keyterm",
            "wireValue": "keyterm"
          },
          "docs": "Key term prompting can boost or suppress specialized terminology and brands. Only compatible with Nova-3",
          "valueType": {
            "container": {
              "optional": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "primitive": {
                          "v1": "STRING",
                          "v2": {
                            "type": "string"
                          }
                        },
                        "type": "primitive"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "Snuffleupagus"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "keywords",
            "wireValue": "keywords"
          },
          "docs": "Keywords can boost or suppress specialized terminology and brands",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "Twilio:2"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "language",
            "wireValue": "language"
          },
          "docs": "The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language. Depending on the Model you choose only certain languages are available",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_language",
                "typeId": "listen_language",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "en"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "model",
            "wireValue": "model"
          },
          "docs": "AI model to use for the transcription",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_model",
                "typeId": "listen_model",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "nova-2",
              "1": "nova-3"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "multichannel",
            "wireValue": "multichannel"
          },
          "docs": "Transcribe each audio channel independently",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_multichannel",
                "typeId": "listen_multichannel",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "true"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "numerals",
            "wireValue": "numerals"
          },
          "docs": "Convert numbers from written format to numerical format",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_numerals",
                "typeId": "listen_numerals",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "true"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "profanity_filter",
            "wireValue": "profanity_filter"
          },
          "docs": "Profanity Filter looks for recognized profanity and converts it to the nearest recognized non-profane word or removes it from the transcript completely",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_profanity_filter",
                "typeId": "listen_profanity_filter",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "true"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "punctuate",
            "wireValue": "punctuate"
          },
          "docs": "Add punctuation and capitalization to the transcript",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_punctuate",
                "typeId": "listen_punctuate",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "true"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "redact",
            "wireValue": "redact"
          },
          "docs": "Redaction removes sensitive information from your transcripts",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_redact",
                "typeId": "listen_redact",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "true"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "replace",
            "wireValue": "replace"
          },
          "docs": "Search for terms or phrases in submitted audio and replaces them",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "monika:Monica"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "sample_rate",
            "wireValue": "sample_rate"
          },
          "docs": "Sample rate of submitted audio. Required (and only read) when a value is provided for encoding",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "8000"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "search",
            "wireValue": "search"
          },
          "docs": "Search for terms or phrases in submitted audio",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "Deepgram",
              "1": "Text to Speech"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "smart_format",
            "wireValue": "smart_format"
          },
          "docs": "Apply formatting to transcript output. When set to true, additional formatting will be applied to transcripts to improve readability",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_smart_format",
                "typeId": "listen_smart_format",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "true"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "tag",
            "wireValue": "tag"
          },
          "docs": "Label your requests for the purpose of identification during usage reporting",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "my-team",
              "1": "marketing%20team"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "utterance_end",
            "wireValue": "utterance_end"
          },
          "docs": "Indicates how long Deepgram will wait to send an UtteranceEnd message after a word has been transcribed. Use with interim_results",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "1000"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "vad_events",
            "wireValue": "vad_events"
          },
          "docs": "Indicates that speech has started. You'll begin receiving Speech Started messages upon speech starting",
          "valueType": {
            "container": {
              "optional": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "listen_vad_events",
                "typeId": "listen_vad_events",
                "inline": false,
                "type": "named"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "true"
            },
            "autogeneratedExamples": {}
          }
        },
        {
          "name": {
            "name": "version",
            "wireValue": "version"
          },
          "docs": "Version of an AI model to use",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "latest",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "MODEL_VERSION"
            },
            "autogeneratedExamples": {}
          }
        }
      ],
      "pathParameters": [],
      "messages": [
        {
          "type": "sendAudio",
          "displayName": "sendAudio",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "listen_transcriptionRequest",
              "typeId": "listen_transcriptionRequest",
              "inline": false,
              "type": "named"
            },
            "docs": "Send audio to Deepgram's Speech to Text API",
            "type": "reference"
          },
          "docs": "Send audio to Deepgram's Speech to Text API"
        },
        {
          "type": "sendListenControlMessage",
          "displayName": "sendListenControlMessage",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "listen_controlMessagesRequest",
              "typeId": "listen_controlMessagesRequest",
              "inline": false,
              "type": "named"
            },
            "docs": "Send control messages to Deepgram's Speech to Text API",
            "type": "reference"
          },
          "docs": "Send control messages to Deepgram's Speech to Text API"
        },
        {
          "type": "receiveTranscription",
          "displayName": "receiveTranscription",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "listen_transcriptionResponse",
              "typeId": "listen_transcriptionResponse",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive transcription from Deepgram's Speech to Text API",
            "type": "reference"
          },
          "docs": "Receive transcription from Deepgram's Speech to Text API"
        },
        {
          "type": "receiveListenControlResponse",
          "displayName": "receiveListenControlResponse",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "listen_controlMessageResponse",
              "typeId": "listen_controlMessageResponse",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive control messages from Deepgram's Speech to Text API",
            "type": "reference"
          },
          "docs": "Receive control messages from Deepgram's Speech to Text API"
        },
        {
          "type": "receiveListenCloseFrame",
          "displayName": "receiveListenCloseFrame",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "listen_closeFrame",
              "typeId": "listen_closeFrame",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive close frame from Deepgram's Speech to Text API",
            "type": "reference"
          },
          "docs": "Receive close frame from Deepgram's Speech to Text API"
        }
      ],
      "docs": "Deepgram Speech to Text WebSocket",
      "examples": [
        {
          "pathParameters": [],
          "headers": [
            {
              "name": {
                "name": "Authorization",
                "wireValue": "Authorization"
              },
              "value": {
                "jsonExample": "Authorization",
                "shape": {
                  "primitive": {
                    "string": {
                      "original": "Authorization"
                    },
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "diarize_version",
                "wireValue": "diarize_version"
              },
              "shape": {
                "type": "single"
              },
              "value": {
                "jsonExample": "v2",
                "shape": {
                  "primitive": {
                    "string": {
                      "original": "v2"
                    },
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            }
          ],
          "messages": [
            {
              "type": "sendAudio",
              "body": {
                "jsonExample": "string",
                "shape": {
                  "shape": {
                    "value": {
                      "jsonExample": "string",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "string"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "alias"
                  },
                  "typeName": {
                    "typeId": "listen_transcriptionRequest",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "listen_transcriptionRequest"
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            },
            {
              "type": "receiveTranscription",
              "body": {
                "jsonExample": {},
                "shape": {
                  "shape": {
                    "properties": [
                      {
                        "name": {
                          "name": "channel",
                          "wireValue": "channel"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "listen_transcriptionResponse",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "listen_transcriptionResponse"
                        },
                        "value": {
                          "shape": {
                            "container": {
                              "valueType": {
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "ChannelsListenMessagesTranscriptionResponseChannel",
                                "typeId": "ChannelsListenMessagesTranscriptionResponseChannel",
                                "inline": false,
                                "type": "named"
                              },
                              "type": "optional"
                            },
                            "type": "container"
                          }
                        }
                      },
                      {
                        "name": {
                          "name": "metadata",
                          "wireValue": "metadata"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "listen_transcriptionResponse",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "listen_transcriptionResponse"
                        },
                        "value": {
                          "shape": {
                            "container": {
                              "valueType": {
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "ChannelsListenMessagesTranscriptionResponseMetadata",
                                "typeId": "ChannelsListenMessagesTranscriptionResponseMetadata",
                                "inline": false,
                                "type": "named"
                              },
                              "type": "optional"
                            },
                            "type": "container"
                          }
                        }
                      },
                      {
                        "name": {
                          "name": {
                            "originalName": "type",
                            "camelCase": {
                              "unsafeName": "type",
                              "safeName": "type_"
                            },
                            "snakeCase": {
                              "unsafeName": "type",
                              "safeName": "type_"
                            }
                          },
                          "wireValue": "type"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "listen_transcriptionResponse",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "listen_transcriptionResponse"
                        },
                        "value": {
                          "shape": {
                            "container": {
                              "valueType": {
                                "primitive": {
                                  "v1": "STRING",
                                  "v2": {
                                    "validation": {},
                                    "type": "string"
                                  }
                                },
                                "type": "primitive"
                              },
                              "type": "optional"
                            },
                            "type": "container"
                          }
                        }
                      },
                      {
                        "name": {
                          "name": "channel_index",
                          "wireValue": "channel_index"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "listen_transcriptionResponse",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "listen_transcriptionResponse"
                        },
                        "value": {
                          "shape": {
                            "container": {
                              "valueType": {
                                "container": {
                                  "list": {
                                    "primitive": {
                                      "v1": "INTEGER",
                                      "v2": {
                                        "validation": {},
                                        "type": "integer"
                                      }
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "list"
                                },
                                "type": "container"
                              },
                              "type": "optional"
                            },
                            "type": "container"
                          }
                        }
                      },
                      {
                        "name": {
                          "name": "duration",
                          "wireValue": "duration"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "listen_transcriptionResponse",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "listen_transcriptionResponse"
                        },
                        "value": {
                          "shape": {
                            "container": {
                              "valueType": {
                                "primitive": {
                                  "v1": "FLOAT",
                                  "v2": {
                                    "validation": {},
                                    "type": "float"
                                  }
                                },
                                "type": "primitive"
                              },
                              "type": "optional"
                            },
                            "type": "container"
                          }
                        }
                      },
                      {
                        "name": {
                          "name": "start",
                          "wireValue": "start"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "listen_transcriptionResponse",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "listen_transcriptionResponse"
                        },
                        "value": {
                          "shape": {
                            "container": {
                              "valueType": {
                                "primitive": {
                                  "v1": "FLOAT",
                                  "v2": {
                                    "validation": {},
                                    "type": "float"
                                  }
                                },
                                "type": "primitive"
                              },
                              "type": "optional"
                            },
                            "type": "container"
                          }
                        }
                      },
                      {
                        "name": {
                          "name": "is_final",
                          "wireValue": "is_final"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "listen_transcriptionResponse",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "listen_transcriptionResponse"
                        },
                        "value": {
                          "shape": {
                            "container": {
                              "valueType": {
                                "primitive": {
                                  "v1": "BOOLEAN",
                                  "v2": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "primitive"
                              },
                              "type": "optional"
                            },
                            "type": "container"
                          }
                        }
                      },
                      {
                        "name": {
                          "name": "from_finalize",
                          "wireValue": "from_finalize"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "listen_transcriptionResponse",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "listen_transcriptionResponse"
                        },
                        "value": {
                          "shape": {
                            "container": {
                              "valueType": {
                                "primitive": {
                                  "v1": "BOOLEAN",
                                  "v2": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "primitive"
                              },
                              "type": "optional"
                            },
                            "type": "container"
                          }
                        }
                      },
                      {
                        "name": {
                          "name": "speech_final",
                          "wireValue": "speech_final"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "listen_transcriptionResponse",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "listen_transcriptionResponse"
                        },
                        "value": {
                          "shape": {
                            "container": {
                              "valueType": {
                                "primitive": {
                                  "v1": "BOOLEAN",
                                  "v2": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "primitive"
                              },
                              "type": "optional"
                            },
                            "type": "container"
                          }
                        }
                      }
                    ],
                    "type": "object"
                  },
                  "typeName": {
                    "typeId": "listen_transcriptionResponse",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "listen_transcriptionResponse"
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            }
          ],
          "url": "/v1/listen"
        }
      ],
      "v2Examples": {
        "autogeneratedExamples": {},
        "userSpecifiedExamples": {
          "0": {
            "channel": {
              "method": "GET",
              "path": "/v1/listen"
            },
            "baseUrl": "/v1/listen",
            "environment": "public",
            "pathParameters": {},
            "messages": [
              {
                "type": "transcriptionRequest",
                "body": "Y3VyaW91cyBtaW5k"
              },
              {
                "type": "transcriptionRequest",
                "body": "cyB0aGluayBhbGlrZSA6KQ=="
              },
              {
                "type": "transcriptionResponse",
                "body": {
                  "type": "Results",
                  "channel": {
                    "alternatives": [
                      {
                        "confidence": 0.98,
                        "transcript": "Hello, world! Welcome to Deepgram!",
                        "words": [
                          {
                            "confidence": 0.99,
                            "end": 0.5,
                            "punctuated_word": "Hello,",
                            "start": 0.1,
                            "word": "hello"
                          },
                          {
                            "confidence": 0.98,
                            "end": 0.8,
                            "punctuated_word": "world!",
                            "start": 0.6,
                            "word": "world"
                          },
                          {
                            "confidence": 0.97,
                            "end": 1.2,
                            "punctuated_word": "Welcome",
                            "start": 0.9,
                            "word": "welcome"
                          },
                          {
                            "confidence": 0.99,
                            "end": 1.4,
                            "punctuated_word": "to",
                            "start": 1.3,
                            "word": "to"
                          },
                          {
                            "confidence": 0.98,
                            "end": 1.9,
                            "punctuated_word": "Deepgram!",
                            "start": 1.5,
                            "word": "deepgram"
                          }
                        ]
                      }
                    ]
                  },
                  "duration": 2,
                  "is_final": true,
                  "metadata": {
                    "model_info": {
                      "name": "nova-2",
                      "version": "1.0.0",
                      "arch": "transformer"
                    },
                    "model_uuid": "123e4567-e89b-12d3-a456-426614174000",
                    "request_id": "987fcdeb-51a2-43b7-91e4-c95bafcda21a"
                  },
                  "start": 0,
                  "speech_final": true
                }
              }
            ]
          }
        }
      }
    },
    "channel_agent": {
      "name": "agent",
      "displayName": "agent",
      "baseUrl": "agent",
      "path": {
        "head": "/agent",
        "parts": []
      },
      "auth": false,
      "headers": [
        {
          "name": {
            "name": "Authorization",
            "wireValue": "Authorization"
          },
          "docs": "API key for authentication. Format should be token <DEEPGRAM_API_KEY>",
          "valueType": {
            "primitive": {
              "v1": "STRING",
              "v2": {
                "validation": {},
                "type": "string"
              }
            },
            "type": "primitive"
          },
          "v2Examples": {
            "userSpecifiedExamples": {
              "0": "token YOUR_DEEPGRAM_API_KEY"
            },
            "autogeneratedExamples": {}
          }
        }
      ],
      "queryParameters": [],
      "pathParameters": [],
      "messages": [
        {
          "type": "sendSettingsConfiguration",
          "displayName": "sendSettingsConfiguration",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_settingsConfiguration",
              "typeId": "agent_settingsConfiguration",
              "inline": false,
              "type": "named"
            },
            "docs": "Send settings configuration to Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Send settings configuration to Deepgram's Voice Agent API"
        },
        {
          "type": "sendUpdateInstructions",
          "displayName": "sendUpdateInstructions",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_updateInstructions",
              "typeId": "agent_updateInstructions",
              "inline": false,
              "type": "named"
            },
            "docs": "Send update instructions to Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Send update instructions to Deepgram's Voice Agent API"
        },
        {
          "type": "sendUpdateSpeak",
          "displayName": "sendUpdateSpeak",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_updateSpeak",
              "typeId": "agent_updateSpeak",
              "inline": false,
              "type": "named"
            },
            "docs": "Send update speak to Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Send update speak to Deepgram's Voice Agent API"
        },
        {
          "type": "sendInjectAgentMessage",
          "displayName": "sendInjectAgentMessage",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_injectAgentMessage",
              "typeId": "agent_injectAgentMessage",
              "inline": false,
              "type": "named"
            },
            "docs": "Send inject agent message to Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Send inject agent message to Deepgram's Voice Agent API"
        },
        {
          "type": "receiveInjectionRefused",
          "displayName": "receiveInjectionRefused",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_injectionRefused",
              "typeId": "agent_injectionRefused",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive injection refused message from Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Receive injection refused message from Deepgram's Voice Agent API"
        },
        {
          "type": "sendFunctionCallResponse",
          "displayName": "sendFunctionCallResponse",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_functionCallResponse",
              "typeId": "agent_functionCallResponse",
              "inline": false,
              "type": "named"
            },
            "docs": "Send function call response to Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Send function call response to Deepgram's Voice Agent API"
        },
        {
          "type": "sendKeepAlive",
          "displayName": "sendKeepAlive",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_agentKeepAlive",
              "typeId": "agent_agentKeepAlive",
              "inline": false,
              "type": "named"
            },
            "docs": "Send keep alive to Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Send keep alive to Deepgram's Voice Agent API"
        },
        {
          "type": "receiveWelcome",
          "displayName": "receiveWelcome",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_welcomeMessage",
              "typeId": "agent_welcomeMessage",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive welcome message from Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Receive welcome message from Deepgram's Voice Agent API"
        },
        {
          "type": "receiveSettingsApplied",
          "displayName": "receiveSettingsApplied",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_settingsApplied",
              "typeId": "agent_settingsApplied",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive settings applied message from Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Receive settings applied message from Deepgram's Voice Agent API"
        },
        {
          "type": "receiveConversationText",
          "displayName": "receiveConversationText",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_ConversationText",
              "typeId": "agent_ConversationText",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive conversation text from Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Receive conversation text from Deepgram's Voice Agent API"
        },
        {
          "type": "receiveUserStartedSpeaking",
          "displayName": "receiveUserStartedSpeaking",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_userStartedSpeaking",
              "typeId": "agent_userStartedSpeaking",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive user started speaking message from Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Receive user started speaking message from Deepgram's Voice Agent API"
        },
        {
          "type": "receiveAgentThinking",
          "displayName": "receiveAgentThinking",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_agentThinking",
              "typeId": "agent_agentThinking",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive agent thinking message from Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Receive agent thinking message from Deepgram's Voice Agent API"
        },
        {
          "type": "receiveFunctionCallRequest",
          "displayName": "receiveFunctionCallRequest",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_functionCallRequest",
              "typeId": "agent_functionCallRequest",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive function call request from Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Receive function call request from Deepgram's Voice Agent API"
        },
        {
          "type": "receiveFunctionCalling",
          "displayName": "receiveFunctionCalling",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_functionCalling",
              "typeId": "agent_functionCalling",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive function calling message from Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Receive function calling message from Deepgram's Voice Agent API"
        },
        {
          "type": "receiveAgentStartedSpeaking",
          "displayName": "receiveAgentStartedSpeaking",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_agentStartedSpeaking",
              "typeId": "agent_agentStartedSpeaking",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive agent started speaking message from Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Receive agent started speaking message from Deepgram's Voice Agent API"
        },
        {
          "type": "receiveAgentAudioDone",
          "displayName": "receiveAgentAudioDone",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_agentAudioDone",
              "typeId": "agent_agentAudioDone",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive agent audio done message from Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Receive agent audio done message from Deepgram's Voice Agent API"
        },
        {
          "type": "receiveError",
          "displayName": "receiveError",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "agent_agentErrorResponse",
              "typeId": "agent_agentErrorResponse",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive error response from Deepgram's Voice Agent API",
            "type": "reference"
          },
          "docs": "Receive error response from Deepgram's Voice Agent API"
        }
      ],
      "docs": "Deepgram Voice Agent WebSocket",
      "examples": [
        {
          "pathParameters": [],
          "headers": [
            {
              "name": {
                "name": "Authorization",
                "wireValue": "Authorization"
              },
              "value": {
                "jsonExample": "Authorization",
                "shape": {
                  "primitive": {
                    "string": {
                      "original": "Authorization"
                    },
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            }
          ],
          "queryParameters": [],
          "messages": [
            {
              "type": "sendSettingsConfiguration",
              "body": {
                "jsonExample": {
                  "type": "SettingsConfiguration",
                  "agent": {}
                },
                "shape": {
                  "shape": {
                    "properties": [
                      {
                        "name": {
                          "name": {
                            "originalName": "type",
                            "camelCase": {
                              "unsafeName": "type",
                              "safeName": "type_"
                            },
                            "snakeCase": {
                              "unsafeName": "type",
                              "safeName": "type_"
                            }
                          },
                          "wireValue": "type"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "agent_settingsConfiguration",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "agent_settingsConfiguration"
                        },
                        "value": {
                          "jsonExample": "SettingsConfiguration",
                          "shape": {
                            "container": {
                              "literal": {
                                "string": {
                                  "original": "SettingsConfiguration"
                                },
                                "type": "string"
                              },
                              "type": "literal"
                            },
                            "type": "container"
                          }
                        }
                      },
                      {
                        "name": {
                          "name": "audio",
                          "wireValue": "audio"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "agent_settingsConfiguration",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "agent_settingsConfiguration"
                        },
                        "value": {
                          "shape": {
                            "container": {
                              "valueType": {
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "ChannelsAgentMessagesSettingsConfigurationAudio",
                                "typeId": "ChannelsAgentMessagesSettingsConfigurationAudio",
                                "inline": false,
                                "type": "named"
                              },
                              "type": "nullable"
                            },
                            "type": "container"
                          }
                        }
                      },
                      {
                        "name": {
                          "name": "agent",
                          "wireValue": "agent"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "agent_settingsConfiguration",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "agent_settingsConfiguration"
                        },
                        "value": {
                          "jsonExample": {},
                          "shape": {
                            "shape": {
                              "properties": [
                                {
                                  "name": {
                                    "name": "listen",
                                    "wireValue": "listen"
                                  },
                                  "originalTypeDeclaration": {
                                    "typeId": "ChannelsAgentMessagesSettingsConfigurationAgent",
                                    "fernFilepath": {
                                      "allParts": [],
                                      "packagePath": []
                                    },
                                    "name": "ChannelsAgentMessagesSettingsConfigurationAgent"
                                  },
                                  "value": {
                                    "shape": {
                                      "container": {
                                        "valueType": {
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "ChannelsAgentMessagesSettingsConfigurationAgentListen",
                                          "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentListen",
                                          "inline": false,
                                          "type": "named"
                                        },
                                        "type": "optional"
                                      },
                                      "type": "container"
                                    }
                                  }
                                },
                                {
                                  "name": {
                                    "name": "think",
                                    "wireValue": "think"
                                  },
                                  "originalTypeDeclaration": {
                                    "typeId": "ChannelsAgentMessagesSettingsConfigurationAgent",
                                    "fernFilepath": {
                                      "allParts": [],
                                      "packagePath": []
                                    },
                                    "name": "ChannelsAgentMessagesSettingsConfigurationAgent"
                                  },
                                  "value": {
                                    "shape": {
                                      "container": {
                                        "valueType": {
                                          "fernFilepath": {
                                            "allParts": [],
                                            "packagePath": []
                                          },
                                          "name": "ChannelsAgentMessagesSettingsConfigurationAgentThink",
                                          "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentThink",
                                          "inline": false,
                                          "type": "named"
                                        },
                                        "type": "optional"
                                      },
                                      "type": "container"
                                    }
                                  }
                                },
                                {
                                  "name": {
                                    "name": "speak",
                                    "wireValue": "speak"
                                  },
                                  "originalTypeDeclaration": {
                                    "typeId": "ChannelsAgentMessagesSettingsConfigurationAgent",
                                    "fernFilepath": {
                                      "allParts": [],
                                      "packagePath": []
                                    },
                                    "name": "ChannelsAgentMessagesSettingsConfigurationAgent"
                                  },
                                  "value": {
                                    "shape": {
                                      "container": {
                                        "valueType": {
                                          "container": {
                                            "nullable": {
                                              "fernFilepath": {
                                                "allParts": [],
                                                "packagePath": []
                                              },
                                              "name": "ChannelsAgentMessagesSettingsConfigurationAgentSpeak",
                                              "typeId": "ChannelsAgentMessagesSettingsConfigurationAgentSpeak",
                                              "inline": false,
                                              "type": "named"
                                            },
                                            "type": "nullable"
                                          },
                                          "type": "container"
                                        },
                                        "type": "optional"
                                      },
                                      "type": "container"
                                    }
                                  }
                                }
                              ],
                              "type": "object"
                            },
                            "typeName": {
                              "typeId": "ChannelsAgentMessagesSettingsConfigurationAgent",
                              "fernFilepath": {
                                "allParts": [],
                                "packagePath": []
                              },
                              "name": "ChannelsAgentMessagesSettingsConfigurationAgent"
                            },
                            "type": "named"
                          }
                        }
                      },
                      {
                        "name": {
                          "name": "context",
                          "wireValue": "context"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "agent_settingsConfiguration",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "agent_settingsConfiguration"
                        },
                        "value": {
                          "shape": {
                            "container": {
                              "valueType": {
                                "container": {
                                  "nullable": {
                                    "fernFilepath": {
                                      "allParts": [],
                                      "packagePath": []
                                    },
                                    "name": "ChannelsAgentMessagesSettingsConfigurationContext",
                                    "typeId": "ChannelsAgentMessagesSettingsConfigurationContext",
                                    "inline": false,
                                    "type": "named"
                                  },
                                  "type": "nullable"
                                },
                                "type": "container"
                              },
                              "type": "optional"
                            },
                            "type": "container"
                          }
                        }
                      }
                    ],
                    "type": "object"
                  },
                  "typeName": {
                    "typeId": "agent_settingsConfiguration",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "agent_settingsConfiguration"
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            },
            {
              "type": "receiveInjectionRefused",
              "body": {
                "jsonExample": {
                  "type": "InjectionRefused"
                },
                "shape": {
                  "shape": {
                    "properties": [
                      {
                        "name": {
                          "name": {
                            "originalName": "type",
                            "camelCase": {
                              "unsafeName": "type",
                              "safeName": "type_"
                            },
                            "snakeCase": {
                              "unsafeName": "type",
                              "safeName": "type_"
                            }
                          },
                          "wireValue": "type"
                        },
                        "originalTypeDeclaration": {
                          "typeId": "agent_injectionRefused",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "agent_injectionRefused"
                        },
                        "value": {
                          "jsonExample": "InjectionRefused",
                          "shape": {
                            "container": {
                              "literal": {
                                "string": {
                                  "original": "InjectionRefused"
                                },
                                "type": "string"
                              },
                              "type": "literal"
                            },
                            "type": "container"
                          }
                        }
                      }
                    ],
                    "type": "object"
                  },
                  "typeName": {
                    "typeId": "agent_injectionRefused",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "agent_injectionRefused"
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            }
          ],
          "url": "/agent"
        }
      ],
      "v2Examples": {
        "autogeneratedExamples": {},
        "userSpecifiedExamples": {}
      }
    }
  },
  "rootPackage": {
    "types": [
      "ListenRequest",
      "ListenRequestFile",
      "metadata",
      "channels",
      "utterances",
      "summary",
      "topics",
      "intents",
      "sentiments",
      "results",
      "response",
      "text_request_url",
      "text_request_text",
      "text_request",
      "text_metadata",
      "text_summary",
      "text_results",
      "text_response",
      "speak_request",
      "speak_response",
      "update_projects",
      "stt_models",
      "tts_models",
      "keys",
      "key_created",
      "key",
      "update_member_scope",
      "create_project_invite",
      "request",
      "create_distribution_creds",
      "speak_textToSpeechRequest",
      "speak_controlMessagesRequest",
      "speak_textToSpeechResponse",
      "speak_controlMessagesResponse",
      "speak_metadataResponse",
      "speak_errorResponse",
      "speak_successResponse",
      "speak_closeFrame",
      "listen_transcriptionRequest",
      "listen_controlMessagesRequest",
      "listen_transcriptionResponse",
      "listen_controlMessageResponse",
      "listen_metadataResponse",
      "listen_errorResponse",
      "listen_successResponse",
      "listen_closeFrame",
      "agent_settingsConfiguration",
      "agent_updateInstructions",
      "agent_updateSpeak",
      "agent_injectAgentMessage",
      "agent_injectionRefused",
      "agent_functionCallResponse",
      "agent_agentKeepAlive",
      "agent_welcomeMessage",
      "agent_settingsApplied",
      "agent_ConversationText",
      "agent_userStartedSpeaking",
      "agent_agentThinking",
      "agent_functionCallRequest",
      "agent_functionCalling",
      "agent_agentStartedSpeaking",
      "agent_agentAudioDone",
      "agent_agentErrorResponse"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_speechToText",
      "subpackage_textIntelligence",
      "subpackage_textToSpeech",
      "subpackage_managementApi",
      "subpackage_agent"
    ],
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "hasEndpointsInTree": false
  },
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "audiences": []
}