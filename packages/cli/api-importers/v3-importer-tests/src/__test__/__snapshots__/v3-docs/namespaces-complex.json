{
  "apiName": "",
  "selfHosted": false,
  "auth": {
    "requirement": "ANY",
    "schemes": [
      {
        "key": "oauth2",
        "token": "token",
        "type": "bearer"
      },
      {
        "key": "header",
        "name": {
          "name": "apiKey",
          "wireValue": "api_key"
        },
        "valueType": {
          "container": {
            "optional": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "type": "header"
      }
    ]
  },
  "headers": [],
  "environments": {
    "defaultEnvironment": "/api/v3",
    "environments": {
      "environments": [
        {
          "id": "/api/v3",
          "name": "/api/v3",
          "url": "/api/v3"
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "types": {
    "OrderStatus": {
      "name": {
        "typeId": "OrderStatus",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "OrderStatus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "placed",
              "wireValue": "placed"
            }
          },
          {
            "name": {
              "name": "approved",
              "wireValue": "approved"
            }
          },
          {
            "name": {
              "name": "delivered",
              "wireValue": "delivered"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Order Status",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "OrderStatus_example_0": "approved"
        },
        "autogeneratedExamples": {}
      }
    },
    "Order": {
      "name": {
        "typeId": "Order",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "Order"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "OrderId_example_0": 10
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "petId",
              "wireValue": "petId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "OrderPetId_example_0": 198772
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "quantity",
              "wireValue": "quantity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "OrderQuantity_example_0": 7
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "shipDate",
              "wireValue": "shipDate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrderShipDate_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OrderStatus",
                  "typeId": "OrderStatus",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Order Status",
            "v2Examples": {
              "userSpecifiedExamples": {
                "OrderStatus_example_0": "approved"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "complete",
              "wireValue": "complete"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrderComplete_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Order_example_autogenerated": {}
        }
      }
    },
    "Category": {
      "name": {
        "typeId": "Category",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "Category"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "CategoryId_example_0": 1
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "CategoryName_example_0": "Dogs"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Category_example_autogenerated": {}
        }
      }
    },
    "User": {
      "name": {
        "typeId": "User",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "User"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "UserId_example_0": 10
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "username",
              "wireValue": "username"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "UserUsername_example_0": "theUser"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "firstName",
              "wireValue": "firstName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "UserFirstName_example_0": "John"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "lastName",
              "wireValue": "lastName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "UserLastName_example_0": "James"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "UserEmail_example_0": "john@email.com"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "password",
              "wireValue": "password"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "UserPassword_example_0": "12345"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "phone",
              "wireValue": "phone"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "UserPhone_example_0": "12345"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "userStatus",
              "wireValue": "userStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "User Status",
            "v2Examples": {
              "userSpecifiedExamples": {
                "UserUserStatus_example_0": 1
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "User_example_autogenerated": {}
        }
      }
    },
    "Tag": {
      "name": {
        "typeId": "Tag",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "Tag"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TagId_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TagName_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tag_example_autogenerated": {}
        }
      }
    },
    "PetStatus": {
      "name": {
        "typeId": "PetStatus",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "PetStatus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "available",
              "wireValue": "available"
            }
          },
          {
            "name": {
              "name": "pending",
              "wireValue": "pending"
            }
          },
          {
            "name": {
              "name": "sold",
              "wireValue": "sold"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "pet status in the store",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PetStatus_example_autogenerated": "available"
        }
      }
    },
    "Pet": {
      "name": {
        "typeId": "Pet",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "Pet"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PetId_example_0": 10
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PetName_example_0": "doggie"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Category",
                  "typeId": "Category",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "photoUrls",
              "wireValue": "photoUrls"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PetPhotoUrls_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "tags",
              "wireValue": "tags"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Tag",
                      "typeId": "Tag",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PetTags_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PetStatus",
                  "typeId": "PetStatus",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "pet status in the store",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PetStatus_example_autogenerated": "available"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Pet_example_autogenerated": {
            "name": "doggie",
            "photoUrls": [
              "string"
            ]
          }
        }
      }
    },
    "ApiResponse": {
      "name": {
        "typeId": "ApiResponse",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "ApiResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "code",
              "wireValue": "code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ApiResponseCode_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ApiResponseType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ApiResponseMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ApiResponse_example_autogenerated": {}
        }
      }
    },
    "PetFindByStatusGetParametersStatus": {
      "name": {
        "typeId": "PetFindByStatusGetParametersStatus",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "PetFindByStatusGetParametersStatus"
      },
      "shape": {
        "default": {
          "name": {
            "name": "available",
            "wireValue": "available"
          }
        },
        "values": [
          {
            "name": {
              "name": "available",
              "wireValue": "available"
            }
          },
          {
            "name": {
              "name": "pending",
              "wireValue": "pending"
            }
          },
          {
            "name": {
              "name": "sold",
              "wireValue": "sold"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PetFindByStatusGetParametersStatus_example_autogenerated": "available"
        }
      }
    },
    "pet_deletePet_Response_200": {
      "name": {
        "typeId": "pet_deletePet_Response_200",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "pet_deletePet_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "pet_deletePet_Response_200_example_autogenerated": {}
        }
      }
    },
    "store_deleteOrder_Response_200": {
      "name": {
        "typeId": "store_deleteOrder_Response_200",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "store_deleteOrder_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "store_deleteOrder_Response_200_example_autogenerated": {}
        }
      }
    },
    "user_logoutUser_Response_200": {
      "name": {
        "typeId": "user_logoutUser_Response_200",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "user_logoutUser_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "user_logoutUser_Response_200_example_autogenerated": {}
        }
      }
    },
    "user_updateUser_Response_200": {
      "name": {
        "typeId": "user_updateUser_Response_200",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "user_updateUser_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "user_updateUser_Response_200_example_autogenerated": {}
        }
      }
    },
    "user_deleteUser_Response_200": {
      "name": {
        "typeId": "user_deleteUser_Response_200",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "user_deleteUser_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "user_deleteUser_Response_200_example_autogenerated": {}
        }
      }
    },
    "PetComplexFindByStatusGetParametersStatus": {
      "name": {
        "typeId": "PetComplexFindByStatusGetParametersStatus",
        "fernFilepath": {
          "allParts": [
            "petsV2"
          ],
          "packagePath": [
            "petsV2"
          ]
        },
        "name": "PetComplexFindByStatusGetParametersStatus"
      },
      "shape": {
        "default": {
          "name": {
            "name": "available",
            "wireValue": "available"
          }
        },
        "values": [
          {
            "name": {
              "name": "available",
              "wireValue": "available"
            }
          },
          {
            "name": {
              "name": "pending",
              "wireValue": "pending"
            }
          },
          {
            "name": {
              "name": "sold",
              "wireValue": "sold"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PetComplexFindByStatusGetParametersStatus_example_autogenerated": "available"
        }
      }
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": "errorInstanceId",
      "wireValue": "errorInstanceId"
    }
  },
  "errors": {
    "AddPetRequestBadRequestError": {
      "name": {
        "name": "AddPetRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "AddPetRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "AddPetRequestBadRequestError",
        "wireValue": "AddPetRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid input",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "AddPetRequestUnprocessableEntityError": {
      "name": {
        "name": "AddPetRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "AddPetRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "AddPetRequestUnprocessableEntityError",
        "wireValue": "AddPetRequestUnprocessableEntityError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 422,
      "docs": "Validation exception",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UpdatePetRequestBadRequestError": {
      "name": {
        "name": "UpdatePetRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UpdatePetRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "UpdatePetRequestBadRequestError",
        "wireValue": "UpdatePetRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid ID supplied",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UpdatePetRequestNotFoundError": {
      "name": {
        "name": "UpdatePetRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UpdatePetRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "UpdatePetRequestNotFoundError",
        "wireValue": "UpdatePetRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Pet not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UpdatePetRequestUnprocessableEntityError": {
      "name": {
        "name": "UpdatePetRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UpdatePetRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "UpdatePetRequestUnprocessableEntityError",
        "wireValue": "UpdatePetRequestUnprocessableEntityError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 422,
      "docs": "Validation exception",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "FindPetsByStatusRequestBadRequestError": {
      "name": {
        "name": "FindPetsByStatusRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "FindPetsByStatusRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "FindPetsByStatusRequestBadRequestError",
        "wireValue": "FindPetsByStatusRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid status value",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "FindPetsByTagsRequestBadRequestError": {
      "name": {
        "name": "FindPetsByTagsRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "FindPetsByTagsRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "FindPetsByTagsRequestBadRequestError",
        "wireValue": "FindPetsByTagsRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid tag value",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetPetByIdRequestBadRequestError": {
      "name": {
        "name": "GetPetByIdRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetPetByIdRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "GetPetByIdRequestBadRequestError",
        "wireValue": "GetPetByIdRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid ID supplied",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetPetByIdRequestNotFoundError": {
      "name": {
        "name": "GetPetByIdRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetPetByIdRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "GetPetByIdRequestNotFoundError",
        "wireValue": "GetPetByIdRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Pet not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UpdatePetWithFormRequestBadRequestError": {
      "name": {
        "name": "UpdatePetWithFormRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UpdatePetWithFormRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "UpdatePetWithFormRequestBadRequestError",
        "wireValue": "UpdatePetWithFormRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid input",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeletePetRequestBadRequestError": {
      "name": {
        "name": "DeletePetRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeletePetRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "DeletePetRequestBadRequestError",
        "wireValue": "DeletePetRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid pet value",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UploadFileRequestBadRequestError": {
      "name": {
        "name": "UploadFileRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UploadFileRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "UploadFileRequestBadRequestError",
        "wireValue": "UploadFileRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "No file uploaded",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UploadFileRequestNotFoundError": {
      "name": {
        "name": "UploadFileRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UploadFileRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "UploadFileRequestNotFoundError",
        "wireValue": "UploadFileRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Pet not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "PlaceOrderRequestBadRequestError": {
      "name": {
        "name": "PlaceOrderRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "PlaceOrderRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "PlaceOrderRequestBadRequestError",
        "wireValue": "PlaceOrderRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid input",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "PlaceOrderRequestUnprocessableEntityError": {
      "name": {
        "name": "PlaceOrderRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "PlaceOrderRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "PlaceOrderRequestUnprocessableEntityError",
        "wireValue": "PlaceOrderRequestUnprocessableEntityError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 422,
      "docs": "Validation exception",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetOrderByIdRequestBadRequestError": {
      "name": {
        "name": "GetOrderByIdRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetOrderByIdRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "GetOrderByIdRequestBadRequestError",
        "wireValue": "GetOrderByIdRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid ID supplied",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetOrderByIdRequestNotFoundError": {
      "name": {
        "name": "GetOrderByIdRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetOrderByIdRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "GetOrderByIdRequestNotFoundError",
        "wireValue": "GetOrderByIdRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Order not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteOrderRequestBadRequestError": {
      "name": {
        "name": "DeleteOrderRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteOrderRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "DeleteOrderRequestBadRequestError",
        "wireValue": "DeleteOrderRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid ID supplied",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteOrderRequestNotFoundError": {
      "name": {
        "name": "DeleteOrderRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteOrderRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "DeleteOrderRequestNotFoundError",
        "wireValue": "DeleteOrderRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Order not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "LoginUserRequestBadRequestError": {
      "name": {
        "name": "LoginUserRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LoginUserRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "LoginUserRequestBadRequestError",
        "wireValue": "LoginUserRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid username/password supplied",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetUserByNameRequestBadRequestError": {
      "name": {
        "name": "GetUserByNameRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetUserByNameRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "GetUserByNameRequestBadRequestError",
        "wireValue": "GetUserByNameRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid username supplied",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetUserByNameRequestNotFoundError": {
      "name": {
        "name": "GetUserByNameRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetUserByNameRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "GetUserByNameRequestNotFoundError",
        "wireValue": "GetUserByNameRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "User not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UpdateUserRequestBadRequestError": {
      "name": {
        "name": "UpdateUserRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UpdateUserRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "UpdateUserRequestBadRequestError",
        "wireValue": "UpdateUserRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "bad request",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "UpdateUserRequestNotFoundError": {
      "name": {
        "name": "UpdateUserRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UpdateUserRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "UpdateUserRequestNotFoundError",
        "wireValue": "UpdateUserRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "user not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteUserRequestBadRequestError": {
      "name": {
        "name": "DeleteUserRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteUserRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "DeleteUserRequestBadRequestError",
        "wireValue": "DeleteUserRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid username supplied",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteUserRequestNotFoundError": {
      "name": {
        "name": "DeleteUserRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteUserRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "DeleteUserRequestNotFoundError",
        "wireValue": "DeleteUserRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "User not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    }
  },
  "services": {
    "service_petsV1/pet": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "petsV1",
            "pet"
          ],
          "packagePath": [
            "petsV1"
          ],
          "file": "pet"
        }
      },
      "displayName": "pet",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Add a new pet to the store.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "AddPetRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "AddPetRequestBadRequestError"
              },
              "docs": "Invalid input"
            },
            {
              "error": {
                "name": "AddPetRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "AddPetRequestUnprocessableEntityError"
              },
              "docs": "Validation exception"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/pet.addPet",
          "name": "addPet",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Create a new pet in the store",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Pet",
              "typeId": "Pet",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "petAddPetExample": {
                  "name": "doggie",
                  "photoUrls": [
                    "string"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Create a new pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petAddPetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/xml",
                "docs": "Create a new pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petAddPetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "docs": "Create a new pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petAddPetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petAddPetExample": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Add a new pet to the store.",
          "v2Examples": {
            "autogeneratedExamples": {
              "petAddPetExample_200": {
                "displayName": "petAddPetExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/pet"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "doggie",
                    "photoUrls": [
                      "string"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petAddPetExample": {
                          "id": 10,
                          "name": "doggie",
                          "category": {
                            "id": 1,
                            "name": "Dogs"
                          },
                          "photoUrls": [
                            "string"
                          ],
                          "tags": [
                            {
                              "id": 1,
                              "name": "string"
                            }
                          ],
                          "status": "available"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update an existing pet.",
          "method": "PUT",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UpdatePetRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdatePetRequestBadRequestError"
              },
              "docs": "Invalid ID supplied"
            },
            {
              "error": {
                "name": "UpdatePetRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdatePetRequestNotFoundError"
              },
              "docs": "Pet not found"
            },
            {
              "error": {
                "name": "UpdatePetRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdatePetRequestUnprocessableEntityError"
              },
              "docs": "Validation exception"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/pet.updatePet",
          "name": "updatePet",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Update an existent pet in the store",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Pet",
              "typeId": "Pet",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "petUpdatePetExample": {
                  "name": "doggie",
                  "photoUrls": [
                    "string"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Update an existent pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/xml",
                "docs": "Update an existent pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "docs": "Update an existent pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetExample": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Update an existing pet by Id.",
          "v2Examples": {
            "autogeneratedExamples": {
              "petUpdatePetExample_200": {
                "displayName": "petUpdatePetExample",
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/pet"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "doggie",
                    "photoUrls": [
                      "string"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petUpdatePetExample": {
                          "id": 10,
                          "name": "doggie",
                          "category": {
                            "id": 1,
                            "name": "Dogs"
                          },
                          "photoUrls": [
                            "string"
                          ],
                          "tags": [
                            {
                              "id": 1,
                              "name": "string"
                            }
                          ],
                          "status": "available"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Finds Pets by status.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet/findByStatus",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "Status values that need to be considered for filter",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "PetFindByStatusGetParametersStatus",
                    "typeId": "PetFindByStatusGetParametersStatus",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "available"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "FindPetsByStatusRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "FindPetsByStatusRequestBadRequestError"
              },
              "docs": "Invalid status value"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet/findByStatus",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/pet.findPetsByStatus",
          "name": "findPetsByStatus",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petFindPetsByStatusExample": [
                      {
                        "id": 10,
                        "name": "doggie",
                        "category": {
                          "id": 1,
                          "name": "Dogs"
                        },
                        "photoUrls": [
                          "string"
                        ],
                        "tags": [
                          {
                            "id": 1,
                            "name": "string"
                          }
                        ],
                        "status": "available"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Multiple status values can be provided with comma separated strings.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petFindPetsByStatusExample_200": {
                "displayName": "findPetsByStatusExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/pet/findByStatus"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": 10,
                        "name": "doggie",
                        "category": {
                          "id": 1,
                          "name": "Dogs"
                        },
                        "photoUrls": [
                          "string"
                        ],
                        "tags": [
                          {
                            "id": 1,
                            "name": "string"
                          }
                        ],
                        "status": "available"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Pet",
                          "typeId": "Pet",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petFindPetsByStatusExample": [
                          {
                            "id": 10,
                            "name": "doggie",
                            "category": {
                              "id": 1,
                              "name": "Dogs"
                            },
                            "photoUrls": [
                              "string"
                            ],
                            "tags": [
                              {
                                "id": 1,
                                "name": "string"
                              }
                            ],
                            "status": "available"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Finds Pets by tags.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet/findByTags",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "tags",
                "wireValue": "tags"
              },
              "docs": "Tags to filter by",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "primitive": {
                          "v1": "STRING",
                          "v2": {
                            "validation": {},
                            "type": "string"
                          }
                        },
                        "type": "primitive"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tags_example": [
                    "string"
                  ]
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "FindPetsByTagsRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "FindPetsByTagsRequestBadRequestError"
              },
              "docs": "Invalid tag value"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet/findByTags",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/pet.findPetsByTags",
          "name": "findPetsByTags",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petFindPetsByTagsExample": [
                      {
                        "id": 10,
                        "name": "doggie",
                        "category": {
                          "id": 1,
                          "name": "Dogs"
                        },
                        "photoUrls": [
                          "string"
                        ],
                        "tags": [
                          {
                            "id": 1,
                            "name": "string"
                          }
                        ],
                        "status": "available"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petFindPetsByTagsExample_200": {
                "displayName": "findPetsByTagsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/pet/findByTags"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": 10,
                        "name": "doggie",
                        "category": {
                          "id": 1,
                          "name": "Dogs"
                        },
                        "photoUrls": [
                          "string"
                        ],
                        "tags": [
                          {
                            "id": 1,
                            "name": "string"
                          }
                        ],
                        "status": "available"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Pet",
                          "typeId": "Pet",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petFindPetsByTagsExample": [
                          {
                            "id": 10,
                            "name": "doggie",
                            "category": {
                              "id": 1,
                              "name": "Dogs"
                            },
                            "photoUrls": [
                              "string"
                            ],
                            "tags": [
                              {
                                "id": 1,
                                "name": "string"
                              }
                            ],
                            "status": "available"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Find pet by ID.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet to return",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetPetByIdRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetPetByIdRequestBadRequestError"
              },
              "docs": "Invalid ID supplied"
            },
            {
              "error": {
                "name": "GetPetByIdRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetPetByIdRequestNotFoundError"
              },
              "docs": "Pet not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "api_key": []
            },
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet to return",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/pet.getPetById",
          "name": "getPetById",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petGetPetByIdExample": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a single pet.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petGetPetByIdExample_200": {
                "displayName": "getPetByIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/pet/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "petId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petGetPetByIdExample": {
                          "id": 10,
                          "name": "doggie",
                          "category": {
                            "id": 1,
                            "name": "Dogs"
                          },
                          "photoUrls": [
                            "string"
                          ],
                          "tags": [
                            {
                              "id": 1,
                              "name": "string"
                            }
                          ],
                          "status": "available"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Updates a pet in the store with form data.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet that needs to be updated",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "name",
                "wireValue": "name"
              },
              "docs": "Name of pet that needs to be updated",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_example": "name"
                }
              }
            },
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "Status of pet that needs to be updated",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "status"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UpdatePetWithFormRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdatePetWithFormRequestBadRequestError"
              },
              "docs": "Invalid input"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet that needs to be updated",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/pet.updatePetWithForm",
          "name": "updatePetWithForm",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetWithFormExample": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Updates a pet resource based on the form data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petUpdatePetWithFormExample_200": {
                "displayName": "updatePetWithFormExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/pet/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "petId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petUpdatePetWithFormExample": {
                          "id": 10,
                          "name": "doggie",
                          "category": {
                            "id": 1,
                            "name": "Dogs"
                          },
                          "photoUrls": [
                            "string"
                          ],
                          "tags": [
                            {
                              "id": 1,
                              "name": "string"
                            }
                          ],
                          "status": "available"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Deletes a pet.",
          "method": "DELETE",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "petId",
              "docs": "Pet id to delete",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "api_key",
                "wireValue": "api_key"
              },
              "docs": "",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "api_key_example": "api_key"
                }
              }
            }
          ],
          "errors": [
            {
              "error": {
                "name": "DeletePetRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeletePetRequestBadRequestError"
              },
              "docs": "Invalid pet value"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "petId",
              "docs": "Pet id to delete",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/pet.deletePet",
          "name": "deletePet",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "pet_deletePet_Response_200",
                  "typeId": "pet_deletePet_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Pet deleted",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petDeletePetExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete a pet.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petDeletePetExample_200": {
                "displayName": "deletePetExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/pet/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "petId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "pet_deletePet_Response_200",
                      "typeId": "pet_deletePet_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Pet deleted",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petDeletePetExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Uploads an image.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": "/uploadImage"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet to update",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "additionalMetadata",
                "wireValue": "additionalMetadata"
              },
              "docs": "Additional Metadata",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "additionalMetadata_example": "additionalMetadata"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UploadFileRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestBadRequestError"
              },
              "docs": "No file uploaded"
            },
            {
              "error": {
                "name": "UploadFileRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestNotFoundError"
              },
              "docs": "Pet not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": "/uploadImage"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet to update",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/pet.uploadFile",
          "name": "uploadFile",
          "requestBody": {
            "contentType": "application/octet-stream",
            "isOptional": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "petUploadFileExample": "string"
              }
            },
            "type": "bytes"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/octet-stream",
                "isOptional": false,
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUploadFileExample": "string"
                  }
                },
                "type": "bytes"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ApiResponse",
                  "typeId": "ApiResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUploadFileExample": {
                      "code": 1,
                      "type": "string",
                      "message": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Upload image of the pet.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petUploadFileExample_200": {
                "displayName": "uploadFileExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/pet/1/uploadImage"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "petId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "code": 1,
                      "type": "string",
                      "message": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ApiResponse",
                      "typeId": "ApiResponse",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petUploadFileExample": {
                          "code": 1,
                          "type": "string",
                          "message": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_petsV1/store": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "petsV1",
            "store"
          ],
          "packagePath": [
            "petsV1"
          ],
          "file": "store"
        }
      },
      "displayName": "store",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Returns pet inventories by status.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/store/inventory",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "api_key": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/store/inventory",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/store.getInventory",
          "name": "getInventory",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storeGetInventoryExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a map of status codes to quantities.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_storeGetInventoryExample_200": {
                "displayName": "getInventoryExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/store/inventory"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "primitive": {
                            "v1": "INTEGER",
                            "v2": {
                              "validation": {},
                              "type": "integer"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "storeGetInventoryExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Place an order for a pet.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/store/order",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "PlaceOrderRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PlaceOrderRequestBadRequestError"
              },
              "docs": "Invalid input"
            },
            {
              "error": {
                "name": "PlaceOrderRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PlaceOrderRequestUnprocessableEntityError"
              },
              "docs": "Validation exception"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/store/order",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/store.placeOrder",
          "name": "placeOrder",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Order",
              "typeId": "Order",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "storePlaceOrderExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Order",
                  "typeId": "Order",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storePlaceOrderExample": {}
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/xml",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Order",
                  "typeId": "Order",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storePlaceOrderExample": {}
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Order",
                  "typeId": "Order",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storePlaceOrderExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Order",
                  "typeId": "Order",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storePlaceOrderExample": {
                      "id": 10,
                      "petId": 198772,
                      "quantity": 7,
                      "shipDate": "2024-01-15T09:30:00Z",
                      "status": "placed",
                      "complete": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Place a new order in the store.",
          "v2Examples": {
            "autogeneratedExamples": {
              "storePlaceOrderExample_200": {
                "displayName": "storePlaceOrderExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/store/order"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "petId": 198772,
                      "quantity": 7,
                      "shipDate": "2024-01-15T09:30:00Z",
                      "status": "placed",
                      "complete": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Order",
                      "typeId": "Order",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "storePlaceOrderExample": {
                          "id": 10,
                          "petId": 198772,
                          "quantity": 7,
                          "shipDate": "2024-01-15T09:30:00Z",
                          "status": "placed",
                          "complete": true
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Find purchase order by ID.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/store/order/",
            "parts": [
              {
                "pathParameter": "orderId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "orderId",
              "docs": "ID of order that needs to be fetched",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "orderId_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetOrderByIdRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetOrderByIdRequestBadRequestError"
              },
              "docs": "Invalid ID supplied"
            },
            {
              "error": {
                "name": "GetOrderByIdRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetOrderByIdRequestNotFoundError"
              },
              "docs": "Order not found"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/store/order/",
            "parts": [
              {
                "pathParameter": "orderId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "orderId",
              "docs": "ID of order that needs to be fetched",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "orderId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/store.getOrderById",
          "name": "getOrderById",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Order",
                  "typeId": "Order",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storeGetOrderByIdExample": {
                      "id": 10,
                      "petId": 198772,
                      "quantity": 7,
                      "shipDate": "2024-01-15T09:30:00Z",
                      "status": "placed",
                      "complete": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_storeGetOrderByIdExample_200": {
                "displayName": "getOrderByIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/store/order/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "orderId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "petId": 198772,
                      "quantity": 7,
                      "shipDate": "2024-01-15T09:30:00Z",
                      "status": "placed",
                      "complete": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Order",
                      "typeId": "Order",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "storeGetOrderByIdExample": {
                          "id": 10,
                          "petId": 198772,
                          "quantity": 7,
                          "shipDate": "2024-01-15T09:30:00Z",
                          "status": "placed",
                          "complete": true
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete purchase order by identifier.",
          "method": "DELETE",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/store/order/",
            "parts": [
              {
                "pathParameter": "orderId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "orderId",
              "docs": "ID of the order that needs to be deleted",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "orderId_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "DeleteOrderRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteOrderRequestBadRequestError"
              },
              "docs": "Invalid ID supplied"
            },
            {
              "error": {
                "name": "DeleteOrderRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteOrderRequestNotFoundError"
              },
              "docs": "Order not found"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/store/order/",
            "parts": [
              {
                "pathParameter": "orderId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "orderId",
              "docs": "ID of the order that needs to be deleted",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "orderId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/store.deleteOrder",
          "name": "deleteOrder",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "store_deleteOrder_Response_200",
                  "typeId": "store_deleteOrder_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "order deleted",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storeDeleteOrderExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "For valid response try integer IDs with value < 1000. Anything above 1000 or non-integers will generate API errors.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_storeDeleteOrderExample_200": {
                "displayName": "deleteOrderExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/store/order/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "orderId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "store_deleteOrder_Response_200",
                      "typeId": "store_deleteOrder_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "order deleted",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "storeDeleteOrderExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_petsV1/user": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "petsV1",
            "user"
          ],
          "packagePath": [
            "petsV1"
          ],
          "file": "user"
        }
      },
      "displayName": "user",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Create user.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/user.createUser",
          "name": "createUser",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Created user object",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "User",
              "typeId": "User",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "userCreateUserExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Created user object",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userCreateUserExample": {}
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/xml",
                "docs": "Created user object",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userCreateUserExample": {}
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "docs": "Created user object",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userCreateUserExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userCreateUserExample": {
                      "id": 10,
                      "username": "theUser",
                      "firstName": "John",
                      "lastName": "James",
                      "email": "john@email.com",
                      "password": "12345",
                      "phone": "12345",
                      "userStatus": 1
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "This can only be done by the logged in user.",
          "v2Examples": {
            "autogeneratedExamples": {
              "userCreateUserExample_200": {
                "displayName": "userCreateUserExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/user"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "username": "theUser",
                      "firstName": "John",
                      "lastName": "James",
                      "email": "john@email.com",
                      "password": "12345",
                      "phone": "12345",
                      "userStatus": 1
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "User",
                      "typeId": "User",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userCreateUserExample": {
                          "id": 10,
                          "username": "theUser",
                          "firstName": "John",
                          "lastName": "James",
                          "email": "john@email.com",
                          "password": "12345",
                          "phone": "12345",
                          "userStatus": 1
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Creates list of users with given input array.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user/createWithList",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user/createWithList",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/user.createUsersWithListInput",
          "name": "createUsersWithListInput",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "userCreateUsersWithListInputExample": [
                  {}
                ]
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "User",
                      "typeId": "User",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userCreateUsersWithListInputExample": [
                      {}
                    ]
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userCreateUsersWithListInputExample": {
                      "id": 10,
                      "username": "theUser",
                      "firstName": "John",
                      "lastName": "James",
                      "email": "john@email.com",
                      "password": "12345",
                      "phone": "12345",
                      "userStatus": 1
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates list of users with given input array.",
          "v2Examples": {
            "autogeneratedExamples": {
              "userCreateUsersWithListInputExample_200": {
                "displayName": "userCreateUsersWithListInputExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/user/createWithList"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {}
                  ]
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "username": "theUser",
                      "firstName": "John",
                      "lastName": "James",
                      "email": "john@email.com",
                      "password": "12345",
                      "phone": "12345",
                      "userStatus": 1
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "User",
                      "typeId": "User",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userCreateUsersWithListInputExample": {
                          "id": 10,
                          "username": "theUser",
                          "firstName": "John",
                          "lastName": "James",
                          "email": "john@email.com",
                          "password": "12345",
                          "phone": "12345",
                          "userStatus": 1
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Logs user into the system.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user/login",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "username",
                "wireValue": "username"
              },
              "docs": "The user name for login",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            },
            {
              "name": {
                "name": "password",
                "wireValue": "password"
              },
              "docs": "The password for login in clear text",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "password_example": "password"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "LoginUserRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LoginUserRequestBadRequestError"
              },
              "docs": "Invalid username/password supplied"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user/login",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/user.loginUser",
          "name": "loginUser",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userLoginUserExample": "string"
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Log into the system.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_userLoginUserExample_200": {
                "displayName": "loginUserExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/user/login"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": "string",
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userLoginUserExample": "string"
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Logs out current logged in user session.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user/logout",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user/logout",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/user.logoutUser",
          "name": "logoutUser",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "user_logoutUser_Response_200",
                  "typeId": "user_logoutUser_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userLogoutUserExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Log user out of the system.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_userLogoutUserExample_200": {
                "displayName": "logoutUserExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/user/logout"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "user_logoutUser_Response_200",
                      "typeId": "user_logoutUser_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userLogoutUserExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get user by user name.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user/",
            "parts": [
              {
                "pathParameter": "username",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "username",
              "docs": "The name that needs to be fetched. Use user1 for testing",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetUserByNameRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetUserByNameRequestBadRequestError"
              },
              "docs": "Invalid username supplied"
            },
            {
              "error": {
                "name": "GetUserByNameRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetUserByNameRequestNotFoundError"
              },
              "docs": "User not found"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user/",
            "parts": [
              {
                "pathParameter": "username",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "username",
              "docs": "The name that needs to be fetched. Use user1 for testing",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/user.getUserByName",
          "name": "getUserByName",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userGetUserByNameExample": {
                      "id": 10,
                      "username": "theUser",
                      "firstName": "John",
                      "lastName": "James",
                      "email": "john@email.com",
                      "password": "12345",
                      "phone": "12345",
                      "userStatus": 1
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get user detail based on username.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_userGetUserByNameExample_200": {
                "displayName": "getUserByNameExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/user/username"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "username": "username"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "username": "theUser",
                      "firstName": "John",
                      "lastName": "James",
                      "email": "john@email.com",
                      "password": "12345",
                      "phone": "12345",
                      "userStatus": 1
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "User",
                      "typeId": "User",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userGetUserByNameExample": {
                          "id": 10,
                          "username": "theUser",
                          "firstName": "John",
                          "lastName": "James",
                          "email": "john@email.com",
                          "password": "12345",
                          "phone": "12345",
                          "userStatus": 1
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update user resource.",
          "method": "PUT",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user/",
            "parts": [
              {
                "pathParameter": "username",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "username",
              "docs": "name that need to be deleted",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UpdateUserRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdateUserRequestBadRequestError"
              },
              "docs": "bad request"
            },
            {
              "error": {
                "name": "UpdateUserRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdateUserRequestNotFoundError"
              },
              "docs": "user not found"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user/",
            "parts": [
              {
                "pathParameter": "username",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "username",
              "docs": "name that need to be deleted",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/user.updateUser",
          "name": "updateUser",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Update an existent user in the store",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "User",
              "typeId": "User",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "userUpdateUserExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Update an existent user in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userUpdateUserExample": {}
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/xml",
                "docs": "Update an existent user in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userUpdateUserExample": {}
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "docs": "Update an existent user in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userUpdateUserExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "user_updateUser_Response_200",
                  "typeId": "user_updateUser_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userUpdateUserExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "This can only be done by the logged in user.",
          "v2Examples": {
            "autogeneratedExamples": {
              "userUpdateUserExample_200": {
                "displayName": "userUpdateUserExample",
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/user/username"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "username": "username"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "user_updateUser_Response_200",
                      "typeId": "user_updateUser_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userUpdateUserExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete user resource.",
          "method": "DELETE",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user/",
            "parts": [
              {
                "pathParameter": "username",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "username",
              "docs": "The name that needs to be deleted",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "DeleteUserRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteUserRequestBadRequestError"
              },
              "docs": "Invalid username supplied"
            },
            {
              "error": {
                "name": "DeleteUserRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteUserRequestNotFoundError"
              },
              "docs": "User not found"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user/",
            "parts": [
              {
                "pathParameter": "username",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "username",
              "docs": "The name that needs to be deleted",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV1/user.deleteUser",
          "name": "deleteUser",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "user_deleteUser_Response_200",
                  "typeId": "user_deleteUser_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "User deleted",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userDeleteUserExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "This can only be done by the logged in user.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_userDeleteUserExample_200": {
                "displayName": "deleteUserExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/user/username"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "username": "username"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "user_deleteUser_Response_200",
                      "typeId": "user_deleteUser_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "User deleted",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userDeleteUserExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_petsV2/pet": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "petsV2",
            "pet"
          ],
          "packagePath": [
            "petsV2"
          ],
          "file": "pet"
        }
      },
      "displayName": "pet",
      "basePath": {
        "head": "",
        "parts": []
      },
      "endpoints": [
        {
          "displayName": "Add a new pet to the store.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "AddPetRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "AddPetRequestBadRequestError"
              },
              "docs": "Invalid input"
            },
            {
              "error": {
                "name": "AddPetRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "AddPetRequestUnprocessableEntityError"
              },
              "docs": "Validation exception"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.addPet",
          "name": "addPet",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Create a new pet in the store",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Pet",
              "typeId": "Pet",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "petAddPetExample": {
                  "name": "doggie",
                  "photoUrls": [
                    "string"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Create a new pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petAddPetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/xml",
                "docs": "Create a new pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petAddPetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "docs": "Create a new pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petAddPetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petAddPetExample": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Add a new pet to the store.",
          "v2Examples": {
            "autogeneratedExamples": {
              "petAddPetExample_200": {
                "displayName": "petAddPetExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/pet"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "doggie",
                    "photoUrls": [
                      "string"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petAddPetExample": {
                          "id": 10,
                          "name": "doggie",
                          "category": {
                            "id": 1,
                            "name": "Dogs"
                          },
                          "photoUrls": [
                            "string"
                          ],
                          "tags": [
                            {
                              "id": 1,
                              "name": "string"
                            }
                          ],
                          "status": "available"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update an existing pet.",
          "method": "PUT",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UpdatePetRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdatePetRequestBadRequestError"
              },
              "docs": "Invalid ID supplied"
            },
            {
              "error": {
                "name": "UpdatePetRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdatePetRequestNotFoundError"
              },
              "docs": "Pet not found"
            },
            {
              "error": {
                "name": "UpdatePetRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdatePetRequestUnprocessableEntityError"
              },
              "docs": "Validation exception"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.updatePet",
          "name": "updatePet",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Update an existent pet in the store",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Pet",
              "typeId": "Pet",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "petUpdatePetExample": {
                  "name": "doggie",
                  "photoUrls": [
                    "string"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Update an existent pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/xml",
                "docs": "Update an existent pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "docs": "Update an existent pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetExample": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Update an existing pet by Id.",
          "v2Examples": {
            "autogeneratedExamples": {
              "petUpdatePetExample_200": {
                "displayName": "petUpdatePetExample",
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/pet"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "doggie",
                    "photoUrls": [
                      "string"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petUpdatePetExample": {
                          "id": 10,
                          "name": "doggie",
                          "category": {
                            "id": 1,
                            "name": "Dogs"
                          },
                          "photoUrls": [
                            "string"
                          ],
                          "tags": [
                            {
                              "id": 1,
                              "name": "string"
                            }
                          ],
                          "status": "available"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Finds Pets by status.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet/findByStatus",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "Status values that need to be considered for filter",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "PetFindByStatusGetParametersStatus",
                    "typeId": "PetFindByStatusGetParametersStatus",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "available"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "FindPetsByStatusRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "FindPetsByStatusRequestBadRequestError"
              },
              "docs": "Invalid status value"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet/findByStatus",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.findPetsByStatus",
          "name": "findPetsByStatus",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petFindPetsByStatusExample": [
                      {
                        "id": 10,
                        "name": "doggie",
                        "category": {
                          "id": 1,
                          "name": "Dogs"
                        },
                        "photoUrls": [
                          "string"
                        ],
                        "tags": [
                          {
                            "id": 1,
                            "name": "string"
                          }
                        ],
                        "status": "available"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Multiple status values can be provided with comma separated strings.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petFindPetsByStatusExample_200": {
                "displayName": "findPetsByStatusExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/pet/findByStatus"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": 10,
                        "name": "doggie",
                        "category": {
                          "id": 1,
                          "name": "Dogs"
                        },
                        "photoUrls": [
                          "string"
                        ],
                        "tags": [
                          {
                            "id": 1,
                            "name": "string"
                          }
                        ],
                        "status": "available"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Pet",
                          "typeId": "Pet",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petFindPetsByStatusExample": [
                          {
                            "id": 10,
                            "name": "doggie",
                            "category": {
                              "id": 1,
                              "name": "Dogs"
                            },
                            "photoUrls": [
                              "string"
                            ],
                            "tags": [
                              {
                                "id": 1,
                                "name": "string"
                              }
                            ],
                            "status": "available"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Finds Pets by tags.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet/findByTags",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "tags",
                "wireValue": "tags"
              },
              "docs": "Tags to filter by",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "primitive": {
                          "v1": "STRING",
                          "v2": {
                            "validation": {},
                            "type": "string"
                          }
                        },
                        "type": "primitive"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tags_example": [
                    "string"
                  ]
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "FindPetsByTagsRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "FindPetsByTagsRequestBadRequestError"
              },
              "docs": "Invalid tag value"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet/findByTags",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.findPetsByTags",
          "name": "findPetsByTags",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petFindPetsByTagsExample": [
                      {
                        "id": 10,
                        "name": "doggie",
                        "category": {
                          "id": 1,
                          "name": "Dogs"
                        },
                        "photoUrls": [
                          "string"
                        ],
                        "tags": [
                          {
                            "id": 1,
                            "name": "string"
                          }
                        ],
                        "status": "available"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petFindPetsByTagsExample_200": {
                "displayName": "findPetsByTagsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/pet/findByTags"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": 10,
                        "name": "doggie",
                        "category": {
                          "id": 1,
                          "name": "Dogs"
                        },
                        "photoUrls": [
                          "string"
                        ],
                        "tags": [
                          {
                            "id": 1,
                            "name": "string"
                          }
                        ],
                        "status": "available"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Pet",
                          "typeId": "Pet",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petFindPetsByTagsExample": [
                          {
                            "id": 10,
                            "name": "doggie",
                            "category": {
                              "id": 1,
                              "name": "Dogs"
                            },
                            "photoUrls": [
                              "string"
                            ],
                            "tags": [
                              {
                                "id": 1,
                                "name": "string"
                              }
                            ],
                            "status": "available"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Find pet by ID.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet to return",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetPetByIdRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetPetByIdRequestBadRequestError"
              },
              "docs": "Invalid ID supplied"
            },
            {
              "error": {
                "name": "GetPetByIdRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetPetByIdRequestNotFoundError"
              },
              "docs": "Pet not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "api_key": []
            },
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet to return",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.getPetById",
          "name": "getPetById",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petGetPetByIdExample": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a single pet.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petGetPetByIdExample_200": {
                "displayName": "getPetByIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/pet/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "petId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petGetPetByIdExample": {
                          "id": 10,
                          "name": "doggie",
                          "category": {
                            "id": 1,
                            "name": "Dogs"
                          },
                          "photoUrls": [
                            "string"
                          ],
                          "tags": [
                            {
                              "id": 1,
                              "name": "string"
                            }
                          ],
                          "status": "available"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Updates a pet in the store with form data.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet that needs to be updated",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "name",
                "wireValue": "name"
              },
              "docs": "Name of pet that needs to be updated",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_example": "name"
                }
              }
            },
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "Status of pet that needs to be updated",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "status"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UpdatePetWithFormRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdatePetWithFormRequestBadRequestError"
              },
              "docs": "Invalid input"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet that needs to be updated",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.updatePetWithForm",
          "name": "updatePetWithForm",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetWithFormExample": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Updates a pet resource based on the form data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petUpdatePetWithFormExample_200": {
                "displayName": "updatePetWithFormExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/pet/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "petId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petUpdatePetWithFormExample": {
                          "id": 10,
                          "name": "doggie",
                          "category": {
                            "id": 1,
                            "name": "Dogs"
                          },
                          "photoUrls": [
                            "string"
                          ],
                          "tags": [
                            {
                              "id": 1,
                              "name": "string"
                            }
                          ],
                          "status": "available"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Deletes a pet.",
          "method": "DELETE",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "petId",
              "docs": "Pet id to delete",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "api_key",
                "wireValue": "api_key"
              },
              "docs": "",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "api_key_example": "api_key"
                }
              }
            }
          ],
          "errors": [
            {
              "error": {
                "name": "DeletePetRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeletePetRequestBadRequestError"
              },
              "docs": "Invalid pet value"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "petId",
              "docs": "Pet id to delete",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.deletePet",
          "name": "deletePet",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "pet_deletePet_Response_200",
                  "typeId": "pet_deletePet_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Pet deleted",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petDeletePetExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete a pet.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petDeletePetExample_200": {
                "displayName": "deletePetExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/pet/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "petId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "pet_deletePet_Response_200",
                      "typeId": "pet_deletePet_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Pet deleted",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petDeletePetExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Uploads an image.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": "/uploadImage"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet to update",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "additionalMetadata",
                "wireValue": "additionalMetadata"
              },
              "docs": "Additional Metadata",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "additionalMetadata_example": "additionalMetadata"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UploadFileRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestBadRequestError"
              },
              "docs": "No file uploaded"
            },
            {
              "error": {
                "name": "UploadFileRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestNotFoundError"
              },
              "docs": "Pet not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": "/uploadImage"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet to update",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.uploadFile",
          "name": "uploadFile",
          "requestBody": {
            "contentType": "application/octet-stream",
            "isOptional": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "petUploadFileExample": "string"
              }
            },
            "type": "bytes"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/octet-stream",
                "isOptional": false,
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUploadFileExample": "string"
                  }
                },
                "type": "bytes"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ApiResponse",
                  "typeId": "ApiResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUploadFileExample": {
                      "code": 1,
                      "type": "string",
                      "message": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Upload image of the pet.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petUploadFileExample_200": {
                "displayName": "uploadFileExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/pet/1/uploadImage"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "petId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "code": 1,
                      "type": "string",
                      "message": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ApiResponse",
                      "typeId": "ApiResponse",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petUploadFileExample": {
                          "code": 1,
                          "type": "string",
                          "message": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Add a new pet to the store.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet-complex",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "AddPetRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "AddPetRequestBadRequestError"
              },
              "docs": "Invalid input"
            },
            {
              "error": {
                "name": "AddPetRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "AddPetRequestUnprocessableEntityError"
              },
              "docs": "Validation exception"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet-complex",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.addPet",
          "name": "addPet",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Create a new pet in the store",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Pet",
              "typeId": "Pet",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "petAddPetExample": {
                  "name": "doggie",
                  "photoUrls": [
                    "string"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Create a new pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petAddPetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/xml",
                "docs": "Create a new pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petAddPetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "docs": "Create a new pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petAddPetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petAddPetExample": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Add a new pet to the store.",
          "v2Examples": {
            "autogeneratedExamples": {
              "petAddPetExample_200": {
                "displayName": "petAddPetExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/pet-complex"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "doggie",
                    "photoUrls": [
                      "string"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petAddPetExample": {
                          "id": 10,
                          "name": "doggie",
                          "category": {
                            "id": 1,
                            "name": "Dogs"
                          },
                          "photoUrls": [
                            "string"
                          ],
                          "tags": [
                            {
                              "id": 1,
                              "name": "string"
                            }
                          ],
                          "status": "available"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update an existing pet.",
          "method": "PUT",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet-complex",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UpdatePetRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdatePetRequestBadRequestError"
              },
              "docs": "Invalid ID supplied"
            },
            {
              "error": {
                "name": "UpdatePetRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdatePetRequestNotFoundError"
              },
              "docs": "Pet not found"
            },
            {
              "error": {
                "name": "UpdatePetRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdatePetRequestUnprocessableEntityError"
              },
              "docs": "Validation exception"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet-complex",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.updatePet",
          "name": "updatePet",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Update an existent pet in the store",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Pet",
              "typeId": "Pet",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "petUpdatePetExample": {
                  "name": "doggie",
                  "photoUrls": [
                    "string"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Update an existent pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/xml",
                "docs": "Update an existent pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "docs": "Update an existent pet in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetExample": {
                      "name": "doggie",
                      "photoUrls": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetExample": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Update an existing pet by Id.",
          "v2Examples": {
            "autogeneratedExamples": {
              "petUpdatePetExample_200": {
                "displayName": "petUpdatePetExample",
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/pet-complex"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "doggie",
                    "photoUrls": [
                      "string"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petUpdatePetExample": {
                          "id": 10,
                          "name": "doggie",
                          "category": {
                            "id": 1,
                            "name": "Dogs"
                          },
                          "photoUrls": [
                            "string"
                          ],
                          "tags": [
                            {
                              "id": 1,
                              "name": "string"
                            }
                          ],
                          "status": "available"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Finds Pets by status.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet-complex/findByStatus",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "Status values that need to be considered for filter",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "PetComplexFindByStatusGetParametersStatus",
                    "typeId": "PetComplexFindByStatusGetParametersStatus",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "available"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "FindPetsByStatusRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "FindPetsByStatusRequestBadRequestError"
              },
              "docs": "Invalid status value"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet-complex/findByStatus",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.findPetsByStatus",
          "name": "findPetsByStatus",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petFindPetsByStatusExample": [
                      {
                        "id": 10,
                        "name": "doggie",
                        "category": {
                          "id": 1,
                          "name": "Dogs"
                        },
                        "photoUrls": [
                          "string"
                        ],
                        "tags": [
                          {
                            "id": 1,
                            "name": "string"
                          }
                        ],
                        "status": "available"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Multiple status values can be provided with comma separated strings.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petFindPetsByStatusExample_200": {
                "displayName": "findPetsByStatusExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/pet-complex/findByStatus"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": 10,
                        "name": "doggie",
                        "category": {
                          "id": 1,
                          "name": "Dogs"
                        },
                        "photoUrls": [
                          "string"
                        ],
                        "tags": [
                          {
                            "id": 1,
                            "name": "string"
                          }
                        ],
                        "status": "available"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Pet",
                          "typeId": "Pet",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petFindPetsByStatusExample": [
                          {
                            "id": 10,
                            "name": "doggie",
                            "category": {
                              "id": 1,
                              "name": "Dogs"
                            },
                            "photoUrls": [
                              "string"
                            ],
                            "tags": [
                              {
                                "id": 1,
                                "name": "string"
                              }
                            ],
                            "status": "available"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Finds Pets by tags.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet-complex/findByTags",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "tags",
                "wireValue": "tags"
              },
              "docs": "Tags to filter by",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "primitive": {
                          "v1": "STRING",
                          "v2": {
                            "validation": {},
                            "type": "string"
                          }
                        },
                        "type": "primitive"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tags_example": [
                    "string"
                  ]
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "FindPetsByTagsRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "FindPetsByTagsRequestBadRequestError"
              },
              "docs": "Invalid tag value"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet-complex/findByTags",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.findPetsByTags",
          "name": "findPetsByTags",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petFindPetsByTagsExample": [
                      {
                        "id": 10,
                        "name": "doggie",
                        "category": {
                          "id": 1,
                          "name": "Dogs"
                        },
                        "photoUrls": [
                          "string"
                        ],
                        "tags": [
                          {
                            "id": 1,
                            "name": "string"
                          }
                        ],
                        "status": "available"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petFindPetsByTagsExample_200": {
                "displayName": "findPetsByTagsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/pet-complex/findByTags"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": 10,
                        "name": "doggie",
                        "category": {
                          "id": 1,
                          "name": "Dogs"
                        },
                        "photoUrls": [
                          "string"
                        ],
                        "tags": [
                          {
                            "id": 1,
                            "name": "string"
                          }
                        ],
                        "status": "available"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Pet",
                          "typeId": "Pet",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petFindPetsByTagsExample": [
                          {
                            "id": 10,
                            "name": "doggie",
                            "category": {
                              "id": 1,
                              "name": "Dogs"
                            },
                            "photoUrls": [
                              "string"
                            ],
                            "tags": [
                              {
                                "id": 1,
                                "name": "string"
                              }
                            ],
                            "status": "available"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Find pet by ID.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet-complex/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet to return",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetPetByIdRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetPetByIdRequestBadRequestError"
              },
              "docs": "Invalid ID supplied"
            },
            {
              "error": {
                "name": "GetPetByIdRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetPetByIdRequestNotFoundError"
              },
              "docs": "Pet not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "api_key": []
            },
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet-complex/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet to return",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.getPetById",
          "name": "getPetById",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petGetPetByIdExample": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a single pet.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petGetPetByIdExample_200": {
                "displayName": "getPetByIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/pet-complex/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "petId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petGetPetByIdExample": {
                          "id": 10,
                          "name": "doggie",
                          "category": {
                            "id": 1,
                            "name": "Dogs"
                          },
                          "photoUrls": [
                            "string"
                          ],
                          "tags": [
                            {
                              "id": 1,
                              "name": "string"
                            }
                          ],
                          "status": "available"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Updates a pet in the store with form data.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet-complex/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet that needs to be updated",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "name",
                "wireValue": "name"
              },
              "docs": "Name of pet that needs to be updated",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_example": "name"
                }
              }
            },
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "Status of pet that needs to be updated",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "status"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UpdatePetWithFormRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdatePetWithFormRequestBadRequestError"
              },
              "docs": "Invalid input"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet-complex/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet that needs to be updated",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.updatePetWithForm",
          "name": "updatePetWithForm",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Pet",
                  "typeId": "Pet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUpdatePetWithFormExample": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Updates a pet resource based on the form data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petUpdatePetWithFormExample_200": {
                "displayName": "updatePetWithFormExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/pet-complex/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "petId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "name": "doggie",
                      "category": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "photoUrls": [
                        "string"
                      ],
                      "tags": [
                        {
                          "id": 1,
                          "name": "string"
                        }
                      ],
                      "status": "available"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Pet",
                      "typeId": "Pet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petUpdatePetWithFormExample": {
                          "id": 10,
                          "name": "doggie",
                          "category": {
                            "id": 1,
                            "name": "Dogs"
                          },
                          "photoUrls": [
                            "string"
                          ],
                          "tags": [
                            {
                              "id": 1,
                              "name": "string"
                            }
                          ],
                          "status": "available"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Deletes a pet.",
          "method": "DELETE",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet-complex/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "petId",
              "docs": "Pet id to delete",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "api_key",
                "wireValue": "api_key"
              },
              "docs": "",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "api_key_example": "api_key"
                }
              }
            }
          ],
          "errors": [
            {
              "error": {
                "name": "DeletePetRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeletePetRequestBadRequestError"
              },
              "docs": "Invalid pet value"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet-complex/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "petId",
              "docs": "Pet id to delete",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.deletePet",
          "name": "deletePet",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "pet_deletePet_Response_200",
                  "typeId": "pet_deletePet_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Pet deleted",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petDeletePetExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete a pet.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petDeletePetExample_200": {
                "displayName": "deletePetExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/pet-complex/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "petId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "pet_deletePet_Response_200",
                      "typeId": "pet_deletePet_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Pet deleted",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petDeletePetExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Uploads an image.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/pet-complex/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": "/uploadImage"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet to update",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "additionalMetadata",
                "wireValue": "additionalMetadata"
              },
              "docs": "Additional Metadata",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "additionalMetadata_example": "additionalMetadata"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UploadFileRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestBadRequestError"
              },
              "docs": "No file uploaded"
            },
            {
              "error": {
                "name": "UploadFileRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestNotFoundError"
              },
              "docs": "Pet not found"
            }
          ],
          "auth": true,
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pet-complex/",
            "parts": [
              {
                "pathParameter": "petId",
                "tail": "/uploadImage"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "petId",
              "docs": "ID of pet to update",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "petId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/pet.uploadFile",
          "name": "uploadFile",
          "requestBody": {
            "contentType": "application/octet-stream",
            "isOptional": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "petUploadFileExample": "string"
              }
            },
            "type": "bytes"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/octet-stream",
                "isOptional": false,
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUploadFileExample": "string"
                  }
                },
                "type": "bytes"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ApiResponse",
                  "typeId": "ApiResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "petUploadFileExample": {
                      "code": 1,
                      "type": "string",
                      "message": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Upload image of the pet.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_petUploadFileExample_200": {
                "displayName": "uploadFileExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/pet-complex/1/uploadImage"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "petId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "code": 1,
                      "type": "string",
                      "message": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ApiResponse",
                      "typeId": "ApiResponse",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "petUploadFileExample": {
                          "code": 1,
                          "type": "string",
                          "message": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ],
      "pathParameters": [],
      "headers": [],
      "audiences": []
    },
    "service_petsV2/store": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "petsV2",
            "store"
          ],
          "packagePath": [
            "petsV2"
          ],
          "file": "store"
        }
      },
      "displayName": "store",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Returns pet inventories by status.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/store/inventory",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "api_key": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/store/inventory",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/store.getInventory",
          "name": "getInventory",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storeGetInventoryExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a map of status codes to quantities.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_storeGetInventoryExample_200": {
                "displayName": "getInventoryExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/store/inventory"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "primitive": {
                            "v1": "INTEGER",
                            "v2": {
                              "validation": {},
                              "type": "integer"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "storeGetInventoryExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Place an order for a pet.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/store/order",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "PlaceOrderRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PlaceOrderRequestBadRequestError"
              },
              "docs": "Invalid input"
            },
            {
              "error": {
                "name": "PlaceOrderRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PlaceOrderRequestUnprocessableEntityError"
              },
              "docs": "Validation exception"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/store/order",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/store.placeOrder",
          "name": "placeOrder",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Order",
              "typeId": "Order",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "storePlaceOrderExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Order",
                  "typeId": "Order",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storePlaceOrderExample": {}
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/xml",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Order",
                  "typeId": "Order",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storePlaceOrderExample": {}
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Order",
                  "typeId": "Order",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storePlaceOrderExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Order",
                  "typeId": "Order",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storePlaceOrderExample": {
                      "id": 10,
                      "petId": 198772,
                      "quantity": 7,
                      "shipDate": "2024-01-15T09:30:00Z",
                      "status": "placed",
                      "complete": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Place a new order in the store.",
          "v2Examples": {
            "autogeneratedExamples": {
              "storePlaceOrderExample_200": {
                "displayName": "storePlaceOrderExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/store/order"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "petId": 198772,
                      "quantity": 7,
                      "shipDate": "2024-01-15T09:30:00Z",
                      "status": "placed",
                      "complete": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Order",
                      "typeId": "Order",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "storePlaceOrderExample": {
                          "id": 10,
                          "petId": 198772,
                          "quantity": 7,
                          "shipDate": "2024-01-15T09:30:00Z",
                          "status": "placed",
                          "complete": true
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Find purchase order by ID.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/store/order/",
            "parts": [
              {
                "pathParameter": "orderId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "orderId",
              "docs": "ID of order that needs to be fetched",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "orderId_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetOrderByIdRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetOrderByIdRequestBadRequestError"
              },
              "docs": "Invalid ID supplied"
            },
            {
              "error": {
                "name": "GetOrderByIdRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetOrderByIdRequestNotFoundError"
              },
              "docs": "Order not found"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/store/order/",
            "parts": [
              {
                "pathParameter": "orderId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "orderId",
              "docs": "ID of order that needs to be fetched",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "orderId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/store.getOrderById",
          "name": "getOrderById",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Order",
                  "typeId": "Order",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storeGetOrderByIdExample": {
                      "id": 10,
                      "petId": 198772,
                      "quantity": 7,
                      "shipDate": "2024-01-15T09:30:00Z",
                      "status": "placed",
                      "complete": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_storeGetOrderByIdExample_200": {
                "displayName": "getOrderByIdExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/store/order/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "orderId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "petId": 198772,
                      "quantity": 7,
                      "shipDate": "2024-01-15T09:30:00Z",
                      "status": "placed",
                      "complete": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Order",
                      "typeId": "Order",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "storeGetOrderByIdExample": {
                          "id": 10,
                          "petId": 198772,
                          "quantity": 7,
                          "shipDate": "2024-01-15T09:30:00Z",
                          "status": "placed",
                          "complete": true
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete purchase order by identifier.",
          "method": "DELETE",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/store/order/",
            "parts": [
              {
                "pathParameter": "orderId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "orderId",
              "docs": "ID of the order that needs to be deleted",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "orderId_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "DeleteOrderRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteOrderRequestBadRequestError"
              },
              "docs": "Invalid ID supplied"
            },
            {
              "error": {
                "name": "DeleteOrderRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteOrderRequestNotFoundError"
              },
              "docs": "Order not found"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/store/order/",
            "parts": [
              {
                "pathParameter": "orderId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "orderId",
              "docs": "ID of the order that needs to be deleted",
              "valueType": {
                "primitive": {
                  "v1": "LONG",
                  "v2": {
                    "type": "long"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "orderId_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/store.deleteOrder",
          "name": "deleteOrder",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "store_deleteOrder_Response_200",
                  "typeId": "store_deleteOrder_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "order deleted",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "storeDeleteOrderExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "For valid response try integer IDs with value < 1000. Anything above 1000 or non-integers will generate API errors.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_storeDeleteOrderExample_200": {
                "displayName": "deleteOrderExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/store/order/1"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "orderId": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "store_deleteOrder_Response_200",
                      "typeId": "store_deleteOrder_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "order deleted",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "storeDeleteOrderExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_petsV2/user": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "petsV2",
            "user"
          ],
          "packagePath": [
            "petsV2"
          ],
          "file": "user"
        }
      },
      "displayName": "user",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Create user.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/user.createUser",
          "name": "createUser",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Created user object",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "User",
              "typeId": "User",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "userCreateUserExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Created user object",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userCreateUserExample": {}
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/xml",
                "docs": "Created user object",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userCreateUserExample": {}
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "docs": "Created user object",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userCreateUserExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userCreateUserExample": {
                      "id": 10,
                      "username": "theUser",
                      "firstName": "John",
                      "lastName": "James",
                      "email": "john@email.com",
                      "password": "12345",
                      "phone": "12345",
                      "userStatus": 1
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "This can only be done by the logged in user.",
          "v2Examples": {
            "autogeneratedExamples": {
              "userCreateUserExample_200": {
                "displayName": "userCreateUserExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/user"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "username": "theUser",
                      "firstName": "John",
                      "lastName": "James",
                      "email": "john@email.com",
                      "password": "12345",
                      "phone": "12345",
                      "userStatus": 1
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "User",
                      "typeId": "User",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userCreateUserExample": {
                          "id": 10,
                          "username": "theUser",
                          "firstName": "John",
                          "lastName": "James",
                          "email": "john@email.com",
                          "password": "12345",
                          "phone": "12345",
                          "userStatus": 1
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Creates list of users with given input array.",
          "method": "POST",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user/createWithList",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user/createWithList",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/user.createUsersWithListInput",
          "name": "createUsersWithListInput",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "userCreateUsersWithListInputExample": [
                  {}
                ]
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "User",
                      "typeId": "User",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userCreateUsersWithListInputExample": [
                      {}
                    ]
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userCreateUsersWithListInputExample": {
                      "id": 10,
                      "username": "theUser",
                      "firstName": "John",
                      "lastName": "James",
                      "email": "john@email.com",
                      "password": "12345",
                      "phone": "12345",
                      "userStatus": 1
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates list of users with given input array.",
          "v2Examples": {
            "autogeneratedExamples": {
              "userCreateUsersWithListInputExample_200": {
                "displayName": "userCreateUsersWithListInputExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/user/createWithList"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {}
                  ]
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "username": "theUser",
                      "firstName": "John",
                      "lastName": "James",
                      "email": "john@email.com",
                      "password": "12345",
                      "phone": "12345",
                      "userStatus": 1
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "User",
                      "typeId": "User",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userCreateUsersWithListInputExample": {
                          "id": 10,
                          "username": "theUser",
                          "firstName": "John",
                          "lastName": "James",
                          "email": "john@email.com",
                          "password": "12345",
                          "phone": "12345",
                          "userStatus": 1
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Logs user into the system.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user/login",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "username",
                "wireValue": "username"
              },
              "docs": "The user name for login",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            },
            {
              "name": {
                "name": "password",
                "wireValue": "password"
              },
              "docs": "The password for login in clear text",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "password_example": "password"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "LoginUserRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LoginUserRequestBadRequestError"
              },
              "docs": "Invalid username/password supplied"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user/login",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/user.loginUser",
          "name": "loginUser",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userLoginUserExample": "string"
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Log into the system.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_userLoginUserExample_200": {
                "displayName": "loginUserExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/user/login"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": "string",
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userLoginUserExample": "string"
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Logs out current logged in user session.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user/logout",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user/logout",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/user.logoutUser",
          "name": "logoutUser",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "user_logoutUser_Response_200",
                  "typeId": "user_logoutUser_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userLogoutUserExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Log user out of the system.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_userLogoutUserExample_200": {
                "displayName": "logoutUserExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/user/logout"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "user_logoutUser_Response_200",
                      "typeId": "user_logoutUser_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userLogoutUserExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get user by user name.",
          "method": "GET",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user/",
            "parts": [
              {
                "pathParameter": "username",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "username",
              "docs": "The name that needs to be fetched. Use user1 for testing",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetUserByNameRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetUserByNameRequestBadRequestError"
              },
              "docs": "Invalid username supplied"
            },
            {
              "error": {
                "name": "GetUserByNameRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetUserByNameRequestNotFoundError"
              },
              "docs": "User not found"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user/",
            "parts": [
              {
                "pathParameter": "username",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "username",
              "docs": "The name that needs to be fetched. Use user1 for testing",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/user.getUserByName",
          "name": "getUserByName",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userGetUserByNameExample": {
                      "id": 10,
                      "username": "theUser",
                      "firstName": "John",
                      "lastName": "James",
                      "email": "john@email.com",
                      "password": "12345",
                      "phone": "12345",
                      "userStatus": 1
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get user detail based on username.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_userGetUserByNameExample_200": {
                "displayName": "getUserByNameExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/user/username"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "username": "username"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": 10,
                      "username": "theUser",
                      "firstName": "John",
                      "lastName": "James",
                      "email": "john@email.com",
                      "password": "12345",
                      "phone": "12345",
                      "userStatus": 1
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "User",
                      "typeId": "User",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userGetUserByNameExample": {
                          "id": 10,
                          "username": "theUser",
                          "firstName": "John",
                          "lastName": "James",
                          "email": "john@email.com",
                          "password": "12345",
                          "phone": "12345",
                          "userStatus": 1
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update user resource.",
          "method": "PUT",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user/",
            "parts": [
              {
                "pathParameter": "username",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "username",
              "docs": "name that need to be deleted",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "UpdateUserRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdateUserRequestBadRequestError"
              },
              "docs": "bad request"
            },
            {
              "error": {
                "name": "UpdateUserRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UpdateUserRequestNotFoundError"
              },
              "docs": "user not found"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user/",
            "parts": [
              {
                "pathParameter": "username",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "username",
              "docs": "name that need to be deleted",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/user.updateUser",
          "name": "updateUser",
          "requestBody": {
            "contentType": "application/json",
            "docs": "Update an existent user in the store",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "User",
              "typeId": "User",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "userUpdateUserExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "docs": "Update an existent user in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userUpdateUserExample": {}
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/xml",
                "docs": "Update an existent user in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userUpdateUserExample": {}
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "docs": "Update an existent user in the store",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User",
                  "typeId": "User",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userUpdateUserExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "user_updateUser_Response_200",
                  "typeId": "user_updateUser_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "successful operation",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userUpdateUserExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "This can only be done by the logged in user.",
          "v2Examples": {
            "autogeneratedExamples": {
              "userUpdateUserExample_200": {
                "displayName": "userUpdateUserExample",
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/user/username"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "username": "username"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "user_updateUser_Response_200",
                      "typeId": "user_updateUser_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "successful operation",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userUpdateUserExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete user resource.",
          "method": "DELETE",
          "baseUrl": "/api/v3",
          "path": {
            "head": "/user/",
            "parts": [
              {
                "pathParameter": "username",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "username",
              "docs": "The name that needs to be deleted",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "DeleteUserRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteUserRequestBadRequestError"
              },
              "docs": "Invalid username supplied"
            },
            {
              "error": {
                "name": "DeleteUserRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteUserRequestNotFoundError"
              },
              "docs": "User not found"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/user/",
            "parts": [
              {
                "pathParameter": "username",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "username",
              "docs": "The name that needs to be deleted",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "username_example": "username"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_petsV2/user.deleteUser",
          "name": "deleteUser",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "user_deleteUser_Response_200",
                  "typeId": "user_deleteUser_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "User deleted",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userDeleteUserExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "This can only be done by the logged in user.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_userDeleteUserExample_200": {
                "displayName": "deleteUserExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/user/username"
                  },
                  "environment": "/api/v3",
                  "pathParameters": {
                    "username": "username"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "user_deleteUser_Response_200",
                      "typeId": "user_deleteUser_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "User deleted",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userDeleteUserExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "webhookGroups": {},
  "subpackages": {
    "subpackage_petsV1": {
      "name": "petsV1",
      "fernFilepath": {
        "allParts": [
          "petsV1",
          "petsV1"
        ],
        "packagePath": [
          "petsV1"
        ],
        "file": "petsV1"
      },
      "types": [],
      "errors": [],
      "subpackages": [
        "subpackage_petsV1/petsV1",
        "subpackage_petsV1/pet",
        "subpackage_petsV1/store",
        "subpackage_petsV1/user"
      ],
      "hasEndpointsInTree": false
    },
    "subpackage_petsV1/petsV1": {
      "name": "petsV1",
      "fernFilepath": {
        "allParts": [
          "petsV1",
          "petsV1"
        ],
        "packagePath": [
          "petsV1"
        ],
        "file": "petsV1"
      },
      "types": [
        "Order",
        "Category",
        "User",
        "Tag",
        "Pet",
        "ApiResponse"
      ],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_petsV1/pet": {
      "name": "pet",
      "fernFilepath": {
        "allParts": [
          "petsV1",
          "pet"
        ],
        "packagePath": [
          "petsV1"
        ],
        "file": "pet"
      },
      "service": "service_petsV1/pet",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_petsV1/store": {
      "name": "store",
      "fernFilepath": {
        "allParts": [
          "petsV1",
          "store"
        ],
        "packagePath": [
          "petsV1"
        ],
        "file": "store"
      },
      "service": "service_petsV1/store",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_petsV1/user": {
      "name": "user",
      "fernFilepath": {
        "allParts": [
          "petsV1",
          "user"
        ],
        "packagePath": [
          "petsV1"
        ],
        "file": "user"
      },
      "service": "service_petsV1/user",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_petsV2": {
      "name": "petsV2",
      "fernFilepath": {
        "allParts": [
          "petsV2",
          "petsV2"
        ],
        "packagePath": [
          "petsV2"
        ],
        "file": "petsV2"
      },
      "hasEndpointsInTree": false,
      "subpackages": [
        "subpackage_petsV2/petsV2",
        "subpackage_petsV2/pet",
        "subpackage_petsV2/store",
        "subpackage_petsV2/user"
      ],
      "errors": [],
      "types": []
    },
    "subpackage_petsV2/petsV2": {
      "name": "petsV2",
      "fernFilepath": {
        "allParts": [
          "petsV2",
          "petsV2"
        ],
        "packagePath": [
          "petsV2"
        ],
        "file": "petsV2"
      },
      "hasEndpointsInTree": false,
      "subpackages": [],
      "errors": [],
      "types": [
        "Order",
        "Category",
        "User",
        "Tag",
        "Pet",
        "ApiResponse",
        "Order",
        "Category",
        "User",
        "Tag",
        "Pet",
        "ApiResponse"
      ]
    },
    "subpackage_petsV2/pet": {
      "name": "pet",
      "fernFilepath": {
        "allParts": [
          "petsV2",
          "pet"
        ],
        "packagePath": [
          "petsV2"
        ],
        "file": "pet"
      },
      "hasEndpointsInTree": false,
      "service": "service_petsV2/pet",
      "subpackages": [],
      "errors": [],
      "types": []
    },
    "subpackage_petsV2/store": {
      "name": "store",
      "fernFilepath": {
        "allParts": [
          "petsV2",
          "store"
        ],
        "packagePath": [
          "petsV2"
        ],
        "file": "store"
      },
      "service": "service_petsV2/store",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_petsV2/user": {
      "name": "user",
      "fernFilepath": {
        "allParts": [
          "petsV2",
          "user"
        ],
        "packagePath": [
          "petsV2"
        ],
        "file": "user"
      },
      "service": "service_petsV2/user",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    }
  },
  "websocketChannels": {},
  "rootPackage": {
    "types": [],
    "errors": [],
    "subpackages": [
      "subpackage_petsV1",
      "subpackage_petsV2"
    ],
    "fernFilepath": {
      "allParts": [
        "petsV1"
      ],
      "packagePath": [
        "petsV1"
      ]
    },
    "hasEndpointsInTree": false
  },
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "audiences": []
}