{
  "auth": {
    "requirement": "ALL",
    "schemes": [
      {
        "key": "bearer",
        "token": "token",
        "docs": "Authorization header, we support the bearer authentication scheme (see: RFC 6750)",
        "type": "bearer"
      }
    ]
  },
  "selfHosted": false,
  "types": {
    "ActionBlockEditableAttributes": {
      "name": {
        "typeId": "ActionBlockEditableAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ActionBlockEditableAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ActionBlockEditableAttributes_example_autogenerated": {}
        }
      }
    },
    "ActionBlockEditable": {
      "name": {
        "typeId": "ActionBlockEditable",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ActionBlockEditable"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a more descriptive name for the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockEditableName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this action represents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockEditableDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ActionBlockEditableAttributes",
                  "typeId": "ActionBlockEditableAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockEditableAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ActionBlockEditable_example_autogenerated": {}
        }
      }
    },
    "ActionBlockReadAttributes": {
      "name": {
        "typeId": "ActionBlockReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ActionBlockReadAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ActionBlockReadAttributes_example_autogenerated": {}
        }
      }
    },
    "ActionBlockRead": {
      "name": {
        "typeId": "ActionBlockRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ActionBlockRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a more descriptive name for the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockReadName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this action represents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockReadDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ActionBlockReadAttributes",
                  "typeId": "ActionBlockReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockReadAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "action key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockReadKey_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ActionBlockRead_example_autogenerated": {
            "id": "string"
          }
        }
      }
    },
    "AddRolePermissions": {
      "name": {
        "typeId": "AddRolePermissions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AddRolePermissions"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "permissions",
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of permissions to assign to the role. If a permission is already granted to the role it is skipped. Each permission can be either a resource action id, or `{resource_key}:{action_key}`, i.e: the \"permission name\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AddRolePermissionsPermissions_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "AddRolePermissions_example_0": {
            "permissions": [
              "document:write"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "AttributeBlockEditable": {
      "name": {
        "typeId": "AttributeBlockEditable",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AttributeBlockEditable"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AttributeType",
              "typeId": "AttributeType",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what data this attribute will store",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AttributeBlockEditableDescription_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AttributeBlockEditable_example_autogenerated": {
            "type": "bool"
          }
        }
      }
    },
    "AttributeBlockRead": {
      "name": {
        "typeId": "AttributeBlockRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AttributeBlockRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AttributeType",
              "typeId": "AttributeType",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what data this attribute will store",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AttributeBlockReadDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the attribute",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AttributeBlockReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "action key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AttributeBlockReadKey_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AttributeBlockRead_example_autogenerated": {
            "type": "bool",
            "id": "string"
          }
        }
      }
    },
    "AttributeType": {
      "name": {
        "typeId": "AttributeType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AttributeType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "bool",
              "wireValue": "bool"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "number",
                "camelCase": {
                  "unsafeName": "number",
                  "safeName": "number_"
                },
                "snakeCase": {
                  "unsafeName": "number",
                  "safeName": "number_"
                }
              },
              "wireValue": "number"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "string",
                "camelCase": {
                  "unsafeName": "string",
                  "safeName": "string_"
                },
                "snakeCase": {
                  "unsafeName": "string",
                  "safeName": "string_"
                }
              },
              "wireValue": "string"
            }
          },
          {
            "name": {
              "name": "time",
              "wireValue": "time"
            }
          },
          {
            "name": {
              "name": "array",
              "wireValue": "array"
            }
          },
          {
            "name": {
              "name": "json",
              "wireValue": "json"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "supported attribute primitives",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AttributeType_example_autogenerated": "bool"
        }
      }
    },
    "BulkRoleAssignmentReport": {
      "name": {
        "typeId": "BulkRoleAssignmentReport",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BulkRoleAssignmentReport"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "assignments_created",
              "wireValue": "assignments_created"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BulkRoleAssignmentReportAssignmentsCreated_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BulkRoleAssignmentReport_example_autogenerated": {}
        }
      }
    },
    "BulkRoleUnAssignmentReport": {
      "name": {
        "typeId": "BulkRoleUnAssignmentReport",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BulkRoleUnAssignmentReport"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "assignments_removed",
              "wireValue": "assignments_removed"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BulkRoleUnAssignmentReportAssignmentsRemoved_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BulkRoleUnAssignmentReport_example_autogenerated": {}
        }
      }
    },
    "ConditionSetCreateResourceId": {
      "name": {
        "typeId": "ConditionSetCreateResourceId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetCreateResourceId"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "For ResourceSets, the id of the base resource.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetCreateResourceId_example_autogenerated": "string"
        }
      }
    },
    "ConditionSetCreateConditions": {
      "name": {
        "typeId": "ConditionSetCreateConditions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetCreateConditions"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "a boolean expression that consists of multiple conditions, with and/or logic.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetCreateConditions_example_autogenerated": {}
        }
      }
    },
    "ConditionSetCreateParentId": {
      "name": {
        "typeId": "ConditionSetCreateParentId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetCreateParentId"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Parent Condition Set",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetCreateParentId_example_autogenerated": "string"
        }
      }
    },
    "ConditionSetCreate": {
      "name": {
        "typeId": "ConditionSetCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1,
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify the condition set. The key will be used as the generated rego rule name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetType",
                  "typeId": "ConditionSetType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the type of the set: UserSet or ResourceSet",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "autogenerated",
              "wireValue": "autogenerated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "whether the set was autogenerated by the system.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateAutogenerated_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": "resource_id",
              "wireValue": "resource_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetCreateResourceId",
                  "typeId": "ConditionSetCreateResourceId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For ResourceSets, the id of the base resource.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateResourceId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A descriptive name for the set, i.e: 'US based employees' or 'Users behind VPN'",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "conditions",
              "wireValue": "conditions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetCreateConditions",
                  "typeId": "ConditionSetCreateConditions",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a boolean expression that consists of multiple conditions, with and/or logic.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateConditions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "parent_id",
              "wireValue": "parent_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetCreateParentId",
                  "typeId": "ConditionSetCreateParentId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Parent Condition Set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateParentId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ConditionSetCreate_example_0": {
            "key": "na_based_employees",
            "type": "userset",
            "name": "US or Canada based employees",
            "conditions": {
              "allOf": [
                {
                  "user.role": {
                    "equals": "employee"
                  }
                },
                {
                  "user.location": {
                    "in": [
                      "US",
                      "Canada"
                    ]
                  }
                }
              ]
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ConditionSetReadResourceId": {
      "name": {
        "typeId": "ConditionSetReadResourceId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetReadResourceId"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "For ResourceSets, the id of the base resource.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetReadResourceId_example_autogenerated": "string"
        }
      }
    },
    "ConditionSetReadConditions": {
      "name": {
        "typeId": "ConditionSetReadConditions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetReadConditions"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "a boolean expression that consists of multiple conditions, with and/or logic.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetReadConditions_example_autogenerated": {}
        }
      }
    },
    "ConditionSetReadParentId": {
      "name": {
        "typeId": "ConditionSetReadParentId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetReadParentId"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Parent Condition Set",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetReadParentId_example_autogenerated": "string"
        }
      }
    },
    "ConditionSetRead": {
      "name": {
        "typeId": "ConditionSetRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify the condition set. The key will be used as the generated rego rule name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetType",
                  "typeId": "ConditionSetType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the type of the set: UserSet or ResourceSet",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "autogenerated",
              "wireValue": "autogenerated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "whether the set was autogenerated by the system.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadAutogenerated_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": "resource_id",
              "wireValue": "resource_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetReadResourceId",
                  "typeId": "ConditionSetReadResourceId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For ResourceSets, the id of the base resource.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadResourceId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the condition set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the condition set belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the condition set belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the condition set belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the condition set was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the condition set was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "resource",
              "wireValue": "resource"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRead",
                  "typeId": "ResourceRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A descriptive name for the set, i.e: 'US based employees' or 'Users behind VPN'",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "conditions",
              "wireValue": "conditions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetReadConditions",
                  "typeId": "ConditionSetReadConditions",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a boolean expression that consists of multiple conditions, with and/or logic.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadConditions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "parent_id",
              "wireValue": "parent_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetReadParentId",
                  "typeId": "ConditionSetReadParentId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Parent Condition Set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadParentId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ConditionSetRead_example_0": {
            "key": "na_based_employees",
            "type": "userset",
            "autogenerated": false,
            "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z",
            "name": "US or Canada based employees",
            "description": "All employees based in the US or Canada",
            "conditions": {
              "allOf": [
                {
                  "user.role": {
                    "equals": "employee"
                  }
                },
                {
                  "user.location": {
                    "in": [
                      "US",
                      "Canada"
                    ]
                  }
                }
              ]
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ConditionSetRuleCreate": {
      "name": {
        "typeId": "ConditionSetRuleCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetRuleCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "user_set",
              "wireValue": "user_set"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The userset that will be given permission, i.e: all the users matching this rule will be given the specified permission",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleCreateUserSet_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "permission",
              "wireValue": "permission"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The permission that will be granted to the userset *on* the resourceset. The permission can be either a resource action id, or `{resource_key}:{action_key}`, i.e: the \"permission name\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleCreatePermission_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "resource_set",
              "wireValue": "resource_set"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The resourceset that represents the resources that are granted for access, i.e: all the resources matching this rule can be accessed by the userset to perform the granted *permission*",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleCreateResourceSet_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "is_role",
              "wireValue": "is_role"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "if True, will set the condition set rule to the role's autogen user-set.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleCreateIsRole_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": "is_resource",
              "wireValue": "is_resource"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "if True, will set the condition set rule to the resource's autogen resource-set.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleCreateIsResource_example_autogenerated": false
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ConditionSetRuleCreate_example_0": {
            "user_set": "us_based_employees",
            "permission": "repository:clone",
            "resource_set": "private_repos"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ConditionSetRuleRead": {
      "name": {
        "typeId": "ConditionSetRuleRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetRuleRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the condition set rule",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify this condition set rule.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "user_set",
              "wireValue": "user_set"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the userset that is currently granted permissions, i.e: all the users matching this rule are granted the permission on the resourceset",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadUserSet_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "permission",
              "wireValue": "permission"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "a permission that is currently granted to the userset *on* the resourceset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadPermission_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "resource_set",
              "wireValue": "resource_set"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the resourceset that represents the resources that are currently granted for access, i.e: all the resources matching this rule can be accessed by the userset to perform the granted *permission*",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadResourceSet_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the condition set rule belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the condition set rule belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the condition set rule belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the condition set rule was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the condition set rule was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ConditionSetRuleRead_example_0": {
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "key": "us_based_employees_can_repository_clone_private_repos",
            "user_set": "us_based_employees",
            "permission": "repository:clone",
            "resource_set": "private_repos",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:16:22Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ConditionSetRuleRemove": {
      "name": {
        "typeId": "ConditionSetRuleRemove",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetRuleRemove"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "user_set",
              "wireValue": "user_set"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The userset that will be unassigned these permission, i.e: all the users matching this rule will lose the specified permission",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleRemoveUserSet_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "permission",
              "wireValue": "permission"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The permission that will be removed from the userset *on* the resourceset. The permission can be either a resource action id, or `{resource_key}:{action_key}`, i.e: the \"permission name\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleRemovePermission_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "resource_set",
              "wireValue": "resource_set"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The resourceset that represents the resources that are no longer granted for access, i.e: all the resources matching this rule can no longer be accessed by the userset, and will be revoked the specified *permission*",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleRemoveResourceSet_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "is_role",
              "wireValue": "is_role"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "if True, will set the condition set rule to the role's autogen user-set.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleRemoveIsRole_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": "is_resource",
              "wireValue": "is_resource"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "if True, will set the condition set rule to the resource's autogen resource-set.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleRemoveIsResource_example_autogenerated": false
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ConditionSetRuleRemove_example_0": {
            "user_set": "us_based_employees",
            "permission": "repository:clone",
            "resource_set": "private_repos"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ConditionSetType": {
      "name": {
        "typeId": "ConditionSetType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "userset",
              "wireValue": "userset"
            }
          },
          {
            "name": {
              "name": "resourceset",
              "wireValue": "resourceset"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetType_example_autogenerated": "userset"
        }
      }
    },
    "ConditionSetUpdateConditions": {
      "name": {
        "typeId": "ConditionSetUpdateConditions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetUpdateConditions"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "a boolean expression that consists of multiple conditions, with and/or logic.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetUpdateConditions_example_autogenerated": {}
        }
      }
    },
    "ConditionSetUpdateParentId": {
      "name": {
        "typeId": "ConditionSetUpdateParentId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetUpdateParentId"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Parent Condition Set",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetUpdateParentId_example_autogenerated": "string"
        }
      }
    },
    "ConditionSetUpdate": {
      "name": {
        "typeId": "ConditionSetUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A descriptive name for the set, i.e: 'US based employees' or 'Users behind VPN'",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetUpdateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetUpdateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "conditions",
              "wireValue": "conditions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetUpdateConditions",
                  "typeId": "ConditionSetUpdateConditions",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a boolean expression that consists of multiple conditions, with and/or logic.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetUpdateConditions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "parent_id",
              "wireValue": "parent_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetUpdateParentId",
                  "typeId": "ConditionSetUpdateParentId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Parent Condition Set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetUpdateParentId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ConditionSetUpdate_example_0": {
            "name": "US based managers",
            "conditions": {
              "allOf": [
                {
                  "user.role": {
                    "equals": "manager"
                  }
                },
                {
                  "user.location": {
                    "in": [
                      "US"
                    ]
                  }
                }
              ]
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "EnvironmentCopyConflictStrategy": {
      "name": {
        "typeId": "EnvironmentCopyConflictStrategy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentCopyConflictStrategy"
      },
      "shape": {
        "default": {
          "name": {
            "name": "fail",
            "wireValue": "fail"
          }
        },
        "values": [
          {
            "name": {
              "name": "fail",
              "wireValue": "fail"
            }
          },
          {
            "name": {
              "name": "overwrite",
              "wireValue": "overwrite"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Action to take when detecting a conflict when copying. Only applies to copying into an existing environment",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCopyConflictStrategy_example_autogenerated": "fail"
        }
      }
    },
    "EnvironmentCopy": {
      "name": {
        "typeId": "EnvironmentCopy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentCopy"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "target_env",
              "wireValue": "target_env"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EnvironmentCopyTarget",
              "typeId": "EnvironmentCopyTarget",
              "inline": false,
              "type": "named"
            },
            "docs": "If copying a new environment, the environment configuration. If copying to an existing environment, the environment identifier",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "conflict_strategy",
              "wireValue": "conflict_strategy"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentCopyConflictStrategy",
                  "typeId": "EnvironmentCopyConflictStrategy",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Action to take when detecting a conflict when copying. Only applies to copying into an existing environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCopyConflictStrategy_example_autogenerated": "fail"
              }
            }
          },
          {
            "name": {
              "name": "scope",
              "wireValue": "scope"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentCopyScope",
                  "typeId": "EnvironmentCopyScope",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Filters to include and exclude copied objects",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCopy_example_autogenerated": {
            "target_env": {}
          }
        }
      }
    },
    "EnvironmentCopyScope": {
      "name": {
        "typeId": "EnvironmentCopyScope",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentCopyScope"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "resources",
              "wireValue": "resources"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentCopyScopeFilters",
                  "typeId": "EnvironmentCopyScopeFilters",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Resources to copy",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "roles",
              "wireValue": "roles"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentCopyScopeFilters",
                  "typeId": "EnvironmentCopyScopeFilters",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Roles to copy",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "user_sets",
              "wireValue": "user_sets"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentCopyScopeFilters",
                  "typeId": "EnvironmentCopyScopeFilters",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "User sets to copy",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "resource_sets",
              "wireValue": "resource_sets"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentCopyScopeFilters",
                  "typeId": "EnvironmentCopyScopeFilters",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Resource sets to copy",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCopyScope_example_autogenerated": {}
        }
      }
    },
    "EnvironmentCopyScopeFilters": {
      "name": {
        "typeId": "EnvironmentCopyScopeFilters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentCopyScopeFilters"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "include",
              "wireValue": "include"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Objects to include (use * as wildcard)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCopyScopeFiltersInclude_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "exclude",
              "wireValue": "exclude"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object to exclude (use * as wildcard)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCopyScopeFiltersExclude_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCopyScopeFilters_example_autogenerated": {}
        }
      }
    },
    "EnvironmentCopyTarget": {
      "name": {
        "typeId": "EnvironmentCopyTarget",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentCopyTarget"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "existing",
              "wireValue": "existing"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Identifier of an existing environment to copy into",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCopyTargetExisting_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "new",
                "camelCase": {
                  "unsafeName": "new",
                  "safeName": "new_"
                },
                "snakeCase": {
                  "unsafeName": "new",
                  "safeName": "new_"
                }
              },
              "wireValue": "new"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentCreate",
                  "typeId": "EnvironmentCreate",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Description of the environment to create. This environment must not already exist.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCopyTarget_example_autogenerated": {}
        }
      }
    },
    "EnvironmentCreateSettings": {
      "name": {
        "typeId": "EnvironmentCreateSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentCreateSettings"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this environment",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCreateSettings_example_autogenerated": {}
        }
      }
    },
    "EnvironmentCreate": {
      "name": {
        "typeId": "EnvironmentCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the environment (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the environment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCreateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCreateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_branch_name",
              "wireValue": "custom_branch_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "when using gitops feature, an optional branch name for the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCreateCustomBranchName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "jwks",
              "wireValue": "jwks"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "JwksObj",
                  "typeId": "JwksObj",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "jwks for element frontend only login",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "settings",
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentCreateSettings",
                  "typeId": "EnvironmentCreateSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCreateSettings_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCreate_example_autogenerated": {
            "key": "string",
            "name": "string"
          }
        }
      }
    },
    "EnvironmentReadSettings": {
      "name": {
        "typeId": "EnvironmentReadSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentReadSettings"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this environment",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentReadSettings_example_autogenerated": {}
        }
      }
    },
    "EnvironmentRead": {
      "name": {
        "typeId": "EnvironmentRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the environment (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the environment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the environment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the environment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the environment was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the environment was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_branch_name",
              "wireValue": "custom_branch_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "when using gitops feature, an optional branch name for the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadCustomBranchName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "jwks",
              "wireValue": "jwks"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "JwksObj",
                  "typeId": "JwksObj",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "jwks for element frontend only login",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "settings",
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentReadSettings",
                  "typeId": "EnvironmentReadSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadSettings_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentRead_example_autogenerated": {
            "key": "string",
            "id": "string",
            "organization_id": "string",
            "project_id": "string",
            "created_at": "2024-01-15T09:30:00Z",
            "updated_at": "2024-01-15T09:30:00Z",
            "name": "string"
          }
        }
      }
    },
    "EnvironmentStatsSettings": {
      "name": {
        "typeId": "EnvironmentStatsSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentStatsSettings"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this environment",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentStatsSettings_example_autogenerated": {}
        }
      }
    },
    "EnvironmentStats": {
      "name": {
        "typeId": "EnvironmentStats",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentStats"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the environment (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the environment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the environment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the environment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the environment was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the environment was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_branch_name",
              "wireValue": "custom_branch_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "when using gitops feature, an optional branch name for the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsCustomBranchName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "jwks",
              "wireValue": "jwks"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "JwksObj",
                  "typeId": "JwksObj",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "jwks for element frontend only login",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "settings",
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentStatsSettings",
                  "typeId": "EnvironmentStatsSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsSettings_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "pdp_configs",
              "wireValue": "pdp_configs"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PDPConfigRead",
                  "typeId": "PDPConfigRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsPdpConfigs_example_autogenerated": [
                  {
                    "id": "string",
                    "organization_id": "string",
                    "project_id": "string",
                    "environment_id": "string",
                    "client_secret": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "stats",
              "wireValue": "stats"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Statistics",
              "typeId": "Statistics",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentStats_example_autogenerated": {
            "key": "string",
            "id": "string",
            "organization_id": "string",
            "project_id": "string",
            "created_at": "2024-01-15T09:30:00Z",
            "updated_at": "2024-01-15T09:30:00Z",
            "name": "string",
            "pdp_configs": [
              {
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string",
                "client_secret": "string"
              }
            ],
            "stats": {
              "roles": 1,
              "users": 1,
              "policies": 1,
              "resources": 1,
              "tenants": 1,
              "has_decision_logs": true,
              "members": [
                {
                  "id": "string",
                  "email": "string",
                  "email_verified": true,
                  "is_superuser": true,
                  "is_onboarding": true,
                  "onboarding_step": "create_organization",
                  "created_at": "2024-01-15T09:30:00Z",
                  "identities": [
                    {
                      "user_id": "string",
                      "provider": "string",
                      "sub": "string",
                      "email": "string",
                      "email_verified": true,
                      "auth0_info": {}
                    }
                  ],
                  "settings": {},
                  "grants": [
                    {
                      "organization_id": "string",
                      "object_type": "org",
                      "access_level": "admin"
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "EnvironmentUpdateSettings": {
      "name": {
        "typeId": "EnvironmentUpdateSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentUpdateSettings"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this environment",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentUpdateSettings_example_autogenerated": {}
        }
      }
    },
    "EnvironmentUpdate": {
      "name": {
        "typeId": "EnvironmentUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnvironmentUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentUpdateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentUpdateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_branch_name",
              "wireValue": "custom_branch_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "when using gitops feature, an optional branch name for the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentUpdateCustomBranchName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "jwks",
              "wireValue": "jwks"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "JwksObj",
                  "typeId": "JwksObj",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "jwks for element frontend only login",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "settings",
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentUpdateSettings",
                  "typeId": "EnvironmentUpdateSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentUpdateSettings_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentUpdate_example_autogenerated": {}
        }
      }
    },
    "HTTPValidationError": {
      "name": {
        "typeId": "HTTPValidationError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "detail",
              "wireValue": "detail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ValidationError",
                      "typeId": "ValidationError",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "HttpValidationErrorDetail_example_autogenerated": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "HTTPValidationError_example_autogenerated": {}
        }
      }
    },
    "IdentityReadAuth0Info": {
      "name": {
        "typeId": "IdentityReadAuth0Info",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "IdentityReadAuth0Info"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Raw user info json coming from our identity provider and matching a specific account identity",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IdentityReadAuth0Info_example_autogenerated": {}
        }
      }
    },
    "IdentityRead": {
      "name": {
        "typeId": "IdentityRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "IdentityRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "user_id",
              "wireValue": "user_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique User Id of this identity in the identity provider (including the provider type)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdentityReadUserId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "provider",
              "wireValue": "provider"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The identity provider type this identity came from",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdentityReadProvider_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "sub",
              "wireValue": "sub"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique User Id of this identity in the identity provider (NOT including the provider type)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdentityReadSub_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "email"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Email connected to this account identity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdentityReadEmail_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "email_verified",
              "wireValue": "email_verified"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether this email address connected to this account identity is verified or not. For social providers like 'Login with Google' this is done automatically, otherwise we will send the user a verification link in email.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdentityReadEmailVerified_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "auth0_info",
              "wireValue": "auth0_info"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "IdentityReadAuth0Info",
              "typeId": "IdentityReadAuth0Info",
              "inline": false,
              "type": "named"
            },
            "docs": "Raw user info json coming from our identity provider and matching a specific account identity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdentityReadAuth0Info_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IdentityRead_example_autogenerated": {
            "user_id": "string",
            "provider": "string",
            "sub": "string",
            "email": "string",
            "email_verified": true,
            "auth0_info": {}
          }
        }
      }
    },
    "InviteRead": {
      "name": {
        "typeId": "InviteRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "InviteRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "member_id",
              "wireValue": "member_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Unique id of the invite",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadMemberId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "email"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The invited member's email address",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadEmail_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "role",
              "wireValue": "role"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "MemberAccessLevel",
                  "typeId": "MemberAccessLevel",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The role the member will be assigned with",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the invite",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the invite belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "invite_code",
              "wireValue": "invite_code"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The invite code that is sent to the member's email",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadInviteCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the invite was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "InviteStatus",
              "typeId": "InviteStatus",
              "inline": false,
              "type": "named"
            },
            "docs": "The status of the invite (pending, failed, etc)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "failed_reason",
              "wireValue": "failed_reason"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "if failed, the reason the invitation failed",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadFailedReason_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "InviteRead_example_0": {
            "email": "jane@coolcompany.com",
            "role": "admin",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "invite_code": "40ef0e48-a11f-4963-a229-e396c9eeefff",
            "created_at": "2019-08-24T14:15:22Z",
            "status": "pending",
            "failed_reason": ""
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "InviteStatus": {
      "name": {
        "typeId": "InviteStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "InviteStatus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "pending",
              "wireValue": "pending"
            }
          },
          {
            "name": {
              "name": "accepted",
              "wireValue": "accepted"
            }
          },
          {
            "name": {
              "name": "failed",
              "wireValue": "failed"
            }
          },
          {
            "name": {
              "name": "canceled",
              "wireValue": "canceled"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "InviteStatus_example_autogenerated": "pending"
        }
      }
    },
    "JwksObjKeysItems": {
      "name": {
        "typeId": "JwksObjKeysItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "JwksObjKeysItems"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "JwksObjKeysItems_example_autogenerated": {}
        }
      }
    },
    "JwksObj": {
      "name": {
        "typeId": "JwksObj",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "JwksObj"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "keys",
              "wireValue": "keys"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "JwksObjKeysItems",
                  "typeId": "JwksObjKeysItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "The keys to match against the request headers",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "JwksObjKeys_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "JwksObj_example_autogenerated": {
            "keys": [
              {}
            ]
          }
        }
      }
    },
    "MemberAccessLevel": {
      "name": {
        "typeId": "MemberAccessLevel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MemberAccessLevel"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "admin",
              "wireValue": "admin"
            }
          },
          {
            "name": {
              "name": "write",
              "wireValue": "write"
            }
          },
          {
            "name": {
              "name": "read",
              "wireValue": "read"
            }
          },
          {
            "name": {
              "name": "no_access",
              "wireValue": "no_access"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MemberAccessLevel_example_autogenerated": "admin"
        }
      }
    },
    "MemberAccessObj": {
      "name": {
        "typeId": "MemberAccessObj",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MemberAccessObj"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "org",
              "wireValue": "org"
            }
          },
          {
            "name": {
              "name": "project",
              "wireValue": "project"
            }
          },
          {
            "name": {
              "name": "env",
              "wireValue": "env"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MemberAccessObj_example_autogenerated": "org"
        }
      }
    },
    "OnboardingStep": {
      "name": {
        "typeId": "OnboardingStep",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OnboardingStep"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "create_organization",
              "wireValue": "create_organization"
            }
          },
          {
            "name": {
              "name": "create_project",
              "wireValue": "create_project"
            }
          },
          {
            "name": {
              "name": "create_resource",
              "wireValue": "create_resource"
            }
          },
          {
            "name": {
              "name": "create_actions",
              "wireValue": "create_actions"
            }
          },
          {
            "name": {
              "name": "assign_permissions",
              "wireValue": "assign_permissions"
            }
          },
          {
            "name": {
              "name": "assign_user_roles",
              "wireValue": "assign_user_roles"
            }
          },
          {
            "name": {
              "name": "connect_sdk",
              "wireValue": "connect_sdk"
            }
          },
          {
            "name": {
              "name": "done",
              "wireValue": "done"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OnboardingStep_example_autogenerated": "create_organization"
        }
      }
    },
    "OrgMemberReadWithGrantsSettings": {
      "name": {
        "typeId": "OrgMemberReadWithGrantsSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OrgMemberReadWithGrantsSettings"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Custom permit.io dashboard settings, such as preferred theme, etc.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrgMemberReadWithGrantsSettings_example_autogenerated": {}
        }
      }
    },
    "OrgMemberReadWithGrants": {
      "name": {
        "typeId": "OrgMemberReadWithGrants",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OrgMemberReadWithGrants"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the account member",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "email"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Email of the user controlling this account",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsEmail_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "email_verified",
              "wireValue": "email_verified"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether this email address is verified or not. For social providers like 'Login with Google' this is done automatically, otherwise we will send the user a verification link in email.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsEmailVerified_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Name of this user",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "given_name",
              "wireValue": "given_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "First name of the user",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsGivenName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "family_name",
              "wireValue": "family_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last name of the user",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsFamilyName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "picture",
              "wireValue": "picture"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL to picture, photo, or avatar of the user that controls this account.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsPicture_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "is_superuser",
              "wireValue": "is_superuser"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether or not this user has special access to permit.io organizations",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsIsSuperuser_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "is_onboarding",
              "wireValue": "is_onboarding"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether or not this user is currently onboarding, needs to be replaced by a user journey object",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsIsOnboarding_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "onboarding_step",
              "wireValue": "onboarding_step"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "OnboardingStep",
              "typeId": "OnboardingStep",
              "inline": false,
              "type": "named"
            },
            "docs": "the step the user is currently going through in onboarding",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the account member was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "last_login",
              "wireValue": "last_login"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last date and time this user logged in (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsLastLogin_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "last_ip",
              "wireValue": "last_ip"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "0.0.0.0",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last IP address from which this user logged in.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsLastIp_example_autogenerated": "0.0.0.0"
              }
            }
          },
          {
            "name": {
              "name": "logins_count",
              "wireValue": "logins_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Total number of logins this user has performed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsLoginsCount_example_autogenerated": 0
              }
            }
          },
          {
            "name": {
              "name": "identities",
              "wireValue": "identities"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "IdentityRead",
                  "typeId": "IdentityRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsIdentities_example_autogenerated": [
                  {
                    "user_id": "string",
                    "provider": "string",
                    "sub": "string",
                    "email": "string",
                    "email_verified": true,
                    "auth0_info": {}
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "invite",
              "wireValue": "invite"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "InviteRead",
                  "typeId": "InviteRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "settings",
              "wireValue": "settings"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "OrgMemberReadWithGrantsSettings",
              "typeId": "OrgMemberReadWithGrantsSettings",
              "inline": false,
              "type": "named"
            },
            "docs": "Custom permit.io dashboard settings, such as preferred theme, etc.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsSettings_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "grants",
              "wireValue": "grants"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Permission",
                  "typeId": "Permission",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsGrants_example_autogenerated": [
                  {
                    "organization_id": "string",
                    "object_type": "org",
                    "access_level": "admin"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "OrgMemberReadWithGrants_example_0": {
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "email": "janedoe@permituser.com",
            "email_verified": true,
            "name": "Jane Josephine Doe",
            "given_name": "Jane",
            "family_name": "Doe",
            "picture": "http://permituser.com/janedoe/me.jpg",
            "is_superuser": false,
            "is_onboarding": true,
            "onboarding_step": "done",
            "created_at": "2019-08-20T14:15:22Z",
            "last_login": "2019-08-24T14:15:22Z",
            "last_ip": "1.2.3.4",
            "logins_count": 2,
            "identities": [
              {
                "user_id": "google-oauth2|000000000000000000001",
                "provider": "google-oauth2",
                "sub": "000000000000000000001",
                "email": "Jane@permituser.com",
                "email_verified": true,
                "auth0_info": {}
              }
            ],
            "invite": {
              "email": "Jane@permituser.com",
              "role": "admin",
              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
              "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
              "invite_code": "40ef0e48-a11f-4963-a229-e396c9eeefff",
              "created_at": "2019-08-24T14:15:22Z",
              "status": "pending",
              "failed_reason": ""
            },
            "settings": {
              "option": "value",
              "another-option": "another-value"
            },
            "grants": [
              {
                "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                "object_type": "org",
                "access_level": "admin"
              }
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "OrganizationCreateSettings": {
      "name": {
        "typeId": "OrganizationCreateSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OrganizationCreateSettings"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationCreateSettings_example_autogenerated": {}
        }
      }
    },
    "OrganizationCreate": {
      "name": {
        "typeId": "OrganizationCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OrganizationCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the organization (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the organization.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\.\\-\\_\\ ]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the organization, usually it's your company's name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationCreateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "settings",
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OrganizationCreateSettings",
                  "typeId": "OrganizationCreateSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationCreateSettings_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationCreate_example_autogenerated": {
            "key": "string",
            "name": "string"
          }
        }
      }
    },
    "OrganizationReadSettings": {
      "name": {
        "typeId": "OrganizationReadSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OrganizationReadSettings"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationReadSettings_example_autogenerated": {}
        }
      }
    },
    "OrganizationRead": {
      "name": {
        "typeId": "OrganizationRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OrganizationRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the organization (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the organization.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "is_enterprise",
              "wireValue": "is_enterprise"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Is this an enterprise account?",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadIsEnterprise_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the organization was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the organization was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the organization, usually it's your company's name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "settings",
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OrganizationReadSettings",
                  "typeId": "OrganizationReadSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadSettings_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationRead_example_autogenerated": {
            "key": "string",
            "id": "string",
            "is_enterprise": true,
            "created_at": "2024-01-15T09:30:00Z",
            "updated_at": "2024-01-15T09:30:00Z",
            "name": "string"
          }
        }
      }
    },
    "OrganizationReadWithApiKeySettings": {
      "name": {
        "typeId": "OrganizationReadWithApiKeySettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OrganizationReadWithApiKeySettings"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationReadWithApiKeySettings_example_autogenerated": {}
        }
      }
    },
    "OrganizationReadWithAPIKey": {
      "name": {
        "typeId": "OrganizationReadWithAPIKey",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OrganizationReadWithAPIKey"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the organization (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the organization.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "is_enterprise",
              "wireValue": "is_enterprise"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Is this an enterprise account?",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyIsEnterprise_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the organization was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the organization was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the organization, usually it's your company's name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "settings",
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OrganizationReadWithApiKeySettings",
                  "typeId": "OrganizationReadWithApiKeySettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeySettings_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "api_key_id",
              "wireValue": "api_key_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyApiKeyId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "api_key_secret",
              "wireValue": "api_key_secret"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyApiKeySecret_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationReadWithAPIKey_example_autogenerated": {
            "key": "string",
            "id": "string",
            "is_enterprise": true,
            "created_at": "2024-01-15T09:30:00Z",
            "updated_at": "2024-01-15T09:30:00Z",
            "name": "string"
          }
        }
      }
    },
    "OrganizationUpdateSettings": {
      "name": {
        "typeId": "OrganizationUpdateSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OrganizationUpdateSettings"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationUpdateSettings_example_autogenerated": {}
        }
      }
    },
    "OrganizationUpdate": {
      "name": {
        "typeId": "OrganizationUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OrganizationUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^[A-Za-z0-9\\.\\-\\_\\ ]+$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the organization, usually it's your company's name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationUpdateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "settings",
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OrganizationUpdateSettings",
                  "typeId": "OrganizationUpdateSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationUpdateSettings_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationUpdate_example_autogenerated": {}
        }
      }
    },
    "PDPConfigRead": {
      "name": {
        "typeId": "PDPConfigRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PDPConfigRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PdpConfigReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PdpConfigReadName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the pdp_config belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PdpConfigReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the pdp_config belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PdpConfigReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the pdp_config belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PdpConfigReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "client_secret",
              "wireValue": "client_secret"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PdpConfigReadClientSecret_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PDPConfigRead_example_autogenerated": {
            "id": "string",
            "organization_id": "string",
            "project_id": "string",
            "environment_id": "string",
            "client_secret": "string"
          }
        }
      }
    },
    "PaginatedResult_ConditionSetRead_": {
      "name": {
        "typeId": "PaginatedResult_ConditionSetRead_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedResult_ConditionSetRead_"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetRead",
                  "typeId": "ConditionSetRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of Condition Sets",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultConditionSetReadData_example_autogenerated": [
                  {
                    "key": "string",
                    "id": "string",
                    "organization_id": "string",
                    "project_id": "string",
                    "environment_id": "string",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "name": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "total_count",
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultConditionSetReadTotalCount_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "page_count",
              "wireValue": "page_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultConditionSetReadPageCount_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedResult_ConditionSetRead__example_autogenerated": {
            "data": [
              {
                "key": "string",
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "name": "string"
              }
            ],
            "total_count": 1
          }
        }
      }
    },
    "PaginatedResult_ResourceRead_": {
      "name": {
        "typeId": "PaginatedResult_ResourceRead_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedResult_ResourceRead_"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRead",
                  "typeId": "ResourceRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of Resources",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultResourceReadData_example_autogenerated": [
                  {
                    "key": "string",
                    "id": "string",
                    "organization_id": "string",
                    "project_id": "string",
                    "environment_id": "string",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "name": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "total_count",
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultResourceReadTotalCount_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "page_count",
              "wireValue": "page_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultResourceReadPageCount_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedResult_ResourceRead__example_autogenerated": {
            "data": [
              {
                "key": "string",
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "name": "string"
              }
            ],
            "total_count": 1
          }
        }
      }
    },
    "PaginatedResult_ResourceRoleRead_": {
      "name": {
        "typeId": "PaginatedResult_ResourceRoleRead_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedResult_ResourceRoleRead_"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleRead",
                  "typeId": "ResourceRoleRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of Resource Roles",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultResourceRoleReadData_example_autogenerated": [
                  {
                    "name": "string",
                    "key": "string",
                    "id": "string",
                    "organization_id": "string",
                    "project_id": "string",
                    "environment_id": "string",
                    "resource_id": "string",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "total_count",
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultResourceRoleReadTotalCount_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "page_count",
              "wireValue": "page_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultResourceRoleReadPageCount_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedResult_ResourceRoleRead__example_autogenerated": {
            "data": [
              {
                "name": "string",
                "key": "string",
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string",
                "resource_id": "string",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              }
            ],
            "total_count": 1
          }
        }
      }
    },
    "PaginatedResult_RoleRead_": {
      "name": {
        "typeId": "PaginatedResult_RoleRead_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedResult_RoleRead_"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleRead",
                  "typeId": "RoleRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of Roles",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultRoleReadData_example_autogenerated": [
                  {
                    "name": "string",
                    "key": "string",
                    "id": "string",
                    "organization_id": "string",
                    "project_id": "string",
                    "environment_id": "string",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "total_count",
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultRoleReadTotalCount_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "page_count",
              "wireValue": "page_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultRoleReadPageCount_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedResult_RoleRead__example_autogenerated": {
            "data": [
              {
                "name": "string",
                "key": "string",
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              }
            ],
            "total_count": 1
          }
        }
      }
    },
    "PaginatedResult_TenantRead_": {
      "name": {
        "typeId": "PaginatedResult_TenantRead_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedResult_TenantRead_"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantRead",
                  "typeId": "TenantRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of Tenants",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultTenantReadData_example_autogenerated": [
                  {
                    "key": "string",
                    "id": "string",
                    "organization_id": "string",
                    "project_id": "string",
                    "environment_id": "string",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "last_action_at": "2024-01-15T09:30:00Z",
                    "name": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "total_count",
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultTenantReadTotalCount_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "page_count",
              "wireValue": "page_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultTenantReadPageCount_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedResult_TenantRead__example_autogenerated": {
            "data": [
              {
                "key": "string",
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "last_action_at": "2024-01-15T09:30:00Z",
                "name": "string"
              }
            ],
            "total_count": 1
          }
        }
      }
    },
    "PaginatedResult_UserRead_": {
      "name": {
        "typeId": "PaginatedResult_UserRead_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedResult_UserRead_"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserRead",
                  "typeId": "UserRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of Users",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultUserReadData_example_autogenerated": [
                  {
                    "key": "string",
                    "id": "string",
                    "organization_id": "string",
                    "project_id": "string",
                    "environment_id": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "total_count",
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultUserReadTotalCount_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "page_count",
              "wireValue": "page_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultUserReadPageCount_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedResult_UserRead__example_autogenerated": {
            "data": [
              {
                "key": "string",
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string"
              }
            ],
            "total_count": 1
          }
        }
      }
    },
    "Permission": {
      "name": {
        "typeId": "Permission",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Permission"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "object_type",
              "wireValue": "object_type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "MemberAccessObj",
              "typeId": "MemberAccessObj",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "access_level",
              "wireValue": "access_level"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "MemberAccessLevel",
              "typeId": "MemberAccessLevel",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "organization_key",
              "wireValue": "organization_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionOrganizationKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_key",
              "wireValue": "project_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionProjectKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_key",
              "wireValue": "environment_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionEnvironmentKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_name",
              "wireValue": "organization_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionOrganizationName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_name",
              "wireValue": "project_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionProjectName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_name",
              "wireValue": "environment_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionEnvironmentName_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Permission_example_autogenerated": {
            "organization_id": "string",
            "object_type": "org",
            "access_level": "admin"
          }
        }
      }
    },
    "ProjectCreateSettings": {
      "name": {
        "typeId": "ProjectCreateSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ProjectCreateSettings"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProjectCreateSettings_example_autogenerated": {}
        }
      }
    },
    "ProjectCreate": {
      "name": {
        "typeId": "ProjectCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ProjectCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the project (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the project.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "urn_namespace",
              "wireValue": "urn_namespace"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "[a-z0-9-]{2,}"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional namespace for URNs. If empty, URNs will be generated from project key.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectCreateUrnNamespace_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectCreateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a longer description outlining the project objectives",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectCreateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "settings",
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProjectCreateSettings",
                  "typeId": "ProjectCreateSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectCreateSettings_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "active_policy_repo_id",
              "wireValue": "active_policy_repo_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the id of the policy repo to use for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectCreateActivePolicyRepoId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProjectCreate_example_autogenerated": {
            "key": "string",
            "name": "string"
          }
        }
      }
    },
    "ProjectReadSettings": {
      "name": {
        "typeId": "ProjectReadSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ProjectReadSettings"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProjectReadSettings_example_autogenerated": {}
        }
      }
    },
    "ProjectRead": {
      "name": {
        "typeId": "ProjectRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ProjectRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the project (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the project.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "urn_namespace",
              "wireValue": "urn_namespace"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "[a-z0-9-]{2,}"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional namespace for URNs. If empty, URNs will be generated from project key.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadUrnNamespace_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the project belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the project was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the project was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a longer description outlining the project objectives",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "settings",
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProjectReadSettings",
                  "typeId": "ProjectReadSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadSettings_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "active_policy_repo_id",
              "wireValue": "active_policy_repo_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the id of the policy repo to use for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadActivePolicyRepoId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProjectRead_example_autogenerated": {
            "key": "string",
            "id": "string",
            "organization_id": "string",
            "created_at": "2024-01-15T09:30:00Z",
            "updated_at": "2024-01-15T09:30:00Z",
            "name": "string"
          }
        }
      }
    },
    "ProjectUpdateSettings": {
      "name": {
        "typeId": "ProjectUpdateSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ProjectUpdateSettings"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProjectUpdateSettings_example_autogenerated": {}
        }
      }
    },
    "ProjectUpdate": {
      "name": {
        "typeId": "ProjectUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ProjectUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectUpdateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a longer description outlining the project objectives",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectUpdateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "settings",
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProjectUpdateSettings",
                  "typeId": "ProjectUpdateSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectUpdateSettings_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "active_policy_repo_id",
              "wireValue": "active_policy_repo_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the id of the policy repo to use for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectUpdateActivePolicyRepoId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProjectUpdate_example_autogenerated": {}
        }
      }
    },
    "RelationsBlock": {
      "name": {
        "typeId": "RelationsBlock",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RelationsBlock"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "A actions definition block, typically contained within a resource type definition block.\nThe actions represents the ways you can interact with a protected resource.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RelationsBlock_example_autogenerated": {}
        }
      }
    },
    "RemoveRolePermissions": {
      "name": {
        "typeId": "RemoveRolePermissions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RemoveRolePermissions"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "permissions",
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of permissions to remove from the role. If a permission is not found it is skipped. Each permission can be either a resource action id, or `{resource_key}:{action_key}`,i.e: the \"permission name\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RemoveRolePermissionsPermissions_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RemoveRolePermissions_example_0": {
            "permissions": [
              "document:share"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceActionCreateAttributes": {
      "name": {
        "typeId": "ResourceActionCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceActionCreateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceActionCreate": {
      "name": {
        "typeId": "ResourceActionCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceActionCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the action (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionCreateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this action respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionCreateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionCreateAttributes",
                  "typeId": "ResourceActionCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionCreateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceActionCreate_example_0": {
            "key": "read",
            "name": "read",
            "description": "read a document"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceActionGroupCreateAttributes": {
      "name": {
        "typeId": "ResourceActionGroupCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceActionGroupCreateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionGroupCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceActionGroupCreate": {
      "name": {
        "typeId": "ResourceActionGroupCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceActionGroupCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the action group (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action group.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the action group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupCreateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this action group represents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupCreateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionGroupCreateAttributes",
                  "typeId": "ResourceActionGroupCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupCreateAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "actions",
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupCreateActions_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceActionGroupCreate_example_0": {
            "key": "writer",
            "name": "Writer",
            "description": "Writer Action Group",
            "actions": [
              "read",
              "update"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceActionGroupReadAttributes": {
      "name": {
        "typeId": "ResourceActionGroupReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceActionGroupReadAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionGroupReadAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceActionGroupRead": {
      "name": {
        "typeId": "ResourceActionGroupRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceActionGroupRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the action group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this action group represents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionGroupReadAttributes",
                  "typeId": "ResourceActionGroupReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "actions",
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadActions_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the action group (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action group.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the action group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the action group belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the action group belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the action group belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "resource_id",
              "wireValue": "resource_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the resource that the action group belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadResourceId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the action group was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the action group was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceActionGroupRead_example_0": {
            "name": "Writer",
            "description": "Writer Action Group",
            "actions": [
              "read",
              "update"
            ],
            "key": "writer",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceActionGroupUpdateAttributes": {
      "name": {
        "typeId": "ResourceActionGroupUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceActionGroupUpdateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionGroupUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceActionGroupUpdate": {
      "name": {
        "typeId": "ResourceActionGroupUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceActionGroupUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the action group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupUpdateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this action group represents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupUpdateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionGroupUpdateAttributes",
                  "typeId": "ResourceActionGroupUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupUpdateAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "actions",
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupUpdateActions_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionGroupUpdate_example_autogenerated": {}
        }
      }
    },
    "ResourceActionReadAttributes": {
      "name": {
        "typeId": "ResourceActionReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceActionReadAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionReadAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceActionRead": {
      "name": {
        "typeId": "ResourceActionRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceActionRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this action respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionReadAttributes",
                  "typeId": "ResourceActionReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the action (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "permission_name",
              "wireValue": "permission_name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the action, prefixed by the resource the action is acting upon.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadPermissionName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the action belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the action belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the action belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "resource_id",
              "wireValue": "resource_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the resource that the action belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadResourceId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the action was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the action was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceActionRead_example_0": {
            "name": "read",
            "description": "read a document",
            "key": "read",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "permission_name": "document:read",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceActionUpdateAttributes": {
      "name": {
        "typeId": "ResourceActionUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceActionUpdateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceActionUpdate": {
      "name": {
        "typeId": "ResourceActionUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceActionUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionUpdateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this action respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionUpdateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionUpdateAttributes",
                  "typeId": "ResourceActionUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionUpdateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceActionUpdate_example_0": {
            "description": "read a document"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceAttributeCreate": {
      "name": {
        "typeId": "ResourceAttributeCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceAttributeCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the attribute (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the attribute.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AttributeType",
              "typeId": "AttributeType",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this attribute respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeCreateDescription_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceAttributeCreate_example_0": {
            "key": "private",
            "type": "bool",
            "description": "whether or not the github repository is private"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceAttributeRead": {
      "name": {
        "typeId": "ResourceAttributeRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceAttributeRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AttributeType",
              "typeId": "AttributeType",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this attribute respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the attribute (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the attribute.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the attribute",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "resource_id",
              "wireValue": "resource_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the resource that the attribute belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadResourceId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "resource_key",
              "wireValue": "resource_key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the resource (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the resource.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadResourceKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the attribute belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the attribute belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the attribute belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the attribute was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the attribute was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "built_in",
              "wireValue": "built_in"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether the attribute is built-in, and managed by the Permit system.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadBuiltIn_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceAttributeRead_example_0": {
            "type": "bool",
            "description": "whether or not the github repository is private",
            "key": "private",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
            "resource_key": "repository",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z",
            "built_in": false
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceAttributeUpdate": {
      "name": {
        "typeId": "ResourceAttributeUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceAttributeUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AttributeType",
                  "typeId": "AttributeType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this attribute respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeUpdateDescription_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceAttributeUpdate_example_0": {
            "description": "whether or not the github repository is private"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceCreate": {
      "name": {
        "typeId": "ResourceCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the resource (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the resource.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceCreateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "urn",
              "wireValue": "urn"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) (Uniform Resource Name) of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceCreateUrn_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this resource respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceCreateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "actions",
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ActionBlockEditable",
                  "typeId": "ActionBlockEditable",
                  "inline": false,
                  "type": "named"
                },
                "type": "map"
              },
              "type": "container"
            },
            "docs": "\n        A actions definition block, typically contained within a resource type definition block.\n        The actions represents the ways you can interact with a protected resource.\n        ",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceCreateActions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AttributeBlockEditable",
                      "typeId": "AttributeBlockEditable",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Attributes that each resource of this type defines, and can be used in your ABAC policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceCreateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceCreate_example_0": {
            "key": "repository",
            "name": "Repository",
            "actions": {
              "clone": {},
              "read": {},
              "push": {}
            },
            "attributes": {
              "created": {
                "type": "time",
                "description": "the time (timestamp) the repository was created"
              },
              "private": {
                "type": "bool",
                "description": "whether the repo is private (if false, the repo is public)"
              }
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceInstanceCreateAttributes": {
      "name": {
        "typeId": "ResourceInstanceCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceInstanceCreateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceInstanceCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceInstanceCreate": {
      "name": {
        "typeId": "ResourceInstanceCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceInstanceCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique identifier by which Permit will identify the resource instance for permission checks. You will later pass this identifier to the `permit.check()` API. A key can be anything: for example the resource db id, a url slug, a UUID or anything else as long as it's unique on your end. The resource instance key must be url-friendly.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tenant",
              "wireValue": "tenant"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the *key* of the tenant that this resource belongs to, used to enforce tenant boundaries in multi-tenant apps.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceCreateTenant_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "resource",
              "wireValue": "resource"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the *key* of the resource (type) of this resource instance. For example: if this resource instance is the annual budget document, the key of the resource might be `document`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceCreateResource_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceInstanceCreateAttributes",
                  "typeId": "ResourceInstanceCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceCreateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceInstanceCreate_example_0": {
            "key": "react",
            "tenant": "default",
            "resource": "repository",
            "attributes": {
              "private": "false",
              "owner": "facebook"
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceInstanceReadAttributes": {
      "name": {
        "typeId": "ResourceInstanceReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceInstanceReadAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceInstanceReadAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceInstanceRead": {
      "name": {
        "typeId": "ResourceInstanceRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceInstanceRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique identifier by which Permit will identify the resource instance for permission checks. You will later pass this identifier to the `permit.check()` API. A key can be anything: for example the resource db id, a url slug, a UUID or anything else as long as it's unique on your end. The resource instance key must be url-friendly.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tenant",
              "wireValue": "tenant"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the *key* of the tenant that this resource belongs to, used to enforce tenant boundaries in multi-tenant apps.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadTenant_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "resource",
              "wireValue": "resource"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the *key* of the resource (type) of this resource instance. For example: if this resource instance is the annual budget document, the key of the resource might be `document`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadResource_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the resource instance",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the resource instance belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the resource instance belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the resource instance belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the resource instance was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the resource instance was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "resource_id",
              "wireValue": "resource_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the id of the resource (type) of this resource instance.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadResourceId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tenant_id",
              "wireValue": "tenant_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the id of the tenant of this resource instance.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadTenantId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceInstanceReadAttributes",
                  "typeId": "ResourceInstanceReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceInstanceRead_example_0": {
            "key": "react",
            "tenant": "default",
            "resource": "repository",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z",
            "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
            "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
            "attributes": {
              "private": "false",
              "owner": "facebook"
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceInstanceUpdateAttributes": {
      "name": {
        "typeId": "ResourceInstanceUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceInstanceUpdateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceInstanceUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceInstanceUpdate": {
      "name": {
        "typeId": "ResourceInstanceUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceInstanceUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceInstanceUpdateAttributes",
                  "typeId": "ResourceInstanceUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceUpdateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceInstanceUpdate_example_0": {
            "attributes": {
              "private": "false",
              "owner": "facebook"
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceRead": {
      "name": {
        "typeId": "ResourceRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the resource (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the resource.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the resource belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the resource belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the resource belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the resource was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the resource was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "urn",
              "wireValue": "urn"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) (Uniform Resource Name) of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadUrn_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this resource respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "actions",
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ActionBlockRead",
                      "typeId": "ActionBlockRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\n        A actions definition block, typically contained within a resource type definition block.\n        The actions represents the ways you can interact with a protected resource.\n        ",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadActions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AttributeBlockRead",
                      "typeId": "AttributeBlockRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Attributes that each resource of this type defines, and can be used in your ABAC policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "action_groups",
              "wireValue": "action_groups"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "container": {
                        "list": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "validation": {},
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadActionGroups_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceRead_example_0": {
            "key": "repository",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z",
            "name": "Repository",
            "urn": "prn:github:scm:repository",
            "description": "a git repository stored on github",
            "actions": {
              "clone": {
                "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
              },
              "read": {
                "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
              },
              "push": {
                "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
              }
            },
            "attributes": {
              "created": {
                "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                "type": "time",
                "description": "the time (timestamp) the repository was created"
              },
              "private": {
                "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                "type": "bool",
                "description": "whether the repo is private (if false, the repo is public)"
              }
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceReplace": {
      "name": {
        "typeId": "ResourceReplace",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceReplace"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReplaceName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "urn",
              "wireValue": "urn"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) (Uniform Resource Name) of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReplaceUrn_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this resource respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReplaceDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "actions",
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ActionBlockEditable",
                  "typeId": "ActionBlockEditable",
                  "inline": false,
                  "type": "named"
                },
                "type": "map"
              },
              "type": "container"
            },
            "docs": "\n        A actions definition block, typically contained within a resource type definition block.\n        The actions represents the ways you can interact with a protected resource.\n        ",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReplaceActions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AttributeBlockEditable",
                      "typeId": "AttributeBlockEditable",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Attributes that each resource of this type defines, and can be used in your ABAC policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReplaceAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceReplace_example_autogenerated": {
            "name": "string",
            "actions": {}
          }
        }
      }
    },
    "ResourceRoleCreateAttributes": {
      "name": {
        "typeId": "ResourceRoleCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceRoleCreateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceRoleCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceRoleCreate": {
      "name": {
        "typeId": "ResourceRoleCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceRoleCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleCreateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleCreateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "permissions",
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleCreatePermissions_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleCreateAttributes",
                  "typeId": "ResourceRoleCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleCreateAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extends",
                "camelCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "snakeCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                }
              },
              "wireValue": "extends"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleCreateExtends_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceRoleCreate_example_0": {
            "key": "maintainer",
            "name": "Maintainer",
            "description": "the maintainer role can read from the repo and push changes",
            "permissions": [
              "push"
            ],
            "extends": [
              "contributor"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceRoleListRoles0": {
      "name": {
        "typeId": "ResourceRoleListRoles0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceRoleListRoles0",
        "displayName": "ResourceRoleListRoles0"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceRoleRead",
              "typeId": "ResourceRoleRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceRoleRead",
              "typeId": "ResourceRoleRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceRoleListRoles0_example_autogenerated": [
            {
              "name": "string",
              "key": "string",
              "id": "string",
              "organization_id": "string",
              "project_id": "string",
              "environment_id": "string",
              "resource_id": "string",
              "created_at": "2024-01-15T09:30:00Z",
              "updated_at": "2024-01-15T09:30:00Z"
            }
          ]
        }
      }
    },
    "ResourceRoleListRoles": {
      "name": {
        "typeId": "ResourceRoleListRoles",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceRoleListRoles"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceRoleListRoles0",
              "typeId": "ResourceRoleListRoles0",
              "displayName": "ResourceRoleListRoles0",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "PaginatedResult_ResourceRoleRead_",
              "typeId": "PaginatedResult_ResourceRoleRead_",
              "inline": false,
              "displayName": "PaginatedResult[ResourceRoleRead]",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceRoleListRoles_example_autogenerated": [
            {
              "name": "string",
              "key": "string",
              "id": "string",
              "organization_id": "string",
              "project_id": "string",
              "environment_id": "string",
              "resource_id": "string",
              "created_at": "2024-01-15T09:30:00Z",
              "updated_at": "2024-01-15T09:30:00Z"
            }
          ]
        }
      }
    },
    "ResourceRoleList": {
      "name": {
        "typeId": "ResourceRoleList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceRoleList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "roles",
              "wireValue": "roles"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceRoleListRoles",
              "typeId": "ResourceRoleListRoles",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleListRoles_example_autogenerated": [
                  {
                    "name": "string",
                    "key": "string",
                    "id": "string",
                    "organization_id": "string",
                    "project_id": "string",
                    "environment_id": "string",
                    "resource_id": "string",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceRoleList_example_autogenerated": {
            "roles": [
              {
                "name": "string",
                "key": "string",
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string",
                "resource_id": "string",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              }
            ]
          }
        }
      }
    },
    "ResourceRoleReadAttributes": {
      "name": {
        "typeId": "ResourceRoleReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceRoleReadAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceRoleReadAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceRoleRead": {
      "name": {
        "typeId": "ResourceRoleRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceRoleRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "permissions",
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadPermissions_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleReadAttributes",
                  "typeId": "ResourceRoleReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extends",
                "camelCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "snakeCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                }
              },
              "wireValue": "extends"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadExtends_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "resource_id",
              "wireValue": "resource_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the resource that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadResourceId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the role was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the role was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceRoleRead_example_0": {
            "name": "Maintainer",
            "description": "the maintainer role can read from the repo and push changes",
            "permissions": [
              "push"
            ],
            "extends": [
              "contributor"
            ],
            "key": "maintainer",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceRoleUpdateAttributes": {
      "name": {
        "typeId": "ResourceRoleUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceRoleUpdateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceRoleUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceRoleUpdate": {
      "name": {
        "typeId": "ResourceRoleUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceRoleUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleUpdateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleUpdateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "permissions",
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleUpdatePermissions_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleUpdateAttributes",
                  "typeId": "ResourceRoleUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleUpdateAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extends",
                "camelCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "snakeCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                }
              },
              "wireValue": "extends"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleUpdateExtends_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceRoleUpdate_example_0": {
            "description": "the maintainer role can read from the repo and push changes",
            "permissions": [
              "push"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceUpdate": {
      "name": {
        "typeId": "ResourceUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourceUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceUpdateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "urn",
              "wireValue": "urn"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) (Uniform Resource Name) of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceUpdateUrn_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this resource respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceUpdateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "actions",
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ActionBlockEditable",
                      "typeId": "ActionBlockEditable",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\n        A actions definition block, typically contained within a resource type definition block.\n        The actions represents the ways you can interact with a protected resource.\n        ",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceUpdateActions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AttributeBlockEditable",
                      "typeId": "AttributeBlockEditable",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Attributes that each resource of this type defines, and can be used in your ABAC policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceUpdateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceUpdate_example_autogenerated": {}
        }
      }
    },
    "RoleAssignmentCreate": {
      "name": {
        "typeId": "RoleAssignmentCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleAssignmentCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "role",
              "wireValue": "role"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the role that will be assigned (accepts either the role id or the role key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentCreateRole_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tenant",
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the tenant the role is associated with (accepts either the tenant id or the tenant key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentCreateTenant_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "user",
              "wireValue": "user"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the user the role will be assigned to (accepts either the user id or the user key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentCreateUser_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RoleAssignmentCreate_example_0": {
            "role": "admin",
            "tenant": "stripe-inc",
            "user": "jane@coolcompany.com"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RoleAssignmentRead": {
      "name": {
        "typeId": "RoleAssignmentRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleAssignmentRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the role assignment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "user",
              "wireValue": "user"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the user the role is assigned to",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadUser_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "role",
              "wireValue": "role"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the role that is assigned",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadRole_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tenant",
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the tenant the role is associated with",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadTenant_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "user_id",
              "wireValue": "user_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the user",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadUserId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "role_id",
              "wireValue": "role_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadRoleId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tenant_id",
              "wireValue": "tenant_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadTenantId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the role assignment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the role assignment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the role assignment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the role assignment was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RoleAssignmentRead_example_0": {
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "user": "jane@coolcompany.com",
            "role": "admin",
            "tenant": "stripe-inc",
            "user_id": "7c60d51f-b44e-4682-87d6-449835ea4d11",
            "role_id": "405d8375-3514-403b-8c43-83ae74cfe022",
            "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e733",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RoleAssignmentRemove": {
      "name": {
        "typeId": "RoleAssignmentRemove",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleAssignmentRemove"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "role",
              "wireValue": "role"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the role that will be unassigned (accepts either the role id or the role key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentRemoveRole_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tenant",
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the tenant the role is associated with (accepts either the tenant id or the tenant key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentRemoveTenant_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "user",
              "wireValue": "user"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the user the role will be unassigned from (accepts either the user id or the user key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentRemoveUser_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RoleAssignmentRemove_example_0": {
            "role": "editor",
            "tenant": "google-inc",
            "user": "jane@coolcompany.com"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RoleBlock": {
      "name": {
        "typeId": "RoleBlock",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleBlock"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleBlockDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "permissions",
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleBlockPermissions_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleBlock_example_autogenerated": {}
        }
      }
    },
    "RoleCreateAttributes": {
      "name": {
        "typeId": "RoleCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleCreateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "RoleCreate": {
      "name": {
        "typeId": "RoleCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleCreateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleCreateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "permissions",
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleCreatePermissions_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleCreateAttributes",
                  "typeId": "RoleCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleCreateAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extends",
                "camelCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "snakeCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                }
              },
              "wireValue": "extends"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleCreateExtends_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RoleCreate_example_0": {
            "key": "editor",
            "name": "Editor",
            "description": "the editor role can read and write to documents",
            "permissions": [
              "document:write"
            ],
            "extends": [
              "viewer"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RoleListRoles0": {
      "name": {
        "typeId": "RoleListRoles0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleListRoles0",
        "displayName": "RoleListRoles0"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RoleRead",
              "typeId": "RoleRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RoleRead",
              "typeId": "RoleRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleListRoles0_example_autogenerated": [
            {
              "name": "string",
              "key": "string",
              "id": "string",
              "organization_id": "string",
              "project_id": "string",
              "environment_id": "string",
              "created_at": "2024-01-15T09:30:00Z",
              "updated_at": "2024-01-15T09:30:00Z"
            }
          ]
        }
      }
    },
    "RoleListRoles": {
      "name": {
        "typeId": "RoleListRoles",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleListRoles"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RoleListRoles0",
              "typeId": "RoleListRoles0",
              "displayName": "RoleListRoles0",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "PaginatedResult_RoleRead_",
              "typeId": "PaginatedResult_RoleRead_",
              "inline": false,
              "displayName": "PaginatedResult[RoleRead]",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleListRoles_example_autogenerated": [
            {
              "name": "string",
              "key": "string",
              "id": "string",
              "organization_id": "string",
              "project_id": "string",
              "environment_id": "string",
              "created_at": "2024-01-15T09:30:00Z",
              "updated_at": "2024-01-15T09:30:00Z"
            }
          ]
        }
      }
    },
    "RoleList": {
      "name": {
        "typeId": "RoleList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "roles",
              "wireValue": "roles"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RoleListRoles",
              "typeId": "RoleListRoles",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleListRoles_example_autogenerated": [
                  {
                    "name": "string",
                    "key": "string",
                    "id": "string",
                    "organization_id": "string",
                    "project_id": "string",
                    "environment_id": "string",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleList_example_autogenerated": {
            "roles": [
              {
                "name": "string",
                "key": "string",
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              }
            ]
          }
        }
      }
    },
    "RoleReadAttributes": {
      "name": {
        "typeId": "RoleReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleReadAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleReadAttributes_example_autogenerated": {}
        }
      }
    },
    "RoleRead": {
      "name": {
        "typeId": "RoleRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "permissions",
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadPermissions_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleReadAttributes",
                  "typeId": "RoleReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extends",
                "camelCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "snakeCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                }
              },
              "wireValue": "extends"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadExtends_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the role was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the role was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RoleRead_example_0": {
            "name": "Editor",
            "description": "the editor role can read and write to documents",
            "permissions": [
              "document:write"
            ],
            "extends": [
              "viewer"
            ],
            "key": "editor",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RoleUpdateAttributes": {
      "name": {
        "typeId": "RoleUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleUpdateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "RoleUpdate": {
      "name": {
        "typeId": "RoleUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RoleUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleUpdateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleUpdateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "permissions",
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleUpdatePermissions_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleUpdateAttributes",
                  "typeId": "RoleUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleUpdateAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extends",
                "camelCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "snakeCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                }
              },
              "wireValue": "extends"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleUpdateExtends_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RoleUpdate_example_0": {
            "description": "the editor role can read and write to documents",
            "permissions": [
              "document:write"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RolesBlock": {
      "name": {
        "typeId": "RolesBlock",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RolesBlock"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Resource roles definition block, defines all the roles on the resource.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RolesBlock_example_autogenerated": {}
        }
      }
    },
    "Statistics": {
      "name": {
        "typeId": "Statistics",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Statistics"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "roles",
              "wireValue": "roles"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsRoles_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "users",
              "wireValue": "users"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsUsers_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "policies",
              "wireValue": "policies"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsPolicies_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "resources",
              "wireValue": "resources"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsResources_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "tenants",
              "wireValue": "tenants"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsTenants_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "has_decision_logs",
              "wireValue": "has_decision_logs"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsHasDecisionLogs_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "members",
              "wireValue": "members"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OrgMemberReadWithGrants",
                  "typeId": "OrgMemberReadWithGrants",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsMembers_example_autogenerated": [
                  {
                    "id": "string",
                    "email": "string",
                    "email_verified": true,
                    "is_superuser": true,
                    "is_onboarding": true,
                    "onboarding_step": "create_organization",
                    "created_at": "2024-01-15T09:30:00Z",
                    "identities": [
                      {
                        "user_id": "string",
                        "provider": "string",
                        "sub": "string",
                        "email": "string",
                        "email_verified": true,
                        "auth0_info": {}
                      }
                    ],
                    "settings": {},
                    "grants": [
                      {
                        "organization_id": "string",
                        "object_type": "org",
                        "access_level": "admin"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Statistics_example_autogenerated": {
            "roles": 1,
            "users": 1,
            "policies": 1,
            "resources": 1,
            "tenants": 1,
            "has_decision_logs": true,
            "members": [
              {
                "id": "string",
                "email": "string",
                "email_verified": true,
                "is_superuser": true,
                "is_onboarding": true,
                "onboarding_step": "create_organization",
                "created_at": "2024-01-15T09:30:00Z",
                "identities": [
                  {
                    "user_id": "string",
                    "provider": "string",
                    "sub": "string",
                    "email": "string",
                    "email_verified": true,
                    "auth0_info": {}
                  }
                ],
                "settings": {},
                "grants": [
                  {
                    "organization_id": "string",
                    "object_type": "org",
                    "access_level": "admin"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "TenantCreateAttributes": {
      "name": {
        "typeId": "TenantCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TenantCreateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "TenantCreate": {
      "name": {
        "typeId": "TenantCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TenantCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify the tenant. The tenant key must be url-friendly (slugified).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A descriptive name for the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantCreateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantCreateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantCreateAttributes",
                  "typeId": "TenantCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantCreateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "TenantCreate_example_0": {
            "key": "stripeinc",
            "name": "Stripe Inc",
            "attributes": {
              "allowed_locations": [
                "US",
                "CA"
              ]
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "TenantCreateBulkOperation": {
      "name": {
        "typeId": "TenantCreateBulkOperation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TenantCreateBulkOperation"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "operations",
              "wireValue": "operations"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantCreate",
                  "typeId": "TenantCreate",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantCreateBulkOperationOperations_example_autogenerated": [
                  {
                    "key": "string",
                    "name": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantCreateBulkOperation_example_autogenerated": {
            "operations": [
              {
                "key": "string",
                "name": "string"
              }
            ]
          }
        }
      }
    },
    "TenantCreateBulkOperationResult": {
      "name": {
        "typeId": "TenantCreateBulkOperationResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TenantCreateBulkOperationResult"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantCreateBulkOperationResult_example_autogenerated": {}
        }
      }
    },
    "TenantDeleteBulkOperation": {
      "name": {
        "typeId": "TenantDeleteBulkOperation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TenantDeleteBulkOperation"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "idents",
              "wireValue": "idents"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantDeleteBulkOperationIdents_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantDeleteBulkOperation_example_autogenerated": {
            "idents": [
              "string"
            ]
          }
        }
      }
    },
    "TenantDeleteBulkOperationResult": {
      "name": {
        "typeId": "TenantDeleteBulkOperationResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TenantDeleteBulkOperationResult"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantDeleteBulkOperationResult_example_autogenerated": {}
        }
      }
    },
    "TenantReadAttributes": {
      "name": {
        "typeId": "TenantReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TenantReadAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantReadAttributes_example_autogenerated": {}
        }
      }
    },
    "TenantRead": {
      "name": {
        "typeId": "TenantRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TenantRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify the tenant. The tenant key must be url-friendly (slugified).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the tenant belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the tenant belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the tenant belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the tenant was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the tenant was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "last_action_at",
              "wireValue": "last_action_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the tenant was last active (ISO_8601 format). In other words, this is the last time a permission check was done on a resource belonging to this tenant.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadLastActionAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A descriptive name for the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantReadAttributes",
                  "typeId": "TenantReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "TenantRead_example_0": {
            "key": "stripeinc",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z",
            "last_action_at": "2019-08-24T14:15:22Z",
            "name": "Stripe Inc",
            "attributes": {
              "allowed_locations": [
                "US",
                "CA"
              ]
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "TenantUpdateAttributes": {
      "name": {
        "typeId": "TenantUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TenantUpdateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "TenantUpdate": {
      "name": {
        "typeId": "TenantUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TenantUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A descriptive name for the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantUpdateName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantUpdateDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantUpdateAttributes",
                  "typeId": "TenantUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantUpdateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantUpdate_example_autogenerated": {}
        }
      }
    },
    "UserCreateAttributes": {
      "name": {
        "typeId": "UserCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserCreateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "UserCreate": {
      "name": {
        "typeId": "UserCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9|@+\\-\\._]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify the user for permission checks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserCreateKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "email"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The email of the user. If synced, will be unique inside the environment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserCreateEmail_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "first_name",
              "wireValue": "first_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "First name of the user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserCreateFirstName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "last_name",
              "wireValue": "last_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last name of the user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserCreateLastName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserCreateAttributes",
                  "typeId": "UserCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserCreateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "UserCreate_example_0": {
            "key": "user|892179821739812389327",
            "email": "jane@coolcompany.com",
            "first_name": "Jane",
            "last_name": "Doe",
            "attributes": {
              "department": "marketing",
              "age": 30,
              "subscription": {
                "tier": "pro",
                "expired": false
              }
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "UserCreateBulkOperation": {
      "name": {
        "typeId": "UserCreateBulkOperation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserCreateBulkOperation"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "operations",
              "wireValue": "operations"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserCreate",
                  "typeId": "UserCreate",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserCreateBulkOperationOperations_example_autogenerated": [
                  {
                    "key": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserCreateBulkOperation_example_autogenerated": {
            "operations": [
              {
                "key": "string"
              }
            ]
          }
        }
      }
    },
    "UserCreateBulkOperationResult": {
      "name": {
        "typeId": "UserCreateBulkOperationResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserCreateBulkOperationResult"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserCreateBulkOperationResult_example_autogenerated": {}
        }
      }
    },
    "UserDeleteBulkOperation": {
      "name": {
        "typeId": "UserDeleteBulkOperation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserDeleteBulkOperation"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "idents",
              "wireValue": "idents"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserDeleteBulkOperationIdents_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserDeleteBulkOperation_example_autogenerated": {
            "idents": [
              "string"
            ]
          }
        }
      }
    },
    "UserDeleteBulkOperationResult": {
      "name": {
        "typeId": "UserDeleteBulkOperationResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserDeleteBulkOperationResult"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserDeleteBulkOperationResult_example_autogenerated": {}
        }
      }
    },
    "UserInTenant": {
      "name": {
        "typeId": "UserInTenant",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserInTenant"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "tenant",
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The tenant key which the user is associated with",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInTenantTenant_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "roles",
              "wireValue": "roles"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of roles assigned to the user in that tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInTenantRoles_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserStatus",
              "typeId": "UserStatus",
              "inline": false,
              "type": "named"
            },
            "docs": "Whether the user has signed in or not",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserInTenant_example_autogenerated": {
            "tenant": "string",
            "roles": [
              "string"
            ],
            "status": "active"
          }
        }
      }
    },
    "UserReadAttributes": {
      "name": {
        "typeId": "UserReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserReadAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserReadAttributes_example_autogenerated": {}
        }
      }
    },
    "UserRead": {
      "name": {
        "typeId": "UserRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserRead"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify the user for permission checks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the user",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "organization_id",
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the user belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadOrganizationId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "project_id",
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the user belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadProjectId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "environment_id",
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the user belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadEnvironmentId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "associated_tenants",
              "wireValue": "associated_tenants"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UserInTenant",
                      "typeId": "UserInTenant",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadAssociatedTenants_example_autogenerated": [
                  {
                    "tenant": "string",
                    "roles": [
                      "string"
                    ],
                    "status": "active"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "roles",
              "wireValue": "roles"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UserRole",
                      "typeId": "UserRole",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "availability": {
              "status": "DEPRECATED"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadRoles_example_autogenerated": [
                  {
                    "role": "string",
                    "tenant": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "email"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The email of the user. If synced, will be unique inside the environment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadEmail_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "first_name",
              "wireValue": "first_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "First name of the user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadFirstName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "last_name",
              "wireValue": "last_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last name of the user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadLastName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserReadAttributes",
                  "typeId": "UserReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "UserRead_example_0": {
            "key": "user|892179821739812389327",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "associated_tenants": [
              {
                "tenant": "stripe-inc",
                "roles": [
                  "admin"
                ],
                "status": "active"
              },
              {
                "tenant": "othercompany.com",
                "roles": [
                  "viewer"
                ],
                "status": "pending"
              }
            ],
            "roles": [
              {
                "role": "admin",
                "tenant": "stripe-inc"
              },
              {
                "role": "viewer",
                "tenant": "othercompany.com"
              }
            ],
            "email": "jane@coolcompany.com",
            "first_name": "Jane",
            "last_name": "Doe",
            "attributes": {
              "department": "marketing",
              "age": 30,
              "subscription": {
                "tier": "pro",
                "expired": false
              }
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "UserReplaceBulkOperation": {
      "name": {
        "typeId": "UserReplaceBulkOperation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserReplaceBulkOperation"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "operations",
              "wireValue": "operations"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserCreate",
                  "typeId": "UserCreate",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReplaceBulkOperationOperations_example_autogenerated": [
                  {
                    "key": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserReplaceBulkOperation_example_autogenerated": {
            "operations": [
              {
                "key": "string"
              }
            ]
          }
        }
      }
    },
    "UserReplaceBulkOperationResult": {
      "name": {
        "typeId": "UserReplaceBulkOperationResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserReplaceBulkOperationResult"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserReplaceBulkOperationResult_example_autogenerated": {}
        }
      }
    },
    "UserRole": {
      "name": {
        "typeId": "UserRole",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserRole"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "role",
              "wireValue": "role"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the role that is assigned",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserRoleRole_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tenant",
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the tenant the role is associated with",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserRoleTenant_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserRole_example_autogenerated": {
            "role": "string",
            "tenant": "string"
          }
        }
      }
    },
    "UserRoleCreate": {
      "name": {
        "typeId": "UserRoleCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserRoleCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "role",
              "wireValue": "role"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the role that will be assigned (accepts either the role id or the role key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserRoleCreateRole_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tenant",
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the tenant the role is associated with (accepts either the tenant id or the tenant key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserRoleCreateTenant_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "UserRoleCreate_example_0": {
            "role": "admin",
            "tenant": "stripe-inc"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "UserRoleRemove": {
      "name": {
        "typeId": "UserRoleRemove",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserRoleRemove"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "role",
              "wireValue": "role"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the role that will be unassigned (accepts either the role id or the role key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserRoleRemoveRole_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tenant",
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the tenant the role is associated with (accepts either the tenant id or the tenant key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserRoleRemoveTenant_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "UserRoleRemove_example_0": {
            "role": "editor",
            "tenant": "google-inc"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "UserStatus": {
      "name": {
        "typeId": "UserStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserStatus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "active",
              "wireValue": "active"
            }
          },
          {
            "name": {
              "name": "pending",
              "wireValue": "pending"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserStatus_example_autogenerated": "active"
        }
      }
    },
    "UserUpdateAttributes": {
      "name": {
        "typeId": "UserUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserUpdateAttributes"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "UserUpdate": {
      "name": {
        "typeId": "UserUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserUpdate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "email",
              "wireValue": "email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "email"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The email of the user. If synced, will be unique inside the environment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserUpdateEmail_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "first_name",
              "wireValue": "first_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "First name of the user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserUpdateFirstName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "last_name",
              "wireValue": "last_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last name of the user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserUpdateLastName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "attributes",
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserUpdateAttributes",
                  "typeId": "UserUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserUpdateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserUpdate_example_autogenerated": {}
        }
      }
    },
    "ValidationErrorLocItems": {
      "name": {
        "typeId": "ValidationErrorLocItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ValidationErrorLocItems"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ValidationErrorLocItems_example_autogenerated": "string"
        }
      }
    },
    "ValidationError": {
      "name": {
        "typeId": "ValidationError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ValidationError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "loc",
              "wireValue": "loc"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ValidationErrorLocItems",
                  "typeId": "ValidationErrorLocItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationErrorLoc_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "msg",
              "wireValue": "msg"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationErrorMsg_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationErrorType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ValidationError_example_autogenerated": {
            "loc": [
              "string"
            ],
            "msg": "string",
            "type": "string"
          }
        }
      }
    },
    "Organizations_delete_organization_Response_204": {
      "name": {
        "typeId": "Organizations_delete_organization_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Organizations_delete_organization_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Organizations_delete_organization_Response_204_example_autogenerated": {}
        }
      }
    },
    "Projects_delete_project_Response_204": {
      "name": {
        "typeId": "Projects_delete_project_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Projects_delete_project_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Projects_delete_project_Response_204_example_autogenerated": {}
        }
      }
    },
    "Environments_delete_environment_Response_204": {
      "name": {
        "typeId": "Environments_delete_environment_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Environments_delete_environment_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Environments_delete_environment_Response_204_example_autogenerated": {}
        }
      }
    },
    "ResourcesListResourcesResponse2001": {
      "name": {
        "typeId": "ResourcesListResourcesResponse2001",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResourcesListResourcesResponse2001",
        "displayName": "ResourcesListResourcesResponse2001"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceRead",
              "typeId": "ResourceRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceRead",
              "typeId": "ResourceRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourcesListResourcesResponse2001_example_autogenerated": [
            {
              "key": "string",
              "id": "string",
              "organization_id": "string",
              "project_id": "string",
              "environment_id": "string",
              "created_at": "2024-01-15T09:30:00Z",
              "updated_at": "2024-01-15T09:30:00Z",
              "name": "string"
            }
          ]
        }
      }
    },
    "Resources_list_resources_Response_200": {
      "name": {
        "typeId": "Resources_list_resources_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Resources_list_resources_Response_200"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "PaginatedResult_ResourceRead_",
              "typeId": "PaginatedResult_ResourceRead_",
              "inline": false,
              "displayName": "PaginatedResult[ResourceRead]",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourcesListResourcesResponse2001",
              "typeId": "ResourcesListResourcesResponse2001",
              "displayName": "ResourcesListResourcesResponse2001",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Resources_list_resources_Response_200_example_autogenerated": {
            "data": [
              {
                "key": "string",
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "name": "string"
              }
            ],
            "total_count": 1
          }
        }
      }
    },
    "Resources_delete_resource_Response_204": {
      "name": {
        "typeId": "Resources_delete_resource_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Resources_delete_resource_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Resources_delete_resource_Response_204_example_autogenerated": {}
        }
      }
    },
    "Resource Actions_delete_resource_action_Response_204": {
      "name": {
        "typeId": "Resource Actions_delete_resource_action_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Resource Actions_delete_resource_action_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Resource Actions_delete_resource_action_Response_204_example_autogenerated": {}
        }
      }
    },
    "Resource Action Groups_delete_resource_action_group_Response_204": {
      "name": {
        "typeId": "Resource Action Groups_delete_resource_action_group_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Resource Action Groups_delete_resource_action_group_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Resource Action Groups_delete_resource_action_group_Response_204_example_autogenerated": {}
        }
      }
    },
    "Resource Roles_delete_resource_role_Response_204": {
      "name": {
        "typeId": "Resource Roles_delete_resource_role_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Resource Roles_delete_resource_role_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Resource Roles_delete_resource_role_Response_204_example_autogenerated": {}
        }
      }
    },
    "Resource Attributes_delete_resource_attribute_Response_204": {
      "name": {
        "typeId": "Resource Attributes_delete_resource_attribute_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Resource Attributes_delete_resource_attribute_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Resource Attributes_delete_resource_attribute_Response_204_example_autogenerated": {}
        }
      }
    },
    "User Attributes_delete_user_attribute_Response_204": {
      "name": {
        "typeId": "User Attributes_delete_user_attribute_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "User Attributes_delete_user_attribute_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "User Attributes_delete_user_attribute_Response_204_example_autogenerated": {}
        }
      }
    },
    "RolesListRolesResponse2001": {
      "name": {
        "typeId": "RolesListRolesResponse2001",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RolesListRolesResponse2001",
        "displayName": "RolesListRolesResponse2001"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RoleRead",
              "typeId": "RoleRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RoleRead",
              "typeId": "RoleRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RolesListRolesResponse2001_example_autogenerated": [
            {
              "name": "string",
              "key": "string",
              "id": "string",
              "organization_id": "string",
              "project_id": "string",
              "environment_id": "string",
              "created_at": "2024-01-15T09:30:00Z",
              "updated_at": "2024-01-15T09:30:00Z"
            }
          ]
        }
      }
    },
    "Roles_list_roles_Response_200": {
      "name": {
        "typeId": "Roles_list_roles_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Roles_list_roles_Response_200"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "PaginatedResult_RoleRead_",
              "typeId": "PaginatedResult_RoleRead_",
              "inline": false,
              "displayName": "PaginatedResult[RoleRead]",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RolesListRolesResponse2001",
              "typeId": "RolesListRolesResponse2001",
              "displayName": "RolesListRolesResponse2001",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Roles_list_roles_Response_200_example_autogenerated": {
            "data": [
              {
                "name": "string",
                "key": "string",
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              }
            ],
            "total_count": 1
          }
        }
      }
    },
    "Roles_delete_role_Response_204": {
      "name": {
        "typeId": "Roles_delete_role_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Roles_delete_role_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Roles_delete_role_Response_204_example_autogenerated": {}
        }
      }
    },
    "ConditionSetsListConditionSetsResponse2001": {
      "name": {
        "typeId": "ConditionSetsListConditionSetsResponse2001",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSetsListConditionSetsResponse2001",
        "displayName": "ConditionSetsListConditionSetsResponse2001"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ConditionSetRead",
              "typeId": "ConditionSetRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ConditionSetRead",
              "typeId": "ConditionSetRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetsListConditionSetsResponse2001_example_autogenerated": [
            {
              "key": "string",
              "id": "string",
              "organization_id": "string",
              "project_id": "string",
              "environment_id": "string",
              "created_at": "2024-01-15T09:30:00Z",
              "updated_at": "2024-01-15T09:30:00Z",
              "name": "string"
            }
          ]
        }
      }
    },
    "Condition Sets_list_condition_sets_Response_200": {
      "name": {
        "typeId": "Condition Sets_list_condition_sets_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Condition Sets_list_condition_sets_Response_200"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "PaginatedResult_ConditionSetRead_",
              "typeId": "PaginatedResult_ConditionSetRead_",
              "inline": false,
              "displayName": "PaginatedResult[ConditionSetRead]",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ConditionSetsListConditionSetsResponse2001",
              "typeId": "ConditionSetsListConditionSetsResponse2001",
              "displayName": "ConditionSetsListConditionSetsResponse2001",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Condition Sets_list_condition_sets_Response_200_example_autogenerated": {
            "data": [
              {
                "key": "string",
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "name": "string"
              }
            ],
            "total_count": 1
          }
        }
      }
    },
    "Condition Sets_delete_condition_set_Response_204": {
      "name": {
        "typeId": "Condition Sets_delete_condition_set_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Condition Sets_delete_condition_set_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Condition Sets_delete_condition_set_Response_204_example_autogenerated": {}
        }
      }
    },
    "Users_delete_user_Response_204": {
      "name": {
        "typeId": "Users_delete_user_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Users_delete_user_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Users_delete_user_Response_204_example_autogenerated": {}
        }
      }
    },
    "Users_unassign_role_from_user_Response_204": {
      "name": {
        "typeId": "Users_unassign_role_from_user_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Users_unassign_role_from_user_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Users_unassign_role_from_user_Response_204_example_autogenerated": {}
        }
      }
    },
    "TenantsListTenantsResponse2001": {
      "name": {
        "typeId": "TenantsListTenantsResponse2001",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TenantsListTenantsResponse2001",
        "displayName": "TenantsListTenantsResponse2001"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TenantRead",
              "typeId": "TenantRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TenantRead",
              "typeId": "TenantRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantsListTenantsResponse2001_example_autogenerated": [
            {
              "key": "string",
              "id": "string",
              "organization_id": "string",
              "project_id": "string",
              "environment_id": "string",
              "created_at": "2024-01-15T09:30:00Z",
              "updated_at": "2024-01-15T09:30:00Z",
              "last_action_at": "2024-01-15T09:30:00Z",
              "name": "string"
            }
          ]
        }
      }
    },
    "Tenants_list_tenants_Response_200": {
      "name": {
        "typeId": "Tenants_list_tenants_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Tenants_list_tenants_Response_200"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "PaginatedResult_TenantRead_",
              "typeId": "PaginatedResult_TenantRead_",
              "inline": false,
              "displayName": "PaginatedResult[TenantRead]",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TenantsListTenantsResponse2001",
              "typeId": "TenantsListTenantsResponse2001",
              "displayName": "TenantsListTenantsResponse2001",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tenants_list_tenants_Response_200_example_autogenerated": {
            "data": [
              {
                "key": "string",
                "id": "string",
                "organization_id": "string",
                "project_id": "string",
                "environment_id": "string",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "last_action_at": "2024-01-15T09:30:00Z",
                "name": "string"
              }
            ],
            "total_count": 1
          }
        }
      }
    },
    "Tenants_delete_tenant_Response_204": {
      "name": {
        "typeId": "Tenants_delete_tenant_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Tenants_delete_tenant_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tenants_delete_tenant_Response_204_example_autogenerated": {}
        }
      }
    },
    "Tenants_delete_tenant_user_Response_204": {
      "name": {
        "typeId": "Tenants_delete_tenant_user_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Tenants_delete_tenant_user_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tenants_delete_tenant_user_Response_204_example_autogenerated": {}
        }
      }
    },
    "Role Assignments_unassign_role_Response_204": {
      "name": {
        "typeId": "Role Assignments_unassign_role_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Role Assignments_unassign_role_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Role Assignments_unassign_role_Response_204_example_autogenerated": {}
        }
      }
    },
    "Condition Set Rules_unassign_set_permissions_Response_204": {
      "name": {
        "typeId": "Condition Set Rules_unassign_set_permissions_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Condition Set Rules_unassign_set_permissions_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Condition Set Rules_unassign_set_permissions_Response_204_example_autogenerated": {}
        }
      }
    },
    "Resource Instances_delete_resource_instance_Response_204": {
      "name": {
        "typeId": "Resource Instances_delete_resource_instance_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Resource Instances_delete_resource_instance_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Resource Instances_delete_resource_instance_Response_204_example_autogenerated": {}
        }
      }
    }
  },
  "services": {
    "service_organizations": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Organizations"
          ],
          "packagePath": [],
          "file": "Organizations"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Organizations",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/orgs",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_organizationsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_organizationsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/orgs",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_organizations.list_organizations",
          "name": "list_organizations",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "OrganizationRead",
                      "typeId": "OrganizationRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsListOrganizationsExample": [
                      {
                        "key": "string",
                        "id": "string",
                        "is_enterprise": true,
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "name": "string",
                        "settings": {}
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the organizations that can be accessed by the\nauthenticated actor (i.e: human team member or api key).",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_organizationsListOrganizationsExample_200": {
                "displayName": "listOrganizationsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/orgs"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "key": "string",
                        "id": "string",
                        "is_enterprise": true,
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "name": "string",
                        "settings": {}
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "OrganizationRead",
                          "typeId": "OrganizationRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "organizationsListOrganizationsExample": [
                          {
                            "key": "string",
                            "id": "string",
                            "is_enterprise": true,
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "name": "string",
                            "settings": {}
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create Organization",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/orgs",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_organizationRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_organizationRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/orgs",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_organizations.create_organization",
          "name": "create_organization",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "OrganizationCreate",
              "typeId": "OrganizationCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "organizationsCreateOrganizationExample": {
                  "key": "string",
                  "name": "string"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OrganizationCreate",
                  "typeId": "OrganizationCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsCreateOrganizationExample": {
                      "key": "string",
                      "name": "string"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OrganizationReadWithAPIKey",
                  "typeId": "OrganizationReadWithAPIKey",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsCreateOrganizationExample": {
                      "key": "string",
                      "id": "string",
                      "is_enterprise": true,
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "settings": {},
                      "api_key_id": "string",
                      "api_key_secret": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new organization that will be owned by the\nauthenticated actor (i.e: human team member or api key).",
          "v2Examples": {
            "autogeneratedExamples": {
              "organizationsCreateOrganizationExample_200": {
                "displayName": "organizationsCreateOrganizationExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/orgs"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "string",
                    "name": "string"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "string",
                      "id": "string",
                      "is_enterprise": true,
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "settings": {},
                      "api_key_id": "string",
                      "api_key_secret": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "OrganizationReadWithAPIKey",
                      "typeId": "OrganizationReadWithAPIKey",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "organizationsCreateOrganizationExample": {
                          "key": "string",
                          "id": "string",
                          "is_enterprise": true,
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "settings": {},
                          "api_key_id": "string",
                          "api_key_secret": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Organization",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/orgs/",
            "parts": [
              {
                "pathParameter": "org_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "org_id",
              "docs": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "org_id_example": "org_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_organizationRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_organizationRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/orgs/",
            "parts": [
              {
                "pathParameter": "org_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "org_id",
              "docs": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "org_id_example": "org_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_organizations.get_organization",
          "name": "get_organization",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OrganizationRead",
                  "typeId": "OrganizationRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsGetOrganizationExample": {
                      "key": "string",
                      "id": "string",
                      "is_enterprise": true,
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single organization (Permit.io account) matching the given org_id,\nif such org exists and can be accessed by the authenticated actor.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_organizationsGetOrganizationExample_200": {
                "displayName": "getOrganizationExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/orgs/org_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "org_id": "org_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "string",
                      "id": "string",
                      "is_enterprise": true,
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "OrganizationRead",
                      "typeId": "OrganizationRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "organizationsGetOrganizationExample": {
                          "key": "string",
                          "id": "string",
                          "is_enterprise": true,
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "settings": {}
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Organization",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/orgs/",
            "parts": [
              {
                "pathParameter": "org_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "org_id",
              "docs": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "org_id_example": "org_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_organizationRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_organizationRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/orgs/",
            "parts": [
              {
                "pathParameter": "org_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "org_id",
              "docs": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "org_id_example": "org_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_organizations.delete_organization",
          "name": "delete_organization",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Organizations_delete_organization_Response_204",
                  "typeId": "Organizations_delete_organization_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsDeleteOrganizationExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes an organization (Permit.io account) and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_organizationsDeleteOrganizationExample_204": {
                "displayName": "deleteOrganizationExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/orgs/org_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "org_id": "org_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Organizations_delete_organization_Response_204",
                      "typeId": "Organizations_delete_organization_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "organizationsDeleteOrganizationExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Organization",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/orgs/",
            "parts": [
              {
                "pathParameter": "org_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "org_id",
              "docs": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "org_id_example": "org_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_organizationRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_organizationRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/orgs/",
            "parts": [
              {
                "pathParameter": "org_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "org_id",
              "docs": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "org_id_example": "org_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_organizations.update_organization",
          "name": "update_organization",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "OrganizationUpdate",
              "typeId": "OrganizationUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "organizationsUpdateOrganizationExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OrganizationUpdate",
                  "typeId": "OrganizationUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsUpdateOrganizationExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OrganizationRead",
                  "typeId": "OrganizationRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsUpdateOrganizationExample": {
                      "key": "string",
                      "id": "string",
                      "is_enterprise": true,
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Updates the organization's profile.",
          "v2Examples": {
            "autogeneratedExamples": {
              "organizationsUpdateOrganizationExample_200": {
                "displayName": "organizationsUpdateOrganizationExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/orgs/org_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "org_id": "org_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "string",
                      "id": "string",
                      "is_enterprise": true,
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "OrganizationRead",
                      "typeId": "OrganizationRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "organizationsUpdateOrganizationExample": {
                          "key": "string",
                          "id": "string",
                          "is_enterprise": true,
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "settings": {}
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Active Organization",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/orgs/active/org",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_active_organizationRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_active_organizationRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/orgs/active/org",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_organizations.get_active_organization",
          "name": "get_active_organization",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OrganizationRead",
                  "typeId": "OrganizationRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsGetActiveOrganizationExample": {
                      "key": "string",
                      "id": "string",
                      "is_enterprise": true,
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single organization (Permit.io account) matching the given org_id,\nif such org exists and can be accessed by the authenticated actor.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_organizationsGetActiveOrganizationExample_200": {
                "displayName": "getActiveOrganizationExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/orgs/active/org"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "string",
                      "id": "string",
                      "is_enterprise": true,
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "OrganizationRead",
                      "typeId": "OrganizationRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "organizationsGetActiveOrganizationExample": {
                          "key": "string",
                          "id": "string",
                          "is_enterprise": true,
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "settings": {}
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_projects": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Projects"
          ],
          "packagePath": [],
          "file": "Projects"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Projects",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_projectsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_projectsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_projects.list_projects",
          "name": "list_projects",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ProjectRead",
                      "typeId": "ProjectRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "projectsListProjectsExample": [
                      {
                        "key": "string",
                        "urn_namespace": "string",
                        "id": "string",
                        "organization_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "name": "string",
                        "description": "string",
                        "settings": {},
                        "active_policy_repo_id": "string"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the projects under the active organization.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_projectsListProjectsExample_200": {
                "displayName": "listProjectsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/projects"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "key": "string",
                        "urn_namespace": "string",
                        "id": "string",
                        "organization_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "name": "string",
                        "description": "string",
                        "settings": {},
                        "active_policy_repo_id": "string"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "ProjectRead",
                          "typeId": "ProjectRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "projectsListProjectsExample": [
                          {
                            "key": "string",
                            "urn_namespace": "string",
                            "id": "string",
                            "organization_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "name": "string",
                            "description": "string",
                            "settings": {},
                            "active_policy_repo_id": "string"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create Project",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_projectRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_projectRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_projects.create_project",
          "name": "create_project",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ProjectCreate",
              "typeId": "ProjectCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "projectsCreateProjectExample": {
                  "key": "string",
                  "name": "string"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProjectCreate",
                  "typeId": "ProjectCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "projectsCreateProjectExample": {
                      "key": "string",
                      "name": "string"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProjectRead",
                  "typeId": "ProjectRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "projectsCreateProjectExample": {
                      "key": "string",
                      "urn_namespace": "string",
                      "id": "string",
                      "organization_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "settings": {},
                      "active_policy_repo_id": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new project under the active organization.",
          "v2Examples": {
            "autogeneratedExamples": {
              "projectsCreateProjectExample_200": {
                "displayName": "projectsCreateProjectExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/projects"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "string",
                    "name": "string"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "string",
                      "urn_namespace": "string",
                      "id": "string",
                      "organization_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "settings": {},
                      "active_policy_repo_id": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ProjectRead",
                      "typeId": "ProjectRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "projectsCreateProjectExample": {
                          "key": "string",
                          "urn_namespace": "string",
                          "id": "string",
                          "organization_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "description": "string",
                          "settings": {},
                          "active_policy_repo_id": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Project",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_projectRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_projectRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_projects.get_project",
          "name": "get_project",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProjectRead",
                  "typeId": "ProjectRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "projectsGetProjectExample": {
                      "key": "string",
                      "urn_namespace": "string",
                      "id": "string",
                      "organization_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "settings": {},
                      "active_policy_repo_id": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single project matching the given proj_id, if such project exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_projectsGetProjectExample_200": {
                "displayName": "getProjectExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/projects/proj_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "string",
                      "urn_namespace": "string",
                      "id": "string",
                      "organization_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "settings": {},
                      "active_policy_repo_id": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ProjectRead",
                      "typeId": "ProjectRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "projectsGetProjectExample": {
                          "key": "string",
                          "urn_namespace": "string",
                          "id": "string",
                          "organization_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "description": "string",
                          "settings": {},
                          "active_policy_repo_id": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Project",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_projectRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_projectRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_projects.delete_project",
          "name": "delete_project",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Projects_delete_project_Response_204",
                  "typeId": "Projects_delete_project_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "projectsDeleteProjectExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes the project and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_projectsDeleteProjectExample_204": {
                "displayName": "deleteProjectExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/projects/proj_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Projects_delete_project_Response_204",
                      "typeId": "Projects_delete_project_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "projectsDeleteProjectExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Project",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_projectRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_projectRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_projects.update_project",
          "name": "update_project",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ProjectUpdate",
              "typeId": "ProjectUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "projectsUpdateProjectExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProjectUpdate",
                  "typeId": "ProjectUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "projectsUpdateProjectExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProjectRead",
                  "typeId": "ProjectRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "projectsUpdateProjectExample": {
                      "key": "string",
                      "urn_namespace": "string",
                      "id": "string",
                      "organization_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "settings": {},
                      "active_policy_repo_id": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Updates the project.",
          "v2Examples": {
            "autogeneratedExamples": {
              "projectsUpdateProjectExample_200": {
                "displayName": "projectsUpdateProjectExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/projects/proj_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "string",
                      "urn_namespace": "string",
                      "id": "string",
                      "organization_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "settings": {},
                      "active_policy_repo_id": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ProjectRead",
                      "typeId": "ProjectRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "projectsUpdateProjectExample": {
                          "key": "string",
                          "urn_namespace": "string",
                          "id": "string",
                          "organization_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "description": "string",
                          "settings": {},
                          "active_policy_repo_id": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_environments": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Environments"
          ],
          "packagePath": [],
          "file": "Environments"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Stats Environments",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/stats"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Stats_environmentsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Stats_environmentsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/stats"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.stats_environments",
          "name": "stats_environments",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentStats",
                  "typeId": "EnvironmentStats",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsStatsEnvironmentsExample": {
                      "key": "string",
                      "id": "string",
                      "organization_id": "string",
                      "project_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "custom_branch_name": "string",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {},
                      "pdp_configs": [
                        {
                          "id": "string",
                          "name": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "client_secret": "string"
                        }
                      ],
                      "stats": {
                        "roles": 1,
                        "users": 1,
                        "policies": 1,
                        "resources": 1,
                        "tenants": 1,
                        "has_decision_logs": true,
                        "members": [
                          {
                            "id": "string",
                            "email": "string",
                            "email_verified": true,
                            "name": "string",
                            "given_name": "string",
                            "family_name": "string",
                            "picture": "string",
                            "is_superuser": true,
                            "is_onboarding": true,
                            "onboarding_step": "create_organization",
                            "created_at": "2024-01-15T09:30:00Z",
                            "last_login": "2024-01-15T09:30:00Z",
                            "last_ip": "0.0.0.0",
                            "logins_count": 0,
                            "identities": [
                              {
                                "user_id": "string",
                                "provider": "string",
                                "sub": "string",
                                "email": "string",
                                "email_verified": true,
                                "auth0_info": {}
                              }
                            ],
                            "invite": {
                              "member_id": "string",
                              "email": "string",
                              "role": "admin",
                              "id": "string",
                              "organization_id": "string",
                              "invite_code": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "status": "pending",
                              "failed_reason": "string"
                            },
                            "settings": {},
                            "grants": [
                              {
                                "organization_id": "string",
                                "project_id": "string",
                                "environment_id": "string",
                                "object_type": "org",
                                "access_level": "admin",
                                "organization_key": "string",
                                "project_key": "string",
                                "environment_key": "string",
                                "organization_name": "string",
                                "project_name": "string",
                                "environment_name": "string"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_environmentsStatsEnvironmentsExample_200": {
                "displayName": "statsEnvironmentsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/projects/proj_id/envs/env_id/stats"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "string",
                      "id": "string",
                      "organization_id": "string",
                      "project_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "custom_branch_name": "string",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {},
                      "pdp_configs": [
                        {
                          "id": "string",
                          "name": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "client_secret": "string"
                        }
                      ],
                      "stats": {
                        "roles": 1,
                        "users": 1,
                        "policies": 1,
                        "resources": 1,
                        "tenants": 1,
                        "has_decision_logs": true,
                        "members": [
                          {
                            "id": "string",
                            "email": "string",
                            "email_verified": true,
                            "name": "string",
                            "given_name": "string",
                            "family_name": "string",
                            "picture": "string",
                            "is_superuser": true,
                            "is_onboarding": true,
                            "onboarding_step": "create_organization",
                            "created_at": "2024-01-15T09:30:00Z",
                            "last_login": "2024-01-15T09:30:00Z",
                            "last_ip": "0.0.0.0",
                            "logins_count": 0,
                            "identities": [
                              {
                                "user_id": "string",
                                "provider": "string",
                                "sub": "string",
                                "email": "string",
                                "email_verified": true,
                                "auth0_info": {}
                              }
                            ],
                            "invite": {
                              "member_id": "string",
                              "email": "string",
                              "role": "admin",
                              "id": "string",
                              "organization_id": "string",
                              "invite_code": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "status": "pending",
                              "failed_reason": "string"
                            },
                            "settings": {},
                            "grants": [
                              {
                                "organization_id": "string",
                                "project_id": "string",
                                "environment_id": "string",
                                "object_type": "org",
                                "access_level": "admin",
                                "organization_key": "string",
                                "project_key": "string",
                                "environment_key": "string",
                                "organization_name": "string",
                                "project_name": "string",
                                "environment_name": "string"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EnvironmentStats",
                      "typeId": "EnvironmentStats",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "environmentsStatsEnvironmentsExample": {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "description": "string",
                          "custom_branch_name": "string",
                          "jwks": {
                            "keys": [
                              {}
                            ]
                          },
                          "settings": {},
                          "pdp_configs": [
                            {
                              "id": "string",
                              "name": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "client_secret": "string"
                            }
                          ],
                          "stats": {
                            "roles": 1,
                            "users": 1,
                            "policies": 1,
                            "resources": 1,
                            "tenants": 1,
                            "has_decision_logs": true,
                            "members": [
                              {
                                "id": "string",
                                "email": "string",
                                "email_verified": true,
                                "name": "string",
                                "given_name": "string",
                                "family_name": "string",
                                "picture": "string",
                                "is_superuser": true,
                                "is_onboarding": true,
                                "onboarding_step": "create_organization",
                                "created_at": "2024-01-15T09:30:00Z",
                                "last_login": "2024-01-15T09:30:00Z",
                                "last_ip": "0.0.0.0",
                                "logins_count": 0,
                                "identities": [
                                  {
                                    "user_id": "string",
                                    "provider": "string",
                                    "sub": "string",
                                    "email": "string",
                                    "email_verified": true,
                                    "auth0_info": {}
                                  }
                                ],
                                "invite": {
                                  "member_id": "string",
                                  "email": "string",
                                  "role": "admin",
                                  "id": "string",
                                  "organization_id": "string",
                                  "invite_code": "string",
                                  "created_at": "2024-01-15T09:30:00Z",
                                  "status": "pending",
                                  "failed_reason": "string"
                                },
                                "settings": {},
                                "grants": [
                                  {
                                    "organization_id": "string",
                                    "project_id": "string",
                                    "environment_id": "string",
                                    "object_type": "org",
                                    "access_level": "admin",
                                    "organization_key": "string",
                                    "project_key": "string",
                                    "environment_key": "string",
                                    "organization_name": "string",
                                    "project_name": "string",
                                    "environment_name": "string"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List Environments",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_environmentsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_environmentsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.list_environments",
          "name": "list_environments",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EnvironmentRead",
                      "typeId": "EnvironmentRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsListEnvironmentsExample": [
                      {
                        "key": "string",
                        "id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "name": "string",
                        "description": "string",
                        "custom_branch_name": "string",
                        "jwks": {
                          "keys": [
                            {}
                          ]
                        },
                        "settings": {}
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the environments under a given project.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_environmentsListEnvironmentsExample_200": {
                "displayName": "listEnvironmentsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/projects/proj_id/envs"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "key": "string",
                        "id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "name": "string",
                        "description": "string",
                        "custom_branch_name": "string",
                        "jwks": {
                          "keys": [
                            {}
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "EnvironmentRead",
                          "typeId": "EnvironmentRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "environmentsListEnvironmentsExample": [
                          {
                            "key": "string",
                            "id": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "name": "string",
                            "description": "string",
                            "custom_branch_name": "string",
                            "jwks": {
                              "keys": [
                                {}
                              ]
                            },
                            "settings": {}
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create Environment",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_environmentRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_environmentRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.create_environment",
          "name": "create_environment",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EnvironmentCreate",
              "typeId": "EnvironmentCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "environmentsCreateEnvironmentExample": {
                  "key": "string",
                  "name": "string"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentCreate",
                  "typeId": "EnvironmentCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsCreateEnvironmentExample": {
                      "key": "string",
                      "name": "string"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentRead",
                  "typeId": "EnvironmentRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsCreateEnvironmentExample": {
                      "key": "string",
                      "id": "string",
                      "organization_id": "string",
                      "project_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "custom_branch_name": "string",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new environment under a given project.",
          "v2Examples": {
            "autogeneratedExamples": {
              "environmentsCreateEnvironmentExample_200": {
                "displayName": "environmentsCreateEnvironmentExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/projects/proj_id/envs"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "string",
                    "name": "string"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "string",
                      "id": "string",
                      "organization_id": "string",
                      "project_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "custom_branch_name": "string",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EnvironmentRead",
                      "typeId": "EnvironmentRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "environmentsCreateEnvironmentExample": {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "description": "string",
                          "custom_branch_name": "string",
                          "jwks": {
                            "keys": [
                              {}
                            ]
                          },
                          "settings": {}
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Environment",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_environmentRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_environmentRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.get_environment",
          "name": "get_environment",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentRead",
                  "typeId": "EnvironmentRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsGetEnvironmentExample": {
                      "key": "string",
                      "id": "string",
                      "organization_id": "string",
                      "project_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "custom_branch_name": "string",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single environment matching the given env_id, if such environment exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_environmentsGetEnvironmentExample_200": {
                "displayName": "getEnvironmentExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/projects/proj_id/envs/env_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "string",
                      "id": "string",
                      "organization_id": "string",
                      "project_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "custom_branch_name": "string",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EnvironmentRead",
                      "typeId": "EnvironmentRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "environmentsGetEnvironmentExample": {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "description": "string",
                          "custom_branch_name": "string",
                          "jwks": {
                            "keys": [
                              {}
                            ]
                          },
                          "settings": {}
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Environment",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_environmentRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_environmentRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.delete_environment",
          "name": "delete_environment",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Environments_delete_environment_Response_204",
                  "typeId": "Environments_delete_environment_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsDeleteEnvironmentExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes an environment and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_environmentsDeleteEnvironmentExample_204": {
                "displayName": "deleteEnvironmentExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/projects/proj_id/envs/env_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Environments_delete_environment_Response_204",
                      "typeId": "Environments_delete_environment_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "environmentsDeleteEnvironmentExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Environment",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_environmentRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_environmentRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.update_environment",
          "name": "update_environment",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EnvironmentUpdate",
              "typeId": "EnvironmentUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "environmentsUpdateEnvironmentExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentUpdate",
                  "typeId": "EnvironmentUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsUpdateEnvironmentExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentRead",
                  "typeId": "EnvironmentRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsUpdateEnvironmentExample": {
                      "key": "string",
                      "id": "string",
                      "organization_id": "string",
                      "project_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "custom_branch_name": "string",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Updates the environment.",
          "v2Examples": {
            "autogeneratedExamples": {
              "environmentsUpdateEnvironmentExample_200": {
                "displayName": "environmentsUpdateEnvironmentExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/projects/proj_id/envs/env_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "string",
                      "id": "string",
                      "organization_id": "string",
                      "project_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "custom_branch_name": "string",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EnvironmentRead",
                      "typeId": "EnvironmentRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "environmentsUpdateEnvironmentExample": {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "description": "string",
                          "custom_branch_name": "string",
                          "jwks": {
                            "keys": [
                              {}
                            ]
                          },
                          "settings": {}
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Copy Environment",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/copy"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Copy_environmentRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Copy_environmentRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/copy"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.copy_environment",
          "name": "copy_environment",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EnvironmentCopy",
              "typeId": "EnvironmentCopy",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "environmentsCopyEnvironmentExample": {
                  "target_env": {}
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentCopy",
                  "typeId": "EnvironmentCopy",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsCopyEnvironmentExample": {
                      "target_env": {}
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnvironmentRead",
                  "typeId": "EnvironmentRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsCopyEnvironmentExample": {
                      "key": "string",
                      "id": "string",
                      "organization_id": "string",
                      "project_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "custom_branch_name": "string",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Copy environment\n\nThis endpoint either duplicates an existing environment to a new environment\nin the same project, or copies from an existing environment to another\nexisting environment.\n\nThe `scope` object controls which objects will be copied to the target\nenvironment.\n\nTo clone to a new environment, the user must have write permissions\nto the containing project. To clone into an existing environment,\nthe user must have write permissions to the target environment.\n\nCopying environments across projects or organizations is not\nallowed.",
          "v2Examples": {
            "autogeneratedExamples": {
              "environmentsCopyEnvironmentExample_201": {
                "displayName": "environmentsCopyEnvironmentExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/projects/proj_id/envs/env_id/copy"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "target_env": {}
                  }
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "value": {
                      "key": "string",
                      "id": "string",
                      "organization_id": "string",
                      "project_id": "string",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "name": "string",
                      "description": "string",
                      "custom_branch_name": "string",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EnvironmentRead",
                      "typeId": "EnvironmentRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "environmentsCopyEnvironmentExample": {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "description": "string",
                          "custom_branch_name": "string",
                          "jwks": {
                            "keys": [
                              {}
                            ]
                          },
                          "settings": {}
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_resources": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Resources"
          ],
          "packagePath": [],
          "file": "Resources"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Resources",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "search",
                "wireValue": "search"
              },
              "docs": "Text search for the resources name or key",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "search_example": "search"
                }
              }
            },
            {
              "name": {
                "name": "include_built_in",
                "wireValue": "include_built_in"
              },
              "docs": "Whether to include or exclude built-in resources, default is False",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_built_in_example": false
                }
              }
            },
            {
              "name": {
                "name": "include_total_count",
                "wireValue": "include_total_count"
              },
              "docs": "Include total count in response",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_total_count_example": false
                }
              }
            },
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_resourcesRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_resourcesRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resources.list_resources",
          "name": "list_resources",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Resources_list_resources_Response_200",
                  "typeId": "Resources_list_resources_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesListResourcesExample": {
                      "data": [
                        {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "urn": "string",
                          "description": "string",
                          "actions": {},
                          "attributes": {},
                          "action_groups": {}
                        }
                      ],
                      "total_count": 1,
                      "page_count": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the resources defined in your schema.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourcesListResourcesExample_200": {
                "displayName": "listResourcesExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "data": [
                        {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "urn": "string",
                          "description": "string",
                          "actions": {},
                          "attributes": {},
                          "action_groups": {}
                        }
                      ],
                      "total_count": 1,
                      "page_count": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Resources_list_resources_Response_200",
                      "typeId": "Resources_list_resources_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourcesListResourcesExample": {
                          "data": [
                            {
                              "key": "string",
                              "id": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z",
                              "name": "string",
                              "urn": "string",
                              "description": "string",
                              "actions": {},
                              "attributes": {},
                              "action_groups": {}
                            }
                          ],
                          "total_count": 1,
                          "page_count": 0
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create Resource",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_resourceRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_resourceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resources.create_resource",
          "name": "create_resource",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceCreate",
              "typeId": "ResourceCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourcesCreateResourceExample": {
                  "key": "repository",
                  "name": "Repository",
                  "actions": {
                    "clone": {},
                    "read": {},
                    "push": {}
                  },
                  "attributes": {
                    "created": {
                      "type": "time",
                      "description": "the time (timestamp) the repository was created"
                    },
                    "private": {
                      "type": "bool",
                      "description": "whether the repo is private (if false, the repo is public)"
                    }
                  }
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceCreate",
                  "typeId": "ResourceCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesCreateResourceExample": {
                      "key": "repository",
                      "name": "Repository",
                      "actions": {
                        "clone": {},
                        "read": {},
                        "push": {}
                      },
                      "attributes": {
                        "created": {
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRead",
                  "typeId": "ResourceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesCreateResourceExample": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new resource (a type of object you may protect with permissions).",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourcesCreateResourceExample_200": {
                "displayName": "resourcesCreateResourceExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/resources"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "repository",
                    "name": "Repository",
                    "actions": {
                      "clone": {},
                      "read": {},
                      "push": {}
                    },
                    "attributes": {
                      "created": {
                        "type": "time",
                        "description": "the time (timestamp) the repository was created"
                      },
                      "private": {
                        "type": "bool",
                        "description": "whether the repo is private (if false, the repo is public)"
                      }
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceRead",
                      "typeId": "ResourceRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourcesCreateResourceExample": {
                          "key": "repository",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "name": "Repository",
                          "urn": "prn:github:scm:repository",
                          "description": "a git repository stored on github",
                          "actions": {
                            "clone": {
                              "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                            },
                            "read": {
                              "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                            },
                            "push": {
                              "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                            }
                          },
                          "attributes": {
                            "created": {
                              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                              "type": "time",
                              "description": "the time (timestamp) the repository was created"
                            },
                            "private": {
                              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                              "type": "bool",
                              "description": "whether the repo is private (if false, the repo is public)"
                            }
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Resource",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_resourceRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resourceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resources.get_resource",
          "name": "get_resource",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRead",
                  "typeId": "ResourceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesGetResourceExample": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single resource, if such resource exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourcesGetResourceExample_200": {
                "displayName": "getResourceExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceRead",
                      "typeId": "ResourceRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourcesGetResourceExample": {
                          "key": "repository",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "name": "Repository",
                          "urn": "prn:github:scm:repository",
                          "description": "a git repository stored on github",
                          "actions": {
                            "clone": {
                              "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                            },
                            "read": {
                              "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                            },
                            "push": {
                              "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                            }
                          },
                          "attributes": {
                            "created": {
                              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                              "type": "time",
                              "description": "the time (timestamp) the repository was created"
                            },
                            "private": {
                              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                              "type": "bool",
                              "description": "whether the repo is private (if false, the repo is public)"
                            }
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Replace Resource",
          "method": "PUT",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Replace_resourceRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Replace_resourceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resources.replace_resource",
          "name": "replace_resource",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceReplace",
              "typeId": "ResourceReplace",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourcesReplaceResourceExample": {
                  "name": "string",
                  "actions": {}
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceReplace",
                  "typeId": "ResourceReplace",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesReplaceResourceExample": {
                      "name": "string",
                      "actions": {}
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRead",
                  "typeId": "ResourceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesReplaceResourceExample": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Completely replaces the resource definition.\n\n- If the resource key is changed, all role and permissions assignments for the the resource will be revoked.\n- If the resource key is unchanged, but some actions are removed or renamed from the resource definition,\nrole and permissions assignments for these actions will be revoked.\n\nTODO: we need to decide if we are auto-revoking, or if we are rejecting the PUT completely while there are permissions that can be affected.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourcesReplaceResourceExample_200": {
                "displayName": "resourcesReplaceResourceExample",
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "string",
                    "actions": {}
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceRead",
                      "typeId": "ResourceRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourcesReplaceResourceExample": {
                          "key": "repository",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "name": "Repository",
                          "urn": "prn:github:scm:repository",
                          "description": "a git repository stored on github",
                          "actions": {
                            "clone": {
                              "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                            },
                            "read": {
                              "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                            },
                            "push": {
                              "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                            }
                          },
                          "attributes": {
                            "created": {
                              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                              "type": "time",
                              "description": "the time (timestamp) the repository was created"
                            },
                            "private": {
                              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                              "type": "bool",
                              "description": "whether the repo is private (if false, the repo is public)"
                            }
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Resource",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_resourceRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_resourceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resources.delete_resource",
          "name": "delete_resource",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Resources_delete_resource_Response_204",
                  "typeId": "Resources_delete_resource_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesDeleteResourceExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes the resource and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourcesDeleteResourceExample_204": {
                "displayName": "deleteResourceExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Resources_delete_resource_Response_204",
                      "typeId": "Resources_delete_resource_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourcesDeleteResourceExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Resource",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_resourceRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_resourceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resources.update_resource",
          "name": "update_resource",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceUpdate",
              "typeId": "ResourceUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourcesUpdateResourceExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceUpdate",
                  "typeId": "ResourceUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesUpdateResourceExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRead",
                  "typeId": "ResourceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesUpdateResourceExample": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the resource definition.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourcesUpdateResourceExample_200": {
                "displayName": "resourcesUpdateResourceExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceRead",
                      "typeId": "ResourceRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourcesUpdateResourceExample": {
                          "key": "repository",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "name": "Repository",
                          "urn": "prn:github:scm:repository",
                          "description": "a git repository stored on github",
                          "actions": {
                            "clone": {
                              "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                            },
                            "read": {
                              "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                            },
                            "push": {
                              "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                            }
                          },
                          "attributes": {
                            "created": {
                              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                              "type": "time",
                              "description": "the time (timestamp) the repository was created"
                            },
                            "private": {
                              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                              "type": "bool",
                              "description": "whether the repo is private (if false, the repo is public)"
                            }
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_resourceActions": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Resource Actions"
          ],
          "packagePath": [],
          "file": "Resource Actions"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Resource Actions",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_resource_actionsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_resource_actionsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActions.list_resource_actions",
          "name": "list_resource_actions",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceActionRead",
                      "typeId": "ResourceActionRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionsListResourceActionsExample": [
                      {
                        "name": "string",
                        "description": "string",
                        "attributes": {},
                        "key": "string",
                        "id": "string",
                        "permission_name": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "resource_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the actions defined on the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceActionsListResourceActionsExample_200": {
                "displayName": "listResourceActionsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/actions"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "name": "string",
                        "description": "string",
                        "attributes": {},
                        "key": "string",
                        "id": "string",
                        "permission_name": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "resource_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "ResourceActionRead",
                          "typeId": "ResourceActionRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceActionsListResourceActionsExample": [
                          {
                            "name": "string",
                            "description": "string",
                            "attributes": {},
                            "key": "string",
                            "id": "string",
                            "permission_name": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "resource_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create Resource Action",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_resource_actionRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_resource_actionRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActions.create_resource_action",
          "name": "create_resource_action",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceActionCreate",
              "typeId": "ResourceActionCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceActionsCreateResourceActionExample": {
                  "key": "read",
                  "name": "read",
                  "description": "read a document"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionCreate",
                  "typeId": "ResourceActionCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionsCreateResourceActionExample": {
                      "key": "read",
                      "name": "read",
                      "description": "read a document"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionRead",
                  "typeId": "ResourceActionRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionsCreateResourceActionExample": {
                      "name": "read",
                      "description": "read a document",
                      "key": "read",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_name": "document:read",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new action that can affect the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceActionsCreateResourceActionExample_200": {
                "displayName": "resourceActionsCreateResourceActionExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/actions"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "read",
                    "name": "read",
                    "description": "read a document"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "read",
                      "description": "read a document",
                      "key": "read",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_name": "document:read",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceActionRead",
                      "typeId": "ResourceActionRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceActionsCreateResourceActionExample": {
                          "name": "read",
                          "description": "read a document",
                          "key": "read",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "permission_name": "document:read",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Resource Action",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions/"
              },
              {
                "pathParameter": "action_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "action_id",
              "docs": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_id_example": "action_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_resource_actionRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_actionRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions/"
              },
              {
                "pathParameter": "action_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "action_id",
              "docs": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_id_example": "action_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActions.get_resource_action",
          "name": "get_resource_action",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionRead",
                  "typeId": "ResourceActionRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionsGetResourceActionExample": {
                      "name": "read",
                      "description": "read a document",
                      "key": "read",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_name": "document:read",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single action defined on the resource, if such action exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceActionsGetResourceActionExample_200": {
                "displayName": "getResourceActionExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/actions/action_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "action_id": "action_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "read",
                      "description": "read a document",
                      "key": "read",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_name": "document:read",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceActionRead",
                      "typeId": "ResourceActionRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceActionsGetResourceActionExample": {
                          "name": "read",
                          "description": "read a document",
                          "key": "read",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "permission_name": "document:read",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Resource Action",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions/"
              },
              {
                "pathParameter": "action_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "action_id",
              "docs": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_id_example": "action_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_resource_actionRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_resource_actionRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions/"
              },
              {
                "pathParameter": "action_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "action_id",
              "docs": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_id_example": "action_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActions.delete_resource_action",
          "name": "delete_resource_action",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Resource Actions_delete_resource_action_Response_204",
                  "typeId": "Resource Actions_delete_resource_action_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionsDeleteResourceActionExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes the action and all its related data.\nThis includes any permissions granted to perform the action.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceActionsDeleteResourceActionExample_204": {
                "displayName": "deleteResourceActionExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/actions/action_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "action_id": "action_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Resource Actions_delete_resource_action_Response_204",
                      "typeId": "Resource Actions_delete_resource_action_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceActionsDeleteResourceActionExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Resource Action",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions/"
              },
              {
                "pathParameter": "action_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "action_id",
              "docs": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_id_example": "action_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_resource_actionRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_resource_actionRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions/"
              },
              {
                "pathParameter": "action_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "action_id",
              "docs": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_id_example": "action_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActions.update_resource_action",
          "name": "update_resource_action",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceActionUpdate",
              "typeId": "ResourceActionUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceActionsUpdateResourceActionExample": {
                  "description": "read a document"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionUpdate",
                  "typeId": "ResourceActionUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionsUpdateResourceActionExample": {
                      "description": "read a document"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionRead",
                  "typeId": "ResourceActionRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionsUpdateResourceActionExample": {
                      "name": "read",
                      "description": "read a document",
                      "key": "read",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_name": "document:read",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the action defined on a resource.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceActionsUpdateResourceActionExample_200": {
                "displayName": "resourceActionsUpdateResourceActionExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/actions/action_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "action_id": "action_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "description": "read a document"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "read",
                      "description": "read a document",
                      "key": "read",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_name": "document:read",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceActionRead",
                      "typeId": "ResourceActionRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceActionsUpdateResourceActionExample": {
                          "name": "read",
                          "description": "read a document",
                          "key": "read",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "permission_name": "document:read",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_resourceActionGroups": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Resource Action Groups"
          ],
          "packagePath": [],
          "file": "Resource Action Groups"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Resource Action Groups",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_resource_action_groupsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_resource_action_groupsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActionGroups.list_resource_action_groups",
          "name": "list_resource_action_groups",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceActionGroupRead",
                      "typeId": "ResourceActionGroupRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionGroupsListResourceActionGroupsExample": [
                      {
                        "name": "string",
                        "description": "string",
                        "attributes": {},
                        "actions": [
                          "string"
                        ],
                        "key": "string",
                        "id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "resource_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the action groups defined on the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceActionGroupsListResourceActionGroupsExample_200": {
                "displayName": "listResourceActionGroupsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/action_groups"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "name": "string",
                        "description": "string",
                        "attributes": {},
                        "actions": [
                          "string"
                        ],
                        "key": "string",
                        "id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "resource_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "ResourceActionGroupRead",
                          "typeId": "ResourceActionGroupRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceActionGroupsListResourceActionGroupsExample": [
                          {
                            "name": "string",
                            "description": "string",
                            "attributes": {},
                            "actions": [
                              "string"
                            ],
                            "key": "string",
                            "id": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "resource_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create Resource Action Group",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_resource_action_groupRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_resource_action_groupRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActionGroups.create_resource_action_group",
          "name": "create_resource_action_group",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceActionGroupCreate",
              "typeId": "ResourceActionGroupCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceActionGroupsCreateResourceActionGroupExample": {
                  "key": "writer",
                  "name": "Writer",
                  "description": "Writer Action Group",
                  "actions": [
                    "read",
                    "update"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionGroupCreate",
                  "typeId": "ResourceActionGroupCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionGroupsCreateResourceActionGroupExample": {
                      "key": "writer",
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionGroupRead",
                  "typeId": "ResourceActionGroupRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionGroupsCreateResourceActionGroupExample": {
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ],
                      "key": "writer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new action group that can affect the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceActionGroupsCreateResourceActionGroupExample_200": {
                "displayName": "resourceActionGroupsCreateResourceActionGroupExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/action_groups"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "writer",
                    "name": "Writer",
                    "description": "Writer Action Group",
                    "actions": [
                      "read",
                      "update"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ],
                      "key": "writer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceActionGroupRead",
                      "typeId": "ResourceActionGroupRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceActionGroupsCreateResourceActionGroupExample": {
                          "name": "Writer",
                          "description": "Writer Action Group",
                          "actions": [
                            "read",
                            "update"
                          ],
                          "key": "writer",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Resource Action Group",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups/"
              },
              {
                "pathParameter": "action_group_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "action_group_id",
              "docs": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_group_id_example": "action_group_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_resource_action_groupRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_action_groupRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups/"
              },
              {
                "pathParameter": "action_group_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "action_group_id",
              "docs": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_group_id_example": "action_group_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActionGroups.get_resource_action_group",
          "name": "get_resource_action_group",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionGroupRead",
                  "typeId": "ResourceActionGroupRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionGroupsGetResourceActionGroupExample": {
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ],
                      "key": "writer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single action group defined on the resource, if such action exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceActionGroupsGetResourceActionGroupExample_200": {
                "displayName": "getResourceActionGroupExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/action_groups/action_group_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "action_group_id": "action_group_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ],
                      "key": "writer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceActionGroupRead",
                      "typeId": "ResourceActionGroupRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceActionGroupsGetResourceActionGroupExample": {
                          "name": "Writer",
                          "description": "Writer Action Group",
                          "actions": [
                            "read",
                            "update"
                          ],
                          "key": "writer",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Resource Action Group",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups/"
              },
              {
                "pathParameter": "action_group_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "action_group_id",
              "docs": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_group_id_example": "action_group_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_resource_action_groupRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_resource_action_groupRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups/"
              },
              {
                "pathParameter": "action_group_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "action_group_id",
              "docs": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_group_id_example": "action_group_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActionGroups.delete_resource_action_group",
          "name": "delete_resource_action_group",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Resource Action Groups_delete_resource_action_group_Response_204",
                  "typeId": "Resource Action Groups_delete_resource_action_group_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionGroupsDeleteResourceActionGroupExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes the action and all its related data.\nThis includes any permissions granted to perform the action.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceActionGroupsDeleteResourceActionGroupExample_204": {
                "displayName": "deleteResourceActionGroupExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/action_groups/action_group_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "action_group_id": "action_group_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Resource Action Groups_delete_resource_action_group_Response_204",
                      "typeId": "Resource Action Groups_delete_resource_action_group_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceActionGroupsDeleteResourceActionGroupExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Resource Action Group",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups/"
              },
              {
                "pathParameter": "action_group_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "action_group_id",
              "docs": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_group_id_example": "action_group_id"
                }
              }
            },
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_resource_action_groupRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_resource_action_groupRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups/"
              },
              {
                "pathParameter": "action_group_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "action_group_id",
              "docs": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_group_id_example": "action_group_id"
                }
              }
            },
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActionGroups.update_resource_action_group",
          "name": "update_resource_action_group",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceActionGroupUpdate",
              "typeId": "ResourceActionGroupUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceActionGroupsUpdateResourceActionGroupExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionGroupUpdate",
                  "typeId": "ResourceActionGroupUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionGroupsUpdateResourceActionGroupExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceActionGroupRead",
                  "typeId": "ResourceActionGroupRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionGroupsUpdateResourceActionGroupExample": {
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ],
                      "key": "writer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the action defined on a resource.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceActionGroupsUpdateResourceActionGroupExample_200": {
                "displayName": "resourceActionGroupsUpdateResourceActionGroupExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/action_groups/action_group_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "resource_id": "resource_id",
                    "action_group_id": "action_group_id",
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ],
                      "key": "writer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceActionGroupRead",
                      "typeId": "ResourceActionGroupRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceActionGroupsUpdateResourceActionGroupExample": {
                          "name": "Writer",
                          "description": "Writer Action Group",
                          "actions": [
                            "read",
                            "update"
                          ],
                          "key": "writer",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_resourceRoles": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Resource Roles"
          ],
          "packagePath": [],
          "file": "Resource Roles"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Resource Roles",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_resource_rolesRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_resource_rolesRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.list_resource_roles",
          "name": "list_resource_roles",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceRoleRead",
                      "typeId": "ResourceRoleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesListResourceRolesExample": [
                      {
                        "name": "string",
                        "description": "string",
                        "permissions": [
                          "string"
                        ],
                        "attributes": {},
                        "extends": [
                          "string"
                        ],
                        "key": "string",
                        "id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "resource_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the roles defined on the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceRolesListResourceRolesExample_200": {
                "displayName": "listResourceRolesExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "name": "string",
                        "description": "string",
                        "permissions": [
                          "string"
                        ],
                        "attributes": {},
                        "extends": [
                          "string"
                        ],
                        "key": "string",
                        "id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "resource_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "ResourceRoleRead",
                          "typeId": "ResourceRoleRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceRolesListResourceRolesExample": [
                          {
                            "name": "string",
                            "description": "string",
                            "permissions": [
                              "string"
                            ],
                            "attributes": {},
                            "extends": [
                              "string"
                            ],
                            "key": "string",
                            "id": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "resource_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create Resource Role",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_resource_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_resource_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.create_resource_role",
          "name": "create_resource_role",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceRoleCreate",
              "typeId": "ResourceRoleCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceRolesCreateResourceRoleExample": {
                  "key": "maintainer",
                  "name": "Maintainer",
                  "description": "the maintainer role can read from the repo and push changes",
                  "permissions": [
                    "push"
                  ],
                  "extends": [
                    "contributor"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleCreate",
                  "typeId": "ResourceRoleCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesCreateResourceRoleExample": {
                      "key": "maintainer",
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleRead",
                  "typeId": "ResourceRoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesCreateResourceRoleExample": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new role associated with the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceRolesCreateResourceRoleExample_200": {
                "displayName": "resourceRolesCreateResourceRoleExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "maintainer",
                    "name": "Maintainer",
                    "description": "the maintainer role can read from the repo and push changes",
                    "permissions": [
                      "push"
                    ],
                    "extends": [
                      "contributor"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceRoleRead",
                      "typeId": "ResourceRoleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceRolesCreateResourceRoleExample": {
                          "name": "Maintainer",
                          "description": "the maintainer role can read from the repo and push changes",
                          "permissions": [
                            "push"
                          ],
                          "extends": [
                            "contributor"
                          ],
                          "key": "maintainer",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Resource Role",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_resource_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.get_resource_role",
          "name": "get_resource_role",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleRead",
                  "typeId": "ResourceRoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesGetResourceRoleExample": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single role defined on the resource, if such role exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceRolesGetResourceRoleExample_200": {
                "displayName": "getResourceRoleExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceRoleRead",
                      "typeId": "ResourceRoleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceRolesGetResourceRoleExample": {
                          "name": "Maintainer",
                          "description": "the maintainer role can read from the repo and push changes",
                          "permissions": [
                            "push"
                          ],
                          "extends": [
                            "contributor"
                          ],
                          "key": "maintainer",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Resource Role",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_resource_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_resource_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.delete_resource_role",
          "name": "delete_resource_role",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Resource Roles_delete_resource_role_Response_204",
                  "typeId": "Resource Roles_delete_resource_role_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesDeleteResourceRoleExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes the role and all its related data.\nThis includes any permissions granted to said role.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceRolesDeleteResourceRoleExample_204": {
                "displayName": "deleteResourceRoleExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Resource Roles_delete_resource_role_Response_204",
                      "typeId": "Resource Roles_delete_resource_role_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceRolesDeleteResourceRoleExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Resource Role",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_resource_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_resource_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.update_resource_role",
          "name": "update_resource_role",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceRoleUpdate",
              "typeId": "ResourceRoleUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceRolesUpdateResourceRoleExample": {
                  "description": "the maintainer role can read from the repo and push changes",
                  "permissions": [
                    "push"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleUpdate",
                  "typeId": "ResourceRoleUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesUpdateResourceRoleExample": {
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleRead",
                  "typeId": "ResourceRoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesUpdateResourceRoleExample": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the role defined on a resource.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceRolesUpdateResourceRoleExample_200": {
                "displayName": "resourceRolesUpdateResourceRoleExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "description": "the maintainer role can read from the repo and push changes",
                    "permissions": [
                      "push"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceRoleRead",
                      "typeId": "ResourceRoleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceRolesUpdateResourceRoleExample": {
                          "name": "Maintainer",
                          "description": "the maintainer role can read from the repo and push changes",
                          "permissions": [
                            "push"
                          ],
                          "extends": [
                            "contributor"
                          ],
                          "key": "maintainer",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Assign Permissions to Role",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Assign_permissions_to_resource_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Assign_permissions_to_resource_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.assign_permissions_to_resource_role",
          "name": "assign_permissions_to_resource_role",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AddRolePermissions",
              "typeId": "AddRolePermissions",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceRolesAssignPermissionsToResourceRoleExample": {
                  "permissions": [
                    "document:write"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AddRolePermissions",
                  "typeId": "AddRolePermissions",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesAssignPermissionsToResourceRoleExample": {
                      "permissions": [
                        "document:write"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleRead",
                  "typeId": "ResourceRoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesAssignPermissionsToResourceRoleExample": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Assign permissions to role.\n\nIf some of the permissions specified are already assigned, will skip them.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceRolesAssignPermissionsToResourceRoleExample_200": {
                "displayName": "resourceRolesAssignPermissionsToResourceRoleExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id/permissions"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "permissions": [
                      "document:write"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceRoleRead",
                      "typeId": "ResourceRoleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceRolesAssignPermissionsToResourceRoleExample": {
                          "name": "Maintainer",
                          "description": "the maintainer role can read from the repo and push changes",
                          "permissions": [
                            "push"
                          ],
                          "extends": [
                            "contributor"
                          ],
                          "key": "maintainer",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Remove Permissions from Role",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Remove_permissions_from_resource_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Remove_permissions_from_resource_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.remove_permissions_from_resource_role",
          "name": "remove_permissions_from_resource_role",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RemoveRolePermissions",
              "typeId": "RemoveRolePermissions",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceRolesRemovePermissionsFromResourceRoleExample": {
                  "permissions": [
                    "document:share"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RemoveRolePermissions",
                  "typeId": "RemoveRolePermissions",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesRemovePermissionsFromResourceRoleExample": {
                      "permissions": [
                        "document:share"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleRead",
                  "typeId": "ResourceRoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesRemovePermissionsFromResourceRoleExample": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Remove permissions from role.\n\nIf some of the permissions specified are already unassigned, will skip them.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceRolesRemovePermissionsFromResourceRoleExample_200": {
                "displayName": "resourceRolesRemovePermissionsFromResourceRoleExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id/permissions"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "permissions": [
                      "document:share"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceRoleRead",
                      "typeId": "ResourceRoleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceRolesRemovePermissionsFromResourceRoleExample": {
                          "name": "Maintainer",
                          "description": "the maintainer role can read from the repo and push changes",
                          "permissions": [
                            "push"
                          ],
                          "extends": [
                            "contributor"
                          ],
                          "key": "maintainer",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Resource Role Ancestors",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/ancestors"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_resource_role_ancestorsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_role_ancestorsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/ancestors"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.get_resource_role_ancestors",
          "name": "get_resource_role_ancestors",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleList",
                  "typeId": "ResourceRoleList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesGetResourceRoleAncestorsExample": {
                      "roles": [
                        {
                          "name": "string",
                          "description": "string",
                          "permissions": [
                            "string"
                          ],
                          "attributes": {},
                          "extends": [
                            "string"
                          ],
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "resource_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceRolesGetResourceRoleAncestorsExample_200": {
                "displayName": "getResourceRoleAncestorsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id/ancestors"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "roles": [
                        {
                          "name": "string",
                          "description": "string",
                          "permissions": [
                            "string"
                          ],
                          "attributes": {},
                          "extends": [
                            "string"
                          ],
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "resource_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceRoleList",
                      "typeId": "ResourceRoleList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceRolesGetResourceRoleAncestorsExample": {
                          "roles": [
                            {
                              "name": "string",
                              "description": "string",
                              "permissions": [
                                "string"
                              ],
                              "attributes": {},
                              "extends": [
                                "string"
                              ],
                              "key": "string",
                              "id": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "resource_id": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Resource Role Descendants",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/descendants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_resource_role_descendantsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_role_descendantsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/descendants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.get_resource_role_descendants",
          "name": "get_resource_role_descendants",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceRoleList",
                  "typeId": "ResourceRoleList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesGetResourceRoleDescendantsExample": {
                      "roles": [
                        {
                          "name": "string",
                          "description": "string",
                          "permissions": [
                            "string"
                          ],
                          "attributes": {},
                          "extends": [
                            "string"
                          ],
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "resource_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceRolesGetResourceRoleDescendantsExample_200": {
                "displayName": "getResourceRoleDescendantsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id/descendants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "roles": [
                        {
                          "name": "string",
                          "description": "string",
                          "permissions": [
                            "string"
                          ],
                          "attributes": {},
                          "extends": [
                            "string"
                          ],
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "resource_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceRoleList",
                      "typeId": "ResourceRoleList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceRolesGetResourceRoleDescendantsExample": {
                          "roles": [
                            {
                              "name": "string",
                              "description": "string",
                              "permissions": [
                                "string"
                              ],
                              "attributes": {},
                              "extends": [
                                "string"
                              ],
                              "key": "string",
                              "id": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "resource_id": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_resourceAttributes": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Resource Attributes"
          ],
          "packagePath": [],
          "file": "Resource Attributes"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Resource Attributes",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_resource_attributesRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_resource_attributesRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceAttributes.list_resource_attributes",
          "name": "list_resource_attributes",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceAttributeRead",
                      "typeId": "ResourceAttributeRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceAttributesListResourceAttributesExample": [
                      {
                        "type": "bool",
                        "description": "string",
                        "key": "string",
                        "id": "string",
                        "resource_id": "string",
                        "resource_key": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "built_in": true
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the attributes defined on the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceAttributesListResourceAttributesExample_200": {
                "displayName": "listResourceAttributesExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/attributes"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "type": "bool",
                        "description": "string",
                        "key": "string",
                        "id": "string",
                        "resource_id": "string",
                        "resource_key": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "built_in": true
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "ResourceAttributeRead",
                          "typeId": "ResourceAttributeRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceAttributesListResourceAttributesExample": [
                          {
                            "type": "bool",
                            "description": "string",
                            "key": "string",
                            "id": "string",
                            "resource_id": "string",
                            "resource_key": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "built_in": true
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create Resource Attribute",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_resource_attributeRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_resource_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceAttributes.create_resource_attribute",
          "name": "create_resource_attribute",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceAttributeCreate",
              "typeId": "ResourceAttributeCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceAttributesCreateResourceAttributeExample": {
                  "key": "private",
                  "type": "bool",
                  "description": "whether or not the github repository is private"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceAttributeCreate",
                  "typeId": "ResourceAttributeCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceAttributesCreateResourceAttributeExample": {
                      "key": "private",
                      "type": "bool",
                      "description": "whether or not the github repository is private"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceAttributeRead",
                  "typeId": "ResourceAttributeRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceAttributesCreateResourceAttributeExample": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new attribute as part of the resource definition.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceAttributesCreateResourceAttributeExample_200": {
                "displayName": "resourceAttributesCreateResourceAttributeExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/attributes"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "private",
                    "type": "bool",
                    "description": "whether or not the github repository is private"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceAttributeRead",
                      "typeId": "ResourceAttributeRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceAttributesCreateResourceAttributeExample": {
                          "type": "bool",
                          "description": "whether or not the github repository is private",
                          "key": "private",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "resource_key": "repository",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "built_in": false
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Resource Attribute",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "attribute_id",
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_resource_attributeRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "attribute_id",
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceAttributes.get_resource_attribute",
          "name": "get_resource_attribute",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceAttributeRead",
                  "typeId": "ResourceAttributeRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceAttributesGetResourceAttributeExample": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single attribute defined on the resource, if such attribute exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceAttributesGetResourceAttributeExample_200": {
                "displayName": "getResourceAttributeExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/attributes/attribute_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "attribute_id": "attribute_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceAttributeRead",
                      "typeId": "ResourceAttributeRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceAttributesGetResourceAttributeExample": {
                          "type": "bool",
                          "description": "whether or not the github repository is private",
                          "key": "private",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "resource_key": "repository",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "built_in": false
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Resource Attribute",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "attribute_id",
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_resource_attributeRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_resource_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "attribute_id",
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceAttributes.delete_resource_attribute",
          "name": "delete_resource_attribute",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Resource Attributes_delete_resource_attribute_Response_204",
                  "typeId": "Resource Attributes_delete_resource_attribute_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceAttributesDeleteResourceAttributeExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes the attribute and all its related data.\n\nNote: If the attribute is used by policies, removing it will cause the\nattribute to evaluate as `undefined`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceAttributesDeleteResourceAttributeExample_204": {
                "displayName": "deleteResourceAttributeExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/attributes/attribute_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "attribute_id": "attribute_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Resource Attributes_delete_resource_attribute_Response_204",
                      "typeId": "Resource Attributes_delete_resource_attribute_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceAttributesDeleteResourceAttributeExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Resource Attribute",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "attribute_id",
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_resource_attributeRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_resource_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "resource_id",
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": "attribute_id",
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceAttributes.update_resource_attribute",
          "name": "update_resource_attribute",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceAttributeUpdate",
              "typeId": "ResourceAttributeUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceAttributesUpdateResourceAttributeExample": {
                  "description": "whether or not the github repository is private"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceAttributeUpdate",
                  "typeId": "ResourceAttributeUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceAttributesUpdateResourceAttributeExample": {
                      "description": "whether or not the github repository is private"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceAttributeRead",
                  "typeId": "ResourceAttributeRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceAttributesUpdateResourceAttributeExample": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the attribute defined on a resource.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceAttributesUpdateResourceAttributeExample_200": {
                "displayName": "resourceAttributesUpdateResourceAttributeExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/attributes/attribute_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "attribute_id": "attribute_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "description": "whether or not the github repository is private"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceAttributeRead",
                      "typeId": "ResourceAttributeRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceAttributesUpdateResourceAttributeExample": {
                          "type": "bool",
                          "description": "whether or not the github repository is private",
                          "key": "private",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "resource_key": "repository",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "built_in": false
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_userAttributes": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "User Attributes"
          ],
          "packagePath": [],
          "file": "User Attributes"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List User Attributes",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "resource_id",
                "wireValue": "resource_id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "__user",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "__user"
                }
              }
            },
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_user_attributesRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_user_attributesRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_userAttributes.list_user_attributes",
          "name": "list_user_attributes",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceAttributeRead",
                      "typeId": "ResourceAttributeRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userAttributesListUserAttributesExample": [
                      {
                        "type": "bool",
                        "description": "string",
                        "key": "string",
                        "id": "string",
                        "resource_id": "string",
                        "resource_key": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "built_in": true
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the attributes defined on the User resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_userAttributesListUserAttributesExample_200": {
                "displayName": "listUserAttributesExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/users/attributes"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "type": "bool",
                        "description": "string",
                        "key": "string",
                        "id": "string",
                        "resource_id": "string",
                        "resource_key": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "built_in": true
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "ResourceAttributeRead",
                          "typeId": "ResourceAttributeRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userAttributesListUserAttributesExample": [
                          {
                            "type": "bool",
                            "description": "string",
                            "key": "string",
                            "id": "string",
                            "resource_id": "string",
                            "resource_key": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "built_in": true
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create User Attribute",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "resource_id",
                "wireValue": "resource_id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "__user",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "__user"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_user_attributeRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_user_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_userAttributes.create_user_attribute",
          "name": "create_user_attribute",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceAttributeCreate",
              "typeId": "ResourceAttributeCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "userAttributesCreateUserAttributeExample": {
                  "key": "private",
                  "type": "bool",
                  "description": "whether or not the github repository is private"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceAttributeCreate",
                  "typeId": "ResourceAttributeCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userAttributesCreateUserAttributeExample": {
                      "key": "private",
                      "type": "bool",
                      "description": "whether or not the github repository is private"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceAttributeRead",
                  "typeId": "ResourceAttributeRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userAttributesCreateUserAttributeExample": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new attribute for the User resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "userAttributesCreateUserAttributeExample_200": {
                "displayName": "userAttributesCreateUserAttributeExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/users/attributes"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "private",
                    "type": "bool",
                    "description": "whether or not the github repository is private"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceAttributeRead",
                      "typeId": "ResourceAttributeRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userAttributesCreateUserAttributeExample": {
                          "type": "bool",
                          "description": "whether or not the github repository is private",
                          "key": "private",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "resource_key": "repository",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "built_in": false
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get User Attribute",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "attribute_id",
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "resource_id",
                "wireValue": "resource_id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "__user",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "__user"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_user_attributeRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_user_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "attribute_id",
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_userAttributes.get_user_attribute",
          "name": "get_user_attribute",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceAttributeRead",
                  "typeId": "ResourceAttributeRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userAttributesGetUserAttributeExample": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single attribute defined on the User resource, if such attribute exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_userAttributesGetUserAttributeExample_200": {
                "displayName": "getUserAttributeExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/users/attributes/attribute_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "attribute_id": "attribute_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceAttributeRead",
                      "typeId": "ResourceAttributeRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userAttributesGetUserAttributeExample": {
                          "type": "bool",
                          "description": "whether or not the github repository is private",
                          "key": "private",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "resource_key": "repository",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "built_in": false
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete User Attribute",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "attribute_id",
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "resource_id",
                "wireValue": "resource_id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "__user",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "__user"
                }
              }
            },
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_user_attributeRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_user_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "attribute_id",
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_userAttributes.delete_user_attribute",
          "name": "delete_user_attribute",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "User Attributes_delete_user_attribute_Response_204",
                  "typeId": "User Attributes_delete_user_attribute_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userAttributesDeleteUserAttributeExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes the attribute and all its related data.\n\nNote: If the attribute is used by policies, removing it will cause the\nattribute to evaluate as `undefined`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_userAttributesDeleteUserAttributeExample_204": {
                "displayName": "deleteUserAttributeExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/users/attributes/attribute_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "attribute_id": "attribute_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "User Attributes_delete_user_attribute_Response_204",
                      "typeId": "User Attributes_delete_user_attribute_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userAttributesDeleteUserAttributeExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update User Attribute",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "attribute_id",
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "resource_id",
                "wireValue": "resource_id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "__user",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "__user"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_user_attributeRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_user_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "attribute_id",
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_userAttributes.update_user_attribute",
          "name": "update_user_attribute",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceAttributeUpdate",
              "typeId": "ResourceAttributeUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "userAttributesUpdateUserAttributeExample": {
                  "description": "whether or not the github repository is private"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceAttributeUpdate",
                  "typeId": "ResourceAttributeUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userAttributesUpdateUserAttributeExample": {
                      "description": "whether or not the github repository is private"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceAttributeRead",
                  "typeId": "ResourceAttributeRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userAttributesUpdateUserAttributeExample": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the attribute defined on the User resource.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "userAttributesUpdateUserAttributeExample_200": {
                "displayName": "userAttributesUpdateUserAttributeExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/users/attributes/attribute_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "attribute_id": "attribute_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "description": "whether or not the github repository is private"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceAttributeRead",
                      "typeId": "ResourceAttributeRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "userAttributesUpdateUserAttributeExample": {
                          "type": "bool",
                          "description": "whether or not the github repository is private",
                          "key": "private",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                          "resource_key": "repository",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "built_in": false
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_roles": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Roles"
          ],
          "packagePath": [],
          "file": "Roles"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Roles",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "search",
                "wireValue": "search"
              },
              "docs": "Text search for the roles name or key",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "search_example": "search"
                }
              }
            },
            {
              "name": {
                "name": "include_total_count",
                "wireValue": "include_total_count"
              },
              "docs": "Include total count in response",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_total_count_example": false
                }
              }
            },
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_rolesRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_rolesRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.list_roles",
          "name": "list_roles",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Roles_list_roles_Response_200",
                  "typeId": "Roles_list_roles_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesListRolesExample": {
                      "data": [
                        {
                          "name": "string",
                          "description": "string",
                          "permissions": [
                            "string"
                          ],
                          "attributes": {},
                          "extends": [
                            "string"
                          ],
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ],
                      "total_count": 1,
                      "page_count": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all tenant roles.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_rolesListRolesExample_200": {
                "displayName": "listRolesExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/roles"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "data": [
                        {
                          "name": "string",
                          "description": "string",
                          "permissions": [
                            "string"
                          ],
                          "attributes": {},
                          "extends": [
                            "string"
                          ],
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ],
                      "total_count": 1,
                      "page_count": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Roles_list_roles_Response_200",
                      "typeId": "Roles_list_roles_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "rolesListRolesExample": {
                          "data": [
                            {
                              "name": "string",
                              "description": "string",
                              "permissions": [
                                "string"
                              ],
                              "attributes": {},
                              "extends": [
                                "string"
                              ],
                              "key": "string",
                              "id": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z"
                            }
                          ],
                          "total_count": 1,
                          "page_count": 0
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create Role",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.create_role",
          "name": "create_role",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RoleCreate",
              "typeId": "RoleCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "rolesCreateRoleExample": {
                  "key": "editor",
                  "name": "Editor",
                  "description": "the editor role can read and write to documents",
                  "permissions": [
                    "document:write"
                  ],
                  "extends": [
                    "viewer"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleCreate",
                  "typeId": "RoleCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesCreateRoleExample": {
                      "key": "editor",
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleRead",
                  "typeId": "RoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesCreateRoleExample": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new tenant role.",
          "v2Examples": {
            "autogeneratedExamples": {
              "rolesCreateRoleExample_200": {
                "displayName": "rolesCreateRoleExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/roles"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "editor",
                    "name": "Editor",
                    "description": "the editor role can read and write to documents",
                    "permissions": [
                      "document:write"
                    ],
                    "extends": [
                      "viewer"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RoleRead",
                      "typeId": "RoleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "rolesCreateRoleExample": {
                          "name": "Editor",
                          "description": "the editor role can read and write to documents",
                          "permissions": [
                            "document:write"
                          ],
                          "extends": [
                            "viewer"
                          ],
                          "key": "editor",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Role",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.get_role",
          "name": "get_role",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleRead",
                  "typeId": "RoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesGetRoleExample": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single tenant role, if such role exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_rolesGetRoleExample_200": {
                "displayName": "getRoleExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RoleRead",
                      "typeId": "RoleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "rolesGetRoleExample": {
                          "name": "Editor",
                          "description": "the editor role can read and write to documents",
                          "permissions": [
                            "document:write"
                          ],
                          "extends": [
                            "viewer"
                          ],
                          "key": "editor",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Role",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.delete_role",
          "name": "delete_role",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Roles_delete_role_Response_204",
                  "typeId": "Roles_delete_role_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesDeleteRoleExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes a tenant role and all its related data.\nThis includes any permissions granted to said role.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_rolesDeleteRoleExample_204": {
                "displayName": "deleteRoleExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Roles_delete_role_Response_204",
                      "typeId": "Roles_delete_role_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "rolesDeleteRoleExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Role",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.update_role",
          "name": "update_role",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RoleUpdate",
              "typeId": "RoleUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "rolesUpdateRoleExample": {
                  "description": "the editor role can read and write to documents",
                  "permissions": [
                    "document:write"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleUpdate",
                  "typeId": "RoleUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesUpdateRoleExample": {
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleRead",
                  "typeId": "RoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesUpdateRoleExample": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates a tenant role.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "rolesUpdateRoleExample_200": {
                "displayName": "rolesUpdateRoleExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "description": "the editor role can read and write to documents",
                    "permissions": [
                      "document:write"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RoleRead",
                      "typeId": "RoleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "rolesUpdateRoleExample": {
                          "name": "Editor",
                          "description": "the editor role can read and write to documents",
                          "permissions": [
                            "document:write"
                          ],
                          "extends": [
                            "viewer"
                          ],
                          "key": "editor",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Assign Permissions To Role",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Assign_permissions_to_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Assign_permissions_to_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.assign_permissions_to_role",
          "name": "assign_permissions_to_role",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AddRolePermissions",
              "typeId": "AddRolePermissions",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "rolesAssignPermissionsToRoleExample": {
                  "permissions": [
                    "document:write"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AddRolePermissions",
                  "typeId": "AddRolePermissions",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesAssignPermissionsToRoleExample": {
                      "permissions": [
                        "document:write"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleRead",
                  "typeId": "RoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesAssignPermissionsToRoleExample": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Assign permissions to role.\n\nIf some of the permissions specified are already assigned, will skip them.",
          "v2Examples": {
            "autogeneratedExamples": {
              "rolesAssignPermissionsToRoleExample_200": {
                "displayName": "rolesAssignPermissionsToRoleExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id/permissions"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "permissions": [
                      "document:write"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RoleRead",
                      "typeId": "RoleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "rolesAssignPermissionsToRoleExample": {
                          "name": "Editor",
                          "description": "the editor role can read and write to documents",
                          "permissions": [
                            "document:write"
                          ],
                          "extends": [
                            "viewer"
                          ],
                          "key": "editor",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Remove Permissions From Role",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Remove_permissions_from_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Remove_permissions_from_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.remove_permissions_from_role",
          "name": "remove_permissions_from_role",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RemoveRolePermissions",
              "typeId": "RemoveRolePermissions",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "rolesRemovePermissionsFromRoleExample": {
                  "permissions": [
                    "document:share"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RemoveRolePermissions",
                  "typeId": "RemoveRolePermissions",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesRemovePermissionsFromRoleExample": {
                      "permissions": [
                        "document:share"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleRead",
                  "typeId": "RoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesRemovePermissionsFromRoleExample": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Remove permissions from role.\n\nIf some of the permissions specified are already unassigned, will skip them.",
          "v2Examples": {
            "autogeneratedExamples": {
              "rolesRemovePermissionsFromRoleExample_200": {
                "displayName": "rolesRemovePermissionsFromRoleExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id/permissions"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "permissions": [
                      "document:share"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RoleRead",
                      "typeId": "RoleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "rolesRemovePermissionsFromRoleExample": {
                          "name": "Editor",
                          "description": "the editor role can read and write to documents",
                          "permissions": [
                            "document:write"
                          ],
                          "extends": [
                            "viewer"
                          ],
                          "key": "editor",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Role Ancestors",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/ancestors"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_role_ancestorsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_role_ancestorsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/ancestors"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.get_role_ancestors",
          "name": "get_role_ancestors",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleList",
                  "typeId": "RoleList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesGetRoleAncestorsExample": {
                      "roles": [
                        {
                          "name": "string",
                          "description": "string",
                          "permissions": [
                            "string"
                          ],
                          "attributes": {},
                          "extends": [
                            "string"
                          ],
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_rolesGetRoleAncestorsExample_200": {
                "displayName": "getRoleAncestorsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id/ancestors"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "roles": [
                        {
                          "name": "string",
                          "description": "string",
                          "permissions": [
                            "string"
                          ],
                          "attributes": {},
                          "extends": [
                            "string"
                          ],
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RoleList",
                      "typeId": "RoleList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "rolesGetRoleAncestorsExample": {
                          "roles": [
                            {
                              "name": "string",
                              "description": "string",
                              "permissions": [
                                "string"
                              ],
                              "attributes": {},
                              "extends": [
                                "string"
                              ],
                              "key": "string",
                              "id": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Role Descendants",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/descendants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_role_descendantsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_role_descendantsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/descendants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "role_id",
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.get_role_descendants",
          "name": "get_role_descendants",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleList",
                  "typeId": "RoleList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesGetRoleDescendantsExample": {
                      "roles": [
                        {
                          "name": "string",
                          "description": "string",
                          "permissions": [
                            "string"
                          ],
                          "attributes": {},
                          "extends": [
                            "string"
                          ],
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_rolesGetRoleDescendantsExample_200": {
                "displayName": "getRoleDescendantsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id/descendants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "roles": [
                        {
                          "name": "string",
                          "description": "string",
                          "permissions": [
                            "string"
                          ],
                          "attributes": {},
                          "extends": [
                            "string"
                          ],
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RoleList",
                      "typeId": "RoleList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "rolesGetRoleDescendantsExample": {
                          "roles": [
                            {
                              "name": "string",
                              "description": "string",
                              "permissions": [
                                "string"
                              ],
                              "attributes": {},
                              "extends": [
                                "string"
                              ],
                              "key": "string",
                              "id": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_conditionSets": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Condition Sets"
          ],
          "packagePath": [],
          "file": "Condition Sets"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Condition Sets",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "search",
                "wireValue": "search"
              },
              "docs": "Text search for the condition sets name or key",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "search_example": "search"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "type",
                  "camelCase": {
                    "unsafeName": "type",
                    "safeName": "type_"
                  },
                  "snakeCase": {
                    "unsafeName": "type",
                    "safeName": "type_"
                  }
                },
                "wireValue": "type"
              },
              "docs": "if provided, will return only the condition sets of the specified type. e.g: only user sets.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "ConditionSetType",
                    "typeId": "ConditionSetType",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "type_example": "userset"
                }
              }
            },
            {
              "name": {
                "name": "include_total_count",
                "wireValue": "include_total_count"
              },
              "docs": "Include total count in response",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_total_count_example": false
                }
              }
            },
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_condition_setsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_condition_setsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.list_condition_sets",
          "name": "list_condition_sets",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Condition Sets_list_condition_sets_Response_200",
                  "typeId": "Condition Sets_list_condition_sets_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsListConditionSetsExample": {
                      "data": [
                        {
                          "key": "string",
                          "type": "userset",
                          "autogenerated": false,
                          "resource_id": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "resource": {
                            "key": "string",
                            "id": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "name": "string",
                            "urn": "string",
                            "description": "string",
                            "actions": {},
                            "attributes": {},
                            "action_groups": {}
                          },
                          "name": "string",
                          "description": "string",
                          "conditions": {},
                          "parent_id": "string"
                        }
                      ],
                      "total_count": 1,
                      "page_count": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all condition sets matching a filter.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_conditionSetsListConditionSetsExample_200": {
                "displayName": "listConditionSetsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/condition_sets"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "data": [
                        {
                          "key": "string",
                          "type": "userset",
                          "autogenerated": false,
                          "resource_id": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "resource": {
                            "key": "string",
                            "id": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "name": "string",
                            "urn": "string",
                            "description": "string",
                            "actions": {},
                            "attributes": {},
                            "action_groups": {}
                          },
                          "name": "string",
                          "description": "string",
                          "conditions": {},
                          "parent_id": "string"
                        }
                      ],
                      "total_count": 1,
                      "page_count": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Condition Sets_list_condition_sets_Response_200",
                      "typeId": "Condition Sets_list_condition_sets_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "conditionSetsListConditionSetsExample": {
                          "data": [
                            {
                              "key": "string",
                              "type": "userset",
                              "autogenerated": false,
                              "resource_id": "string",
                              "id": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z",
                              "resource": {
                                "key": "string",
                                "id": "string",
                                "organization_id": "string",
                                "project_id": "string",
                                "environment_id": "string",
                                "created_at": "2024-01-15T09:30:00Z",
                                "updated_at": "2024-01-15T09:30:00Z",
                                "name": "string",
                                "urn": "string",
                                "description": "string",
                                "actions": {},
                                "attributes": {},
                                "action_groups": {}
                              },
                              "name": "string",
                              "description": "string",
                              "conditions": {},
                              "parent_id": "string"
                            }
                          ],
                          "total_count": 1,
                          "page_count": 0
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create Condition Set",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_condition_setRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_condition_setRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.create_condition_set",
          "name": "create_condition_set",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ConditionSetCreate",
              "typeId": "ConditionSetCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "conditionSetsCreateConditionSetExample": {
                  "key": "na_based_employees",
                  "type": "userset",
                  "name": "US or Canada based employees",
                  "conditions": {
                    "allOf": [
                      {
                        "user.role": {
                          "equals": "employee"
                        }
                      },
                      {
                        "user.location": {
                          "in": [
                            "US",
                            "Canada"
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetCreate",
                  "typeId": "ConditionSetCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsCreateConditionSetExample": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "name": "US or Canada based employees",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetRead",
                  "typeId": "ConditionSetRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsCreateConditionSetExample": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "autogenerated": false,
                      "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "US or Canada based employees",
                      "description": "All employees based in the US or Canada",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new condition set (can be either a user set or a resource set).",
          "v2Examples": {
            "autogeneratedExamples": {
              "conditionSetsCreateConditionSetExample_200": {
                "displayName": "conditionSetsCreateConditionSetExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/condition_sets"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "na_based_employees",
                    "type": "userset",
                    "name": "US or Canada based employees",
                    "conditions": {
                      "allOf": [
                        {
                          "user.role": {
                            "equals": "employee"
                          }
                        },
                        {
                          "user.location": {
                            "in": [
                              "US",
                              "Canada"
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "autogenerated": false,
                      "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "US or Canada based employees",
                      "description": "All employees based in the US or Canada",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ConditionSetRead",
                      "typeId": "ConditionSetRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "conditionSetsCreateConditionSetExample": {
                          "key": "na_based_employees",
                          "type": "userset",
                          "autogenerated": false,
                          "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "name": "US or Canada based employees",
                          "description": "All employees based in the US or Canada",
                          "conditions": {
                            "allOf": [
                              {
                                "user.role": {
                                  "equals": "employee"
                                }
                              },
                              {
                                "user.location": {
                                  "in": [
                                    "US",
                                    "Canada"
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Condition Set",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "condition_set_id",
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_condition_setRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_condition_setRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "condition_set_id",
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.get_condition_set",
          "name": "get_condition_set",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetRead",
                  "typeId": "ConditionSetRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsGetConditionSetExample": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "autogenerated": false,
                      "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "US or Canada based employees",
                      "description": "All employees based in the US or Canada",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single condition set, if such condition set exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_conditionSetsGetConditionSetExample_200": {
                "displayName": "getConditionSetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/condition_sets/condition_set_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "condition_set_id": "condition_set_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "autogenerated": false,
                      "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "US or Canada based employees",
                      "description": "All employees based in the US or Canada",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ConditionSetRead",
                      "typeId": "ConditionSetRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "conditionSetsGetConditionSetExample": {
                          "key": "na_based_employees",
                          "type": "userset",
                          "autogenerated": false,
                          "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "name": "US or Canada based employees",
                          "description": "All employees based in the US or Canada",
                          "conditions": {
                            "allOf": [
                              {
                                "user.role": {
                                  "equals": "employee"
                                }
                              },
                              {
                                "user.location": {
                                  "in": [
                                    "US",
                                    "Canada"
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Condition Set",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "condition_set_id",
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_condition_setRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_condition_setRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "condition_set_id",
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.delete_condition_set",
          "name": "delete_condition_set",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Condition Sets_delete_condition_set_Response_204",
                  "typeId": "Condition Sets_delete_condition_set_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsDeleteConditionSetExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes a condition set and all its related data.\nThis includes any permissions granted to said condition set (i.e: any matching condition set rules).",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_conditionSetsDeleteConditionSetExample_204": {
                "displayName": "deleteConditionSetExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/condition_sets/condition_set_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "condition_set_id": "condition_set_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Condition Sets_delete_condition_set_Response_204",
                      "typeId": "Condition Sets_delete_condition_set_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "conditionSetsDeleteConditionSetExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Condition Set",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "condition_set_id",
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_condition_setRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_condition_setRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "condition_set_id",
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.update_condition_set",
          "name": "update_condition_set",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ConditionSetUpdate",
              "typeId": "ConditionSetUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "conditionSetsUpdateConditionSetExample": {
                  "name": "US based managers",
                  "conditions": {
                    "allOf": [
                      {
                        "user.role": {
                          "equals": "manager"
                        }
                      },
                      {
                        "user.location": {
                          "in": [
                            "US"
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetUpdate",
                  "typeId": "ConditionSetUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsUpdateConditionSetExample": {
                      "name": "US based managers",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "manager"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetRead",
                  "typeId": "ConditionSetRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsUpdateConditionSetExample": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "autogenerated": false,
                      "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "US or Canada based employees",
                      "description": "All employees based in the US or Canada",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates a condition set.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "conditionSetsUpdateConditionSetExample_200": {
                "displayName": "conditionSetsUpdateConditionSetExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/condition_sets/condition_set_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "condition_set_id": "condition_set_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "US based managers",
                    "conditions": {
                      "allOf": [
                        {
                          "user.role": {
                            "equals": "manager"
                          }
                        },
                        {
                          "user.location": {
                            "in": [
                              "US"
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "autogenerated": false,
                      "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "US or Canada based employees",
                      "description": "All employees based in the US or Canada",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ConditionSetRead",
                      "typeId": "ConditionSetRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "conditionSetsUpdateConditionSetExample": {
                          "key": "na_based_employees",
                          "type": "userset",
                          "autogenerated": false,
                          "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "name": "US or Canada based employees",
                          "description": "All employees based in the US or Canada",
                          "conditions": {
                            "allOf": [
                              {
                                "user.role": {
                                  "equals": "employee"
                                }
                              },
                              {
                                "user.location": {
                                  "in": [
                                    "US",
                                    "Canada"
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Condition Set Ancestors",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": "/ancestors"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "condition_set_id",
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_condition_set_ancestorsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_condition_set_ancestorsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": "/ancestors"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "condition_set_id",
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.get_condition_set_ancestors",
          "name": "get_condition_set_ancestors",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ConditionSetRead",
                      "typeId": "ConditionSetRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsGetConditionSetAncestorsExample": [
                      {
                        "key": "string",
                        "type": "userset",
                        "autogenerated": false,
                        "resource_id": "string",
                        "id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "resource": {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "urn": "string",
                          "description": "string",
                          "actions": {},
                          "attributes": {},
                          "action_groups": {}
                        },
                        "name": "string",
                        "description": "string",
                        "conditions": {},
                        "parent_id": "string"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets all ancestors (parent, parent of parent, and so on)",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_conditionSetsGetConditionSetAncestorsExample_200": {
                "displayName": "getConditionSetAncestorsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/condition_sets/condition_set_id/ancestors"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "condition_set_id": "condition_set_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "key": "string",
                        "type": "userset",
                        "autogenerated": false,
                        "resource_id": "string",
                        "id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "resource": {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "urn": "string",
                          "description": "string",
                          "actions": {},
                          "attributes": {},
                          "action_groups": {}
                        },
                        "name": "string",
                        "description": "string",
                        "conditions": {},
                        "parent_id": "string"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "ConditionSetRead",
                          "typeId": "ConditionSetRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "conditionSetsGetConditionSetAncestorsExample": [
                          {
                            "key": "string",
                            "type": "userset",
                            "autogenerated": false,
                            "resource_id": "string",
                            "id": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "resource": {
                              "key": "string",
                              "id": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z",
                              "name": "string",
                              "urn": "string",
                              "description": "string",
                              "actions": {},
                              "attributes": {},
                              "action_groups": {}
                            },
                            "name": "string",
                            "description": "string",
                            "conditions": {},
                            "parent_id": "string"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Condition Set Descendants",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": "/descendants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "condition_set_id",
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_condition_set_descendantsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_condition_set_descendantsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": "/descendants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "condition_set_id",
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.get_condition_set_descendants",
          "name": "get_condition_set_descendants",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ConditionSetRead",
                      "typeId": "ConditionSetRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsGetConditionSetDescendantsExample": [
                      {
                        "key": "string",
                        "type": "userset",
                        "autogenerated": false,
                        "resource_id": "string",
                        "id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "resource": {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "urn": "string",
                          "description": "string",
                          "actions": {},
                          "attributes": {},
                          "action_groups": {}
                        },
                        "name": "string",
                        "description": "string",
                        "conditions": {},
                        "parent_id": "string"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets all descendants (children, children of children, and so on)",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_conditionSetsGetConditionSetDescendantsExample_200": {
                "displayName": "getConditionSetDescendantsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/condition_sets/condition_set_id/descendants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "condition_set_id": "condition_set_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "key": "string",
                        "type": "userset",
                        "autogenerated": false,
                        "resource_id": "string",
                        "id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "resource": {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "urn": "string",
                          "description": "string",
                          "actions": {},
                          "attributes": {},
                          "action_groups": {}
                        },
                        "name": "string",
                        "description": "string",
                        "conditions": {},
                        "parent_id": "string"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "ConditionSetRead",
                          "typeId": "ConditionSetRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "conditionSetsGetConditionSetDescendantsExample": [
                          {
                            "key": "string",
                            "type": "userset",
                            "autogenerated": false,
                            "resource_id": "string",
                            "id": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "resource": {
                              "key": "string",
                              "id": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z",
                              "name": "string",
                              "urn": "string",
                              "description": "string",
                              "actions": {},
                              "attributes": {},
                              "action_groups": {}
                            },
                            "name": "string",
                            "description": "string",
                            "conditions": {},
                            "parent_id": "string"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_users": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Users"
          ],
          "packagePath": [],
          "file": "Users"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Users",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "search",
                "wireValue": "search"
              },
              "docs": "Text search for the email field",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "search_example": "search"
                }
              }
            },
            {
              "name": {
                "name": "role",
                "wireValue": "role"
              },
              "docs": "Match users with a specific role",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_example": "role"
                }
              }
            },
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_usersRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_usersRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.list_users",
          "name": "list_users",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedResult_UserRead_",
                  "typeId": "PaginatedResult_UserRead_",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersListUsersExample": {
                      "data": [
                        {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "associated_tenants": [
                            {
                              "tenant": "string",
                              "roles": [
                                "string"
                              ],
                              "status": "active"
                            }
                          ],
                          "roles": [
                            {
                              "role": "string",
                              "tenant": "string"
                            }
                          ],
                          "email": "string",
                          "first_name": "string",
                          "last_name": "string",
                          "attributes": {}
                        }
                      ],
                      "total_count": 1,
                      "page_count": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the users defined within an environment.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_usersListUsersExample_200": {
                "displayName": "listUsersExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/users"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "data": [
                        {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "associated_tenants": [
                            {
                              "tenant": "string",
                              "roles": [
                                "string"
                              ],
                              "status": "active"
                            }
                          ],
                          "roles": [
                            {
                              "role": "string",
                              "tenant": "string"
                            }
                          ],
                          "email": "string",
                          "first_name": "string",
                          "last_name": "string",
                          "attributes": {}
                        }
                      ],
                      "total_count": 1,
                      "page_count": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedResult_UserRead_",
                      "typeId": "PaginatedResult_UserRead_",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "usersListUsersExample": {
                          "data": [
                            {
                              "key": "string",
                              "id": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "associated_tenants": [
                                {
                                  "tenant": "string",
                                  "roles": [
                                    "string"
                                  ],
                                  "status": "active"
                                }
                              ],
                              "roles": [
                                {
                                  "role": "string",
                                  "tenant": "string"
                                }
                              ],
                              "email": "string",
                              "first_name": "string",
                              "last_name": "string",
                              "attributes": {}
                            }
                          ],
                          "total_count": 1,
                          "page_count": 0
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create User",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_userRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.create_user",
          "name": "create_user",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserCreate",
              "typeId": "UserCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "usersCreateUserExample": {
                  "key": "user|892179821739812389327",
                  "email": "jane@coolcompany.com",
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "attributes": {
                    "department": "marketing",
                    "age": 30,
                    "subscription": {
                      "tier": "pro",
                      "expired": false
                    }
                  }
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserCreate",
                  "typeId": "UserCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersCreateUserExample": {
                      "key": "user|892179821739812389327",
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserRead",
                  "typeId": "UserRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersCreateUserExample": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new user inside the Permit.io system, from that point forward\nyou may run permission checks on that user.\n\nIf the user is already created: will return 200 instead of 201,\nand will return the existing user object in the response body.",
          "v2Examples": {
            "autogeneratedExamples": {
              "usersCreateUserExample_200": {
                "displayName": "usersCreateUserExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/users"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "user|892179821739812389327",
                    "email": "jane@coolcompany.com",
                    "first_name": "Jane",
                    "last_name": "Doe",
                    "attributes": {
                      "department": "marketing",
                      "age": 30,
                      "subscription": {
                        "tier": "pro",
                        "expired": false
                      }
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UserRead",
                      "typeId": "UserRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "usersCreateUserExample": {
                          "key": "user|892179821739812389327",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "associated_tenants": [
                            {
                              "tenant": "stripe-inc",
                              "roles": [
                                "admin"
                              ],
                              "status": "active"
                            },
                            {
                              "tenant": "othercompany.com",
                              "roles": [
                                "viewer"
                              ],
                              "status": "pending"
                            }
                          ],
                          "roles": [
                            {
                              "role": "admin",
                              "tenant": "stripe-inc"
                            },
                            {
                              "role": "viewer",
                              "tenant": "othercompany.com"
                            }
                          ],
                          "email": "jane@coolcompany.com",
                          "first_name": "Jane",
                          "last_name": "Doe",
                          "attributes": {
                            "department": "marketing",
                            "age": 30,
                            "subscription": {
                              "tier": "pro",
                              "expired": false
                            }
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get User",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_userRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.get_user",
          "name": "get_user",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserRead",
                  "typeId": "UserRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersGetUserExample": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a user, if such user exists. Otherwise returns 404.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_usersGetUserExample_200": {
                "displayName": "getUserExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/users/user_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UserRead",
                      "typeId": "UserRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "usersGetUserExample": {
                          "key": "user|892179821739812389327",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "associated_tenants": [
                            {
                              "tenant": "stripe-inc",
                              "roles": [
                                "admin"
                              ],
                              "status": "active"
                            },
                            {
                              "tenant": "othercompany.com",
                              "roles": [
                                "viewer"
                              ],
                              "status": "pending"
                            }
                          ],
                          "roles": [
                            {
                              "role": "admin",
                              "tenant": "stripe-inc"
                            },
                            {
                              "role": "viewer",
                              "tenant": "othercompany.com"
                            }
                          ],
                          "email": "jane@coolcompany.com",
                          "first_name": "Jane",
                          "last_name": "Doe",
                          "attributes": {
                            "department": "marketing",
                            "age": 30,
                            "subscription": {
                              "tier": "pro",
                              "expired": false
                            }
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Replace User",
          "method": "PUT",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Replace_userRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Replace_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.replace_user",
          "name": "replace_user",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserCreate",
              "typeId": "UserCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "usersReplaceUserExample": {
                  "key": "user|892179821739812389327",
                  "email": "jane@coolcompany.com",
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "attributes": {
                    "department": "marketing",
                    "age": 30,
                    "subscription": {
                      "tier": "pro",
                      "expired": false
                    }
                  }
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserCreate",
                  "typeId": "UserCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersReplaceUserExample": {
                      "key": "user|892179821739812389327",
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserRead",
                  "typeId": "UserRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "An existing user was replaced",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersReplaceUserExample": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "usersReplaceUserExample_200": {
                "displayName": "usersReplaceUserExample",
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/v2/facts/proj_id/env_id/users/user_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "user|892179821739812389327",
                    "email": "jane@coolcompany.com",
                    "first_name": "Jane",
                    "last_name": "Doe",
                    "attributes": {
                      "department": "marketing",
                      "age": 30,
                      "subscription": {
                        "tier": "pro",
                        "expired": false
                      }
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              },
              "usersReplaceUserExample_201": {
                "displayName": "usersReplaceUserExample",
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/v2/facts/proj_id/env_id/users/user_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "user|892179821739812389327",
                    "email": "jane@coolcompany.com",
                    "first_name": "Jane",
                    "last_name": "Doe",
                    "attributes": {
                      "department": "marketing",
                      "age": 30,
                      "subscription": {
                        "tier": "pro",
                        "expired": false
                      }
                    }
                  }
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "value": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UserRead",
                      "typeId": "UserRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "An existing user was replaced",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "usersReplaceUserExample": {
                          "key": "user|892179821739812389327",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "associated_tenants": [
                            {
                              "tenant": "stripe-inc",
                              "roles": [
                                "admin"
                              ],
                              "status": "active"
                            },
                            {
                              "tenant": "othercompany.com",
                              "roles": [
                                "viewer"
                              ],
                              "status": "pending"
                            }
                          ],
                          "roles": [
                            {
                              "role": "admin",
                              "tenant": "stripe-inc"
                            },
                            {
                              "role": "viewer",
                              "tenant": "othercompany.com"
                            }
                          ],
                          "email": "jane@coolcompany.com",
                          "first_name": "Jane",
                          "last_name": "Doe",
                          "attributes": {
                            "department": "marketing",
                            "age": 30,
                            "subscription": {
                              "tier": "pro",
                              "expired": false
                            }
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              },
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UserRead",
                      "typeId": "UserRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "An new user was created",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "usersReplaceUserExample": {
                          "key": "user|892179821739812389327",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "associated_tenants": [
                            {
                              "tenant": "stripe-inc",
                              "roles": [
                                "admin"
                              ],
                              "status": "active"
                            },
                            {
                              "tenant": "othercompany.com",
                              "roles": [
                                "viewer"
                              ],
                              "status": "pending"
                            }
                          ],
                          "roles": [
                            {
                              "role": "admin",
                              "tenant": "stripe-inc"
                            },
                            {
                              "role": "viewer",
                              "tenant": "othercompany.com"
                            }
                          ],
                          "email": "jane@coolcompany.com",
                          "first_name": "Jane",
                          "last_name": "Doe",
                          "attributes": {
                            "department": "marketing",
                            "age": 30,
                            "subscription": {
                              "tier": "pro",
                              "expired": false
                            }
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete User",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_userRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.delete_user",
          "name": "delete_user",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Users_delete_user_Response_204",
                  "typeId": "Users_delete_user_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersDeleteUserExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes the user and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_usersDeleteUserExample_204": {
                "displayName": "deleteUserExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/users/user_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Users_delete_user_Response_204",
                      "typeId": "Users_delete_user_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "usersDeleteUserExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update User",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_userRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.update_user",
          "name": "update_user",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserUpdate",
              "typeId": "UserUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "usersUpdateUserExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserUpdate",
                  "typeId": "UserUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersUpdateUserExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserRead",
                  "typeId": "UserRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersUpdateUserExample": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the user definition.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "usersUpdateUserExample_200": {
                "displayName": "usersUpdateUserExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/facts/proj_id/env_id/users/user_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UserRead",
                      "typeId": "UserRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "usersUpdateUserExample": {
                          "key": "user|892179821739812389327",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "associated_tenants": [
                            {
                              "tenant": "stripe-inc",
                              "roles": [
                                "admin"
                              ],
                              "status": "active"
                            },
                            {
                              "tenant": "othercompany.com",
                              "roles": [
                                "viewer"
                              ],
                              "status": "pending"
                            }
                          ],
                          "roles": [
                            {
                              "role": "admin",
                              "tenant": "stripe-inc"
                            },
                            {
                              "role": "viewer",
                              "tenant": "othercompany.com"
                            }
                          ],
                          "email": "jane@coolcompany.com",
                          "first_name": "Jane",
                          "last_name": "Doe",
                          "attributes": {
                            "department": "marketing",
                            "age": 30,
                            "subscription": {
                              "tier": "pro",
                              "expired": false
                            }
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Assign Role To User",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": "/roles"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Assign_role_to_userRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Assign_role_to_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": "/roles"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.assign_role_to_user",
          "name": "assign_role_to_user",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserRoleCreate",
              "typeId": "UserRoleCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "usersAssignRoleToUserExample": {
                  "role": "admin",
                  "tenant": "stripe-inc"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserRoleCreate",
                  "typeId": "UserRoleCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersAssignRoleToUserExample": {
                      "role": "admin",
                      "tenant": "stripe-inc"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleAssignmentRead",
                  "typeId": "RoleAssignmentRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersAssignRoleToUserExample": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "user": "jane@coolcompany.com",
                      "role": "admin",
                      "tenant": "stripe-inc",
                      "user_id": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                      "role_id": "405d8375-3514-403b-8c43-83ae74cfe022",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Assigns a role to the user within the tenant.\n\nThe tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.",
          "v2Examples": {
            "autogeneratedExamples": {
              "usersAssignRoleToUserExample_200": {
                "displayName": "usersAssignRoleToUserExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/users/user_id/roles"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "role": "admin",
                    "tenant": "stripe-inc"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "user": "jane@coolcompany.com",
                      "role": "admin",
                      "tenant": "stripe-inc",
                      "user_id": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                      "role_id": "405d8375-3514-403b-8c43-83ae74cfe022",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RoleAssignmentRead",
                      "typeId": "RoleAssignmentRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "usersAssignRoleToUserExample": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "user": "jane@coolcompany.com",
                          "role": "admin",
                          "tenant": "stripe-inc",
                          "user_id": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                          "role_id": "405d8375-3514-403b-8c43-83ae74cfe022",
                          "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Unassign Role From User",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": "/roles"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Unassign_role_from_userRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Unassign_role_from_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": "/roles"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.unassign_role_from_user",
          "name": "unassign_role_from_user",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserRoleRemove",
              "typeId": "UserRoleRemove",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "usersUnassignRoleFromUserExample": {
                  "role": "editor",
                  "tenant": "google-inc"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserRoleRemove",
                  "typeId": "UserRoleRemove",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersUnassignRoleFromUserExample": {
                      "role": "editor",
                      "tenant": "google-inc"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Users_unassign_role_from_user_Response_204",
                  "typeId": "Users_unassign_role_from_user_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersUnassignRoleFromUserExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Unassigns the role from the user within the tenant.\n\nThe tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n\nIf the role is not actually assigned, will return 404.",
          "v2Examples": {
            "autogeneratedExamples": {
              "usersUnassignRoleFromUserExample_204": {
                "displayName": "usersUnassignRoleFromUserExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/users/user_id/roles"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "role": "editor",
                    "tenant": "google-inc"
                  }
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Users_unassign_role_from_user_Response_204",
                      "typeId": "Users_unassign_role_from_user_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "usersUnassignRoleFromUserExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_tenants": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Tenants"
          ],
          "packagePath": [],
          "file": "Tenants"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Tenant Users",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": "/users"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "tenant_id",
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "search",
                "wireValue": "search"
              },
              "docs": "Text search for the email field",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "search_example": "search"
                }
              }
            },
            {
              "name": {
                "name": "role",
                "wireValue": "role"
              },
              "docs": "Match users with a specific role",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_example": "role"
                }
              }
            },
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_tenant_usersRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_tenant_usersRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": "/users"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "tenant_id",
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.list_tenant_users",
          "name": "list_tenant_users",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedResult_UserRead_",
                  "typeId": "PaginatedResult_UserRead_",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsListTenantUsersExample": {
                      "data": [
                        {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "associated_tenants": [
                            {
                              "tenant": "string",
                              "roles": [
                                "string"
                              ],
                              "status": "active"
                            }
                          ],
                          "roles": [
                            {
                              "role": "string",
                              "tenant": "string"
                            }
                          ],
                          "email": "string",
                          "first_name": "string",
                          "last_name": "string",
                          "attributes": {}
                        }
                      ],
                      "total_count": 1,
                      "page_count": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_tenantsListTenantUsersExample_200": {
                "displayName": "listTenantUsersExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/tenants/tenant_id/users"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "tenant_id": "tenant_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "data": [
                        {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "associated_tenants": [
                            {
                              "tenant": "string",
                              "roles": [
                                "string"
                              ],
                              "status": "active"
                            }
                          ],
                          "roles": [
                            {
                              "role": "string",
                              "tenant": "string"
                            }
                          ],
                          "email": "string",
                          "first_name": "string",
                          "last_name": "string",
                          "attributes": {}
                        }
                      ],
                      "total_count": 1,
                      "page_count": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedResult_UserRead_",
                      "typeId": "PaginatedResult_UserRead_",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "tenantsListTenantUsersExample": {
                          "data": [
                            {
                              "key": "string",
                              "id": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "associated_tenants": [
                                {
                                  "tenant": "string",
                                  "roles": [
                                    "string"
                                  ],
                                  "status": "active"
                                }
                              ],
                              "roles": [
                                {
                                  "role": "string",
                                  "tenant": "string"
                                }
                              ],
                              "email": "string",
                              "first_name": "string",
                              "last_name": "string",
                              "attributes": {}
                            }
                          ],
                          "total_count": 1,
                          "page_count": 0
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List Tenants",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "search",
                "wireValue": "search"
              },
              "docs": "Text search for the tenant name or key",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "search_example": "search"
                }
              }
            },
            {
              "name": {
                "name": "include_total_count",
                "wireValue": "include_total_count"
              },
              "docs": "Include total count in response",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_total_count_example": false
                }
              }
            },
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_tenantsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_tenantsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.list_tenants",
          "name": "list_tenants",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Tenants_list_tenants_Response_200",
                  "typeId": "Tenants_list_tenants_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsListTenantsExample": {
                      "data": [
                        {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "last_action_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "description": "string",
                          "attributes": {}
                        }
                      ],
                      "total_count": 1,
                      "page_count": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the tenants defined within an environment.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_tenantsListTenantsExample_200": {
                "displayName": "listTenantsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/tenants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "data": [
                        {
                          "key": "string",
                          "id": "string",
                          "organization_id": "string",
                          "project_id": "string",
                          "environment_id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "last_action_at": "2024-01-15T09:30:00Z",
                          "name": "string",
                          "description": "string",
                          "attributes": {}
                        }
                      ],
                      "total_count": 1,
                      "page_count": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Tenants_list_tenants_Response_200",
                      "typeId": "Tenants_list_tenants_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "tenantsListTenantsExample": {
                          "data": [
                            {
                              "key": "string",
                              "id": "string",
                              "organization_id": "string",
                              "project_id": "string",
                              "environment_id": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z",
                              "last_action_at": "2024-01-15T09:30:00Z",
                              "name": "string",
                              "description": "string",
                              "attributes": {}
                            }
                          ],
                          "total_count": 1,
                          "page_count": 0
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create Tenant",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_tenantRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_tenantRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.create_tenant",
          "name": "create_tenant",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TenantCreate",
              "typeId": "TenantCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "tenantsCreateTenantExample": {
                  "key": "stripeinc",
                  "name": "Stripe Inc",
                  "attributes": {
                    "allowed_locations": [
                      "US",
                      "CA"
                    ]
                  }
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantCreate",
                  "typeId": "TenantCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsCreateTenantExample": {
                      "key": "stripeinc",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantRead",
                  "typeId": "TenantRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsCreateTenantExample": {
                      "key": "stripeinc",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "last_action_at": "2019-08-24T14:15:22Z",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new tenant inside the Permit.io system.\n\nIf the tenant is already created: will return 200 instead of 201,\nand will return the existing tenant object in the response body.",
          "v2Examples": {
            "autogeneratedExamples": {
              "tenantsCreateTenantExample_200": {
                "displayName": "tenantsCreateTenantExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/tenants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "stripeinc",
                    "name": "Stripe Inc",
                    "attributes": {
                      "allowed_locations": [
                        "US",
                        "CA"
                      ]
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "stripeinc",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "last_action_at": "2019-08-24T14:15:22Z",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TenantRead",
                      "typeId": "TenantRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "tenantsCreateTenantExample": {
                          "key": "stripeinc",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "last_action_at": "2019-08-24T14:15:22Z",
                          "name": "Stripe Inc",
                          "attributes": {
                            "allowed_locations": [
                              "US",
                              "CA"
                            ]
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Tenant",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "tenant_id",
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_tenantRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_tenantRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "tenant_id",
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.get_tenant",
          "name": "get_tenant",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantRead",
                  "typeId": "TenantRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsGetTenantExample": {
                      "key": "stripeinc",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "last_action_at": "2019-08-24T14:15:22Z",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a tenant, if such tenant exists. Otherwise returns 404.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_tenantsGetTenantExample_200": {
                "displayName": "getTenantExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/tenants/tenant_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "tenant_id": "tenant_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "stripeinc",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "last_action_at": "2019-08-24T14:15:22Z",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TenantRead",
                      "typeId": "TenantRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "tenantsGetTenantExample": {
                          "key": "stripeinc",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "last_action_at": "2019-08-24T14:15:22Z",
                          "name": "Stripe Inc",
                          "attributes": {
                            "allowed_locations": [
                              "US",
                              "CA"
                            ]
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Tenant",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "tenant_id",
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_tenantRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_tenantRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "tenant_id",
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.delete_tenant",
          "name": "delete_tenant",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Tenants_delete_tenant_Response_204",
                  "typeId": "Tenants_delete_tenant_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsDeleteTenantExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes the tenant and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_tenantsDeleteTenantExample_204": {
                "displayName": "deleteTenantExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/tenants/tenant_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "tenant_id": "tenant_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Tenants_delete_tenant_Response_204",
                      "typeId": "Tenants_delete_tenant_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "tenantsDeleteTenantExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Tenant",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "tenant_id",
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_tenantRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_tenantRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "tenant_id",
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.update_tenant",
          "name": "update_tenant",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TenantUpdate",
              "typeId": "TenantUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "tenantsUpdateTenantExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantUpdate",
                  "typeId": "TenantUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsUpdateTenantExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantRead",
                  "typeId": "TenantRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsUpdateTenantExample": {
                      "key": "stripeinc",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "last_action_at": "2019-08-24T14:15:22Z",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the tenant definition.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "tenantsUpdateTenantExample_200": {
                "displayName": "tenantsUpdateTenantExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/facts/proj_id/env_id/tenants/tenant_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "tenant_id": "tenant_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "stripeinc",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "last_action_at": "2019-08-24T14:15:22Z",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TenantRead",
                      "typeId": "TenantRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "tenantsUpdateTenantExample": {
                          "key": "stripeinc",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "last_action_at": "2019-08-24T14:15:22Z",
                          "name": "Stripe Inc",
                          "attributes": {
                            "allowed_locations": [
                              "US",
                              "CA"
                            ]
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Tenant User",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "tenant_id",
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_tenant_userRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_tenant_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "tenant_id",
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            },
            {
              "name": "user_id",
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.delete_tenant_user",
          "name": "delete_tenant_user",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Tenants_delete_tenant_user_Response_204",
                  "typeId": "Tenants_delete_tenant_user_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsDeleteTenantUserExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes a user under a tenant.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_tenantsDeleteTenantUserExample_204": {
                "displayName": "deleteTenantUserExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/tenants/tenant_id/users/user_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "tenant_id": "tenant_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Tenants_delete_tenant_user_Response_204",
                      "typeId": "Tenants_delete_tenant_user_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "tenantsDeleteTenantUserExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_roleAssignments": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Role Assignments"
          ],
          "packagePath": [],
          "file": "Role Assignments"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Role Assignments",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "user",
                "wireValue": "user"
              },
              "docs": "optional user filter, will only return role assignments granted to this user.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_example": "user"
                }
              }
            },
            {
              "name": {
                "name": "role",
                "wireValue": "role"
              },
              "docs": "optional role filter, will only return role assignments granting this role.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_example": "role"
                }
              }
            },
            {
              "name": {
                "name": "tenant",
                "wireValue": "tenant"
              },
              "docs": "optional tenant filter, will only return role assignments granted in that tenant.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_example": "tenant"
                }
              }
            },
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_role_assignmentsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_role_assignmentsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roleAssignments.list_role_assignments",
          "name": "list_role_assignments",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RoleAssignmentRead",
                      "typeId": "RoleAssignmentRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsListRoleAssignmentsExample": [
                      {
                        "id": "string",
                        "user": "string",
                        "role": "string",
                        "tenant": "string",
                        "user_id": "string",
                        "role_id": "string",
                        "tenant_id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists the role assignments defined within an environment.\n\n- If the `user` filter is present, will only return the role assignments of that user.\n- If the `tenant` filter is present, will only return the role assignments in that tenant.\n- If the `role` filter is present, will only return role assignments that are granting that role.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_roleAssignmentsListRoleAssignmentsExample_200": {
                "displayName": "listRoleAssignmentsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/role_assignments"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": "string",
                        "user": "string",
                        "role": "string",
                        "tenant": "string",
                        "user_id": "string",
                        "role_id": "string",
                        "tenant_id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RoleAssignmentRead",
                          "typeId": "RoleAssignmentRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "roleAssignmentsListRoleAssignmentsExample": [
                          {
                            "id": "string",
                            "user": "string",
                            "role": "string",
                            "tenant": "string",
                            "user_id": "string",
                            "role_id": "string",
                            "tenant_id": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "created_at": "2024-01-15T09:30:00Z"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Assign Role",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Assign_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Assign_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roleAssignments.assign_role",
          "name": "assign_role",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RoleAssignmentCreate",
              "typeId": "RoleAssignmentCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "roleAssignmentsAssignRoleExample": {
                  "role": "admin",
                  "tenant": "stripe-inc",
                  "user": "jane@coolcompany.com"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleAssignmentCreate",
                  "typeId": "RoleAssignmentCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsAssignRoleExample": {
                      "role": "admin",
                      "tenant": "stripe-inc",
                      "user": "jane@coolcompany.com"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleAssignmentRead",
                  "typeId": "RoleAssignmentRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsAssignRoleExample": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "user": "jane@coolcompany.com",
                      "role": "admin",
                      "tenant": "stripe-inc",
                      "user_id": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                      "role_id": "405d8375-3514-403b-8c43-83ae74cfe022",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Assigns a role to a user within a tenant.\n\nThe tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.",
          "v2Examples": {
            "autogeneratedExamples": {
              "roleAssignmentsAssignRoleExample_200": {
                "displayName": "roleAssignmentsAssignRoleExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/role_assignments"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "role": "admin",
                    "tenant": "stripe-inc",
                    "user": "jane@coolcompany.com"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "user": "jane@coolcompany.com",
                      "role": "admin",
                      "tenant": "stripe-inc",
                      "user_id": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                      "role_id": "405d8375-3514-403b-8c43-83ae74cfe022",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RoleAssignmentRead",
                      "typeId": "RoleAssignmentRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "roleAssignmentsAssignRoleExample": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "user": "jane@coolcompany.com",
                          "role": "admin",
                          "tenant": "stripe-inc",
                          "user_id": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                          "role_id": "405d8375-3514-403b-8c43-83ae74cfe022",
                          "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Unassign Role",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Unassign_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Unassign_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roleAssignments.unassign_role",
          "name": "unassign_role",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RoleAssignmentRemove",
              "typeId": "RoleAssignmentRemove",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "roleAssignmentsUnassignRoleExample": {
                  "role": "editor",
                  "tenant": "google-inc",
                  "user": "jane@coolcompany.com"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleAssignmentRemove",
                  "typeId": "RoleAssignmentRemove",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsUnassignRoleExample": {
                      "role": "editor",
                      "tenant": "google-inc",
                      "user": "jane@coolcompany.com"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Role Assignments_unassign_role_Response_204",
                  "typeId": "Role Assignments_unassign_role_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsUnassignRoleExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Unassigns a user role within a tenant.\n\nThe tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n\nIf the role is not actually assigned, will return 404.",
          "v2Examples": {
            "autogeneratedExamples": {
              "roleAssignmentsUnassignRoleExample_204": {
                "displayName": "roleAssignmentsUnassignRoleExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/role_assignments"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "role": "editor",
                    "tenant": "google-inc",
                    "user": "jane@coolcompany.com"
                  }
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Role Assignments_unassign_role_Response_204",
                      "typeId": "Role Assignments_unassign_role_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "roleAssignmentsUnassignRoleExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Bulk Assign Role",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments/bulk"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Bulk_assign_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_assign_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments/bulk"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roleAssignments.bulk_assign_role",
          "name": "bulk_assign_role",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleAssignmentCreate",
                  "typeId": "RoleAssignmentCreate",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "roleAssignmentsBulkAssignRoleExample": [
                  {
                    "role": "string",
                    "tenant": "string",
                    "user": "string"
                  }
                ]
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RoleAssignmentCreate",
                      "typeId": "RoleAssignmentCreate",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsBulkAssignRoleExample": [
                      {
                        "role": "string",
                        "tenant": "string",
                        "user": "string"
                      }
                    ]
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BulkRoleAssignmentReport",
                  "typeId": "BulkRoleAssignmentReport",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsBulkAssignRoleExample": {
                      "assignments_created": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "roleAssignmentsBulkAssignRoleExample_200": {
                "displayName": "roleAssignmentsBulkAssignRoleExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/role_assignments/bulk"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {
                      "role": "string",
                      "tenant": "string",
                      "user": "string"
                    }
                  ]
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "assignments_created": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "BulkRoleAssignmentReport",
                      "typeId": "BulkRoleAssignmentReport",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "roleAssignmentsBulkAssignRoleExample": {
                          "assignments_created": 0
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Bulk Unassign Role",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments/bulk"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Bulk_unassign_roleRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_unassign_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments/bulk"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roleAssignments.bulk_unassign_role",
          "name": "bulk_unassign_role",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RoleAssignmentRemove",
                  "typeId": "RoleAssignmentRemove",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "roleAssignmentsBulkUnassignRoleExample": [
                  {
                    "role": "string",
                    "tenant": "string",
                    "user": "string"
                  }
                ]
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RoleAssignmentRemove",
                      "typeId": "RoleAssignmentRemove",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsBulkUnassignRoleExample": [
                      {
                        "role": "string",
                        "tenant": "string",
                        "user": "string"
                      }
                    ]
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BulkRoleUnAssignmentReport",
                  "typeId": "BulkRoleUnAssignmentReport",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsBulkUnassignRoleExample": {
                      "assignments_removed": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "roleAssignmentsBulkUnassignRoleExample_200": {
                "displayName": "roleAssignmentsBulkUnassignRoleExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/role_assignments/bulk"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {
                      "role": "string",
                      "tenant": "string",
                      "user": "string"
                    }
                  ]
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "assignments_removed": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "BulkRoleUnAssignmentReport",
                      "typeId": "BulkRoleUnAssignmentReport",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "roleAssignmentsBulkUnassignRoleExample": {
                          "assignments_removed": 0
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_conditionSetRules": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Condition Set Rules"
          ],
          "packagePath": [],
          "file": "Condition Set Rules"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Set Permissions",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/set_rules"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "user_set",
                "wireValue": "user_set"
              },
              "docs": "optional user set filter, will only return rules where the permission is granted to this user set",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_set_example": "user_set"
                }
              }
            },
            {
              "name": {
                "name": "permission",
                "wireValue": "permission"
              },
              "docs": "optional permission filter, will only return condition set rules granting this permission",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "permission_example": "permission"
                }
              }
            },
            {
              "name": {
                "name": "resource_set",
                "wireValue": "resource_set"
              },
              "docs": "optional resource set filter, will only return rules where the permission is granted on this resource set",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_set_example": "resource_set"
                }
              }
            },
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_set_permissionsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_set_permissionsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/set_rules"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSetRules.list_set_permissions",
          "name": "list_set_permissions",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ConditionSetRuleRead",
                      "typeId": "ConditionSetRuleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetRulesListSetPermissionsExample": [
                      {
                        "id": "string",
                        "key": "string",
                        "user_set": "string",
                        "permission": "string",
                        "resource_set": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists the condition set rules matching the filter.\n- If the `user_set` filter is present, will only return the permissions set of that user set.\n- If the `permission` filter is present, will only return the permissions sets that equals to the queried permission.\n- If the `resource_set` filter is present, will only return the permissions set of that resource set.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_conditionSetRulesListSetPermissionsExample_200": {
                "displayName": "listSetPermissionsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/set_rules"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": "string",
                        "key": "string",
                        "user_set": "string",
                        "permission": "string",
                        "resource_set": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "ConditionSetRuleRead",
                          "typeId": "ConditionSetRuleRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "conditionSetRulesListSetPermissionsExample": [
                          {
                            "id": "string",
                            "key": "string",
                            "user_set": "string",
                            "permission": "string",
                            "resource_set": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Assign Set Permissions",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/set_rules"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Assign_set_permissionsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Assign_set_permissionsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/set_rules"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSetRules.assign_set_permissions",
          "name": "assign_set_permissions",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ConditionSetRuleCreate",
              "typeId": "ConditionSetRuleCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "conditionSetRulesAssignSetPermissionsExample": {
                  "user_set": "us_based_employees",
                  "permission": "repository:clone",
                  "resource_set": "private_repos"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetRuleCreate",
                  "typeId": "ConditionSetRuleCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetRulesAssignSetPermissionsExample": {
                      "user_set": "us_based_employees",
                      "permission": "repository:clone",
                      "resource_set": "private_repos"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ConditionSetRuleRead",
                      "typeId": "ConditionSetRuleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetRulesAssignSetPermissionsExample": [
                      {
                        "id": "string",
                        "key": "string",
                        "user_set": "string",
                        "permission": "string",
                        "resource_set": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Grant permissions to a user set *on* a resource set.\n\nIf the permission is already granted, it is skipped.",
          "v2Examples": {
            "autogeneratedExamples": {
              "conditionSetRulesAssignSetPermissionsExample_200": {
                "displayName": "conditionSetRulesAssignSetPermissionsExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/set_rules"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "user_set": "us_based_employees",
                    "permission": "repository:clone",
                    "resource_set": "private_repos"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": "string",
                        "key": "string",
                        "user_set": "string",
                        "permission": "string",
                        "resource_set": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "ConditionSetRuleRead",
                          "typeId": "ConditionSetRuleRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "conditionSetRulesAssignSetPermissionsExample": [
                          {
                            "id": "string",
                            "key": "string",
                            "user_set": "string",
                            "permission": "string",
                            "resource_set": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Unassign Set Permissions",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/set_rules"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Unassign_set_permissionsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Unassign_set_permissionsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/set_rules"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSetRules.unassign_set_permissions",
          "name": "unassign_set_permissions",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ConditionSetRuleRemove",
              "typeId": "ConditionSetRuleRemove",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "conditionSetRulesUnassignSetPermissionsExample": {
                  "user_set": "us_based_employees",
                  "permission": "repository:clone",
                  "resource_set": "private_repos"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ConditionSetRuleRemove",
                  "typeId": "ConditionSetRuleRemove",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetRulesUnassignSetPermissionsExample": {
                      "user_set": "us_based_employees",
                      "permission": "repository:clone",
                      "resource_set": "private_repos"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Condition Set Rules_unassign_set_permissions_Response_204",
                  "typeId": "Condition Set Rules_unassign_set_permissions_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetRulesUnassignSetPermissionsExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Revokes permissions to a user set *on* a resource set.\n\nIf the permission is not granted, it is skipped.",
          "v2Examples": {
            "autogeneratedExamples": {
              "conditionSetRulesUnassignSetPermissionsExample_204": {
                "displayName": "conditionSetRulesUnassignSetPermissionsExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/set_rules"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "user_set": "us_based_employees",
                    "permission": "repository:clone",
                    "resource_set": "private_repos"
                  }
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Condition Set Rules_unassign_set_permissions_Response_204",
                      "typeId": "Condition Set Rules_unassign_set_permissions_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "conditionSetRulesUnassignSetPermissionsExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_resourceInstances": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Resource Instances"
          ],
          "packagePath": [],
          "file": "Resource Instances"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Resource Instances",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "page",
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": "per_page",
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_resource_instancesRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_resource_instancesRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceInstances.list_resource_instances",
          "name": "list_resource_instances",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceInstanceRead",
                      "typeId": "ResourceInstanceRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceInstancesListResourceInstancesExample": [
                      {
                        "key": "string",
                        "tenant": "string",
                        "resource": "string",
                        "id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "resource_id": "string",
                        "tenant_id": "string",
                        "attributes": {}
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the resource instances defined within an environment.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceInstancesListResourceInstancesExample_200": {
                "displayName": "listResourceInstancesExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/resource_instances"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "key": "string",
                        "tenant": "string",
                        "resource": "string",
                        "id": "string",
                        "organization_id": "string",
                        "project_id": "string",
                        "environment_id": "string",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "resource_id": "string",
                        "tenant_id": "string",
                        "attributes": {}
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "ResourceInstanceRead",
                          "typeId": "ResourceInstanceRead",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceInstancesListResourceInstancesExample": [
                          {
                            "key": "string",
                            "tenant": "string",
                            "resource": "string",
                            "id": "string",
                            "organization_id": "string",
                            "project_id": "string",
                            "environment_id": "string",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "resource_id": "string",
                            "tenant_id": "string",
                            "attributes": {}
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create Resource Instance",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_resource_instanceRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_resource_instanceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceInstances.create_resource_instance",
          "name": "create_resource_instance",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceInstanceCreate",
              "typeId": "ResourceInstanceCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceInstancesCreateResourceInstanceExample": {
                  "key": "react",
                  "tenant": "default",
                  "resource": "repository",
                  "attributes": {
                    "private": "false",
                    "owner": "facebook"
                  }
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceInstanceCreate",
                  "typeId": "ResourceInstanceCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceInstancesCreateResourceInstanceExample": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceInstanceRead",
                  "typeId": "ResourceInstanceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceInstancesCreateResourceInstanceExample": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new instance inside the Permit.io system.\n\nIf the instance is already created: will return 200 instead of 201,\nand will return the existing instance object in the response body.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceInstancesCreateResourceInstanceExample_200": {
                "displayName": "resourceInstancesCreateResourceInstanceExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/resource_instances"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "react",
                    "tenant": "default",
                    "resource": "repository",
                    "attributes": {
                      "private": "false",
                      "owner": "facebook"
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceInstanceRead",
                      "typeId": "ResourceInstanceRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceInstancesCreateResourceInstanceExample": {
                          "key": "react",
                          "tenant": "default",
                          "resource": "repository",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                          "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                          "attributes": {
                            "private": "false",
                            "owner": "facebook"
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Resource Instance",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances/"
              },
              {
                "pathParameter": "instance_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "instance_id",
              "docs": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "instance_id_example": "instance_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_resource_instanceRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_instanceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances/"
              },
              {
                "pathParameter": "instance_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "instance_id",
              "docs": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "instance_id_example": "instance_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceInstances.get_resource_instance",
          "name": "get_resource_instance",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceInstanceRead",
                  "typeId": "ResourceInstanceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceInstancesGetResourceInstanceExample": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a instance, if such instance exists. Otherwise returns 404.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceInstancesGetResourceInstanceExample_200": {
                "displayName": "getResourceInstanceExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/resource_instances/instance_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "instance_id": "instance_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceInstanceRead",
                      "typeId": "ResourceInstanceRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceInstancesGetResourceInstanceExample": {
                          "key": "react",
                          "tenant": "default",
                          "resource": "repository",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                          "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                          "attributes": {
                            "private": "false",
                            "owner": "facebook"
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete Resource Instance",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances/"
              },
              {
                "pathParameter": "instance_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "instance_id",
              "docs": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "instance_id_example": "instance_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_resource_instanceRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_resource_instanceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances/"
              },
              {
                "pathParameter": "instance_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "instance_id",
              "docs": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "instance_id_example": "instance_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceInstances.delete_resource_instance",
          "name": "delete_resource_instance",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Resource Instances_delete_resource_instance_Response_204",
                  "typeId": "Resource Instances_delete_resource_instance_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceInstancesDeleteResourceInstanceExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes the instance and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_resourceInstancesDeleteResourceInstanceExample_204": {
                "displayName": "deleteResourceInstanceExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/resource_instances/instance_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "instance_id": "instance_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Resource Instances_delete_resource_instance_Response_204",
                      "typeId": "Resource Instances_delete_resource_instance_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceInstancesDeleteResourceInstanceExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update Resource Instance",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances/"
              },
              {
                "pathParameter": "instance_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "instance_id",
              "docs": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "instance_id_example": "instance_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Update_resource_instanceRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_resource_instanceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances/"
              },
              {
                "pathParameter": "instance_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": "instance_id",
              "docs": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "instance_id_example": "instance_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceInstances.update_resource_instance",
          "name": "update_resource_instance",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResourceInstanceUpdate",
              "typeId": "ResourceInstanceUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceInstancesUpdateResourceInstanceExample": {
                  "attributes": {
                    "private": "false",
                    "owner": "facebook"
                  }
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceInstanceUpdate",
                  "typeId": "ResourceInstanceUpdate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceInstancesUpdateResourceInstanceExample": {
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResourceInstanceRead",
                  "typeId": "ResourceInstanceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceInstancesUpdateResourceInstanceExample": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the instance definition.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceInstancesUpdateResourceInstanceExample_200": {
                "displayName": "resourceInstancesUpdateResourceInstanceExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/facts/proj_id/env_id/resource_instances/instance_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "instance_id": "instance_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "attributes": {
                      "private": "false",
                      "owner": "facebook"
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ResourceInstanceRead",
                      "typeId": "ResourceInstanceRead",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "resourceInstancesUpdateResourceInstanceExample": {
                          "key": "react",
                          "tenant": "default",
                          "resource": "repository",
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                          "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                          "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                          "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                          "attributes": {
                            "private": "false",
                            "owner": "facebook"
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_bulkOperations": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Bulk Operations"
          ],
          "packagePath": [],
          "file": "Bulk Operations"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Bulk Create Users",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/users"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Bulk_create_usersRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_create_usersRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/users"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bulkOperations.bulk_create_users",
          "name": "bulk_create_users",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserCreateBulkOperation",
              "typeId": "UserCreateBulkOperation",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "bulkOperationsBulkCreateUsersExample": {
                  "operations": [
                    {
                      "key": "string"
                    }
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserCreateBulkOperation",
                  "typeId": "UserCreateBulkOperation",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkCreateUsersExample": {
                      "operations": [
                        {
                          "key": "string"
                        }
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserCreateBulkOperationResult",
                  "typeId": "UserCreateBulkOperationResult",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkCreateUsersExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "bulkOperationsBulkCreateUsersExample_200": {
                "displayName": "bulkOperationsBulkCreateUsersExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/bulk/users"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "operations": [
                      {
                        "key": "string"
                      }
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UserCreateBulkOperationResult",
                      "typeId": "UserCreateBulkOperationResult",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bulkOperationsBulkCreateUsersExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Bulk Replace Users",
          "method": "PUT",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/users"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Bulk_replace_usersRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_replace_usersRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/users"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bulkOperations.bulk_replace_users",
          "name": "bulk_replace_users",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserReplaceBulkOperation",
              "typeId": "UserReplaceBulkOperation",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "bulkOperationsBulkReplaceUsersExample": {
                  "operations": [
                    {
                      "key": "string"
                    }
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserReplaceBulkOperation",
                  "typeId": "UserReplaceBulkOperation",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkReplaceUsersExample": {
                      "operations": [
                        {
                          "key": "string"
                        }
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserReplaceBulkOperationResult",
                  "typeId": "UserReplaceBulkOperationResult",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkReplaceUsersExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "bulkOperationsBulkReplaceUsersExample_200": {
                "displayName": "bulkOperationsBulkReplaceUsersExample",
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/v2/facts/proj_id/env_id/bulk/users"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "operations": [
                      {
                        "key": "string"
                      }
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UserReplaceBulkOperationResult",
                      "typeId": "UserReplaceBulkOperationResult",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bulkOperationsBulkReplaceUsersExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Bulk Delete Users",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/users"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Bulk_delete_usersRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_delete_usersRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/users"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bulkOperations.bulk_delete_users",
          "name": "bulk_delete_users",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserDeleteBulkOperation",
              "typeId": "UserDeleteBulkOperation",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "bulkOperationsBulkDeleteUsersExample": {
                  "idents": [
                    "string"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserDeleteBulkOperation",
                  "typeId": "UserDeleteBulkOperation",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkDeleteUsersExample": {
                      "idents": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "UserDeleteBulkOperationResult",
                  "typeId": "UserDeleteBulkOperationResult",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkDeleteUsersExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "bulkOperationsBulkDeleteUsersExample_200": {
                "displayName": "bulkOperationsBulkDeleteUsersExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/bulk/users"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "idents": [
                      "string"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UserDeleteBulkOperationResult",
                      "typeId": "UserDeleteBulkOperationResult",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bulkOperationsBulkDeleteUsersExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Bulk Create Tenants",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/tenants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Bulk_create_tenantsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_create_tenantsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/tenants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bulkOperations.bulk_create_tenants",
          "name": "bulk_create_tenants",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TenantCreateBulkOperation",
              "typeId": "TenantCreateBulkOperation",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "bulkOperationsBulkCreateTenantsExample": {
                  "operations": [
                    {
                      "key": "string",
                      "name": "string"
                    }
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantCreateBulkOperation",
                  "typeId": "TenantCreateBulkOperation",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkCreateTenantsExample": {
                      "operations": [
                        {
                          "key": "string",
                          "name": "string"
                        }
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantCreateBulkOperationResult",
                  "typeId": "TenantCreateBulkOperationResult",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkCreateTenantsExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "bulkOperationsBulkCreateTenantsExample_200": {
                "displayName": "bulkOperationsBulkCreateTenantsExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/bulk/tenants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "operations": [
                      {
                        "key": "string",
                        "name": "string"
                      }
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TenantCreateBulkOperationResult",
                      "typeId": "TenantCreateBulkOperationResult",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bulkOperationsBulkCreateTenantsExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Bulk Delete Tenants",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/tenants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Bulk_delete_tenantsRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_delete_tenantsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/tenants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "proj_id",
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": "env_id",
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bulkOperations.bulk_delete_tenants",
          "name": "bulk_delete_tenants",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TenantDeleteBulkOperation",
              "typeId": "TenantDeleteBulkOperation",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "bulkOperationsBulkDeleteTenantsExample": {
                  "idents": [
                    "string"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantDeleteBulkOperation",
                  "typeId": "TenantDeleteBulkOperation",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkDeleteTenantsExample": {
                      "idents": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TenantDeleteBulkOperationResult",
                  "typeId": "TenantDeleteBulkOperationResult",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkDeleteTenantsExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "bulkOperationsBulkDeleteTenantsExample_200": {
                "displayName": "bulkOperationsBulkDeleteTenantsExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/bulk/tenants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "idents": [
                      "string"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TenantDeleteBulkOperationResult",
                      "typeId": "TenantDeleteBulkOperationResult",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bulkOperationsBulkDeleteTenantsExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "errors": {
    "List_organizationsRequestUnprocessableEntityError": {
      "name": {
        "name": "List_organizationsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_organizationsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_organizationsRequestUnprocessableEntityError",
        "wireValue": "List_organizationsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_organizationRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_organizationRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_organizationRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_organizationRequestUnprocessableEntityError",
        "wireValue": "Create_organizationRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_organizationRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_organizationRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_organizationRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_organizationRequestUnprocessableEntityError",
        "wireValue": "Get_organizationRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_organizationRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_organizationRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_organizationRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_organizationRequestUnprocessableEntityError",
        "wireValue": "Delete_organizationRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_organizationRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_organizationRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_organizationRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_organizationRequestUnprocessableEntityError",
        "wireValue": "Update_organizationRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_active_organizationRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_active_organizationRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_active_organizationRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_active_organizationRequestUnprocessableEntityError",
        "wireValue": "Get_active_organizationRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_projectsRequestUnprocessableEntityError": {
      "name": {
        "name": "List_projectsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_projectsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_projectsRequestUnprocessableEntityError",
        "wireValue": "List_projectsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_projectRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_projectRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_projectRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_projectRequestUnprocessableEntityError",
        "wireValue": "Create_projectRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_projectRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_projectRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_projectRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_projectRequestUnprocessableEntityError",
        "wireValue": "Get_projectRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_projectRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_projectRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_projectRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_projectRequestUnprocessableEntityError",
        "wireValue": "Delete_projectRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_projectRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_projectRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_projectRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_projectRequestUnprocessableEntityError",
        "wireValue": "Update_projectRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Stats_environmentsRequestUnprocessableEntityError": {
      "name": {
        "name": "Stats_environmentsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Stats_environmentsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Stats_environmentsRequestUnprocessableEntityError",
        "wireValue": "Stats_environmentsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_environmentsRequestUnprocessableEntityError": {
      "name": {
        "name": "List_environmentsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_environmentsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_environmentsRequestUnprocessableEntityError",
        "wireValue": "List_environmentsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_environmentRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_environmentRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_environmentRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_environmentRequestUnprocessableEntityError",
        "wireValue": "Create_environmentRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_environmentRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_environmentRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_environmentRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_environmentRequestUnprocessableEntityError",
        "wireValue": "Get_environmentRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_environmentRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_environmentRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_environmentRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_environmentRequestUnprocessableEntityError",
        "wireValue": "Delete_environmentRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_environmentRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_environmentRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_environmentRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_environmentRequestUnprocessableEntityError",
        "wireValue": "Update_environmentRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Copy_environmentRequestUnprocessableEntityError": {
      "name": {
        "name": "Copy_environmentRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Copy_environmentRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Copy_environmentRequestUnprocessableEntityError",
        "wireValue": "Copy_environmentRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_resourcesRequestUnprocessableEntityError": {
      "name": {
        "name": "List_resourcesRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_resourcesRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_resourcesRequestUnprocessableEntityError",
        "wireValue": "List_resourcesRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_resourceRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_resourceRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_resourceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_resourceRequestUnprocessableEntityError",
        "wireValue": "Create_resourceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_resourceRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_resourceRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resourceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_resourceRequestUnprocessableEntityError",
        "wireValue": "Get_resourceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Replace_resourceRequestUnprocessableEntityError": {
      "name": {
        "name": "Replace_resourceRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Replace_resourceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Replace_resourceRequestUnprocessableEntityError",
        "wireValue": "Replace_resourceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_resourceRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_resourceRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_resourceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_resourceRequestUnprocessableEntityError",
        "wireValue": "Delete_resourceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_resourceRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_resourceRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_resourceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_resourceRequestUnprocessableEntityError",
        "wireValue": "Update_resourceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_resource_actionsRequestUnprocessableEntityError": {
      "name": {
        "name": "List_resource_actionsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_resource_actionsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_resource_actionsRequestUnprocessableEntityError",
        "wireValue": "List_resource_actionsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_resource_actionRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_resource_actionRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_resource_actionRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_resource_actionRequestUnprocessableEntityError",
        "wireValue": "Create_resource_actionRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_resource_actionRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_resource_actionRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_actionRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_resource_actionRequestUnprocessableEntityError",
        "wireValue": "Get_resource_actionRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_resource_actionRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_resource_actionRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_resource_actionRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_resource_actionRequestUnprocessableEntityError",
        "wireValue": "Delete_resource_actionRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_resource_actionRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_resource_actionRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_resource_actionRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_resource_actionRequestUnprocessableEntityError",
        "wireValue": "Update_resource_actionRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_resource_action_groupsRequestUnprocessableEntityError": {
      "name": {
        "name": "List_resource_action_groupsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_resource_action_groupsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_resource_action_groupsRequestUnprocessableEntityError",
        "wireValue": "List_resource_action_groupsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_resource_action_groupRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_resource_action_groupRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_resource_action_groupRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_resource_action_groupRequestUnprocessableEntityError",
        "wireValue": "Create_resource_action_groupRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_resource_action_groupRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_resource_action_groupRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_action_groupRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_resource_action_groupRequestUnprocessableEntityError",
        "wireValue": "Get_resource_action_groupRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_resource_action_groupRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_resource_action_groupRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_resource_action_groupRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_resource_action_groupRequestUnprocessableEntityError",
        "wireValue": "Delete_resource_action_groupRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_resource_action_groupRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_resource_action_groupRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_resource_action_groupRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_resource_action_groupRequestUnprocessableEntityError",
        "wireValue": "Update_resource_action_groupRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_resource_rolesRequestUnprocessableEntityError": {
      "name": {
        "name": "List_resource_rolesRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_resource_rolesRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_resource_rolesRequestUnprocessableEntityError",
        "wireValue": "List_resource_rolesRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_resource_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_resource_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_resource_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_resource_roleRequestUnprocessableEntityError",
        "wireValue": "Create_resource_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_resource_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_resource_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_resource_roleRequestUnprocessableEntityError",
        "wireValue": "Get_resource_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_resource_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_resource_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_resource_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_resource_roleRequestUnprocessableEntityError",
        "wireValue": "Delete_resource_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_resource_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_resource_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_resource_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_resource_roleRequestUnprocessableEntityError",
        "wireValue": "Update_resource_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Assign_permissions_to_resource_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Assign_permissions_to_resource_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Assign_permissions_to_resource_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Assign_permissions_to_resource_roleRequestUnprocessableEntityError",
        "wireValue": "Assign_permissions_to_resource_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Remove_permissions_from_resource_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Remove_permissions_from_resource_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Remove_permissions_from_resource_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Remove_permissions_from_resource_roleRequestUnprocessableEntityError",
        "wireValue": "Remove_permissions_from_resource_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_resource_role_ancestorsRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_resource_role_ancestorsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_role_ancestorsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_resource_role_ancestorsRequestUnprocessableEntityError",
        "wireValue": "Get_resource_role_ancestorsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_resource_role_descendantsRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_resource_role_descendantsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_role_descendantsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_resource_role_descendantsRequestUnprocessableEntityError",
        "wireValue": "Get_resource_role_descendantsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_resource_attributesRequestUnprocessableEntityError": {
      "name": {
        "name": "List_resource_attributesRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_resource_attributesRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_resource_attributesRequestUnprocessableEntityError",
        "wireValue": "List_resource_attributesRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_resource_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_resource_attributeRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_resource_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_resource_attributeRequestUnprocessableEntityError",
        "wireValue": "Create_resource_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_resource_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_resource_attributeRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_resource_attributeRequestUnprocessableEntityError",
        "wireValue": "Get_resource_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_resource_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_resource_attributeRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_resource_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_resource_attributeRequestUnprocessableEntityError",
        "wireValue": "Delete_resource_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_resource_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_resource_attributeRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_resource_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_resource_attributeRequestUnprocessableEntityError",
        "wireValue": "Update_resource_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_user_attributesRequestUnprocessableEntityError": {
      "name": {
        "name": "List_user_attributesRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_user_attributesRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_user_attributesRequestUnprocessableEntityError",
        "wireValue": "List_user_attributesRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_user_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_user_attributeRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_user_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_user_attributeRequestUnprocessableEntityError",
        "wireValue": "Create_user_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_user_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_user_attributeRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_user_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_user_attributeRequestUnprocessableEntityError",
        "wireValue": "Get_user_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_user_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_user_attributeRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_user_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_user_attributeRequestUnprocessableEntityError",
        "wireValue": "Delete_user_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_user_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_user_attributeRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_user_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_user_attributeRequestUnprocessableEntityError",
        "wireValue": "Update_user_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_rolesRequestUnprocessableEntityError": {
      "name": {
        "name": "List_rolesRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_rolesRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_rolesRequestUnprocessableEntityError",
        "wireValue": "List_rolesRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_roleRequestUnprocessableEntityError",
        "wireValue": "Create_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_roleRequestUnprocessableEntityError",
        "wireValue": "Get_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_roleRequestUnprocessableEntityError",
        "wireValue": "Delete_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_roleRequestUnprocessableEntityError",
        "wireValue": "Update_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Assign_permissions_to_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Assign_permissions_to_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Assign_permissions_to_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Assign_permissions_to_roleRequestUnprocessableEntityError",
        "wireValue": "Assign_permissions_to_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Remove_permissions_from_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Remove_permissions_from_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Remove_permissions_from_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Remove_permissions_from_roleRequestUnprocessableEntityError",
        "wireValue": "Remove_permissions_from_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_role_ancestorsRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_role_ancestorsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_role_ancestorsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_role_ancestorsRequestUnprocessableEntityError",
        "wireValue": "Get_role_ancestorsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_role_descendantsRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_role_descendantsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_role_descendantsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_role_descendantsRequestUnprocessableEntityError",
        "wireValue": "Get_role_descendantsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_condition_setsRequestUnprocessableEntityError": {
      "name": {
        "name": "List_condition_setsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_condition_setsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_condition_setsRequestUnprocessableEntityError",
        "wireValue": "List_condition_setsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_condition_setRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_condition_setRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_condition_setRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_condition_setRequestUnprocessableEntityError",
        "wireValue": "Create_condition_setRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_condition_setRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_condition_setRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_condition_setRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_condition_setRequestUnprocessableEntityError",
        "wireValue": "Get_condition_setRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_condition_setRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_condition_setRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_condition_setRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_condition_setRequestUnprocessableEntityError",
        "wireValue": "Delete_condition_setRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_condition_setRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_condition_setRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_condition_setRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_condition_setRequestUnprocessableEntityError",
        "wireValue": "Update_condition_setRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_condition_set_ancestorsRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_condition_set_ancestorsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_condition_set_ancestorsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_condition_set_ancestorsRequestUnprocessableEntityError",
        "wireValue": "Get_condition_set_ancestorsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_condition_set_descendantsRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_condition_set_descendantsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_condition_set_descendantsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_condition_set_descendantsRequestUnprocessableEntityError",
        "wireValue": "Get_condition_set_descendantsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_usersRequestUnprocessableEntityError": {
      "name": {
        "name": "List_usersRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_usersRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_usersRequestUnprocessableEntityError",
        "wireValue": "List_usersRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_userRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_userRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_userRequestUnprocessableEntityError",
        "wireValue": "Create_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_userRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_userRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_userRequestUnprocessableEntityError",
        "wireValue": "Get_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Replace_userRequestUnprocessableEntityError": {
      "name": {
        "name": "Replace_userRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Replace_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Replace_userRequestUnprocessableEntityError",
        "wireValue": "Replace_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_userRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_userRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_userRequestUnprocessableEntityError",
        "wireValue": "Delete_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_userRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_userRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_userRequestUnprocessableEntityError",
        "wireValue": "Update_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Assign_role_to_userRequestUnprocessableEntityError": {
      "name": {
        "name": "Assign_role_to_userRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Assign_role_to_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Assign_role_to_userRequestUnprocessableEntityError",
        "wireValue": "Assign_role_to_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Unassign_role_from_userRequestUnprocessableEntityError": {
      "name": {
        "name": "Unassign_role_from_userRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Unassign_role_from_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Unassign_role_from_userRequestUnprocessableEntityError",
        "wireValue": "Unassign_role_from_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_tenant_usersRequestUnprocessableEntityError": {
      "name": {
        "name": "List_tenant_usersRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_tenant_usersRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_tenant_usersRequestUnprocessableEntityError",
        "wireValue": "List_tenant_usersRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_tenantsRequestUnprocessableEntityError": {
      "name": {
        "name": "List_tenantsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_tenantsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_tenantsRequestUnprocessableEntityError",
        "wireValue": "List_tenantsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_tenantRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_tenantRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_tenantRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_tenantRequestUnprocessableEntityError",
        "wireValue": "Create_tenantRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_tenantRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_tenantRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_tenantRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_tenantRequestUnprocessableEntityError",
        "wireValue": "Get_tenantRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_tenantRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_tenantRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_tenantRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_tenantRequestUnprocessableEntityError",
        "wireValue": "Delete_tenantRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_tenantRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_tenantRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_tenantRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_tenantRequestUnprocessableEntityError",
        "wireValue": "Update_tenantRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_tenant_userRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_tenant_userRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_tenant_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_tenant_userRequestUnprocessableEntityError",
        "wireValue": "Delete_tenant_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_role_assignmentsRequestUnprocessableEntityError": {
      "name": {
        "name": "List_role_assignmentsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_role_assignmentsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_role_assignmentsRequestUnprocessableEntityError",
        "wireValue": "List_role_assignmentsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Assign_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Assign_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Assign_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Assign_roleRequestUnprocessableEntityError",
        "wireValue": "Assign_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Unassign_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Unassign_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Unassign_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Unassign_roleRequestUnprocessableEntityError",
        "wireValue": "Unassign_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Bulk_assign_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Bulk_assign_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_assign_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Bulk_assign_roleRequestUnprocessableEntityError",
        "wireValue": "Bulk_assign_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Bulk_unassign_roleRequestUnprocessableEntityError": {
      "name": {
        "name": "Bulk_unassign_roleRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_unassign_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Bulk_unassign_roleRequestUnprocessableEntityError",
        "wireValue": "Bulk_unassign_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_set_permissionsRequestUnprocessableEntityError": {
      "name": {
        "name": "List_set_permissionsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_set_permissionsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_set_permissionsRequestUnprocessableEntityError",
        "wireValue": "List_set_permissionsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Assign_set_permissionsRequestUnprocessableEntityError": {
      "name": {
        "name": "Assign_set_permissionsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Assign_set_permissionsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Assign_set_permissionsRequestUnprocessableEntityError",
        "wireValue": "Assign_set_permissionsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Unassign_set_permissionsRequestUnprocessableEntityError": {
      "name": {
        "name": "Unassign_set_permissionsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Unassign_set_permissionsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Unassign_set_permissionsRequestUnprocessableEntityError",
        "wireValue": "Unassign_set_permissionsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_resource_instancesRequestUnprocessableEntityError": {
      "name": {
        "name": "List_resource_instancesRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_resource_instancesRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_resource_instancesRequestUnprocessableEntityError",
        "wireValue": "List_resource_instancesRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_resource_instanceRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_resource_instanceRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_resource_instanceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_resource_instanceRequestUnprocessableEntityError",
        "wireValue": "Create_resource_instanceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_resource_instanceRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_resource_instanceRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_instanceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_resource_instanceRequestUnprocessableEntityError",
        "wireValue": "Get_resource_instanceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_resource_instanceRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_resource_instanceRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_resource_instanceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_resource_instanceRequestUnprocessableEntityError",
        "wireValue": "Delete_resource_instanceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Update_resource_instanceRequestUnprocessableEntityError": {
      "name": {
        "name": "Update_resource_instanceRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_resource_instanceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Update_resource_instanceRequestUnprocessableEntityError",
        "wireValue": "Update_resource_instanceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Bulk_create_usersRequestUnprocessableEntityError": {
      "name": {
        "name": "Bulk_create_usersRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_create_usersRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Bulk_create_usersRequestUnprocessableEntityError",
        "wireValue": "Bulk_create_usersRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Bulk_replace_usersRequestUnprocessableEntityError": {
      "name": {
        "name": "Bulk_replace_usersRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_replace_usersRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Bulk_replace_usersRequestUnprocessableEntityError",
        "wireValue": "Bulk_replace_usersRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Bulk_delete_usersRequestUnprocessableEntityError": {
      "name": {
        "name": "Bulk_delete_usersRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_delete_usersRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Bulk_delete_usersRequestUnprocessableEntityError",
        "wireValue": "Bulk_delete_usersRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Bulk_create_tenantsRequestUnprocessableEntityError": {
      "name": {
        "name": "Bulk_create_tenantsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_create_tenantsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Bulk_create_tenantsRequestUnprocessableEntityError",
        "wireValue": "Bulk_create_tenantsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Bulk_delete_tenantsRequestUnprocessableEntityError": {
      "name": {
        "name": "Bulk_delete_tenantsRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_delete_tenantsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Bulk_delete_tenantsRequestUnprocessableEntityError",
        "wireValue": "Bulk_delete_tenantsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    }
  },
  "webhookGroups": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "environments": {
    "defaultEnvironment": "https://api.permit.io",
    "environments": {
      "environments": [
        {
          "id": "https://api.permit.io",
          "name": "https://api.permit.io",
          "url": "https://api.permit.io"
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "types": [
      "ActionBlockEditable",
      "ActionBlockRead",
      "AddRolePermissions",
      "AttributeBlockEditable",
      "AttributeBlockRead",
      "AttributeType",
      "BulkRoleAssignmentReport",
      "BulkRoleUnAssignmentReport",
      "ConditionSetCreate",
      "ConditionSetRead",
      "ConditionSetRuleCreate",
      "ConditionSetRuleRead",
      "ConditionSetRuleRemove",
      "ConditionSetType",
      "ConditionSetUpdate",
      "EnvironmentCopy",
      "EnvironmentCopyScope",
      "EnvironmentCopyScopeFilters",
      "EnvironmentCopyTarget",
      "EnvironmentCreate",
      "EnvironmentRead",
      "EnvironmentStats",
      "EnvironmentUpdate",
      "HTTPValidationError",
      "IdentityRead",
      "InviteRead",
      "InviteStatus",
      "JwksObj",
      "MemberAccessLevel",
      "MemberAccessObj",
      "OnboardingStep",
      "OrgMemberReadWithGrants",
      "OrganizationCreate",
      "OrganizationRead",
      "OrganizationReadWithAPIKey",
      "OrganizationUpdate",
      "PDPConfigRead",
      "PaginatedResult_ConditionSetRead_",
      "PaginatedResult_ResourceRead_",
      "PaginatedResult_ResourceRoleRead_",
      "PaginatedResult_RoleRead_",
      "PaginatedResult_TenantRead_",
      "PaginatedResult_UserRead_",
      "Permission",
      "ProjectCreate",
      "ProjectRead",
      "ProjectUpdate",
      "RelationsBlock",
      "RemoveRolePermissions",
      "ResourceActionCreate",
      "ResourceActionGroupCreate",
      "ResourceActionGroupRead",
      "ResourceActionGroupUpdate",
      "ResourceActionRead",
      "ResourceActionUpdate",
      "ResourceAttributeCreate",
      "ResourceAttributeRead",
      "ResourceAttributeUpdate",
      "ResourceCreate",
      "ResourceInstanceCreate",
      "ResourceInstanceRead",
      "ResourceInstanceUpdate",
      "ResourceRead",
      "ResourceReplace",
      "ResourceRoleCreate",
      "ResourceRoleList",
      "ResourceRoleRead",
      "ResourceRoleUpdate",
      "ResourceUpdate",
      "RoleAssignmentCreate",
      "RoleAssignmentRead",
      "RoleAssignmentRemove",
      "RoleBlock",
      "RoleCreate",
      "RoleList",
      "RoleRead",
      "RoleUpdate",
      "RolesBlock",
      "Statistics",
      "TenantCreate",
      "TenantCreateBulkOperation",
      "TenantCreateBulkOperationResult",
      "TenantDeleteBulkOperation",
      "TenantDeleteBulkOperationResult",
      "TenantRead",
      "TenantUpdate",
      "UserCreate",
      "UserCreateBulkOperation",
      "UserCreateBulkOperationResult",
      "UserDeleteBulkOperation",
      "UserDeleteBulkOperationResult",
      "UserInTenant",
      "UserRead",
      "UserReplaceBulkOperation",
      "UserReplaceBulkOperationResult",
      "UserRole",
      "UserRoleCreate",
      "UserRoleRemove",
      "UserStatus",
      "UserUpdate",
      "ValidationError"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_organizations",
      "subpackage_projects",
      "subpackage_environments",
      "subpackage_resources",
      "subpackage_resourceActions",
      "subpackage_resourceActionGroups",
      "subpackage_resourceRoles",
      "subpackage_resourceAttributes",
      "subpackage_userAttributes",
      "subpackage_roles",
      "subpackage_conditionSets",
      "subpackage_users",
      "subpackage_tenants",
      "subpackage_roleAssignments",
      "subpackage_conditionSetRules",
      "subpackage_resourceInstances",
      "subpackage_bulkOperations"
    ],
    "hasEndpointsInTree": false
  },
  "subpackages": {
    "subpackage_organizations": {
      "name": "organizations",
      "fernFilepath": {
        "allParts": [
          "organizations"
        ],
        "packagePath": [],
        "file": "organizations"
      },
      "service": "service_organizations",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_projects": {
      "name": "projects",
      "fernFilepath": {
        "allParts": [
          "projects"
        ],
        "packagePath": [],
        "file": "projects"
      },
      "service": "service_projects",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_environments": {
      "name": "environments",
      "fernFilepath": {
        "allParts": [
          "environments"
        ],
        "packagePath": [],
        "file": "environments"
      },
      "service": "service_environments",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_resources": {
      "name": "resources",
      "fernFilepath": {
        "allParts": [
          "resources"
        ],
        "packagePath": [],
        "file": "resources"
      },
      "service": "service_resources",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_resourceActions": {
      "name": "resourceActions",
      "fernFilepath": {
        "allParts": [
          "resourceActions"
        ],
        "packagePath": [],
        "file": "resourceActions"
      },
      "service": "service_resourceActions",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_resourceActionGroups": {
      "name": "resourceActionGroups",
      "fernFilepath": {
        "allParts": [
          "resourceActionGroups"
        ],
        "packagePath": [],
        "file": "resourceActionGroups"
      },
      "service": "service_resourceActionGroups",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_resourceRoles": {
      "name": "resourceRoles",
      "fernFilepath": {
        "allParts": [
          "resourceRoles"
        ],
        "packagePath": [],
        "file": "resourceRoles"
      },
      "service": "service_resourceRoles",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_resourceAttributes": {
      "name": "resourceAttributes",
      "fernFilepath": {
        "allParts": [
          "resourceAttributes"
        ],
        "packagePath": [],
        "file": "resourceAttributes"
      },
      "service": "service_resourceAttributes",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_userAttributes": {
      "name": "userAttributes",
      "fernFilepath": {
        "allParts": [
          "userAttributes"
        ],
        "packagePath": [],
        "file": "userAttributes"
      },
      "service": "service_userAttributes",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_roles": {
      "name": "roles",
      "fernFilepath": {
        "allParts": [
          "roles"
        ],
        "packagePath": [],
        "file": "roles"
      },
      "service": "service_roles",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_conditionSets": {
      "name": "conditionSets",
      "fernFilepath": {
        "allParts": [
          "conditionSets"
        ],
        "packagePath": [],
        "file": "conditionSets"
      },
      "service": "service_conditionSets",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_users": {
      "name": "users",
      "fernFilepath": {
        "allParts": [
          "users"
        ],
        "packagePath": [],
        "file": "users"
      },
      "service": "service_users",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_tenants": {
      "name": "tenants",
      "fernFilepath": {
        "allParts": [
          "tenants"
        ],
        "packagePath": [],
        "file": "tenants"
      },
      "service": "service_tenants",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_roleAssignments": {
      "name": "roleAssignments",
      "fernFilepath": {
        "allParts": [
          "roleAssignments"
        ],
        "packagePath": [],
        "file": "roleAssignments"
      },
      "service": "service_roleAssignments",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_conditionSetRules": {
      "name": "conditionSetRules",
      "fernFilepath": {
        "allParts": [
          "conditionSetRules"
        ],
        "packagePath": [],
        "file": "conditionSetRules"
      },
      "service": "service_conditionSetRules",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_resourceInstances": {
      "name": "resourceInstances",
      "fernFilepath": {
        "allParts": [
          "resourceInstances"
        ],
        "packagePath": [],
        "file": "resourceInstances"
      },
      "service": "service_resourceInstances",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_bulkOperations": {
      "name": "bulkOperations",
      "fernFilepath": {
        "allParts": [
          "bulkOperations"
        ],
        "packagePath": [],
        "file": "bulkOperations"
      },
      "service": "service_bulkOperations",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    }
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "apiName": "",
  "constants": {
    "errorInstanceIdKey": {
      "name": "errorInstanceId",
      "wireValue": "errorInstanceId"
    }
  }
}