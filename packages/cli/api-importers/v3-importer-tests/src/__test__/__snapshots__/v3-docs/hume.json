{
  "apiName": "",
  "selfHosted": false,
  "auth": {
    "requirement": "ALL",
    "schemes": [
      {
        "key": "header",
        "name": {
          "name": "apiKey",
          "wireValue": "X-Hume-Api-Key"
        },
        "valueType": {
          "container": {
            "optional": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "type": "header"
      }
    ]
  },
  "headers": [],
  "environments": {
    "defaultEnvironment": "https://api.hume.ai",
    "environments": {
      "baseUrls": [
        {
          "id": "Base",
          "name": "Base"
        },
        {
          "id": "prod",
          "name": "prod"
        }
      ],
      "environments": [
        {
          "id": "https://api.hume.ai",
          "name": "https://api.hume.ai",
          "urls": {
            "Base": "https://api.hume.ai",
            "prod": "wss://api.hume.ai/v0/evi"
          }
        }
      ],
      "type": "multipleBaseUrls"
    }
  },
  "types": {
    "BaseRequestModels": {
      "name": {
        "typeId": "BaseRequestModels",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BaseRequestModels"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Models",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Models"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BaseRequestModels_example_autogenerated": null
        }
      }
    },
    "BaseRequestTranscription": {
      "name": {
        "typeId": "BaseRequestTranscription",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BaseRequestTranscription"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Transcription",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Transcription"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BaseRequestTranscription_example_autogenerated": null
        }
      }
    },
    "BaseRequest": {
      "name": {
        "typeId": "BaseRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BaseRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BaseRequestModels",
                  "typeId": "BaseRequestModels",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BaseRequestModels_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "transcription",
              "wireValue": "transcription"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BaseRequestTranscription",
                  "typeId": "BaseRequestTranscription",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BaseRequestTranscription_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "urls",
              "wireValue": "urls"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "url"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URLs to the media files to be processed. Each must be a valid public URL to a media file (see recommended input filetypes) or an archive (`.zip`, `.tar.gz`, `.tar.bz2`, `.tar.xz`) of media files.\n\nIf you wish to supply more than 100 URLs, consider providing them as an archive (`.zip`, `.tar.gz`, `.tar.bz2`, `.tar.xz`).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BaseRequestUrls_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "callback_url",
              "wireValue": "callback_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "url"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "If provided, a `POST` request will be made to the URL with the generated predictions on completion or the error message on failure.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BaseRequestCallbackUrl_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "notify",
              "wireValue": "notify"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether to send an email notification to the user upon job failure.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BaseRequestNotify_example_autogenerated": false
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BaseRequest_example_autogenerated": {}
        }
      }
    },
    "Bcp47Tag": {
      "name": {
        "typeId": "Bcp47Tag",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Bcp47Tag"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "zh",
              "wireValue": "zh"
            }
          },
          {
            "name": {
              "name": "da",
              "wireValue": "da"
            }
          },
          {
            "name": {
              "name": "nl",
              "wireValue": "nl"
            }
          },
          {
            "name": {
              "name": "en",
              "wireValue": "en"
            }
          },
          {
            "name": {
              "name": "en-AU",
              "wireValue": "en-AU"
            }
          },
          {
            "name": {
              "name": "en-IN",
              "wireValue": "en-IN"
            }
          },
          {
            "name": {
              "name": "en-NZ",
              "wireValue": "en-NZ"
            }
          },
          {
            "name": {
              "name": "en-GB",
              "wireValue": "en-GB"
            }
          },
          {
            "name": {
              "name": "fr",
              "wireValue": "fr"
            }
          },
          {
            "name": {
              "name": "fr-CA",
              "wireValue": "fr-CA"
            }
          },
          {
            "name": {
              "name": "de",
              "wireValue": "de"
            }
          },
          {
            "name": {
              "name": "hi",
              "wireValue": "hi"
            }
          },
          {
            "name": {
              "name": "hi-Latn",
              "wireValue": "hi-Latn"
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            }
          },
          {
            "name": {
              "name": "it",
              "wireValue": "it"
            }
          },
          {
            "name": {
              "name": "ja",
              "wireValue": "ja"
            }
          },
          {
            "name": {
              "name": "ko",
              "wireValue": "ko"
            }
          },
          {
            "name": {
              "name": "no",
              "wireValue": "no"
            }
          },
          {
            "name": {
              "name": "pl",
              "wireValue": "pl"
            }
          },
          {
            "name": {
              "name": "pt",
              "wireValue": "pt"
            }
          },
          {
            "name": {
              "name": "pt-BR",
              "wireValue": "pt-BR"
            }
          },
          {
            "name": {
              "name": "pt-PT",
              "wireValue": "pt-PT"
            }
          },
          {
            "name": {
              "name": "ru",
              "wireValue": "ru"
            }
          },
          {
            "name": {
              "name": "es",
              "wireValue": "es"
            }
          },
          {
            "name": {
              "name": "es-419",
              "wireValue": "es-419"
            }
          },
          {
            "name": {
              "name": "sv",
              "wireValue": "sv"
            }
          },
          {
            "name": {
              "name": "ta",
              "wireValue": "ta"
            }
          },
          {
            "name": {
              "name": "tr",
              "wireValue": "tr"
            }
          },
          {
            "name": {
              "name": "uk",
              "wireValue": "uk"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Bcp47Tag_example_autogenerated": "zh"
        }
      }
    },
    "BoundingBox": {
      "name": {
        "typeId": "BoundingBox",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BoundingBox"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "x",
              "wireValue": "x"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "x-coordinate of bounding box top left corner.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BoundingBoxX_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "y",
              "wireValue": "y"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "y-coordinate of bounding box top left corner.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BoundingBoxY_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "w",
              "wireValue": "w"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "Bounding box width.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BoundingBoxW_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "h",
              "wireValue": "h"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "Bounding box height.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BoundingBoxH_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "A bounding box around a face.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BoundingBox_example_autogenerated": {
            "x": 1.1,
            "y": 1.1,
            "w": 1.1,
            "h": 1.1
          }
        }
      }
    },
    "BurstPrediction": {
      "name": {
        "typeId": "BurstPrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BurstPrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "time",
              "wireValue": "time"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TimeInterval",
              "typeId": "TimeInterval",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "emotions",
              "wireValue": "emotions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EmotionScore",
                  "typeId": "EmotionScore",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A high-dimensional embedding in emotion space.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BurstPredictionEmotions_example_autogenerated": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "descriptions",
              "wireValue": "descriptions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "DescriptionsScore",
                  "typeId": "DescriptionsScore",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "Modality-specific descriptive features and their scores.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BurstPredictionDescriptions_example_autogenerated": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BurstPrediction_example_autogenerated": {
            "time": {
              "begin": 1.1,
              "end": 1.1
            },
            "emotions": [
              {
                "name": "string",
                "score": "string"
              }
            ],
            "descriptions": [
              {
                "name": "string",
                "score": "string"
              }
            ]
          }
        }
      }
    },
    "Completed": {
      "name": {
        "typeId": "Completed",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Completed"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "created_timestamp_ms",
              "wireValue": "created_timestamp_ms"
            },
            "valueType": {
              "primitive": {
                "v1": "LONG",
                "v2": {
                  "type": "long"
                }
              },
              "type": "primitive"
            },
            "docs": "When this job was created (Unix timestamp in milliseconds).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CompletedCreatedTimestampMs_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "started_timestamp_ms",
              "wireValue": "started_timestamp_ms"
            },
            "valueType": {
              "primitive": {
                "v1": "LONG",
                "v2": {
                  "type": "long"
                }
              },
              "type": "primitive"
            },
            "docs": "When this job started (Unix timestamp in milliseconds).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CompletedStartedTimestampMs_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "ended_timestamp_ms",
              "wireValue": "ended_timestamp_ms"
            },
            "valueType": {
              "primitive": {
                "v1": "LONG",
                "v2": {
                  "type": "long"
                }
              },
              "type": "primitive"
            },
            "docs": "When this job ended (Unix timestamp in milliseconds).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CompletedEndedTimestampMs_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "num_predictions",
              "wireValue": "num_predictions"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The number of predictions that were generated by this job.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CompletedNumPredictions_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "num_errors",
              "wireValue": "num_errors"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The number of errors that occurred while running this job.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CompletedNumErrors_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Completed_example_autogenerated": {
            "created_timestamp_ms": 1,
            "started_timestamp_ms": 1,
            "ended_timestamp_ms": 1,
            "num_predictions": 1,
            "num_errors": 1
          }
        }
      }
    },
    "DescriptionsScore": {
      "name": {
        "typeId": "DescriptionsScore",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DescriptionsScore"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Name of the descriptive feature being expressed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DescriptionsScoreName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "score",
              "wireValue": "score"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Embedding value for the descriptive feature being expressed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DescriptionsScoreScore_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DescriptionsScore_example_autogenerated": {
            "name": "string",
            "score": "string"
          }
        }
      }
    },
    "Direction": {
      "name": {
        "typeId": "Direction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Direction"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "asc",
              "wireValue": "asc"
            }
          },
          {
            "name": {
              "name": "desc",
              "wireValue": "desc"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Direction_example_autogenerated": "asc"
        }
      }
    },
    "EmotionScore": {
      "name": {
        "typeId": "EmotionScore",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmotionScore"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Name of the emotion being expressed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoreName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "score",
              "wireValue": "score"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Embedding value for the emotion being expressed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoreScore_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmotionScore_example_autogenerated": {
            "name": "string",
            "score": "string"
          }
        }
      }
    },
    "Empty": {
      "name": {
        "typeId": "Empty",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Empty"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "To include predictions for this model type, set this field to `{}`. It is currently not configurable further.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Empty_example_autogenerated": {}
        }
      }
    },
    "Error": {
      "name": {
        "typeId": "Error",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "error",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Web Socket Error message, this must be `error`.\n\nThis message indicates a disruption in the WebSocket connection, such as an unexpected disconnection, protocol error, or data transmission issue.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "code",
              "wireValue": "code"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Error code. Identifies the type of error encountered.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "slug",
              "wireValue": "slug"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Short, human-readable identifier and description for the error. See a complete list of error slugs on the [Errors page](/docs/resources/errors).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorSlug_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Detailed description of the error.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is an error message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Error_example_autogenerated": {
            "type": "string",
            "code": "string",
            "slug": "string",
            "message": "string"
          }
        }
      }
    },
    "FaceFacs": {
      "name": {
        "typeId": "FaceFacs",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FaceFacs"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Empty",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Empty"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FaceFacs_example_autogenerated": null
        }
      }
    },
    "FaceDescriptions": {
      "name": {
        "typeId": "FaceDescriptions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FaceDescriptions"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Empty",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Empty"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FaceDescriptions_example_autogenerated": null
        }
      }
    },
    "Face": {
      "name": {
        "typeId": "Face",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Face"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "fps_pred",
              "wireValue": "fps_pred"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "default": 3,
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number of frames per second to process. Other frames will be omitted from the response. Set to `0` to process every frame.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FaceFpsPred_example_autogenerated": 3
              }
            }
          },
          {
            "name": {
              "name": "prob_threshold",
              "wireValue": "prob_threshold"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "default": 0.99,
                      "validation": {
                        "max": 1,
                        "min": 0
                      },
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Face detection probability threshold. Faces detected with a probability less than this threshold will be omitted from the response.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FaceProbThreshold_example_autogenerated": 0.99
              }
            }
          },
          {
            "name": {
              "name": "identify_faces",
              "wireValue": "identify_faces"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether to return identifiers for faces across frames. If `true`, unique identifiers will be assigned to face bounding boxes to differentiate different faces. If `false`, all faces will be tagged with an `unknown` ID.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FaceIdentifyFaces_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": "min_face_size",
              "wireValue": "min_face_size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "UINT_64",
                    "v2": {
                      "default": 60,
                      "validation": {},
                      "type": "uint64"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Minimum bounding box side length in pixels to treat as a face. Faces detected with a bounding box side length in pixels less than this threshold will be omitted from the response.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FaceMinFaceSize_example_autogenerated": 60
              }
            }
          },
          {
            "name": {
              "name": "facs",
              "wireValue": "facs"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "FaceFacs",
                  "typeId": "FaceFacs",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FaceFacs_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "descriptions",
              "wireValue": "descriptions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "FaceDescriptions",
                  "typeId": "FaceDescriptions",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FaceDescriptions_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "save_faces",
              "wireValue": "save_faces"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether to extract and save the detected faces in the artifacts zip created by each job.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FaceSaveFaces_example_autogenerated": false
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Face_example_autogenerated": {}
        }
      }
    },
    "FacePrediction": {
      "name": {
        "typeId": "FacePrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FacePrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "frame",
              "wireValue": "frame"
            },
            "valueType": {
              "primitive": {
                "v1": "UINT_64",
                "v2": {
                  "validation": {},
                  "type": "uint64"
                }
              },
              "type": "primitive"
            },
            "docs": "Frame number",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FacePredictionFrame_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "time",
              "wireValue": "time"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "Time in seconds when face detection occurred.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FacePredictionTime_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "prob",
              "wireValue": "prob"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "The predicted probability that a detected face was actually a face.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FacePredictionProb_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "box",
              "wireValue": "box"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "BoundingBox",
              "typeId": "BoundingBox",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "emotions",
              "wireValue": "emotions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EmotionScore",
                  "typeId": "EmotionScore",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A high-dimensional embedding in emotion space.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FacePredictionEmotions_example_autogenerated": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "facs",
              "wireValue": "facs"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "FacsScore",
                      "typeId": "FacsScore",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "FACS 2.0 features and their scores.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FacePredictionFacs_example_autogenerated": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "descriptions",
              "wireValue": "descriptions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "DescriptionsScore",
                      "typeId": "DescriptionsScore",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Modality-specific descriptive features and their scores.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FacePredictionDescriptions_example_autogenerated": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FacePrediction_example_autogenerated": {
            "frame": 1,
            "time": 1.1,
            "prob": 1.1,
            "box": {
              "x": 1.1,
              "y": 1.1,
              "w": 1.1,
              "h": 1.1
            },
            "emotions": [
              {
                "name": "string",
                "score": "string"
              }
            ]
          }
        }
      }
    },
    "FacemeshPrediction": {
      "name": {
        "typeId": "FacemeshPrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FacemeshPrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "emotions",
              "wireValue": "emotions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EmotionScore",
                  "typeId": "EmotionScore",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A high-dimensional embedding in emotion space.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FacemeshPredictionEmotions_example_autogenerated": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FacemeshPrediction_example_autogenerated": {
            "emotions": [
              {
                "name": "string",
                "score": "string"
              }
            ]
          }
        }
      }
    },
    "FacsScore": {
      "name": {
        "typeId": "FacsScore",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FacsScore"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Name of the FACS 2.0 feature being expressed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FacsScoreName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "score",
              "wireValue": "score"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Embedding value for the FACS 2.0 feature being expressed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FacsScoreScore_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FacsScore_example_autogenerated": {
            "name": "string",
            "score": "string"
          }
        }
      }
    },
    "Failed": {
      "name": {
        "typeId": "Failed",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Failed"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "created_timestamp_ms",
              "wireValue": "created_timestamp_ms"
            },
            "valueType": {
              "primitive": {
                "v1": "LONG",
                "v2": {
                  "type": "long"
                }
              },
              "type": "primitive"
            },
            "docs": "When this job was created (Unix timestamp in milliseconds).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FailedCreatedTimestampMs_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "started_timestamp_ms",
              "wireValue": "started_timestamp_ms"
            },
            "valueType": {
              "primitive": {
                "v1": "LONG",
                "v2": {
                  "type": "long"
                }
              },
              "type": "primitive"
            },
            "docs": "When this job started (Unix timestamp in milliseconds).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FailedStartedTimestampMs_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "ended_timestamp_ms",
              "wireValue": "ended_timestamp_ms"
            },
            "valueType": {
              "primitive": {
                "v1": "LONG",
                "v2": {
                  "type": "long"
                }
              },
              "type": "primitive"
            },
            "docs": "When this job ended (Unix timestamp in milliseconds).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FailedEndedTimestampMs_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "An error message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FailedMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Failed_example_autogenerated": {
            "created_timestamp_ms": 1,
            "started_timestamp_ms": 1,
            "ended_timestamp_ms": 1,
            "message": "string"
          }
        }
      }
    },
    "File": {
      "name": {
        "typeId": "File",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "File",
          "pascalCase": {
            "unsafeName": "File",
            "safeName": "File_"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "filename",
              "wireValue": "filename"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the file.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FileFilename_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "content_type",
              "wireValue": "content_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The content type of the file.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FileContentType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "md5sum",
              "wireValue": "md5sum"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The MD5 checksum of the file.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FileMd5Sum_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "File_example_autogenerated": {
            "md5sum": "string"
          }
        }
      }
    },
    "Granularity": {
      "name": {
        "typeId": "Granularity",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Granularity"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "word",
              "wireValue": "word"
            }
          },
          {
            "name": {
              "name": "sentence",
              "wireValue": "sentence"
            }
          },
          {
            "name": {
              "name": "utterance",
              "wireValue": "utterance"
            }
          },
          {
            "name": {
              "name": "conversational_turn",
              "wireValue": "conversational_turn"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The granularity at which to generate predictions. `utterance` corresponds to a natural pause or break in conversation, while `conversational_turn` corresponds to a change in speaker.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Granularity_example_autogenerated": "word"
        }
      }
    },
    "GroupedPredictions_BurstPrediction": {
      "name": {
        "typeId": "GroupedPredictions_BurstPrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GroupedPredictions_BurstPrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "An automatically generated label to identify individuals in your media file. Will be `unknown` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupedPredictionsBurstPredictionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "predictions",
              "wireValue": "predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BurstPrediction",
                  "typeId": "BurstPrediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupedPredictionsBurstPredictionPredictions_example_autogenerated": [
                  {
                    "time": {
                      "begin": 1.1,
                      "end": 1.1
                    },
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ],
                    "descriptions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GroupedPredictions_BurstPrediction_example_autogenerated": {
            "id": "string",
            "predictions": [
              {
                "time": {
                  "begin": 1.1,
                  "end": 1.1
                },
                "emotions": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ],
                "descriptions": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "GroupedPredictions_FacePrediction": {
      "name": {
        "typeId": "GroupedPredictions_FacePrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GroupedPredictions_FacePrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "An automatically generated label to identify individuals in your media file. Will be `unknown` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupedPredictionsFacePredictionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "predictions",
              "wireValue": "predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "FacePrediction",
                  "typeId": "FacePrediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupedPredictionsFacePredictionPredictions_example_autogenerated": [
                  {
                    "frame": 1,
                    "time": 1.1,
                    "prob": 1.1,
                    "box": {
                      "x": 1.1,
                      "y": 1.1,
                      "w": 1.1,
                      "h": 1.1
                    },
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GroupedPredictions_FacePrediction_example_autogenerated": {
            "id": "string",
            "predictions": [
              {
                "frame": 1,
                "time": 1.1,
                "prob": 1.1,
                "box": {
                  "x": 1.1,
                  "y": 1.1,
                  "w": 1.1,
                  "h": 1.1
                },
                "emotions": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "GroupedPredictions_FacemeshPrediction": {
      "name": {
        "typeId": "GroupedPredictions_FacemeshPrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GroupedPredictions_FacemeshPrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "An automatically generated label to identify individuals in your media file. Will be `unknown` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupedPredictionsFacemeshPredictionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "predictions",
              "wireValue": "predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "FacemeshPrediction",
                  "typeId": "FacemeshPrediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupedPredictionsFacemeshPredictionPredictions_example_autogenerated": [
                  {
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GroupedPredictions_FacemeshPrediction_example_autogenerated": {
            "id": "string",
            "predictions": [
              {
                "emotions": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "GroupedPredictions_LanguagePrediction": {
      "name": {
        "typeId": "GroupedPredictions_LanguagePrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GroupedPredictions_LanguagePrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "An automatically generated label to identify individuals in your media file. Will be `unknown` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupedPredictionsLanguagePredictionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "predictions",
              "wireValue": "predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "LanguagePrediction",
                  "typeId": "LanguagePrediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupedPredictionsLanguagePredictionPredictions_example_autogenerated": [
                  {
                    "text": "string",
                    "position": {
                      "begin": 1,
                      "end": 1
                    },
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GroupedPredictions_LanguagePrediction_example_autogenerated": {
            "id": "string",
            "predictions": [
              {
                "text": "string",
                "position": {
                  "begin": 1,
                  "end": 1
                },
                "emotions": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "GroupedPredictions_NerPrediction": {
      "name": {
        "typeId": "GroupedPredictions_NerPrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GroupedPredictions_NerPrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "An automatically generated label to identify individuals in your media file. Will be `unknown` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupedPredictionsNerPredictionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "predictions",
              "wireValue": "predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "NerPrediction",
                  "typeId": "NerPrediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupedPredictionsNerPredictionPredictions_example_autogenerated": [
                  {
                    "entity": "string",
                    "position": {
                      "begin": 1,
                      "end": 1
                    },
                    "entity_confidence": 1.1,
                    "support": 1.1,
                    "uri": "string",
                    "link_word": "string",
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GroupedPredictions_NerPrediction_example_autogenerated": {
            "id": "string",
            "predictions": [
              {
                "entity": "string",
                "position": {
                  "begin": 1,
                  "end": 1
                },
                "entity_confidence": 1.1,
                "support": 1.1,
                "uri": "string",
                "link_word": "string",
                "emotions": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "GroupedPredictions_ProsodyPrediction": {
      "name": {
        "typeId": "GroupedPredictions_ProsodyPrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GroupedPredictions_ProsodyPrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "An automatically generated label to identify individuals in your media file. Will be `unknown` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupedPredictionsProsodyPredictionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "predictions",
              "wireValue": "predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProsodyPrediction",
                  "typeId": "ProsodyPrediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupedPredictionsProsodyPredictionPredictions_example_autogenerated": [
                  {
                    "time": {
                      "begin": 1.1,
                      "end": 1.1
                    },
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GroupedPredictions_ProsodyPrediction_example_autogenerated": {
            "id": "string",
            "predictions": [
              {
                "time": {
                  "begin": 1.1,
                  "end": 1.1
                },
                "emotions": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "InProgress": {
      "name": {
        "typeId": "InProgress",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "InProgress"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "created_timestamp_ms",
              "wireValue": "created_timestamp_ms"
            },
            "valueType": {
              "primitive": {
                "v1": "LONG",
                "v2": {
                  "type": "long"
                }
              },
              "type": "primitive"
            },
            "docs": "When this job was created (Unix timestamp in milliseconds).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InProgressCreatedTimestampMs_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "started_timestamp_ms",
              "wireValue": "started_timestamp_ms"
            },
            "valueType": {
              "primitive": {
                "v1": "LONG",
                "v2": {
                  "type": "long"
                }
              },
              "type": "primitive"
            },
            "docs": "When this job started (Unix timestamp in milliseconds).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InProgressStartedTimestampMs_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "InProgress_example_autogenerated": {
            "created_timestamp_ms": 1,
            "started_timestamp_ms": 1
          }
        }
      }
    },
    "Job_Request": {
      "name": {
        "typeId": "Job_Request",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Job_Request"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "user_id",
              "wireValue": "user_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Your user ID.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "JobRequestUserId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "job_id",
              "wireValue": "job_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The ID associated with this job.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "JobRequestJobId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request",
              "wireValue": "request"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Request",
              "typeId": "Request",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "state",
              "wireValue": "state"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "State",
              "typeId": "State",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Job_Request_example_autogenerated": {
            "user_id": "string",
            "job_id": "string",
            "request": {
              "files": [
                {
                  "md5sum": "string"
                }
              ]
            },
            "state": {
              "status": "QUEUED",
              "created_timestamp_ms": 1
            }
          }
        }
      }
    },
    "JobId": {
      "name": {
        "typeId": "JobId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "JobId"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "job_id",
              "wireValue": "job_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The ID of the started job.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "JobIdJobId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "JobId_example_autogenerated": {
            "job_id": "string"
          }
        }
      }
    },
    "LanguageGranularity": {
      "name": {
        "typeId": "LanguageGranularity",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LanguageGranularity"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Granularity",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Granularity"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LanguageGranularity_example_autogenerated": "word"
        }
      }
    },
    "LanguageSentiment": {
      "name": {
        "typeId": "LanguageSentiment",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LanguageSentiment"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Empty",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Empty"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LanguageSentiment_example_autogenerated": null
        }
      }
    },
    "LanguageToxicity": {
      "name": {
        "typeId": "LanguageToxicity",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LanguageToxicity"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Empty",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Empty"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LanguageToxicity_example_autogenerated": null
        }
      }
    },
    "Language": {
      "name": {
        "typeId": "Language",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Language"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "granularity",
              "wireValue": "granularity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "LanguageGranularity",
                  "typeId": "LanguageGranularity",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LanguageGranularity_example_autogenerated": "word"
              }
            }
          },
          {
            "name": {
              "name": "identify_speakers",
              "wireValue": "identify_speakers"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether to return identifiers for speakers over time. If `true`, unique identifiers will be assigned to spoken words to differentiate different speakers. If `false`, all speakers will be tagged with an `unknown` ID.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LanguageIdentifySpeakers_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": "sentiment",
              "wireValue": "sentiment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "LanguageSentiment",
                  "typeId": "LanguageSentiment",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LanguageSentiment_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "toxicity",
              "wireValue": "toxicity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "LanguageToxicity",
                  "typeId": "LanguageToxicity",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LanguageToxicity_example_autogenerated": null
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Language_example_autogenerated": {}
        }
      }
    },
    "LanguagePrediction": {
      "name": {
        "typeId": "LanguagePrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LanguagePrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A segment of text (like a word or a sentence).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LanguagePredictionText_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "position",
              "wireValue": "position"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "PositionInterval",
              "typeId": "PositionInterval",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "time",
              "wireValue": "time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TimeInterval",
                  "typeId": "TimeInterval",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Value between `0.0` and `1.0` that indicates our transcription model’s relative confidence in this text.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LanguagePredictionConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "speaker_confidence",
              "wireValue": "speaker_confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Value between `0.0` and `1.0` that indicates our transcription model’s relative confidence that this text was spoken by this speaker.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LanguagePredictionSpeakerConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "emotions",
              "wireValue": "emotions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EmotionScore",
                  "typeId": "EmotionScore",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A high-dimensional embedding in emotion space.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LanguagePredictionEmotions_example_autogenerated": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "sentiment",
              "wireValue": "sentiment"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "SentimentScore",
                      "typeId": "SentimentScore",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Sentiment predictions returned as a distribution. This model predicts the probability that a given text could be interpreted as having each sentiment level from `1` (negative) to `9` (positive).\n\nCompared to returning one estimate of sentiment, this enables a more nuanced analysis of a text's meaning. For example, a text with very neutral sentiment would have an average rating of `5`. But also a text that could be interpreted as having very positive sentiment or very negative sentiment would also have an average rating of `5`. The average sentiment is less informative than the distribution over sentiment, so this API returns a value for each sentiment level.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LanguagePredictionSentiment_example_autogenerated": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "toxicity",
              "wireValue": "toxicity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ToxicityScore",
                      "typeId": "ToxicityScore",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Toxicity predictions returned as probabilities that the text can be classified into the following categories: `toxic`, `severe_toxic`, `obscene`, `threat`, `insult`, and `identity_hate`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LanguagePredictionToxicity_example_autogenerated": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LanguagePrediction_example_autogenerated": {
            "text": "string",
            "position": {
              "begin": 1,
              "end": 1
            },
            "emotions": [
              {
                "name": "string",
                "score": "string"
              }
            ]
          }
        }
      }
    },
    "ModelsFace": {
      "name": {
        "typeId": "ModelsFace",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsFace"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Face",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Face"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsFace_example_autogenerated": null
        }
      }
    },
    "ModelsBurst": {
      "name": {
        "typeId": "ModelsBurst",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsBurst"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Empty",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Empty"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsBurst_example_autogenerated": null
        }
      }
    },
    "ModelsProsody": {
      "name": {
        "typeId": "ModelsProsody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsProsody"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Prosody",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Prosody"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsProsody_example_autogenerated": null
        }
      }
    },
    "ModelsLanguage": {
      "name": {
        "typeId": "ModelsLanguage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsLanguage"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Language",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Language"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsLanguage_example_autogenerated": null
        }
      }
    },
    "ModelsNer": {
      "name": {
        "typeId": "ModelsNer",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsNer"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Ner",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Ner"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsNer_example_autogenerated": null
        }
      }
    },
    "ModelsFacemesh": {
      "name": {
        "typeId": "ModelsFacemesh",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsFacemesh"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Empty",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Empty"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsFacemesh_example_autogenerated": null
        }
      }
    },
    "Models": {
      "name": {
        "typeId": "Models",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Models"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "face",
              "wireValue": "face"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ModelsFace",
                  "typeId": "ModelsFace",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModelsFace_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "burst",
              "wireValue": "burst"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ModelsBurst",
                  "typeId": "ModelsBurst",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModelsBurst_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "prosody",
              "wireValue": "prosody"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ModelsProsody",
                  "typeId": "ModelsProsody",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModelsProsody_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "language",
              "wireValue": "language"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ModelsLanguage",
                  "typeId": "ModelsLanguage",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModelsLanguage_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "ner",
              "wireValue": "ner"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ModelsNer",
                  "typeId": "ModelsNer",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModelsNer_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "facemesh",
              "wireValue": "facemesh"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ModelsFacemesh",
                  "typeId": "ModelsFacemesh",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModelsFacemesh_example_autogenerated": null
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Models_example_autogenerated": {}
        }
      }
    },
    "ModelsPredictionsFace": {
      "name": {
        "typeId": "ModelsPredictionsFace",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsPredictionsFace"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Predictions_optional_Null_FacePrediction",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Predictions_optional_Null_FacePrediction"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsPredictionsFace_example_autogenerated": {
            "grouped_predictions": [
              {
                "id": "string",
                "predictions": [
                  {
                    "frame": 1,
                    "time": 1.1,
                    "prob": 1.1,
                    "box": {
                      "x": 1.1,
                      "y": 1.1,
                      "w": 1.1,
                      "h": 1.1
                    },
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "ModelsPredictionsBurst": {
      "name": {
        "typeId": "ModelsPredictionsBurst",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsPredictionsBurst"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Predictions_optional_Null_BurstPrediction",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Predictions_optional_Null_BurstPrediction"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsPredictionsBurst_example_autogenerated": {
            "grouped_predictions": [
              {
                "id": "string",
                "predictions": [
                  {
                    "time": {
                      "begin": 1.1,
                      "end": 1.1
                    },
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ],
                    "descriptions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "ModelsPredictionsProsody": {
      "name": {
        "typeId": "ModelsPredictionsProsody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsPredictionsProsody"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Predictions_optional_TranscriptionMetadata_ProsodyPrediction",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Predictions_optional_TranscriptionMetadata_ProsodyPrediction"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsPredictionsProsody_example_autogenerated": {
            "grouped_predictions": [
              {
                "id": "string",
                "predictions": [
                  {
                    "time": {
                      "begin": 1.1,
                      "end": 1.1
                    },
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "ModelsPredictionsLanguage": {
      "name": {
        "typeId": "ModelsPredictionsLanguage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsPredictionsLanguage"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Predictions_optional_TranscriptionMetadata_LanguagePrediction",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Predictions_optional_TranscriptionMetadata_LanguagePrediction"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsPredictionsLanguage_example_autogenerated": {
            "grouped_predictions": [
              {
                "id": "string",
                "predictions": [
                  {
                    "text": "string",
                    "position": {
                      "begin": 1,
                      "end": 1
                    },
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "ModelsPredictionsNer": {
      "name": {
        "typeId": "ModelsPredictionsNer",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsPredictionsNer"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Predictions_optional_TranscriptionMetadata_NerPrediction",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Predictions_optional_TranscriptionMetadata_NerPrediction"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsPredictionsNer_example_autogenerated": {
            "grouped_predictions": [
              {
                "id": "string",
                "predictions": [
                  {
                    "entity": "string",
                    "position": {
                      "begin": 1,
                      "end": 1
                    },
                    "entity_confidence": 1.1,
                    "support": 1.1,
                    "uri": "string",
                    "link_word": "string",
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "ModelsPredictionsFacemesh": {
      "name": {
        "typeId": "ModelsPredictionsFacemesh",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsPredictionsFacemesh"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Predictions_optional_Null_FacemeshPrediction",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Predictions_optional_Null_FacemeshPrediction"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsPredictionsFacemesh_example_autogenerated": {
            "grouped_predictions": [
              {
                "id": "string",
                "predictions": [
                  {
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "ModelsPredictions": {
      "name": {
        "typeId": "ModelsPredictions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelsPredictions"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "face",
              "wireValue": "face"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ModelsPredictionsFace",
                  "typeId": "ModelsPredictionsFace",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModelsPredictionsFace_example_autogenerated": {
                  "grouped_predictions": [
                    {
                      "id": "string",
                      "predictions": [
                        {
                          "frame": 1,
                          "time": 1.1,
                          "prob": 1.1,
                          "box": {
                            "x": 1.1,
                            "y": 1.1,
                            "w": 1.1,
                            "h": 1.1
                          },
                          "emotions": [
                            {
                              "name": "string",
                              "score": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          {
            "name": {
              "name": "burst",
              "wireValue": "burst"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ModelsPredictionsBurst",
                  "typeId": "ModelsPredictionsBurst",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModelsPredictionsBurst_example_autogenerated": {
                  "grouped_predictions": [
                    {
                      "id": "string",
                      "predictions": [
                        {
                          "time": {
                            "begin": 1.1,
                            "end": 1.1
                          },
                          "emotions": [
                            {
                              "name": "string",
                              "score": "string"
                            }
                          ],
                          "descriptions": [
                            {
                              "name": "string",
                              "score": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          {
            "name": {
              "name": "prosody",
              "wireValue": "prosody"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ModelsPredictionsProsody",
                  "typeId": "ModelsPredictionsProsody",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModelsPredictionsProsody_example_autogenerated": {
                  "grouped_predictions": [
                    {
                      "id": "string",
                      "predictions": [
                        {
                          "time": {
                            "begin": 1.1,
                            "end": 1.1
                          },
                          "emotions": [
                            {
                              "name": "string",
                              "score": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          {
            "name": {
              "name": "language",
              "wireValue": "language"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ModelsPredictionsLanguage",
                  "typeId": "ModelsPredictionsLanguage",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModelsPredictionsLanguage_example_autogenerated": {
                  "grouped_predictions": [
                    {
                      "id": "string",
                      "predictions": [
                        {
                          "text": "string",
                          "position": {
                            "begin": 1,
                            "end": 1
                          },
                          "emotions": [
                            {
                              "name": "string",
                              "score": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          {
            "name": {
              "name": "ner",
              "wireValue": "ner"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ModelsPredictionsNer",
                  "typeId": "ModelsPredictionsNer",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModelsPredictionsNer_example_autogenerated": {
                  "grouped_predictions": [
                    {
                      "id": "string",
                      "predictions": [
                        {
                          "entity": "string",
                          "position": {
                            "begin": 1,
                            "end": 1
                          },
                          "entity_confidence": 1.1,
                          "support": 1.1,
                          "uri": "string",
                          "link_word": "string",
                          "emotions": [
                            {
                              "name": "string",
                              "score": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          {
            "name": {
              "name": "facemesh",
              "wireValue": "facemesh"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ModelsPredictionsFacemesh",
                  "typeId": "ModelsPredictionsFacemesh",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModelsPredictionsFacemesh_example_autogenerated": {
                  "grouped_predictions": [
                    {
                      "id": "string",
                      "predictions": [
                        {
                          "emotions": [
                            {
                              "name": "string",
                              "score": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelsPredictions_example_autogenerated": {}
        }
      }
    },
    "Ner": {
      "name": {
        "typeId": "Ner",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Ner"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "identify_speakers",
              "wireValue": "identify_speakers"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether to return identifiers for speakers over time. If `true`, unique identifiers will be assigned to spoken words to differentiate different speakers. If `false`, all speakers will be tagged with an `unknown` ID.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NerIdentifySpeakers_example_autogenerated": false
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Ner_example_autogenerated": {}
        }
      }
    },
    "NerPrediction": {
      "name": {
        "typeId": "NerPrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "NerPrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "entity",
              "wireValue": "entity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The recognized topic or entity.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NerPredictionEntity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "position",
              "wireValue": "position"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "PositionInterval",
              "typeId": "PositionInterval",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "entity_confidence",
              "wireValue": "entity_confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "Our NER model's relative confidence in the recognized topic or entity.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NerPredictionEntityConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "support",
              "wireValue": "support"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "A measure of how often the entity is linked to by other entities.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NerPredictionSupport_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "uri",
              "wireValue": "uri"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL which provides more information about the recognized topic or entity.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NerPredictionUri_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "link_word",
              "wireValue": "link_word"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The specific word to which the emotion predictions are linked.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NerPredictionLinkWord_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "time",
              "wireValue": "time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TimeInterval",
                  "typeId": "TimeInterval",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Value between `0.0` and `1.0` that indicates our transcription model’s relative confidence in this text.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NerPredictionConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "speaker_confidence",
              "wireValue": "speaker_confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Value between `0.0` and `1.0` that indicates our transcription model’s relative confidence that this text was spoken by this speaker.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NerPredictionSpeakerConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "emotions",
              "wireValue": "emotions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EmotionScore",
                  "typeId": "EmotionScore",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A high-dimensional embedding in emotion space.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NerPredictionEmotions_example_autogenerated": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NerPrediction_example_autogenerated": {
            "entity": "string",
            "position": {
              "begin": 1,
              "end": 1
            },
            "entity_confidence": 1.1,
            "support": 1.1,
            "uri": "string",
            "link_word": "string",
            "emotions": [
              {
                "name": "string",
                "score": "string"
              }
            ]
          }
        }
      }
    },
    "Null": {
      "name": {
        "typeId": "Null",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Null",
          "camelCase": {
            "unsafeName": "null",
            "safeName": "null_"
          },
          "snakeCase": {
            "unsafeName": "null",
            "safeName": "null_"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "No associated metadata for this model. Value will be `null`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Null_example_autogenerated": {}
        }
      }
    },
    "PositionInterval": {
      "name": {
        "typeId": "PositionInterval",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PositionInterval"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "begin",
              "wireValue": "begin"
            },
            "valueType": {
              "primitive": {
                "v1": "UINT_64",
                "v2": {
                  "validation": {},
                  "type": "uint64"
                }
              },
              "type": "primitive"
            },
            "docs": "The index of the first character in the text segment, inclusive.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PositionIntervalBegin_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "UINT_64",
                "v2": {
                  "validation": {},
                  "type": "uint64"
                }
              },
              "type": "primitive"
            },
            "docs": "The index of the last character in the text segment, exclusive.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PositionIntervalEnd_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Position of a segment of text within a larger document, measured in characters. Uses zero-based indexing. The beginning index is inclusive and the end index is exclusive.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PositionInterval_example_autogenerated": {
            "begin": 1,
            "end": 1
          }
        }
      }
    },
    "Prediction": {
      "name": {
        "typeId": "Prediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Prediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "file",
                "pascalCase": {
                  "unsafeName": "File",
                  "safeName": "File_"
                }
              },
              "wireValue": "file"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A file path relative to the top level source URL or file.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PredictionFile_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ModelsPredictions",
              "typeId": "ModelsPredictions",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Prediction_example_autogenerated": {
            "file": "string",
            "models": {}
          }
        }
      }
    },
    "Predictions_optional_Null_BurstPrediction": {
      "name": {
        "typeId": "Predictions_optional_Null_BurstPrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Predictions_optional_Null_BurstPrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Null",
                    "camelCase": {
                      "unsafeName": "null",
                      "safeName": "null_"
                    },
                    "snakeCase": {
                      "unsafeName": "null",
                      "safeName": "null_"
                    }
                  },
                  "typeId": "Null",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "grouped_predictions",
              "wireValue": "grouped_predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GroupedPredictions_BurstPrediction",
                  "typeId": "GroupedPredictions_BurstPrediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PredictionsOptionalNullBurstPredictionGroupedPredictions_example_autogenerated": [
                  {
                    "id": "string",
                    "predictions": [
                      {
                        "time": {
                          "begin": 1.1,
                          "end": 1.1
                        },
                        "emotions": [
                          {
                            "name": "string",
                            "score": "string"
                          }
                        ],
                        "descriptions": [
                          {
                            "name": "string",
                            "score": "string"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Predictions_optional_Null_BurstPrediction_example_autogenerated": {
            "grouped_predictions": [
              {
                "id": "string",
                "predictions": [
                  {
                    "time": {
                      "begin": 1.1,
                      "end": 1.1
                    },
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ],
                    "descriptions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "Predictions_optional_Null_FacePrediction": {
      "name": {
        "typeId": "Predictions_optional_Null_FacePrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Predictions_optional_Null_FacePrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Null",
                    "camelCase": {
                      "unsafeName": "null",
                      "safeName": "null_"
                    },
                    "snakeCase": {
                      "unsafeName": "null",
                      "safeName": "null_"
                    }
                  },
                  "typeId": "Null",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "grouped_predictions",
              "wireValue": "grouped_predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GroupedPredictions_FacePrediction",
                  "typeId": "GroupedPredictions_FacePrediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PredictionsOptionalNullFacePredictionGroupedPredictions_example_autogenerated": [
                  {
                    "id": "string",
                    "predictions": [
                      {
                        "frame": 1,
                        "time": 1.1,
                        "prob": 1.1,
                        "box": {
                          "x": 1.1,
                          "y": 1.1,
                          "w": 1.1,
                          "h": 1.1
                        },
                        "emotions": [
                          {
                            "name": "string",
                            "score": "string"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Predictions_optional_Null_FacePrediction_example_autogenerated": {
            "grouped_predictions": [
              {
                "id": "string",
                "predictions": [
                  {
                    "frame": 1,
                    "time": 1.1,
                    "prob": 1.1,
                    "box": {
                      "x": 1.1,
                      "y": 1.1,
                      "w": 1.1,
                      "h": 1.1
                    },
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "Predictions_optional_Null_FacemeshPrediction": {
      "name": {
        "typeId": "Predictions_optional_Null_FacemeshPrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Predictions_optional_Null_FacemeshPrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Null",
                    "camelCase": {
                      "unsafeName": "null",
                      "safeName": "null_"
                    },
                    "snakeCase": {
                      "unsafeName": "null",
                      "safeName": "null_"
                    }
                  },
                  "typeId": "Null",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "grouped_predictions",
              "wireValue": "grouped_predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GroupedPredictions_FacemeshPrediction",
                  "typeId": "GroupedPredictions_FacemeshPrediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PredictionsOptionalNullFacemeshPredictionGroupedPredictions_example_autogenerated": [
                  {
                    "id": "string",
                    "predictions": [
                      {
                        "emotions": [
                          {
                            "name": "string",
                            "score": "string"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Predictions_optional_Null_FacemeshPrediction_example_autogenerated": {
            "grouped_predictions": [
              {
                "id": "string",
                "predictions": [
                  {
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "Predictions_optional_TranscriptionMetadata_LanguagePrediction": {
      "name": {
        "typeId": "Predictions_optional_TranscriptionMetadata_LanguagePrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Predictions_optional_TranscriptionMetadata_LanguagePrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TranscriptionMetadata",
                  "typeId": "TranscriptionMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "grouped_predictions",
              "wireValue": "grouped_predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GroupedPredictions_LanguagePrediction",
                  "typeId": "GroupedPredictions_LanguagePrediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PredictionsOptionalTranscriptionMetadataLanguagePredictionGroupedPredictions_example_autogenerated": [
                  {
                    "id": "string",
                    "predictions": [
                      {
                        "text": "string",
                        "position": {
                          "begin": 1,
                          "end": 1
                        },
                        "emotions": [
                          {
                            "name": "string",
                            "score": "string"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Predictions_optional_TranscriptionMetadata_LanguagePrediction_example_autogenerated": {
            "grouped_predictions": [
              {
                "id": "string",
                "predictions": [
                  {
                    "text": "string",
                    "position": {
                      "begin": 1,
                      "end": 1
                    },
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "Predictions_optional_TranscriptionMetadata_NerPrediction": {
      "name": {
        "typeId": "Predictions_optional_TranscriptionMetadata_NerPrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Predictions_optional_TranscriptionMetadata_NerPrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TranscriptionMetadata",
                  "typeId": "TranscriptionMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "grouped_predictions",
              "wireValue": "grouped_predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GroupedPredictions_NerPrediction",
                  "typeId": "GroupedPredictions_NerPrediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PredictionsOptionalTranscriptionMetadataNerPredictionGroupedPredictions_example_autogenerated": [
                  {
                    "id": "string",
                    "predictions": [
                      {
                        "entity": "string",
                        "position": {
                          "begin": 1,
                          "end": 1
                        },
                        "entity_confidence": 1.1,
                        "support": 1.1,
                        "uri": "string",
                        "link_word": "string",
                        "emotions": [
                          {
                            "name": "string",
                            "score": "string"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Predictions_optional_TranscriptionMetadata_NerPrediction_example_autogenerated": {
            "grouped_predictions": [
              {
                "id": "string",
                "predictions": [
                  {
                    "entity": "string",
                    "position": {
                      "begin": 1,
                      "end": 1
                    },
                    "entity_confidence": 1.1,
                    "support": 1.1,
                    "uri": "string",
                    "link_word": "string",
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "Predictions_optional_TranscriptionMetadata_ProsodyPrediction": {
      "name": {
        "typeId": "Predictions_optional_TranscriptionMetadata_ProsodyPrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Predictions_optional_TranscriptionMetadata_ProsodyPrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TranscriptionMetadata",
                  "typeId": "TranscriptionMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "grouped_predictions",
              "wireValue": "grouped_predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GroupedPredictions_ProsodyPrediction",
                  "typeId": "GroupedPredictions_ProsodyPrediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PredictionsOptionalTranscriptionMetadataProsodyPredictionGroupedPredictions_example_autogenerated": [
                  {
                    "id": "string",
                    "predictions": [
                      {
                        "time": {
                          "begin": 1.1,
                          "end": 1.1
                        },
                        "emotions": [
                          {
                            "name": "string",
                            "score": "string"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Predictions_optional_TranscriptionMetadata_ProsodyPrediction_example_autogenerated": {
            "grouped_predictions": [
              {
                "id": "string",
                "predictions": [
                  {
                    "time": {
                      "begin": 1.1,
                      "end": 1.1
                    },
                    "emotions": [
                      {
                        "name": "string",
                        "score": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "ProsodyGranularity": {
      "name": {
        "typeId": "ProsodyGranularity",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ProsodyGranularity"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Granularity",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Granularity"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProsodyGranularity_example_autogenerated": "word"
        }
      }
    },
    "ProsodyWindow": {
      "name": {
        "typeId": "ProsodyWindow",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ProsodyWindow"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Window",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Window"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProsodyWindow_example_autogenerated": null
        }
      }
    },
    "Prosody": {
      "name": {
        "typeId": "Prosody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Prosody"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "granularity",
              "wireValue": "granularity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProsodyGranularity",
                  "typeId": "ProsodyGranularity",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProsodyGranularity_example_autogenerated": "word"
              }
            }
          },
          {
            "name": {
              "name": "identify_speakers",
              "wireValue": "identify_speakers"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether to return identifiers for speakers over time. If `true`, unique identifiers will be assigned to spoken words to differentiate different speakers. If `false`, all speakers will be tagged with an `unknown` ID.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProsodyIdentifySpeakers_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": "window",
              "wireValue": "window"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProsodyWindow",
                  "typeId": "ProsodyWindow",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProsodyWindow_example_autogenerated": null
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "NOTE: the `granularity` field is ignored if transcription is not enabled or if the `window` field has been set.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Prosody_example_autogenerated": {}
        }
      }
    },
    "ProsodyPrediction": {
      "name": {
        "typeId": "ProsodyPrediction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ProsodyPrediction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A segment of text (like a word or a sentence).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProsodyPredictionText_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "time",
              "wireValue": "time"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TimeInterval",
              "typeId": "TimeInterval",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Value between `0.0` and `1.0` that indicates our transcription model’s relative confidence in this text.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProsodyPredictionConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "speaker_confidence",
              "wireValue": "speaker_confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Value between `0.0` and `1.0` that indicates our transcription model’s relative confidence that this text was spoken by this speaker.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProsodyPredictionSpeakerConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "emotions",
              "wireValue": "emotions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EmotionScore",
                  "typeId": "EmotionScore",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A high-dimensional embedding in emotion space.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProsodyPredictionEmotions_example_autogenerated": [
                  {
                    "name": "string",
                    "score": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProsodyPrediction_example_autogenerated": {
            "time": {
              "begin": 1.1,
              "end": 1.1
            },
            "emotions": [
              {
                "name": "string",
                "score": "string"
              }
            ]
          }
        }
      }
    },
    "Queued": {
      "name": {
        "typeId": "Queued",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Queued"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "created_timestamp_ms",
              "wireValue": "created_timestamp_ms"
            },
            "valueType": {
              "primitive": {
                "v1": "LONG",
                "v2": {
                  "type": "long"
                }
              },
              "type": "primitive"
            },
            "docs": "When this job was created (Unix timestamp in milliseconds).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "QueuedCreatedTimestampMs_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Queued_example_autogenerated": {
            "created_timestamp_ms": 1
          }
        }
      }
    },
    "RequestModels": {
      "name": {
        "typeId": "RequestModels",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RequestModels"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Models",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Models"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RequestModels_example_autogenerated": null
        }
      }
    },
    "RequestTranscription": {
      "name": {
        "typeId": "RequestTranscription",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RequestTranscription"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Transcription",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Transcription"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RequestTranscription_example_autogenerated": null
        }
      }
    },
    "Request": {
      "name": {
        "typeId": "Request",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Request"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RequestModels",
                  "typeId": "RequestModels",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestModels_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "transcription",
              "wireValue": "transcription"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RequestTranscription",
                  "typeId": "RequestTranscription",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestTranscription_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "urls",
              "wireValue": "urls"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "url"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URLs to the media files to be processed. Each must be a valid public URL to a media file (see recommended input filetypes) or an archive (`.zip`, `.tar.gz`, `.tar.bz2`, `.tar.xz`) of media files.\n\nIf you wish to supply more than 100 URLs, consider providing them as an archive (`.zip`, `.tar.gz`, `.tar.bz2`, `.tar.xz`).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestUrls_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "callback_url",
              "wireValue": "callback_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "url"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "If provided, a `POST` request will be made to the URL with the generated predictions on completion or the error message on failure.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestCallbackUrl_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "notify",
              "wireValue": "notify"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether to send an email notification to the user upon job completion/failure.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestNotify_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": "files",
              "wireValue": "files"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "File",
                    "pascalCase": {
                      "unsafeName": "File",
                      "safeName": "File_"
                    }
                  },
                  "typeId": "File",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RequestFiles_example_autogenerated": [
                  {
                    "md5sum": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Request_example_autogenerated": {
            "files": [
              {
                "md5sum": "string"
              }
            ]
          }
        }
      }
    },
    "Results": {
      "name": {
        "typeId": "Results",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Results"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "predictions",
              "wireValue": "predictions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Prediction",
                  "typeId": "Prediction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResultsPredictions_example_autogenerated": [
                  {
                    "file": "string",
                    "models": {}
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "errors",
              "wireValue": "errors"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Error",
                    "pascalCase": {
                      "unsafeName": "Error",
                      "safeName": "Error_"
                    }
                  },
                  "typeId": "Error",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResultsErrors_example_autogenerated": [
                  {
                    "message": "string",
                    "file": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Results_example_autogenerated": {
            "predictions": [
              {
                "file": "string",
                "models": {}
              }
            ],
            "errors": [
              {
                "message": "string",
                "file": "string"
              }
            ]
          }
        }
      }
    },
    "SentimentScore": {
      "name": {
        "typeId": "SentimentScore",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SentimentScore"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Level of sentiment, ranging from `1` (negative) to `9` (positive)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentimentScoreName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "score",
              "wireValue": "score"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Prediction for this level of sentiment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentimentScoreScore_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SentimentScore_example_autogenerated": {
            "name": "string",
            "score": "string"
          }
        }
      }
    },
    "SortBy": {
      "name": {
        "typeId": "SortBy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SortBy"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            }
          },
          {
            "name": {
              "name": "started",
              "wireValue": "started"
            }
          },
          {
            "name": {
              "name": "ended",
              "wireValue": "ended"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SortBy_example_autogenerated": "created"
        }
      }
    },
    "Source": {
      "name": {
        "typeId": "Source",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Source"
      },
      "shape": {
        "baseProperties": [],
        "discriminant": {
          "name": {
            "originalName": "type",
            "camelCase": {
              "unsafeName": "type",
              "safeName": "type_"
            },
            "snakeCase": {
              "unsafeName": "type",
              "safeName": "type_"
            }
          },
          "wireValue": "type"
        },
        "extends": [],
        "types": [
          {
            "discriminantValue": {
              "name": "url",
              "wireValue": "url"
            },
            "displayName": "url",
            "shape": {
              "typeId": "Source_Url",
              "name": "Source_Url",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "url",
              "propertiesType": "samePropertiesAsObject"
            }
          },
          {
            "discriminantValue": {
              "name": {
                "originalName": "file",
                "pascalCase": {
                  "unsafeName": "File",
                  "safeName": "File_"
                }
              },
              "wireValue": "file"
            },
            "displayName": "file",
            "shape": {
              "typeId": "Source_File",
              "name": "Source_File",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "file",
              "propertiesType": "samePropertiesAsObject"
            }
          }
        ],
        "type": "union"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Source_example_autogenerated": {
            "type": "url",
            "url": "string"
          }
        }
      }
    },
    "SourceResult": {
      "name": {
        "typeId": "SourceResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SourceResult"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "source",
              "wireValue": "source"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Source",
              "typeId": "Source",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Results",
                  "typeId": "Results",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An error message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SourceResultError_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SourceResult_example_autogenerated": {
            "source": {
              "type": "url",
              "url": "string"
            }
          }
        }
      }
    },
    "Source_File": {
      "name": {
        "typeId": "Source_File",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Source_File"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SourceFileType_example_0": "file"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [
          {
            "typeId": "File",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "File",
              "pascalCase": {
                "unsafeName": "File",
                "safeName": "File_"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Source_File_example_autogenerated": {
            "type": "file",
            "md5sum": "string"
          }
        }
      }
    },
    "Source_Url": {
      "name": {
        "typeId": "Source_Url",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Source_Url"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SourceUrlType_example_0": "url"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [
          {
            "typeId": "Url",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Url"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Source_Url_example_autogenerated": {
            "type": "url",
            "url": "string"
          }
        }
      }
    },
    "State": {
      "name": {
        "typeId": "State",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "State"
      },
      "shape": {
        "baseProperties": [],
        "discriminant": {
          "name": "status",
          "wireValue": "status"
        },
        "extends": [],
        "types": [
          {
            "discriminantValue": {
              "name": "QUEUED",
              "wireValue": "QUEUED"
            },
            "displayName": "QUEUED",
            "shape": {
              "typeId": "State_Queued",
              "name": "State_Queued",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "QUEUED",
              "propertiesType": "samePropertiesAsObject"
            }
          },
          {
            "discriminantValue": {
              "name": "IN_PROGRESS",
              "wireValue": "IN_PROGRESS"
            },
            "displayName": "IN_PROGRESS",
            "shape": {
              "typeId": "State_InProgress",
              "name": "State_InProgress",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "IN_PROGRESS",
              "propertiesType": "samePropertiesAsObject"
            }
          },
          {
            "discriminantValue": {
              "name": "COMPLETED",
              "wireValue": "COMPLETED"
            },
            "displayName": "COMPLETED",
            "shape": {
              "typeId": "State_Completed",
              "name": "State_Completed",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "COMPLETED",
              "propertiesType": "samePropertiesAsObject"
            }
          },
          {
            "discriminantValue": {
              "name": "FAILED",
              "wireValue": "FAILED"
            },
            "displayName": "FAILED",
            "shape": {
              "typeId": "State_Failed",
              "name": "State_Failed",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "FAILED",
              "propertiesType": "samePropertiesAsObject"
            }
          }
        ],
        "type": "union"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "State_example_autogenerated": {
            "status": "QUEUED",
            "created_timestamp_ms": 1
          }
        }
      }
    },
    "State_Completed": {
      "name": {
        "typeId": "State_Completed",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "State_Completed"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "StateCompletedStatus_example_0": "COMPLETED"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [
          {
            "typeId": "Completed",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Completed"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "State_Completed_example_autogenerated": {
            "status": "COMPLETED",
            "created_timestamp_ms": 1,
            "started_timestamp_ms": 1,
            "ended_timestamp_ms": 1,
            "num_predictions": 1,
            "num_errors": 1
          }
        }
      }
    },
    "State_Failed": {
      "name": {
        "typeId": "State_Failed",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "State_Failed"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "StateFailedStatus_example_0": "FAILED"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [
          {
            "typeId": "Failed",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Failed"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "State_Failed_example_autogenerated": {
            "status": "FAILED",
            "created_timestamp_ms": 1,
            "started_timestamp_ms": 1,
            "ended_timestamp_ms": 1,
            "message": "string"
          }
        }
      }
    },
    "State_InProgress": {
      "name": {
        "typeId": "State_InProgress",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "State_InProgress"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "StateInProgressStatus_example_0": "IN_PROGRESS"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [
          {
            "typeId": "InProgress",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "InProgress"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "State_InProgress_example_autogenerated": {
            "status": "IN_PROGRESS",
            "created_timestamp_ms": 1,
            "started_timestamp_ms": 1
          }
        }
      }
    },
    "State_Queued": {
      "name": {
        "typeId": "State_Queued",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "State_Queued"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "StateQueuedStatus_example_0": "QUEUED"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [
          {
            "typeId": "Queued",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Queued"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "State_Queued_example_autogenerated": {
            "status": "QUEUED",
            "created_timestamp_ms": 1
          }
        }
      }
    },
    "Status": {
      "name": {
        "typeId": "Status",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Status"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "QUEUED",
              "wireValue": "QUEUED"
            }
          },
          {
            "name": {
              "name": "IN_PROGRESS",
              "wireValue": "IN_PROGRESS"
            }
          },
          {
            "name": {
              "name": "COMPLETED",
              "wireValue": "COMPLETED"
            }
          },
          {
            "name": {
              "name": "FAILED",
              "wireValue": "FAILED"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Status_example_autogenerated": "QUEUED"
        }
      }
    },
    "TimeInterval": {
      "name": {
        "typeId": "TimeInterval",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeInterval"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "begin",
              "wireValue": "begin"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "Beginning of time range in seconds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TimeIntervalBegin_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "End of time range in seconds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TimeIntervalEnd_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "A time range with a beginning and end, measured in seconds.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeInterval_example_autogenerated": {
            "begin": 1.1,
            "end": 1.1
          }
        }
      }
    },
    "ToxicityScore": {
      "name": {
        "typeId": "ToxicityScore",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ToxicityScore"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Category of toxicity.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToxicityScoreName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "score",
              "wireValue": "score"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Prediction for this category of toxicity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToxicityScoreScore_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToxicityScore_example_autogenerated": {
            "name": "string",
            "score": "string"
          }
        }
      }
    },
    "TranscriptionLanguage": {
      "name": {
        "typeId": "TranscriptionLanguage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TranscriptionLanguage"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Bcp47Tag",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Bcp47Tag"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptionLanguage_example_autogenerated": "zh"
        }
      }
    },
    "Transcription": {
      "name": {
        "typeId": "Transcription",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Transcription"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "language",
              "wireValue": "language"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TranscriptionLanguage",
                  "typeId": "TranscriptionLanguage",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptionLanguage_example_autogenerated": "zh"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Transcription_example_autogenerated": {}
        }
      }
    },
    "TranscriptionMetadataDetectedLanguage": {
      "name": {
        "typeId": "TranscriptionMetadataDetectedLanguage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TranscriptionMetadataDetectedLanguage"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Bcp47Tag",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Bcp47Tag"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptionMetadataDetectedLanguage_example_autogenerated": "zh"
        }
      }
    },
    "TranscriptionMetadata": {
      "name": {
        "typeId": "TranscriptionMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TranscriptionMetadata"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "Value between `0.0` and `1.0` indicating our transcription model’s relative confidence in the transcription of your media file.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptionMetadataConfidence_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "detected_language",
              "wireValue": "detected_language"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TranscriptionMetadataDetectedLanguage",
                  "typeId": "TranscriptionMetadataDetectedLanguage",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptionMetadataDetectedLanguage_example_autogenerated": "zh"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Transcription metadata for your media file.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptionMetadata_example_autogenerated": {
            "confidence": 1.1
          }
        }
      }
    },
    "Url": {
      "name": {
        "typeId": "Url",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Url"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "url",
              "wireValue": "url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The URL of the source media file.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UrlUrl_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Url_example_autogenerated": {
            "url": "string"
          }
        }
      }
    },
    "When": {
      "name": {
        "typeId": "When",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "When"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "created_before",
              "wireValue": "created_before"
            }
          },
          {
            "name": {
              "name": "created_after",
              "wireValue": "created_after"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "When_example_autogenerated": "created_before"
        }
      }
    },
    "Window": {
      "name": {
        "typeId": "Window",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Window"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "length",
              "wireValue": "length"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "default": 4,
                      "validation": {
                        "min": 0.5
                      },
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The length of the sliding window.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WindowLength_example_autogenerated": 4
              }
            }
          },
          {
            "name": {
              "name": "step",
              "wireValue": "step"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "default": 1,
                      "validation": {
                        "min": 0.5
                      },
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The step size of the sliding window.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WindowStep_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Window_example_autogenerated": {}
        }
      }
    },
    "V0BatchJobsGetParametersWhen": {
      "name": {
        "typeId": "V0BatchJobsGetParametersWhen",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V0BatchJobsGetParametersWhen"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "When",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "When"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V0BatchJobsGetParametersWhen_example_autogenerated": "created_before"
        }
      }
    },
    "V0BatchJobsGetParametersSortBy": {
      "name": {
        "typeId": "V0BatchJobsGetParametersSortBy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V0BatchJobsGetParametersSortBy"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "SortBy",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "SortBy"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V0BatchJobsGetParametersSortBy_example_autogenerated": "created"
        }
      }
    },
    "V0BatchJobsGetParametersDirection": {
      "name": {
        "typeId": "V0BatchJobsGetParametersDirection",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V0BatchJobsGetParametersDirection"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "Direction",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "Direction"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V0BatchJobsGetParametersDirection_example_autogenerated": "asc"
        }
      }
    },
    "V0BatchJobsPostRequestBodyContentMultipartFormDataSchemaJson": {
      "name": {
        "typeId": "V0BatchJobsPostRequestBodyContentMultipartFormDataSchemaJson",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V0BatchJobsPostRequestBodyContentMultipartFormDataSchemaJson"
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "BaseRequest",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": "BaseRequest"
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V0BatchJobsPostRequestBodyContentMultipartFormDataSchemaJson_example_autogenerated": null
        }
      }
    },
    "AudioInput": {
      "name": {
        "typeId": "AudioInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AudioInput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "audio_input",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `audio_input` for our server to correctly identify and process it as an Audio Input message.\n\nThis message is used for sending audio input data to EVI for processing and expression measurement. Audio data should be sent as a continuous stream, encoded in Base64.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioInputType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioInputCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "base64"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Base64 encoded audio input to insert into the conversation.\n\nThe content of an Audio Input message is treated as the user’s speech to EVI and must be streamed continuously. Pre-recorded audio files are not supported.\n\nFor optimal transcription quality, the audio data should be transmitted in small chunks.\n\nHume recommends streaming audio with a buffer window of 20 milliseconds (ms), or 100 milliseconds (ms) for web applications.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioInputData_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the input is audio.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AudioInput_example_autogenerated": {
            "type": "string",
            "data": "string"
          }
        }
      }
    },
    "MessagesSessionSettingsMetadata": {
      "name": {
        "typeId": "MessagesSessionSettingsMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MessagesSessionSettingsMetadata"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MessagesSessionSettingsMetadata_example_autogenerated": {}
        }
      }
    },
    "SessionSettings": {
      "name": {
        "typeId": "SessionSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SessionSettings"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "session_settings",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `session_settings` for our server to correctly identify and process it as a Session Settings message.\n\nSession settings are temporary and apply only to the current Chat session. These settings can be adjusted dynamically based on the requirements of each session to ensure optimal performance and user experience.\n\nFor more information, please refer to the [Session Settings section](/docs/empathic-voice-interface-evi/configuration#session-settings) on the EVI Configuration page.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Unique identifier for the session. Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.\n\nIf included, the response sent from Hume to your backend will include this ID. This allows you to correlate frontend users with their incoming messages.\n\nIt is recommended to pass a `custom_session_id` if you are using a Custom Language Model. Please see our guide to [using a custom language model](/docs/empathic-voice-interface-evi/custom-language-model) with EVI to learn more.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "system_prompt",
              "wireValue": "system_prompt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Instructions used to shape EVI’s behavior, responses, and style for the session.\n\nWhen included in a Session Settings message, the provided Prompt overrides the existing one specified in the EVI configuration. If no Prompt was defined in the configuration, this Prompt will be the one used for the session.\n\nYou can use the Prompt to define a specific goal or role for EVI, specifying how it should act or what it should focus on during the conversation. For example, EVI can be instructed to act as a customer support representative, a fitness coach, or a travel advisor, each with its own set of behaviors and response styles.\n\nFor help writing a system prompt, see our [Prompting Guide](/docs/empathic-voice-interface-evi/prompting).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsSystemPrompt_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "context",
              "wireValue": "context"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Context",
                      "typeId": "Context",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Allows developers to inject additional context into the conversation, which is appended to the end of user messages for the session.\n\nWhen included in a Session Settings message, the provided context can be used to remind the LLM of its role in every user message, prevent it from forgetting important details, or add new relevant information to the conversation.\n\nSet to `null` to disable context injection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsContext_example_autogenerated": {
                  "text": "string"
                }
              }
            }
          },
          {
            "name": {
              "name": "audio",
              "wireValue": "audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AudioConfiguration",
                      "typeId": "AudioConfiguration",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Configuration details for the audio input used during the session. Ensures the audio is being correctly set up for processing.\n\nThis optional field is only required when the audio input is encoded in PCM Linear 16 (16-bit, little-endian, signed PCM WAV data). For detailed instructions on how to configure session settings for PCM Linear 16 audio, please refer to the [Session Settings section](/docs/empathic-voice-interface-evi/configuration#session-settings) on the EVI Configuration page.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsAudio_example_autogenerated": {
                  "encoding": "linear16",
                  "channels": 1,
                  "sample_rate": 1
                }
              }
            }
          },
          {
            "name": {
              "name": "language_model_api_key",
              "wireValue": "language_model_api_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Third party API key for the supplemental language model.\n\nWhen provided, EVI will use this key instead of Hume’s API key for the supplemental LLM. This allows you to bypass rate limits and utilize your own API key as needed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsLanguageModelApiKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tools",
              "wireValue": "tools"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Tool",
                          "typeId": "Tool",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of user-defined tools to enable for the session.\n\nTools are resources used by EVI to perform various tasks, such as searching the web or calling external APIs. Built-in tools, like web search, are natively integrated, while user-defined tools are created and invoked by the user. To learn more, see our [Tool Use Guide](/docs/empathic-voice-interface-evi/tool-use).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsTools_example_autogenerated": [
                  {
                    "type": "builtin",
                    "name": "string",
                    "parameters": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "builtin_tools",
              "wireValue": "builtin_tools"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "BuiltinToolConfig",
                          "typeId": "BuiltinToolConfig",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of built-in tools to enable for the session.\n\nTools are resources used by EVI to perform various tasks, such as searching the web or calling external APIs. Built-in tools, like web search, are natively integrated, while user-defined tools are created and invoked by the user. To learn more, see our [Tool Use Guide](/docs/empathic-voice-interface-evi/tool-use).\n\nCurrently, the only built-in tool Hume provides is **Web Search**. When enabled, Web Search equips EVI with the ability to search the web for up-to-date information.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsBuiltinTools_example_autogenerated": [
                  {
                    "name": "web_search"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "SessionSettingsMetadata",
                      "typeId": "SessionSettingsMetadata",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "variables",
              "wireValue": "variables"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "validation": {},
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Dynamic values that can be used to populate EVI prompts.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsVariables_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Settings for this chat session.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SessionSettings_example_autogenerated": {
            "type": "string"
          }
        }
      }
    },
    "UserInput": {
      "name": {
        "typeId": "UserInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserInput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "user_input",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `user_input` for our server to correctly identify and process it as a User Input message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInputType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInputCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "User text to insert into the conversation. Text sent through a User Input message is treated as the user’s speech to EVI. EVI processes this input and provides a corresponding response.\n\nExpression measurement results are not available for User Input messages, as the prosody model relies on audio input and cannot process text alone.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInputText_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "User text to insert into the conversation. Text sent through a User Input message is treated as the user’s speech to EVI. EVI processes this input and provides a corresponding response.\n\nExpression measurement results are not available for User Input messages, as the prosody model relies on audio input and cannot process text alone.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserInput_example_autogenerated": {
            "type": "string",
            "text": "string"
          }
        }
      }
    },
    "AssistantInput": {
      "name": {
        "typeId": "AssistantInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AssistantInput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "assistant_input",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `assistant_input` for our server to correctly identify and process it as an Assistant Input message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantInputType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantInputCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Assistant text to synthesize into spoken audio and insert into the conversation.\n\nEVI uses this text to generate spoken audio using our proprietary expressive text-to-speech model. Our model adds appropriate emotional inflections and tones to the text based on the user’s expressions and the context of the conversation. The synthesized audio is streamed back to the user as an [Assistant Message](/reference/empathic-voice-interface-evi/chat/chat#receive.Assistant%20Message.type).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantInputText_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the input is spoken by EVI.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AssistantInput_example_autogenerated": {
            "type": "string",
            "text": "string"
          }
        }
      }
    },
    "ToolResponseMessage": {
      "name": {
        "typeId": "ToolResponseMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ToolResponseMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "tool_response",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Tool Response message, this must be `tool_response`.\n\nUpon receiving a [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.Tool%20Call%20Message.type) and successfully invoking the function, this message is sent to convey the result of the function call back to EVI.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageType_example_autogenerated": "tool_response"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tool_call_id",
              "wireValue": "tool_call_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier for a specific tool call instance.\n\nThis ID is used to track the request and response of a particular tool invocation, ensuring that the correct response is linked to the appropriate request. The specified `tool_call_id` must match the one received in the [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.Tool%20Call%20Message.tool_call_id).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageToolCallId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "content",
              "wireValue": "content"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Return value of the tool call. Contains the output generated by the tool to pass back to EVI.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageContent_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tool_name",
              "wireValue": "tool_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageToolName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tool_type",
              "wireValue": "tool_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ToolType",
                      "typeId": "ToolType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageToolType_example_autogenerated": "builtin"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a function call response.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolResponseMessage_example_autogenerated": {
            "tool_call_id": "string",
            "content": "string"
          }
        }
      }
    },
    "ToolErrorMessage": {
      "name": {
        "typeId": "ToolErrorMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ToolErrorMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "tool_error",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Tool Error message, this must be `tool_error`.\n\nUpon receiving a [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.Tool%20Call%20Message.type) and failing to invoke the function, this message is sent to notify EVI of the tool's failure.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageType_example_autogenerated": "tool_error"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tool_type",
              "wireValue": "tool_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ToolType",
                      "typeId": "ToolType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Type of tool called. Either `builtin` for natively implemented tools, like web search, or `function` for user-defined tools.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageToolType_example_autogenerated": "builtin"
              }
            }
          },
          {
            "name": {
              "name": "tool_call_id",
              "wireValue": "tool_call_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier for a specific tool call instance.\n\nThis ID is used to track the request and response of a particular tool invocation, ensuring that the Tool Error message is linked to the appropriate tool call request. The specified `tool_call_id` must match the one received in the [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.Tool%20Call%20Message.type).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageToolCallId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "content",
              "wireValue": "content"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional text passed to the supplemental LLM in place of the tool call result. The LLM then uses this text to generate a response back to the user, ensuring continuity in the conversation if the tool errors.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageContent_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Error message from the tool call, not exposed to the LLM or user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageError_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "code",
              "wireValue": "code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Error code. Identifies the type of error encountered.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "level",
              "wireValue": "level"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ErrorLevel",
                      "typeId": "ErrorLevel",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates the severity of an error; for a Tool Error message, this must be `warn` to signal an unexpected event.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageLevel_example_autogenerated": "warn"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a function call error.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolErrorMessage_example_autogenerated": {
            "tool_call_id": "string",
            "error": "string"
          }
        }
      }
    },
    "PauseAssistantMessage": {
      "name": {
        "typeId": "PauseAssistantMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PauseAssistantMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "pause_assistant_message",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `pause_assistant_message` for our server to correctly identify and process it as a Pause Assistant message.\n\nOnce this message is sent, EVI will not respond until a [Resume Assistant message](/reference/empathic-voice-interface-evi/chat/chat#send.Resume%20Assistant%20Message.type) is sent. When paused, EVI won’t respond, but transcriptions of your audio inputs will still be recorded.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PauseAssistantMessageType_example_autogenerated": "pause_assistant_message"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PauseAssistantMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Pause responses from EVI. Chat history is still saved and sent after resuming. ",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PauseAssistantMessage_example_autogenerated": {}
        }
      }
    },
    "ResumeAssistantMessage": {
      "name": {
        "typeId": "ResumeAssistantMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResumeAssistantMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "resume_assistant_message",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `resume_assistant_message` for our server to correctly identify and process it as a Resume Assistant message.\n\nUpon resuming, if any audio input was sent during the pause, EVI will retain context from all messages sent but only respond to the last user message. (e.g., If you ask EVI two questions while paused and then send a `resume_assistant_message`, EVI will respond to the second question and have added the first question to its conversation context.)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResumeAssistantMessageType_example_autogenerated": "resume_assistant_message"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResumeAssistantMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Resume responses from EVI. Chat history sent while paused will now be sent. ",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResumeAssistantMessage_example_autogenerated": {}
        }
      }
    },
    "AssistantEnd": {
      "name": {
        "typeId": "AssistantEnd",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AssistantEnd"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "assistant_end",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for an Assistant End message, this must be `assistant_end`.\n\nThis message indicates the conclusion of the assistant’s response, signaling that the assistant has finished speaking for the current conversational turn.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantEndType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantEndCustomSessionId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is an assistant end message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AssistantEnd_example_autogenerated": {
            "type": "string"
          }
        }
      }
    },
    "AssistantMessage": {
      "name": {
        "typeId": "AssistantMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AssistantMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "assistant_message",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for an Assistant Message, this must be `assistant_message`.\n\nThis message contains both a transcript of the assistant’s response and the expression measurement predictions of the assistant’s audio output.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantMessageType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "ID of the assistant message. Allows the Assistant Message to be tracked and referenced.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantMessageId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChatMessage",
              "typeId": "ChatMessage",
              "inline": false,
              "type": "named"
            },
            "docs": "Transcript of the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Inference",
              "typeId": "Inference",
              "inline": false,
              "type": "named"
            },
            "docs": "Inference model results.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "from_text",
              "wireValue": "from_text"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Indicates if this message was inserted into the conversation as text from an [Assistant Input message](/reference/empathic-voice-interface-evi/chat/chat#send.Assistant%20Input.text).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantMessageFromText_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is an assistant message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AssistantMessage_example_autogenerated": {
            "type": "string",
            "message": {
              "role": "assistant"
            },
            "models": {
              "prosody": {
                "scores": {
                  "Admiration": 1.1,
                  "Adoration": 1.1,
                  "Aesthetic Appreciation": 1.1,
                  "Amusement": 1.1,
                  "Anger": 1.1,
                  "Anxiety": 1.1,
                  "Awe": 1.1,
                  "Awkwardness": 1.1,
                  "Boredom": 1.1,
                  "Calmness": 1.1,
                  "Concentration": 1.1,
                  "Confusion": 1.1,
                  "Contemplation": 1.1,
                  "Contempt": 1.1,
                  "Contentment": 1.1,
                  "Craving": 1.1,
                  "Desire": 1.1,
                  "Determination": 1.1,
                  "Disappointment": 1.1,
                  "Disgust": 1.1,
                  "Distress": 1.1,
                  "Doubt": 1.1,
                  "Ecstasy": 1.1,
                  "Embarrassment": 1.1,
                  "Empathic Pain": 1.1,
                  "Entrancement": 1.1,
                  "Envy": 1.1,
                  "Excitement": 1.1,
                  "Fear": 1.1,
                  "Guilt": 1.1,
                  "Horror": 1.1,
                  "Interest": 1.1,
                  "Joy": 1.1,
                  "Love": 1.1,
                  "Nostalgia": 1.1,
                  "Pain": 1.1,
                  "Pride": 1.1,
                  "Realization": 1.1,
                  "Relief": 1.1,
                  "Romance": 1.1,
                  "Sadness": 1.1,
                  "Satisfaction": 1.1,
                  "Shame": 1.1,
                  "Surprise (negative)": 1.1,
                  "Surprise (positive)": 1.1,
                  "Sympathy": 1.1,
                  "Tiredness": 1.1,
                  "Triumph": 1.1
                }
              }
            },
            "from_text": true
          }
        }
      }
    },
    "AudioOutput": {
      "name": {
        "typeId": "AudioOutput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AudioOutput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "audio_output",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "ID of the audio output. Allows the Audio Output message to be tracked and referenced.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "index",
              "wireValue": "index"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Index of the chunk of audio relative to the whole audio segment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputIndex_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "base64"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Base64 encoded audio output. This encoded audio is transmitted to the client, where it can be decoded and played back as part of the user interaction.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputData_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "is_final_chunk",
              "wireValue": "is_final_chunk"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "This AudioOutput contains the final chunk for this particular segment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputIsFinalChunk_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The type of message sent through the socket; for an Audio Output message, this must be `audio_output`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AudioOutput_example_autogenerated": {
            "type": "string",
            "id": "string",
            "index": 1,
            "data": "string",
            "is_final_chunk": true
          }
        }
      }
    },
    "ChatMetadata": {
      "name": {
        "typeId": "ChatMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatMetadata"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "chat_metadata",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Chat Metadata message, this must be `chat_metadata`.\n\nThe Chat Metadata message is the first message you receive after establishing a connection with EVI and contains important identifiers for the current Chat session.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "chat_group_id",
              "wireValue": "chat_group_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "ID of the Chat Group.\n\nUsed to resume a Chat when passed in the [resumed_chat_group_id](/reference/empathic-voice-interface-evi/chat/chat#request.query.resumed_chat_group_id) query parameter of a subsequent connection request. This allows EVI to continue the conversation from where it left off within the Chat Group.\n\nLearn more about [supporting chat resumability](/docs/empathic-voice-interface-evi/faq#does-evi-support-chat-resumability) from the EVI FAQ.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataChatGroupId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "chat_id",
              "wireValue": "chat_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "ID of the Chat session. Allows the Chat session to be tracked and referenced.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataChatId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "request_id",
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "ID of the initiating request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataRequestId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a chat metadata message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatMetadata_example_autogenerated": {
            "type": "string",
            "chat_group_id": "string",
            "chat_id": "string",
            "request_id": "string"
          }
        }
      }
    },
    "UserInterruption": {
      "name": {
        "typeId": "UserInterruption",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserInterruption"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "user_interruption",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a User Interruption message, this must be `user_interruption`.\n\nThis message indicates the user has interrupted the assistant’s response. EVI detects the interruption in real-time and sends this message to signal the interruption event. This message allows the system to stop the current audio playback, clear the audio queue, and prepare to handle new user input.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInterruptionType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInterruptionCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "time",
              "wireValue": "time"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Unix timestamp of the detected user interruption.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInterruptionTime_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is an interruption.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserInterruption_example_autogenerated": {
            "type": "string",
            "time": 1
          }
        }
      }
    },
    "UserMessage": {
      "name": {
        "typeId": "UserMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UserMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "user_message",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserMessageType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChatMessage",
              "typeId": "ChatMessage",
              "inline": false,
              "type": "named"
            },
            "docs": "Transcript of the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Inference",
              "typeId": "Inference",
              "inline": false,
              "type": "named"
            },
            "docs": "Inference model results.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "time",
              "wireValue": "time"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "MillisecondInterval",
              "typeId": "MillisecondInterval",
              "inline": false,
              "type": "named"
            },
            "docs": "Start and End time of user message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "from_text",
              "wireValue": "from_text"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Indicates if this message was inserted into the conversation as text from a [User Input](/reference/empathic-voice-interface-evi/chat/chat#send.User%20Input.text) message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserMessageFromText_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "interim",
              "wireValue": "interim"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Indicates if this message contains an immediate and unfinalized transcript of the user's audio input. If it does, words may be repeated across successive UserMessage messages as our transcription model becomes more confident about what was said with additional context. Interim messages are useful to detect if the user is interrupting during audio playback on the client. Even without a finalized transcription, along with `UserInterrupt` messages, interim `UserMessages` are useful for detecting if the user is interrupting during audio playback on the client, signaling to stop playback in your application.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserMessageInterim_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a user message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserMessage_example_autogenerated": {
            "type": "string",
            "message": {
              "role": "assistant"
            },
            "models": {
              "prosody": {
                "scores": {
                  "Admiration": 1.1,
                  "Adoration": 1.1,
                  "Aesthetic Appreciation": 1.1,
                  "Amusement": 1.1,
                  "Anger": 1.1,
                  "Anxiety": 1.1,
                  "Awe": 1.1,
                  "Awkwardness": 1.1,
                  "Boredom": 1.1,
                  "Calmness": 1.1,
                  "Concentration": 1.1,
                  "Confusion": 1.1,
                  "Contemplation": 1.1,
                  "Contempt": 1.1,
                  "Contentment": 1.1,
                  "Craving": 1.1,
                  "Desire": 1.1,
                  "Determination": 1.1,
                  "Disappointment": 1.1,
                  "Disgust": 1.1,
                  "Distress": 1.1,
                  "Doubt": 1.1,
                  "Ecstasy": 1.1,
                  "Embarrassment": 1.1,
                  "Empathic Pain": 1.1,
                  "Entrancement": 1.1,
                  "Envy": 1.1,
                  "Excitement": 1.1,
                  "Fear": 1.1,
                  "Guilt": 1.1,
                  "Horror": 1.1,
                  "Interest": 1.1,
                  "Joy": 1.1,
                  "Love": 1.1,
                  "Nostalgia": 1.1,
                  "Pain": 1.1,
                  "Pride": 1.1,
                  "Realization": 1.1,
                  "Relief": 1.1,
                  "Romance": 1.1,
                  "Sadness": 1.1,
                  "Satisfaction": 1.1,
                  "Shame": 1.1,
                  "Surprise (negative)": 1.1,
                  "Surprise (positive)": 1.1,
                  "Sympathy": 1.1,
                  "Tiredness": 1.1,
                  "Triumph": 1.1
                }
              }
            },
            "time": {
              "begin": 1,
              "end": 1
            },
            "from_text": true,
            "interim": true
          }
        }
      }
    },
    "ToolCallMessage": {
      "name": {
        "typeId": "ToolCallMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ToolCallMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Name of the tool called.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "parameters",
              "wireValue": "parameters"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Parameters of the tool call. Is a stringified JSON schema.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageParameters_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tool_call_id",
              "wireValue": "tool_call_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier for a specific tool call instance.\n\nThis ID is used to track the request and response of a particular tool invocation, ensuring that the correct response is linked to the appropriate request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageToolCallId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "tool_call",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Tool Call message, this must be `tool_call`.\n\nThis message indicates that the supplemental LLM has detected a need to invoke the specified tool.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageType_example_autogenerated": "tool_call"
              }
            }
          },
          {
            "name": {
              "name": "custom_session_id",
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageCustomSessionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tool_type",
              "wireValue": "tool_type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolType",
              "typeId": "ToolType",
              "inline": false,
              "type": "named"
            },
            "docs": "Type of tool called. Either `builtin` for natively implemented tools, like web search, or `function` for user-defined tools.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "response_required",
              "wireValue": "response_required"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Indicates whether a response to the tool call is required from the developer, either in the form of a [Tool Response message](/reference/empathic-voice-interface-evi/chat/chat#send.Tool%20Response%20Message.type) or a [Tool Error message](/reference/empathic-voice-interface-evi/chat/chat#send.Tool%20Error%20Message.type).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageResponseRequired_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a tool call.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolCallMessage_example_autogenerated": {
            "name": "string",
            "parameters": "string",
            "tool_call_id": "string",
            "tool_type": "builtin",
            "response_required": true
          }
        }
      }
    },
    "AudioConfiguration": {
      "name": {
        "typeId": "AudioConfiguration",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AudioConfiguration"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "encoding",
              "wireValue": "encoding"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Encoding",
              "typeId": "Encoding",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding format of the audio input, such as `linear16`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "channels",
              "wireValue": "channels"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Number of audio channels.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioConfigurationChannels_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "sample_rate",
              "wireValue": "sample_rate"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Audio sample rate. Number of samples per second in the audio input, measured in Hertz.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioConfigurationSampleRate_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AudioConfiguration_example_autogenerated": {
            "encoding": "linear16",
            "channels": 1,
            "sample_rate": 1
          }
        }
      }
    },
    "BuiltInTool": {
      "name": {
        "typeId": "BuiltInTool",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BuiltInTool"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "web_search",
              "wireValue": "web_search"
            }
          },
          {
            "name": {
              "name": "hang_up",
              "wireValue": "hang_up"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BuiltInTool_example_autogenerated": "web_search"
        }
      }
    },
    "BuiltinToolConfig": {
      "name": {
        "typeId": "BuiltinToolConfig",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BuiltinToolConfig"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "BuiltInTool",
              "typeId": "BuiltInTool",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "fallback_content",
              "wireValue": "fallback_content"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional text passed to the supplemental LLM if the tool call fails. The LLM then uses this text to generate a response back to the user, ensuring continuity in the conversation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BuiltinToolConfigFallbackContent_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BuiltinToolConfig_example_autogenerated": {
            "name": "web_search"
          }
        }
      }
    },
    "Context": {
      "name": {
        "typeId": "Context",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Context"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ContextType",
                  "typeId": "ContextType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The persistence level of the injected context. Specifies how long the injected context will remain active in the session.\n\nThere are three possible context types:\n\n- **Persistent**: The context is appended to all user messages for the duration of the session.\n\n- **Temporary**: The context is appended only to the next user message.\n\n - **Editable**: The original context is updated to reflect the new context.\n\n If the type is not specified, it will default to `temporary`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The context to be injected into the conversation. Helps inform the LLM's response by providing relevant information about the ongoing conversation.\n\nThis text will be appended to the end of user messages based on the chosen persistence level. For example, if you want to remind EVI of its role as a helpful weather assistant, the context you insert will be appended to the end of user messages as `{Context: You are a helpful weather assistant}`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContextText_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Context_example_autogenerated": {
            "text": "string"
          }
        }
      }
    },
    "ContextType": {
      "name": {
        "typeId": "ContextType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ContextType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "editable",
              "wireValue": "editable"
            }
          },
          {
            "name": {
              "name": "persistent",
              "wireValue": "persistent"
            }
          },
          {
            "name": {
              "name": "temporary",
              "wireValue": "temporary"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ContextType_example_autogenerated": "editable"
        }
      }
    },
    "Encoding": {
      "name": {
        "typeId": "Encoding",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Encoding"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "linear16",
              "wireValue": "linear16"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Encoding_example_autogenerated": "linear16"
        }
      }
    },
    "ErrorLevel": {
      "name": {
        "typeId": "ErrorLevel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ErrorLevel"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "warn",
              "wireValue": "warn"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ErrorLevel_example_autogenerated": "warn"
        }
      }
    },
    "SessionSettingsMetadata": {
      "name": {
        "typeId": "SessionSettingsMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SessionSettingsMetadata"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SessionSettingsMetadata_example_autogenerated": {}
        }
      }
    },
    "Tool": {
      "name": {
        "typeId": "Tool",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Tool"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolType",
              "typeId": "ToolType",
              "inline": false,
              "type": "named"
            },
            "docs": "Type of tool. Set to `function` for user-defined tools.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Name of the user-defined tool to be enabled.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "parameters",
              "wireValue": "parameters"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Parameters of the tool. Is a stringified JSON schema.\n\nThese parameters define the inputs needed for the tool’s execution, including the expected data type and description for each input field. Structured as a JSON schema, this format ensures the tool receives data in the expected format.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolParameters_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional description of what the tool does, used by the supplemental LLM to choose when and how to call the function.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "fallback_content",
              "wireValue": "fallback_content"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional text passed to the supplemental LLM if the tool call fails. The LLM then uses this text to generate a response back to the user, ensuring continuity in the conversation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolFallbackContent_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tool_example_autogenerated": {
            "type": "builtin",
            "name": "string",
            "parameters": "string"
          }
        }
      }
    },
    "ToolType": {
      "name": {
        "typeId": "ToolType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ToolType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "builtin",
              "wireValue": "builtin"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "function",
                "camelCase": {
                  "unsafeName": "function",
                  "safeName": "function_"
                },
                "snakeCase": {
                  "unsafeName": "function",
                  "safeName": "function_"
                }
              },
              "wireValue": "function"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolType_example_autogenerated": "builtin"
        }
      }
    },
    "ChatMessageToolResult": {
      "name": {
        "typeId": "ChatMessageToolResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatMessageToolResult"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolResponseMessage",
              "typeId": "ToolResponseMessage",
              "displayName": "ToolResponseMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolErrorMessage",
              "typeId": "ToolErrorMessage",
              "displayName": "ToolErrorMessage",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Function call response from client.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatMessageToolResult_example_autogenerated": {
            "tool_call_id": "string",
            "content": "string"
          }
        }
      }
    },
    "ChatMessage": {
      "name": {
        "typeId": "ChatMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatMessage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "role",
              "wireValue": "role"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Role",
              "typeId": "Role",
              "inline": false,
              "type": "named"
            },
            "docs": "Role of who is providing the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "content",
              "wireValue": "content"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Transcript of the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMessageContent_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tool_call",
              "wireValue": "tool_call"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ToolCallMessage",
                      "typeId": "ToolCallMessage",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Function call name and arguments.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMessageToolCall_example_autogenerated": {
                  "name": "string",
                  "parameters": "string",
                  "tool_call_id": "string",
                  "tool_type": "builtin",
                  "response_required": true
                }
              }
            }
          },
          {
            "name": {
              "name": "tool_result",
              "wireValue": "tool_result"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChatMessageToolResult",
                      "typeId": "ChatMessageToolResult",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Function call response from client.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMessageToolResult_example_autogenerated": {
                  "tool_call_id": "string",
                  "content": "string"
                }
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatMessage_example_autogenerated": {
            "role": "assistant"
          }
        }
      }
    },
    "EmotionScores": {
      "name": {
        "typeId": "EmotionScores",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmotionScores"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "Admiration",
              "wireValue": "Admiration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAdmiration_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Adoration",
              "wireValue": "Adoration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAdoration_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Aesthetic Appreciation",
              "wireValue": "Aesthetic Appreciation"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAestheticAppreciation_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Amusement",
              "wireValue": "Amusement"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAmusement_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Anger",
              "wireValue": "Anger"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAnger_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Anxiety",
              "wireValue": "Anxiety"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAnxiety_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Awe",
              "wireValue": "Awe"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAwe_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Awkwardness",
              "wireValue": "Awkwardness"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAwkwardness_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Boredom",
              "wireValue": "Boredom"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresBoredom_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Calmness",
              "wireValue": "Calmness"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresCalmness_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Concentration",
              "wireValue": "Concentration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresConcentration_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Confusion",
              "wireValue": "Confusion"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresConfusion_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Contemplation",
              "wireValue": "Contemplation"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresContemplation_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Contempt",
              "wireValue": "Contempt"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresContempt_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Contentment",
              "wireValue": "Contentment"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresContentment_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Craving",
              "wireValue": "Craving"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresCraving_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Desire",
              "wireValue": "Desire"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDesire_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Determination",
              "wireValue": "Determination"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDetermination_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Disappointment",
              "wireValue": "Disappointment"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDisappointment_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Disgust",
              "wireValue": "Disgust"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDisgust_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Distress",
              "wireValue": "Distress"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDistress_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Doubt",
              "wireValue": "Doubt"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDoubt_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Ecstasy",
              "wireValue": "Ecstasy"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEcstasy_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Embarrassment",
              "wireValue": "Embarrassment"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEmbarrassment_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Empathic Pain",
              "wireValue": "Empathic Pain"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEmpathicPain_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Entrancement",
              "wireValue": "Entrancement"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEntrancement_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Envy",
              "wireValue": "Envy"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEnvy_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Excitement",
              "wireValue": "Excitement"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresExcitement_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Fear",
              "wireValue": "Fear"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresFear_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Guilt",
              "wireValue": "Guilt"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresGuilt_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Horror",
              "wireValue": "Horror"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresHorror_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Interest",
              "wireValue": "Interest"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresInterest_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Joy",
              "wireValue": "Joy"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresJoy_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Love",
              "wireValue": "Love"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresLove_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Nostalgia",
              "wireValue": "Nostalgia"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresNostalgia_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Pain",
              "wireValue": "Pain"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresPain_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Pride",
              "wireValue": "Pride"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresPride_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Realization",
              "wireValue": "Realization"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresRealization_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Relief",
              "wireValue": "Relief"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresRelief_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Romance",
              "wireValue": "Romance"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresRomance_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Sadness",
              "wireValue": "Sadness"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSadness_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Satisfaction",
              "wireValue": "Satisfaction"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSatisfaction_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Shame",
              "wireValue": "Shame"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresShame_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Surprise (negative)",
              "wireValue": "Surprise (negative)"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSurpriseNegative_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Surprise (positive)",
              "wireValue": "Surprise (positive)"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSurprisePositive_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Sympathy",
              "wireValue": "Sympathy"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSympathy_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Tiredness",
              "wireValue": "Tiredness"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresTiredness_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "Triumph",
              "wireValue": "Triumph"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresTriumph_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmotionScores_example_autogenerated": {
            "Admiration": 1.1,
            "Adoration": 1.1,
            "Aesthetic Appreciation": 1.1,
            "Amusement": 1.1,
            "Anger": 1.1,
            "Anxiety": 1.1,
            "Awe": 1.1,
            "Awkwardness": 1.1,
            "Boredom": 1.1,
            "Calmness": 1.1,
            "Concentration": 1.1,
            "Confusion": 1.1,
            "Contemplation": 1.1,
            "Contempt": 1.1,
            "Contentment": 1.1,
            "Craving": 1.1,
            "Desire": 1.1,
            "Determination": 1.1,
            "Disappointment": 1.1,
            "Disgust": 1.1,
            "Distress": 1.1,
            "Doubt": 1.1,
            "Ecstasy": 1.1,
            "Embarrassment": 1.1,
            "Empathic Pain": 1.1,
            "Entrancement": 1.1,
            "Envy": 1.1,
            "Excitement": 1.1,
            "Fear": 1.1,
            "Guilt": 1.1,
            "Horror": 1.1,
            "Interest": 1.1,
            "Joy": 1.1,
            "Love": 1.1,
            "Nostalgia": 1.1,
            "Pain": 1.1,
            "Pride": 1.1,
            "Realization": 1.1,
            "Relief": 1.1,
            "Romance": 1.1,
            "Sadness": 1.1,
            "Satisfaction": 1.1,
            "Shame": 1.1,
            "Surprise (negative)": 1.1,
            "Surprise (positive)": 1.1,
            "Sympathy": 1.1,
            "Tiredness": 1.1,
            "Triumph": 1.1
          }
        }
      }
    },
    "Inference": {
      "name": {
        "typeId": "Inference",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Inference"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "prosody",
              "wireValue": "prosody"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ProsodyInference",
                  "typeId": "ProsodyInference",
                  "inline": false,
                  "type": "named"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Prosody model inference results.\n\nEVI uses the prosody model to measure 48 emotions related to speech and vocal characteristics within a given expression.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InferenceProsody_example_autogenerated": {
                  "scores": {
                    "Admiration": 1.1,
                    "Adoration": 1.1,
                    "Aesthetic Appreciation": 1.1,
                    "Amusement": 1.1,
                    "Anger": 1.1,
                    "Anxiety": 1.1,
                    "Awe": 1.1,
                    "Awkwardness": 1.1,
                    "Boredom": 1.1,
                    "Calmness": 1.1,
                    "Concentration": 1.1,
                    "Confusion": 1.1,
                    "Contemplation": 1.1,
                    "Contempt": 1.1,
                    "Contentment": 1.1,
                    "Craving": 1.1,
                    "Desire": 1.1,
                    "Determination": 1.1,
                    "Disappointment": 1.1,
                    "Disgust": 1.1,
                    "Distress": 1.1,
                    "Doubt": 1.1,
                    "Ecstasy": 1.1,
                    "Embarrassment": 1.1,
                    "Empathic Pain": 1.1,
                    "Entrancement": 1.1,
                    "Envy": 1.1,
                    "Excitement": 1.1,
                    "Fear": 1.1,
                    "Guilt": 1.1,
                    "Horror": 1.1,
                    "Interest": 1.1,
                    "Joy": 1.1,
                    "Love": 1.1,
                    "Nostalgia": 1.1,
                    "Pain": 1.1,
                    "Pride": 1.1,
                    "Realization": 1.1,
                    "Relief": 1.1,
                    "Romance": 1.1,
                    "Sadness": 1.1,
                    "Satisfaction": 1.1,
                    "Shame": 1.1,
                    "Surprise (negative)": 1.1,
                    "Surprise (positive)": 1.1,
                    "Sympathy": 1.1,
                    "Tiredness": 1.1,
                    "Triumph": 1.1
                  }
                }
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Inference_example_autogenerated": {
            "prosody": {
              "scores": {
                "Admiration": 1.1,
                "Adoration": 1.1,
                "Aesthetic Appreciation": 1.1,
                "Amusement": 1.1,
                "Anger": 1.1,
                "Anxiety": 1.1,
                "Awe": 1.1,
                "Awkwardness": 1.1,
                "Boredom": 1.1,
                "Calmness": 1.1,
                "Concentration": 1.1,
                "Confusion": 1.1,
                "Contemplation": 1.1,
                "Contempt": 1.1,
                "Contentment": 1.1,
                "Craving": 1.1,
                "Desire": 1.1,
                "Determination": 1.1,
                "Disappointment": 1.1,
                "Disgust": 1.1,
                "Distress": 1.1,
                "Doubt": 1.1,
                "Ecstasy": 1.1,
                "Embarrassment": 1.1,
                "Empathic Pain": 1.1,
                "Entrancement": 1.1,
                "Envy": 1.1,
                "Excitement": 1.1,
                "Fear": 1.1,
                "Guilt": 1.1,
                "Horror": 1.1,
                "Interest": 1.1,
                "Joy": 1.1,
                "Love": 1.1,
                "Nostalgia": 1.1,
                "Pain": 1.1,
                "Pride": 1.1,
                "Realization": 1.1,
                "Relief": 1.1,
                "Romance": 1.1,
                "Sadness": 1.1,
                "Satisfaction": 1.1,
                "Shame": 1.1,
                "Surprise (negative)": 1.1,
                "Surprise (positive)": 1.1,
                "Sympathy": 1.1,
                "Tiredness": 1.1,
                "Triumph": 1.1
              }
            }
          }
        }
      }
    },
    "MillisecondInterval": {
      "name": {
        "typeId": "MillisecondInterval",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MillisecondInterval"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "begin",
              "wireValue": "begin"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Start time of the interval in milliseconds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MillisecondIntervalBegin_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "End time of the interval in milliseconds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MillisecondIntervalEnd_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MillisecondInterval_example_autogenerated": {
            "begin": 1,
            "end": 1
          }
        }
      }
    },
    "ProsodyInference": {
      "name": {
        "typeId": "ProsodyInference",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ProsodyInference"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "scores",
              "wireValue": "scores"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EmotionScores",
              "typeId": "EmotionScores",
              "inline": false,
              "type": "named"
            },
            "docs": "The confidence scores for 48 emotions within the detected expression of an audio sample.\n\nScores typically range from 0 to 1, with higher values indicating a stronger confidence level in the measured attribute.\n\nSee our guide on [interpreting expression measurement results](/docs/expression-measurement/faq#how-do-i-interpret-my-results) to learn more.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProsodyInference_example_autogenerated": {
            "scores": {
              "Admiration": 1.1,
              "Adoration": 1.1,
              "Aesthetic Appreciation": 1.1,
              "Amusement": 1.1,
              "Anger": 1.1,
              "Anxiety": 1.1,
              "Awe": 1.1,
              "Awkwardness": 1.1,
              "Boredom": 1.1,
              "Calmness": 1.1,
              "Concentration": 1.1,
              "Confusion": 1.1,
              "Contemplation": 1.1,
              "Contempt": 1.1,
              "Contentment": 1.1,
              "Craving": 1.1,
              "Desire": 1.1,
              "Determination": 1.1,
              "Disappointment": 1.1,
              "Disgust": 1.1,
              "Distress": 1.1,
              "Doubt": 1.1,
              "Ecstasy": 1.1,
              "Embarrassment": 1.1,
              "Empathic Pain": 1.1,
              "Entrancement": 1.1,
              "Envy": 1.1,
              "Excitement": 1.1,
              "Fear": 1.1,
              "Guilt": 1.1,
              "Horror": 1.1,
              "Interest": 1.1,
              "Joy": 1.1,
              "Love": 1.1,
              "Nostalgia": 1.1,
              "Pain": 1.1,
              "Pride": 1.1,
              "Realization": 1.1,
              "Relief": 1.1,
              "Romance": 1.1,
              "Sadness": 1.1,
              "Satisfaction": 1.1,
              "Shame": 1.1,
              "Surprise (negative)": 1.1,
              "Surprise (positive)": 1.1,
              "Sympathy": 1.1,
              "Tiredness": 1.1,
              "Triumph": 1.1
            }
          }
        }
      }
    },
    "Role": {
      "name": {
        "typeId": "Role",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Role"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "assistant",
              "wireValue": "assistant"
            }
          },
          {
            "name": {
              "name": "system",
              "wireValue": "system"
            }
          },
          {
            "name": {
              "name": "user",
              "wireValue": "user"
            }
          },
          {
            "name": {
              "name": "all",
              "wireValue": "all"
            }
          },
          {
            "name": {
              "name": "tool",
              "wireValue": "tool"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Role_example_autogenerated": "assistant"
        }
      }
    },
    "ChatSubscribe": {
      "name": {
        "typeId": "ChatSubscribe",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatSubscribe"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AssistantEnd",
              "typeId": "AssistantEnd",
              "displayName": "AssistantEnd",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AssistantMessage",
              "typeId": "AssistantMessage",
              "displayName": "AssistantMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AudioOutput",
              "typeId": "AudioOutput",
              "displayName": "AudioOutput",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChatMetadata",
              "typeId": "ChatMetadata",
              "displayName": "ChatMetadata",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "typeId": "Error",
              "displayName": "Error",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserInterruption",
              "typeId": "UserInterruption",
              "displayName": "UserInterruption",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserMessage",
              "typeId": "UserMessage",
              "displayName": "UserMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolCallMessage",
              "typeId": "ToolCallMessage",
              "displayName": "ToolCallMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolResponseMessage",
              "typeId": "ToolResponseMessage",
              "displayName": "ToolResponseMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolErrorMessage",
              "typeId": "ToolErrorMessage",
              "displayName": "ToolErrorMessage",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatSubscribe_example_autogenerated": null
        }
      }
    },
    "ChatPublish": {
      "name": {
        "typeId": "ChatPublish",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatPublish"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AudioInput",
              "typeId": "AudioInput",
              "displayName": "AudioInput",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "SessionSettings",
              "typeId": "SessionSettings",
              "displayName": "SessionSettings",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "UserInput",
              "typeId": "UserInput",
              "displayName": "UserInput",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AssistantInput",
              "typeId": "AssistantInput",
              "displayName": "AssistantInput",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolResponseMessage",
              "typeId": "ToolResponseMessage",
              "displayName": "ToolResponseMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ToolErrorMessage",
              "typeId": "ToolErrorMessage",
              "displayName": "ToolErrorMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "PauseAssistantMessage",
              "typeId": "PauseAssistantMessage",
              "displayName": "PauseAssistantMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ResumeAssistantMessage",
              "typeId": "ResumeAssistantMessage",
              "displayName": "ResumeAssistantMessage",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatPublish_example_autogenerated": null
        }
      }
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": "errorInstanceId",
      "wireValue": "errorInstanceId"
    }
  },
  "errors": {},
  "services": {
    "service_": {
      "name": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Jobs",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/batch/jobs",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "limit",
                "wireValue": "limit"
              },
              "docs": "The maximum number of jobs to include in the response.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 50,
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "limit_example": 50
                }
              }
            },
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "Include only jobs with these statuses.",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "fernFilepath": {
                          "allParts": [],
                          "packagePath": []
                        },
                        "name": "Status",
                        "typeId": "Status",
                        "inline": false,
                        "type": "named"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": [
                    "QUEUED"
                  ]
                }
              }
            },
            {
              "name": {
                "name": "when",
                "wireValue": "when"
              },
              "docs": "Include only jobs that were created before or after `timestamp_ms`.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V0BatchJobsGetParametersWhen",
                    "typeId": "V0BatchJobsGetParametersWhen",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "when_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "timestamp_ms",
                "wireValue": "timestamp_ms"
              },
              "docs": "Defaults to the current date and time. See `when`.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "LONG",
                      "v2": {
                        "type": "long"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "timestamp_ms_example": 1
                }
              }
            },
            {
              "name": {
                "name": "sort_by",
                "wireValue": "sort_by"
              },
              "docs": "The job timestamp to sort by.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V0BatchJobsGetParametersSortBy",
                    "typeId": "V0BatchJobsGetParametersSortBy",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "sort_by_example": "created"
                }
              }
            },
            {
              "name": {
                "name": "direction",
                "wireValue": "direction"
              },
              "docs": "The sort direction.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "V0BatchJobsGetParametersDirection",
                    "typeId": "V0BatchJobsGetParametersDirection",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "direction_example": "asc"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "Authentication": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/batch/jobs",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_.List Jobs",
          "name": "List Jobs",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Job_Request",
                      "typeId": "Job_Request",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "listJobsExample": [
                      {
                        "user_id": "string",
                        "job_id": "string",
                        "request": {
                          "models": {
                            "face": {
                              "fps_pred": 3,
                              "prob_threshold": 0.99,
                              "identify_faces": false,
                              "min_face_size": 60,
                              "facs": null,
                              "descriptions": null,
                              "save_faces": false
                            },
                            "burst": null,
                            "prosody": {
                              "granularity": "word",
                              "identify_speakers": false,
                              "window": {
                                "length": 4,
                                "step": 1
                              }
                            },
                            "language": {
                              "granularity": "word",
                              "identify_speakers": false,
                              "sentiment": null,
                              "toxicity": null
                            },
                            "ner": {
                              "identify_speakers": false
                            },
                            "facemesh": null
                          },
                          "transcription": {
                            "language": "zh"
                          },
                          "urls": [
                            "string"
                          ],
                          "callback_url": "string",
                          "notify": false,
                          "files": [
                            {
                              "filename": "string",
                              "content_type": "string",
                              "md5sum": "string"
                            }
                          ]
                        },
                        "state": {
                          "status": "QUEUED",
                          "created_timestamp_ms": 1
                        }
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Sort and filter jobs.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_listJobsExample_200": {
                "displayName": "listJobsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/batch/jobs"
                  },
                  "environment": "https://api.hume.ai",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "user_id": "string",
                        "job_id": "string",
                        "request": {
                          "models": {
                            "face": {
                              "fps_pred": 3,
                              "prob_threshold": 0.99,
                              "identify_faces": false,
                              "min_face_size": 60,
                              "facs": null,
                              "descriptions": null,
                              "save_faces": false
                            },
                            "burst": null,
                            "prosody": {
                              "granularity": "word",
                              "identify_speakers": false,
                              "window": {
                                "length": 4,
                                "step": 1
                              }
                            },
                            "language": {
                              "granularity": "word",
                              "identify_speakers": false,
                              "sentiment": null,
                              "toxicity": null
                            },
                            "ner": {
                              "identify_speakers": false
                            },
                            "facemesh": null
                          },
                          "transcription": {
                            "language": "zh"
                          },
                          "urls": [
                            "string"
                          ],
                          "callback_url": "string",
                          "notify": false,
                          "files": [
                            {
                              "filename": "string",
                              "content_type": "string",
                              "md5sum": "string"
                            }
                          ]
                        },
                        "state": {
                          "status": "QUEUED",
                          "created_timestamp_ms": 1
                        }
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "Job_Request",
                          "typeId": "Job_Request",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "listJobsExample": [
                          {
                            "user_id": "string",
                            "job_id": "string",
                            "request": {
                              "models": {
                                "face": {
                                  "fps_pred": 3,
                                  "prob_threshold": 0.99,
                                  "identify_faces": false,
                                  "min_face_size": 60,
                                  "facs": null,
                                  "descriptions": null,
                                  "save_faces": false
                                },
                                "burst": null,
                                "prosody": {
                                  "granularity": "word",
                                  "identify_speakers": false,
                                  "window": {
                                    "length": 4,
                                    "step": 1
                                  }
                                },
                                "language": {
                                  "granularity": "word",
                                  "identify_speakers": false,
                                  "sentiment": null,
                                  "toxicity": null
                                },
                                "ner": {
                                  "identify_speakers": false
                                },
                                "facemesh": null
                              },
                              "transcription": {
                                "language": "zh"
                              },
                              "urls": [
                                "string"
                              ],
                              "callback_url": "string",
                              "notify": false,
                              "files": [
                                {
                                  "filename": "string",
                                  "content_type": "string",
                                  "md5sum": "string"
                                }
                              ]
                            },
                            "state": {
                              "status": "QUEUED",
                              "created_timestamp_ms": 1
                            }
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Start Job",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/batch/jobs",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "Authentication": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/batch/jobs",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_.Start Job",
          "name": "Start Job",
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "Start Job_Request",
            "properties": [
              {
                "name": {
                  "name": "json",
                  "wireValue": "json"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "V0BatchJobsPostRequestBodyContentMultipartFormDataSchemaJson",
                      "typeId": "V0BatchJobsPostRequestBodyContentMultipartFormDataSchemaJson",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V0BatchJobsPostRequestBodyContentMultipartFormDataSchemaJson_example_autogenerated": null
                  }
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "value": {
                  "key": {
                    "name": {
                      "originalName": "file",
                      "pascalCase": {
                        "unsafeName": "File",
                        "safeName": "File_"
                      }
                    },
                    "wireValue": "file"
                  },
                  "isOptional": false,
                  "contentType": "multipart/form-data",
                  "docs": "Local media files (see recommended input filetypes) to be processed.\n\nIf you wish to supply more than 100 files, consider providing them as an archive (`.zip`, `.tar.gz`, `.tar.bz2`, `.tar.xz`).",
                  "type": "fileArray"
                },
                "type": "file"
              }
            ],
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "startJobExample": {
                  "file": [
                    "string"
                  ]
                }
              }
            },
            "type": "fileUpload"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "multipart/form-data",
                "name": "Start Job_Request",
                "properties": [
                  {
                    "name": {
                      "name": "json",
                      "wireValue": "json"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "V0BatchJobsPostRequestBodyContentMultipartFormDataSchemaJson",
                          "typeId": "V0BatchJobsPostRequestBodyContentMultipartFormDataSchemaJson",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "V0BatchJobsPostRequestBodyContentMultipartFormDataSchemaJson_example_autogenerated": null
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "value": {
                      "key": {
                        "name": {
                          "originalName": "file",
                          "pascalCase": {
                            "unsafeName": "File",
                            "safeName": "File_"
                          }
                        },
                        "wireValue": "file"
                      },
                      "isOptional": false,
                      "contentType": "multipart/form-data",
                      "docs": "Local media files (see recommended input filetypes) to be processed.\n\nIf you wish to supply more than 100 files, consider providing them as an archive (`.zip`, `.tar.gz`, `.tar.bz2`, `.tar.xz`).",
                      "type": "fileArray"
                    },
                    "type": "file"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "startJobExample": {
                      "file": [
                        "string"
                      ]
                    }
                  }
                },
                "type": "fileUpload"
              },
              {
                "contentType": "application/json; charset=utf-8",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BaseRequest",
                  "typeId": "BaseRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "startJobExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "JobId",
                  "typeId": "JobId",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "startJobExample": {
                      "job_id": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Start a new batch job.",
          "v2Examples": {
            "autogeneratedExamples": {
              "startJobExample_200": {
                "displayName": "startJobExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/batch/jobs"
                  },
                  "environment": "https://api.hume.ai",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "file": [
                      "string"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "job_id": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "JobId",
                      "typeId": "JobId",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "startJobExample": {
                          "job_id": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Job Predictions",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/batch/jobs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/predictions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "Authentication": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/batch/jobs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/predictions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_.Get Job Predictions",
          "name": "Get Job Predictions",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "SourceResult",
                      "typeId": "SourceResult",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "getJobPredictionsExample": [
                      {
                        "source": {
                          "type": "url",
                          "url": "string"
                        },
                        "results": {
                          "predictions": [
                            {
                              "file": "string",
                              "models": {
                                "face": {
                                  "metadata": {},
                                  "grouped_predictions": [
                                    {
                                      "id": "string",
                                      "predictions": [
                                        {
                                          "frame": 1,
                                          "time": 1.1,
                                          "prob": 1.1,
                                          "box": {
                                            "x": 1.1,
                                            "y": 1.1,
                                            "w": 1.1,
                                            "h": 1.1
                                          },
                                          "emotions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ],
                                          "facs": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ],
                                          "descriptions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "burst": {
                                  "metadata": {},
                                  "grouped_predictions": [
                                    {
                                      "id": "string",
                                      "predictions": [
                                        {
                                          "time": {
                                            "begin": 1.1,
                                            "end": 1.1
                                          },
                                          "emotions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ],
                                          "descriptions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "prosody": {
                                  "metadata": {
                                    "confidence": 1.1,
                                    "detected_language": "zh"
                                  },
                                  "grouped_predictions": [
                                    {
                                      "id": "string",
                                      "predictions": [
                                        {
                                          "text": "string",
                                          "time": {
                                            "begin": 1.1,
                                            "end": 1.1
                                          },
                                          "confidence": 1.1,
                                          "speaker_confidence": 1.1,
                                          "emotions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "language": {
                                  "metadata": {
                                    "confidence": 1.1,
                                    "detected_language": "zh"
                                  },
                                  "grouped_predictions": [
                                    {
                                      "id": "string",
                                      "predictions": [
                                        {
                                          "text": "string",
                                          "position": {
                                            "begin": 1,
                                            "end": 1
                                          },
                                          "time": {
                                            "begin": 1.1,
                                            "end": 1.1
                                          },
                                          "confidence": 1.1,
                                          "speaker_confidence": 1.1,
                                          "emotions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ],
                                          "sentiment": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ],
                                          "toxicity": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "ner": {
                                  "metadata": {
                                    "confidence": 1.1,
                                    "detected_language": "zh"
                                  },
                                  "grouped_predictions": [
                                    {
                                      "id": "string",
                                      "predictions": [
                                        {
                                          "entity": "string",
                                          "position": {
                                            "begin": 1,
                                            "end": 1
                                          },
                                          "entity_confidence": 1.1,
                                          "support": 1.1,
                                          "uri": "string",
                                          "link_word": "string",
                                          "time": {
                                            "begin": 1.1,
                                            "end": 1.1
                                          },
                                          "confidence": 1.1,
                                          "speaker_confidence": 1.1,
                                          "emotions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "facemesh": {
                                  "metadata": {},
                                  "grouped_predictions": [
                                    {
                                      "id": "string",
                                      "predictions": [
                                        {
                                          "emotions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "errors": [
                            {
                              "message": "string",
                              "file": "string"
                            }
                          ]
                        },
                        "error": "string"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get the JSON predictions of a completed job.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_getJobPredictionsExample_200": {
                "displayName": "getJobPredictionsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/batch/jobs/id/predictions"
                  },
                  "environment": "https://api.hume.ai",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "source": {
                          "type": "url",
                          "url": "string"
                        },
                        "results": {
                          "predictions": [
                            {
                              "file": "string",
                              "models": {
                                "face": {
                                  "metadata": {},
                                  "grouped_predictions": [
                                    {
                                      "id": "string",
                                      "predictions": [
                                        {
                                          "frame": 1,
                                          "time": 1.1,
                                          "prob": 1.1,
                                          "box": {
                                            "x": 1.1,
                                            "y": 1.1,
                                            "w": 1.1,
                                            "h": 1.1
                                          },
                                          "emotions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ],
                                          "facs": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ],
                                          "descriptions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "burst": {
                                  "metadata": {},
                                  "grouped_predictions": [
                                    {
                                      "id": "string",
                                      "predictions": [
                                        {
                                          "time": {
                                            "begin": 1.1,
                                            "end": 1.1
                                          },
                                          "emotions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ],
                                          "descriptions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "prosody": {
                                  "metadata": {
                                    "confidence": 1.1,
                                    "detected_language": "zh"
                                  },
                                  "grouped_predictions": [
                                    {
                                      "id": "string",
                                      "predictions": [
                                        {
                                          "text": "string",
                                          "time": {
                                            "begin": 1.1,
                                            "end": 1.1
                                          },
                                          "confidence": 1.1,
                                          "speaker_confidence": 1.1,
                                          "emotions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "language": {
                                  "metadata": {
                                    "confidence": 1.1,
                                    "detected_language": "zh"
                                  },
                                  "grouped_predictions": [
                                    {
                                      "id": "string",
                                      "predictions": [
                                        {
                                          "text": "string",
                                          "position": {
                                            "begin": 1,
                                            "end": 1
                                          },
                                          "time": {
                                            "begin": 1.1,
                                            "end": 1.1
                                          },
                                          "confidence": 1.1,
                                          "speaker_confidence": 1.1,
                                          "emotions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ],
                                          "sentiment": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ],
                                          "toxicity": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "ner": {
                                  "metadata": {
                                    "confidence": 1.1,
                                    "detected_language": "zh"
                                  },
                                  "grouped_predictions": [
                                    {
                                      "id": "string",
                                      "predictions": [
                                        {
                                          "entity": "string",
                                          "position": {
                                            "begin": 1,
                                            "end": 1
                                          },
                                          "entity_confidence": 1.1,
                                          "support": 1.1,
                                          "uri": "string",
                                          "link_word": "string",
                                          "time": {
                                            "begin": 1.1,
                                            "end": 1.1
                                          },
                                          "confidence": 1.1,
                                          "speaker_confidence": 1.1,
                                          "emotions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "facemesh": {
                                  "metadata": {},
                                  "grouped_predictions": [
                                    {
                                      "id": "string",
                                      "predictions": [
                                        {
                                          "emotions": [
                                            {
                                              "name": "string",
                                              "score": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "errors": [
                            {
                              "message": "string",
                              "file": "string"
                            }
                          ]
                        },
                        "error": "string"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "SourceResult",
                          "typeId": "SourceResult",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "getJobPredictionsExample": [
                          {
                            "source": {
                              "type": "url",
                              "url": "string"
                            },
                            "results": {
                              "predictions": [
                                {
                                  "file": "string",
                                  "models": {
                                    "face": {
                                      "metadata": {},
                                      "grouped_predictions": [
                                        {
                                          "id": "string",
                                          "predictions": [
                                            {
                                              "frame": 1,
                                              "time": 1.1,
                                              "prob": 1.1,
                                              "box": {
                                                "x": 1.1,
                                                "y": 1.1,
                                                "w": 1.1,
                                                "h": 1.1
                                              },
                                              "emotions": [
                                                {
                                                  "name": "string",
                                                  "score": "string"
                                                }
                                              ],
                                              "facs": [
                                                {
                                                  "name": "string",
                                                  "score": "string"
                                                }
                                              ],
                                              "descriptions": [
                                                {
                                                  "name": "string",
                                                  "score": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "burst": {
                                      "metadata": {},
                                      "grouped_predictions": [
                                        {
                                          "id": "string",
                                          "predictions": [
                                            {
                                              "time": {
                                                "begin": 1.1,
                                                "end": 1.1
                                              },
                                              "emotions": [
                                                {
                                                  "name": "string",
                                                  "score": "string"
                                                }
                                              ],
                                              "descriptions": [
                                                {
                                                  "name": "string",
                                                  "score": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "prosody": {
                                      "metadata": {
                                        "confidence": 1.1,
                                        "detected_language": "zh"
                                      },
                                      "grouped_predictions": [
                                        {
                                          "id": "string",
                                          "predictions": [
                                            {
                                              "text": "string",
                                              "time": {
                                                "begin": 1.1,
                                                "end": 1.1
                                              },
                                              "confidence": 1.1,
                                              "speaker_confidence": 1.1,
                                              "emotions": [
                                                {
                                                  "name": "string",
                                                  "score": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "language": {
                                      "metadata": {
                                        "confidence": 1.1,
                                        "detected_language": "zh"
                                      },
                                      "grouped_predictions": [
                                        {
                                          "id": "string",
                                          "predictions": [
                                            {
                                              "text": "string",
                                              "position": {
                                                "begin": 1,
                                                "end": 1
                                              },
                                              "time": {
                                                "begin": 1.1,
                                                "end": 1.1
                                              },
                                              "confidence": 1.1,
                                              "speaker_confidence": 1.1,
                                              "emotions": [
                                                {
                                                  "name": "string",
                                                  "score": "string"
                                                }
                                              ],
                                              "sentiment": [
                                                {
                                                  "name": "string",
                                                  "score": "string"
                                                }
                                              ],
                                              "toxicity": [
                                                {
                                                  "name": "string",
                                                  "score": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "ner": {
                                      "metadata": {
                                        "confidence": 1.1,
                                        "detected_language": "zh"
                                      },
                                      "grouped_predictions": [
                                        {
                                          "id": "string",
                                          "predictions": [
                                            {
                                              "entity": "string",
                                              "position": {
                                                "begin": 1,
                                                "end": 1
                                              },
                                              "entity_confidence": 1.1,
                                              "support": 1.1,
                                              "uri": "string",
                                              "link_word": "string",
                                              "time": {
                                                "begin": 1.1,
                                                "end": 1.1
                                              },
                                              "confidence": 1.1,
                                              "speaker_confidence": 1.1,
                                              "emotions": [
                                                {
                                                  "name": "string",
                                                  "score": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "facemesh": {
                                      "metadata": {},
                                      "grouped_predictions": [
                                        {
                                          "id": "string",
                                          "predictions": [
                                            {
                                              "emotions": [
                                                {
                                                  "name": "string",
                                                  "score": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "errors": [
                                {
                                  "message": "string",
                                  "file": "string"
                                }
                              ]
                            },
                            "error": "string"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_getJobPredictions": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Get Job Predictions"
          ],
          "packagePath": [],
          "file": "Get Job Predictions"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Get Job Artifacts",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/batch/jobs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/artifacts"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "Authentication": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/batch/jobs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/artifacts"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_getJobPredictions.get_job_artifacts",
          "name": "get_job_artifacts",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "docs": "",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "getJobPredictionsGetJobArtifactsExample": "string"
                }
              },
              "type": "fileDownload"
            }
          },
          "docs": "Get the artifacts ZIP of a completed job.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_200": {
                "displayName": "getJobArtifactsExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/batch/jobs/id/artifacts"
                  },
                  "environment": "https://api.hume.ai",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "docs": "",
                  "v2Examples": {
                    "userSpecifiedExamples": {},
                    "autogeneratedExamples": {
                      "getJobPredictionsGetJobArtifactsExample": "string"
                    }
                  },
                  "type": "fileDownload"
                }
              }
            ]
          }
        },
        {
          "displayName": "Get Job Details",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/batch/jobs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "Authentication": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/batch/jobs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_getJobPredictions.get_job",
          "name": "get_job",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Job_Request",
                  "typeId": "Job_Request",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "getJobPredictionsGetJobExample": {
                      "user_id": "string",
                      "job_id": "string",
                      "request": {
                        "models": {
                          "face": {
                            "fps_pred": 3,
                            "prob_threshold": 0.99,
                            "identify_faces": false,
                            "min_face_size": 60,
                            "facs": null,
                            "descriptions": null,
                            "save_faces": false
                          },
                          "burst": null,
                          "prosody": {
                            "granularity": "word",
                            "identify_speakers": false,
                            "window": {
                              "length": 4,
                              "step": 1
                            }
                          },
                          "language": {
                            "granularity": "word",
                            "identify_speakers": false,
                            "sentiment": null,
                            "toxicity": null
                          },
                          "ner": {
                            "identify_speakers": false
                          },
                          "facemesh": null
                        },
                        "transcription": {
                          "language": "zh"
                        },
                        "urls": [
                          "string"
                        ],
                        "callback_url": "string",
                        "notify": false,
                        "files": [
                          {
                            "filename": "string",
                            "content_type": "string",
                            "md5sum": "string"
                          }
                        ]
                      },
                      "state": {
                        "status": "QUEUED",
                        "created_timestamp_ms": 1
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get the request details and state of a given job.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_getJobPredictionsGetJobExample_200": {
                "displayName": "getJobExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/batch/jobs/id"
                  },
                  "environment": "https://api.hume.ai",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "user_id": "string",
                      "job_id": "string",
                      "request": {
                        "models": {
                          "face": {
                            "fps_pred": 3,
                            "prob_threshold": 0.99,
                            "identify_faces": false,
                            "min_face_size": 60,
                            "facs": null,
                            "descriptions": null,
                            "save_faces": false
                          },
                          "burst": null,
                          "prosody": {
                            "granularity": "word",
                            "identify_speakers": false,
                            "window": {
                              "length": 4,
                              "step": 1
                            }
                          },
                          "language": {
                            "granularity": "word",
                            "identify_speakers": false,
                            "sentiment": null,
                            "toxicity": null
                          },
                          "ner": {
                            "identify_speakers": false
                          },
                          "facemesh": null
                        },
                        "transcription": {
                          "language": "zh"
                        },
                        "urls": [
                          "string"
                        ],
                        "callback_url": "string",
                        "notify": false,
                        "files": [
                          {
                            "filename": "string",
                            "content_type": "string",
                            "md5sum": "string"
                          }
                        ]
                      },
                      "state": {
                        "status": "QUEUED",
                        "created_timestamp_ms": 1
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Job_Request",
                      "typeId": "Job_Request",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "getJobPredictionsGetJobExample": {
                          "user_id": "string",
                          "job_id": "string",
                          "request": {
                            "models": {
                              "face": {
                                "fps_pred": 3,
                                "prob_threshold": 0.99,
                                "identify_faces": false,
                                "min_face_size": 60,
                                "facs": null,
                                "descriptions": null,
                                "save_faces": false
                              },
                              "burst": null,
                              "prosody": {
                                "granularity": "word",
                                "identify_speakers": false,
                                "window": {
                                  "length": 4,
                                  "step": 1
                                }
                              },
                              "language": {
                                "granularity": "word",
                                "identify_speakers": false,
                                "sentiment": null,
                                "toxicity": null
                              },
                              "ner": {
                                "identify_speakers": false
                              },
                              "facemesh": null
                            },
                            "transcription": {
                              "language": "zh"
                            },
                            "urls": [
                              "string"
                            ],
                            "callback_url": "string",
                            "notify": false,
                            "files": [
                              {
                                "filename": "string",
                                "content_type": "string",
                                "md5sum": "string"
                              }
                            ]
                          },
                          "state": {
                            "status": "QUEUED",
                            "created_timestamp_ms": 1
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "webhookGroups": {},
  "subpackages": {
    "subpackage_getJobPredictions": {
      "name": "getJobPredictions",
      "fernFilepath": {
        "allParts": [
          "getJobPredictions"
        ],
        "packagePath": [],
        "file": "getJobPredictions"
      },
      "service": "service_getJobPredictions",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_chat": {
      "name": "chat",
      "fernFilepath": {
        "allParts": [
          "chat"
        ],
        "packagePath": [],
        "file": "chat"
      },
      "types": [],
      "errors": [],
      "subpackages": [],
      "websocket": "channel_chat",
      "hasEndpointsInTree": false
    }
  },
  "websocketChannels": {
    "channel_chat": {
      "name": "chat",
      "baseUrl": "prod",
      "path": {
        "head": "/chat",
        "parts": []
      },
      "auth": false,
      "headers": [],
      "queryParameters": [
        {
          "name": {
            "name": "config_id",
            "wireValue": "config_id"
          },
          "docs": "The unique identifier for an EVI configuration.\n\nInclude this ID in your connection request to equip EVI with the Prompt, Language Model, Voice, and Tools associated with the specified configuration. If omitted, EVI will apply [default configuration settings](/docs/empathic-voice-interface-evi/configuration#default-configuration).\n\nFor help obtaining this ID, see our [Configuration Guide](/docs/empathic-voice-interface-evi/configuration).",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "config_id_example": "config_id"
            }
          }
        },
        {
          "name": {
            "name": "config_version",
            "wireValue": "config_version"
          },
          "docs": "The version number of the EVI configuration specified by the `config_id`.\n\nConfigs, as well as Prompts and Tools, are versioned. This versioning system supports iterative development, allowing you to progressively refine configurations and revert to previous versions if needed.\n\nInclude this parameter to apply a specific version of an EVI configuration. If omitted, the latest version will be applied.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "config_version_example": 1
            }
          }
        },
        {
          "name": {
            "name": "resumed_chat_group_id",
            "wireValue": "resumed_chat_group_id"
          },
          "docs": "The unique identifier for a Chat Group. Use this field to preserve context from a previous Chat session.\n\nA Chat represents a single session from opening to closing a WebSocket connection. In contrast, a Chat Group is a series of resumed Chats that collectively represent a single conversation spanning multiple sessions. Each Chat includes a Chat Group ID, which is used to preserve the context of previous Chat sessions when starting a new one.\n\nIncluding the Chat Group ID in the `resumed_chat_group_id` query parameter is useful for seamlessly resuming a Chat after unexpected network disconnections and for picking up conversations exactly where you left off at a later time. This ensures preserved context across multiple sessions.\n\nThere are three ways to obtain the Chat Group ID:\n\n- [Chat Metadata](/reference/empathic-voice-interface-evi/chat/chat#receive.Chat%20Metadata.type): Upon establishing a WebSocket connection with EVI, the user receives a Chat Metadata message. This message contains a `chat_group_id`, which can be used to resume conversations within this chat group in future sessions.\n\n- [List Chats endpoint](/reference/empathic-voice-interface-evi/chats/list-chats): Use the GET `/v0/evi/chats` endpoint to obtain the Chat Group ID of individual Chat sessions. This endpoint lists all available Chat sessions and their associated Chat Group ID.\n\n- [List Chat Groups endpoint](/reference/empathic-voice-interface-evi/chat-groups/list-chat-groups): Use the GET `/v0/evi/chat_groups` endpoint to obtain the Chat Group IDs of all Chat Groups associated with an API key. This endpoint returns a list of all available chat groups.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "resumed_chat_group_id_example": "resumed_chat_group_id"
            }
          }
        },
        {
          "name": {
            "name": "verbose_transcription",
            "wireValue": "verbose_transcription"
          },
          "docs": "A flag to enable verbose transcription. Set this query parameter to `\"true\"` to have unfinalized user transcripts be sent to the client as interim `UserMessage` messages.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "BOOLEAN",
                  "v2": {
                    "default": false,
                    "type": "boolean"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "verbose_transcription_example": false
            }
          }
        },
        {
          "name": {
            "name": "access_token",
            "wireValue": "access_token"
          },
          "docs": "Access token used for authenticating the client. If not provided, an `api_key` must be provided to authenticate.\n\nThe access token is generated using both an API key and a Secret key, which provides an additional layer of security compared to using just an API key.\n\nFor more details, refer to the [Authentication Strategies Guide](/docs/introduction/api-key#authentication-strategies).",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "access_token_example": ""
            }
          }
        }
      ],
      "pathParameters": [],
      "messages": [
        {
          "type": "subscribe",
          "displayName": "subscribe",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChatSubscribe",
              "typeId": "ChatSubscribe",
              "inline": false,
              "type": "named"
            },
            "type": "reference"
          }
        },
        {
          "type": "publish",
          "displayName": "publish",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ChatPublish",
              "typeId": "ChatPublish",
              "inline": false,
              "type": "named"
            },
            "type": "reference"
          }
        }
      ],
      "docs": "Chat with Empathic Voice Interface (EVI)",
      "examples": [
        {
          "pathParameters": [],
          "headers": [],
          "queryParameters": [],
          "messages": [
            {
              "type": "publish",
              "body": {
                "jsonExample": {
                  "type": "audio_input",
                  "data": "data"
                },
                "shape": {
                  "shape": {
                    "index": 0,
                    "singleUnionType": {
                      "jsonExample": {
                        "type": "audio_input",
                        "data": "data"
                      },
                      "shape": {
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": {
                                  "originalName": "type",
                                  "camelCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  }
                                },
                                "wireValue": "type"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AudioInput",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AudioInput"
                              },
                              "value": {
                                "jsonExample": "audio_input",
                                "shape": {
                                  "container": {
                                    "literal": {
                                      "string": {
                                        "original": "audio_input"
                                      },
                                      "type": "string"
                                    },
                                    "type": "literal"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "custom_session_id",
                                "wireValue": "custom_session_id"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AudioInput",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AudioInput"
                              },
                              "value": {
                                "shape": {
                                  "container": {
                                    "valueType": {
                                      "container": {
                                        "nullable": {
                                          "primitive": {
                                            "v1": "STRING",
                                            "v2": {
                                              "validation": {},
                                              "type": "string"
                                            }
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "nullable"
                                      },
                                      "type": "container"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "data",
                                "wireValue": "data"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AudioInput",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AudioInput"
                              },
                              "value": {
                                "jsonExample": "data",
                                "shape": {
                                  "primitive": {
                                    "string": {
                                      "original": "data"
                                    },
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "AudioInput",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "AudioInput"
                        },
                        "type": "named"
                      }
                    },
                    "type": "undiscriminatedUnion"
                  },
                  "typeName": {
                    "typeId": "ChatPublish",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "ChatPublish"
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            },
            {
              "type": "subscribe",
              "body": {
                "jsonExample": {
                  "type": "assistant_end"
                },
                "shape": {
                  "shape": {
                    "index": 0,
                    "singleUnionType": {
                      "jsonExample": {
                        "type": "assistant_end"
                      },
                      "shape": {
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": {
                                  "originalName": "type",
                                  "camelCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  }
                                },
                                "wireValue": "type"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AssistantEnd",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AssistantEnd"
                              },
                              "value": {
                                "jsonExample": "assistant_end",
                                "shape": {
                                  "container": {
                                    "literal": {
                                      "string": {
                                        "original": "assistant_end"
                                      },
                                      "type": "string"
                                    },
                                    "type": "literal"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": "custom_session_id",
                                "wireValue": "custom_session_id"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AssistantEnd",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AssistantEnd"
                              },
                              "value": {
                                "shape": {
                                  "container": {
                                    "valueType": {
                                      "container": {
                                        "nullable": {
                                          "primitive": {
                                            "v1": "STRING",
                                            "v2": {
                                              "validation": {},
                                              "type": "string"
                                            }
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "nullable"
                                      },
                                      "type": "container"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "AssistantEnd",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "AssistantEnd"
                        },
                        "type": "named"
                      }
                    },
                    "type": "undiscriminatedUnion"
                  },
                  "typeName": {
                    "typeId": "ChatSubscribe",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "ChatSubscribe"
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            }
          ],
          "url": "/chat"
        }
      ],
      "v2Examples": {
        "autogeneratedExamples": {},
        "userSpecifiedExamples": {}
      }
    }
  },
  "rootPackage": {
    "service": "service_",
    "types": [
      "BaseRequest",
      "Bcp47Tag",
      "BoundingBox",
      "BurstPrediction",
      "Completed",
      "DescriptionsScore",
      "Direction",
      "EmotionScore",
      "Empty",
      "Error",
      "Face",
      "FacePrediction",
      "FacemeshPrediction",
      "FacsScore",
      "Failed",
      "File",
      "Granularity",
      "GroupedPredictions_BurstPrediction",
      "GroupedPredictions_FacePrediction",
      "GroupedPredictions_FacemeshPrediction",
      "GroupedPredictions_LanguagePrediction",
      "GroupedPredictions_NerPrediction",
      "GroupedPredictions_ProsodyPrediction",
      "InProgress",
      "Job_Request",
      "JobId",
      "Language",
      "LanguagePrediction",
      "Models",
      "ModelsPredictions",
      "Ner",
      "NerPrediction",
      "Null",
      "PositionInterval",
      "Prediction",
      "Predictions_optional_Null_BurstPrediction",
      "Predictions_optional_Null_FacePrediction",
      "Predictions_optional_Null_FacemeshPrediction",
      "Predictions_optional_TranscriptionMetadata_LanguagePrediction",
      "Predictions_optional_TranscriptionMetadata_NerPrediction",
      "Predictions_optional_TranscriptionMetadata_ProsodyPrediction",
      "Prosody",
      "ProsodyPrediction",
      "Queued",
      "Request",
      "Results",
      "SentimentScore",
      "SortBy",
      "Source",
      "SourceResult",
      "Source_File",
      "Source_Url",
      "State",
      "State_Completed",
      "State_Failed",
      "State_InProgress",
      "State_Queued",
      "Status",
      "TimeInterval",
      "ToxicityScore",
      "Transcription",
      "TranscriptionMetadata",
      "Url",
      "When",
      "Window",
      "AudioInput",
      "SessionSettings",
      "UserInput",
      "AssistantInput",
      "ToolResponseMessage",
      "ToolErrorMessage",
      "PauseAssistantMessage",
      "ResumeAssistantMessage",
      "AssistantEnd",
      "AssistantMessage",
      "AudioOutput",
      "ChatMetadata",
      "Error",
      "UserInterruption",
      "UserMessage",
      "ToolCallMessage",
      "AssistantInput",
      "AudioConfiguration",
      "AudioInput",
      "BuiltInTool",
      "BuiltinToolConfig",
      "Context",
      "ContextType",
      "Encoding",
      "ErrorLevel",
      "PauseAssistantMessage",
      "ResumeAssistantMessage",
      "SessionSettings",
      "Tool",
      "ToolErrorMessage",
      "ToolResponseMessage",
      "ToolType",
      "UserInput",
      "AssistantEnd",
      "AssistantMessage",
      "AudioOutput",
      "ChatMessage",
      "ChatMetadata",
      "EmotionScores",
      "Error",
      "Inference",
      "MillisecondInterval",
      "ProsodyInference",
      "Role",
      "ToolCallMessage",
      "UserInterruption",
      "UserMessage"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_getJobPredictions",
      "subpackage_chat"
    ],
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "hasEndpointsInTree": false
  },
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "audiences": []
}