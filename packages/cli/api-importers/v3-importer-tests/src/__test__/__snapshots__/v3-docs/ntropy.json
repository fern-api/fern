{
  "auth": {
    "requirement": "ALL",
    "schemes": [
      {
        "key": "header",
        "name": {
          "name": "apiKey",
          "wireValue": "X-Api-Key"
        },
        "valueType": {
          "container": {
            "optional": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "type": "header"
      }
    ]
  },
  "selfHosted": false,
  "types": {
    "Account": {
      "name": {
        "typeId": "Account",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Account"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "number",
                "camelCase": {
                  "unsafeName": "number",
                  "safeName": "number_"
                },
                "snakeCase": {
                  "unsafeName": "number",
                  "safeName": "number_"
                }
              },
              "wireValue": "number"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "opening_balance",
              "wireValue": "opening_balance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountOpeningBalance_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "closing_balance",
              "wireValue": "closing_balance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountClosingBalance_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "iso_currency_code",
              "wireValue": "iso_currency_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountIsoCurrencyCode_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Account_example_autogenerated": {}
        }
      }
    },
    "AccountHolder": {
      "name": {
        "typeId": "AccountHolder",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountHolder"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AccountType",
                  "typeId": "AccountType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountHolderName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "address",
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Address",
                  "typeId": "Address",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccountHolder_example_autogenerated": {}
        }
      }
    },
    "AccountHolderCreate": {
      "name": {
        "typeId": "AccountHolderCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountHolderCreate"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique ID of the account holder of the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountHolderCreateId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AccountHolderType",
              "typeId": "AccountHolderType",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of the account holder. ",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the account holder",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountHolderCreateName_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccountHolderCreate_example_autogenerated": {
            "id": "string",
            "type": "consumer"
          }
        }
      }
    },
    "AccountHolderExternal": {
      "name": {
        "typeId": "AccountHolderExternal",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountHolderExternal"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique ID of the account holder of the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountHolderExternalId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AccountHolderType",
              "typeId": "AccountHolderType",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of the account holder. ",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the account holder",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountHolderExternalName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The timestamp of when the account holder was created.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountHolderExternalCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "AccountHolderExternal_example_0": {
            "id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
            "type": "consumer",
            "name": "John Doe",
            "created_at": "2024-03-30T00:00:00"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "AccountHolderType": {
      "name": {
        "typeId": "AccountHolderType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountHolderType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "consumer",
              "wireValue": "consumer"
            }
          },
          {
            "name": {
              "name": "business",
              "wireValue": "business"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccountHolderType_example_autogenerated": "consumer"
        }
      }
    },
    "AccountType": {
      "name": {
        "typeId": "AccountType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "consumer",
              "wireValue": "consumer"
            }
          },
          {
            "name": {
              "name": "business",
              "wireValue": "business"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccountType_example_autogenerated": "consumer"
        }
      }
    },
    "AccountingCategory": {
      "name": {
        "typeId": "AccountingCategory",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountingCategory"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "operational expenses",
              "wireValue": "operational expenses"
            }
          },
          {
            "name": {
              "name": "cost of goods sold",
              "wireValue": "cost of goods sold"
            }
          },
          {
            "name": {
              "name": "revenue",
              "wireValue": "revenue"
            }
          },
          {
            "name": {
              "name": "financing",
              "wireValue": "financing"
            }
          },
          {
            "name": {
              "name": "taxes",
              "wireValue": "taxes"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccountingCategory_example_autogenerated": "operational expenses"
        }
      }
    },
    "ActionModel": {
      "name": {
        "typeId": "ActionModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ActionModel"
      },
      "shape": {
        "aliasOf": {
          "type": "unknown"
        },
        "resolvedType": {
          "type": "unknown"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ActionModel_example_autogenerated": {
            "if": {}
          }
        }
      }
    },
    "Address": {
      "name": {
        "typeId": "Address",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Address"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "street",
              "wireValue": "street"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AddressStreet_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "postcode",
              "wireValue": "postcode"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AddressPostcode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "city",
              "wireValue": "city"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AddressCity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "state",
              "wireValue": "state"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AddressState_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "country",
              "wireValue": "country"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AddressCountry_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Address_example_autogenerated": {}
        }
      }
    },
    "AsyncEnrichmentInput": {
      "name": {
        "typeId": "AsyncEnrichmentInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AsyncEnrichmentInput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "transactions",
              "wireValue": "transactions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TransactionInput",
                  "typeId": "TransactionInput",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AsyncEnrichmentInputTransactions_example_autogenerated": [
                  {
                    "id": "string",
                    "description": "string",
                    "date": "2023-01-15",
                    "amount": 1.1,
                    "entry_type": "incoming",
                    "currency": "EUR",
                    "account_holder_id": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AsyncEnrichmentInput_example_autogenerated": {
            "transactions": [
              {
                "id": "string",
                "description": "string",
                "date": "2023-01-15",
                "amount": 1.1,
                "entry_type": "incoming",
                "currency": "EUR",
                "account_holder_id": "string"
              }
            ]
          }
        }
      }
    },
    "BankStatement": {
      "name": {
        "typeId": "BankStatement",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankStatement"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique identifier for the bank statement job.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the bank statement file, if available.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "BankStatementStatus",
              "typeId": "BankStatementStatus",
              "inline": false,
              "type": "named"
            },
            "docs": "The current status of the document.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The date and time when the job was created.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "file",
                "pascalCase": {
                  "unsafeName": "File",
                  "safeName": "File_"
                }
              },
              "wireValue": "file"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "BankStatementFile",
              "typeId": "BankStatementFile",
              "inline": false,
              "type": "named"
            },
            "docs": "Information about the bank statement file being processed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BankStatementError",
                  "typeId": "BankStatementError",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Represents a bank statement with details about the file and its status.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "BankStatement_example_0": {
            "id": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
            "name": "2014-01-01_2014-02-01_statement.pdf",
            "status": "processing",
            "created_at": "2024-01-01T00:00:00",
            "file": {
              "no_pages": 1,
              "size": 4096
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "BankStatementAccount": {
      "name": {
        "typeId": "BankStatementAccount",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankStatementAccount"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "number",
                "camelCase": {
                  "unsafeName": "number",
                  "safeName": "number_"
                },
                "snakeCase": {
                  "unsafeName": "number",
                  "safeName": "number_"
                }
              },
              "wireValue": "number"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The account number, if available.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementAccountNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "opening_balance",
              "wireValue": "opening_balance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The opening balance of the account for the statement period.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementAccountOpeningBalance_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "closing_balance",
              "wireValue": "closing_balance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The closing balance of the account for the statement period.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementAccountClosingBalance_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "start_date",
              "wireValue": "start_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The start date of the statement period.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementAccountStartDate_example_autogenerated": "2023-01-15"
              }
            }
          },
          {
            "name": {
              "name": "end_date",
              "wireValue": "end_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The end date of the statement period.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementAccountEndDate_example_autogenerated": "2023-01-15"
              }
            }
          },
          {
            "name": {
              "name": "is_balance_reconciled",
              "wireValue": "is_balance_reconciled"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether the balance has been reconciled.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementAccountIsBalanceReconciled_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "total_incoming",
              "wireValue": "total_incoming"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The sum of amounts of all incoming transactions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementAccountTotalIncoming_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "total_outgoing",
              "wireValue": "total_outgoing"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The sum of amounts of all outgoing transactions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementAccountTotalOutgoing_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "transactions",
              "wireValue": "transactions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BankStatementTransaction",
                  "typeId": "BankStatementTransaction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of transactions for this account.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementAccountTransactions_example_autogenerated": [
                  {
                    "id": "string",
                    "description": "string",
                    "date": "2023-01-15",
                    "amount": 1.1,
                    "entry_type": "incoming",
                    "currency": "EUR"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "BankStatementAccount_example_0": {
            "number": "972913289",
            "opening_balance": 400,
            "closing_balance": 200,
            "start_date": "2024-01-01",
            "end_date": "2024-02-01",
            "is_balance_reconciled": true,
            "total_incoming": 0,
            "total_outgoing": 200,
            "transactions": [
              {
                "id": "xbx8YP14g565Xk",
                "description": "SQ* STARBUCKS NW 43RD",
                "date": "2024-03-30",
                "amount": 200,
                "entry_type": "outgoing",
                "currency": "USD",
                "running_balance": 400
              }
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "BankStatementError": {
      "name": {
        "typeId": "BankStatementError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankStatementError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "code",
              "wireValue": "code"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "BankStatementErrorCode",
              "typeId": "BankStatementErrorCode",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementErrorMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankStatementError_example_autogenerated": {
            "code": "invalid_bank_statement",
            "message": "string"
          }
        }
      }
    },
    "BankStatementErrorCode": {
      "name": {
        "typeId": "BankStatementErrorCode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankStatementErrorCode"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "invalid_bank_statement",
              "wireValue": "invalid_bank_statement"
            }
          },
          {
            "name": {
              "name": "internal_error",
              "wireValue": "internal_error"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankStatementErrorCode_example_autogenerated": "invalid_bank_statement"
        }
      }
    },
    "BankStatementFile": {
      "name": {
        "typeId": "BankStatementFile",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankStatementFile"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "no_pages",
              "wireValue": "no_pages"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The number of pages in the bank statement file.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementFileNoPages_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "size",
              "wireValue": "size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the bank statement file in bytes, if available.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementFileSize_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "BankStatementFile_example_0": {
            "no_pages": 1,
            "size": 4096
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "BankStatementResults": {
      "name": {
        "typeId": "BankStatementResults",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankStatementResults"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "accounts",
              "wireValue": "accounts"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BankStatementAccount",
                  "typeId": "BankStatementAccount",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of accounts in the bank statement.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementResultsAccounts_example_autogenerated": [
                  {
                    "transactions": [
                      {
                        "id": "string",
                        "description": "string",
                        "date": "2023-01-15",
                        "amount": 1.1,
                        "entry_type": "incoming",
                        "currency": "EUR"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankStatementResults_example_autogenerated": {
            "accounts": [
              {
                "transactions": [
                  {
                    "id": "string",
                    "description": "string",
                    "date": "2023-01-15",
                    "amount": 1.1,
                    "entry_type": "incoming",
                    "currency": "EUR"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "BankStatementStatus": {
      "name": {
        "typeId": "BankStatementStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankStatementStatus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "processing",
              "wireValue": "processing"
            }
          },
          {
            "name": {
              "name": "completed",
              "wireValue": "completed"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankStatementStatus_example_autogenerated": "processing"
        }
      }
    },
    "BankStatementTransaction": {
      "name": {
        "typeId": "BankStatementTransaction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankStatementTransaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique identifier of the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementTransactionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 0,
                    "maxLength": 1024
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The description string of the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementTransactionDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "date",
                "pascalCase": {
                  "unsafeName": "Date",
                  "safeName": "Date_"
                }
              },
              "wireValue": "date"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The date that the transaction was posted. Uses ISO 8601 format (YYYY-MM-DD)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementTransactionDate_example_autogenerated": "2023-01-15"
              }
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "The amount of the transaction in the `currency`. Must be a positive value. For example, if the `currency` is USD, then it's the amount in dollars.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementTransactionAmount_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "entry_type",
              "wireValue": "entry_type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EntryType",
              "typeId": "EntryType",
              "inline": false,
              "type": "named"
            },
            "docs": "The direction of the flow of the money from the perspective of the account holder. `outgoing` to represent money leaving the account, such as purchases or fees, while `incoming` represents money entering the account, such as income or refunds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "currency",
              "wireValue": "currency"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Currency",
              "typeId": "Currency",
              "inline": false,
              "type": "named"
            },
            "docs": "The currency of the transaction in ISO 4217 format",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "running_balance",
              "wireValue": "running_balance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The account's balance when this transaction was performed",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankStatementTransactionRunningBalance_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "BankStatementTransaction_example_0": {
            "id": "xbx8YP14g565Xk",
            "description": "SQ* STARBUCKS NW 43RD",
            "date": "2024-03-30",
            "amount": 10,
            "entry_type": "outgoing",
            "currency": "USD",
            "running_balance": 400
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "Batch": {
      "name": {
        "typeId": "Batch",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Batch"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique identifier for the batch.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BatchId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "BatchStatus",
              "typeId": "BatchStatus",
              "inline": false,
              "type": "named"
            },
            "docs": "The current status of the batch. A batch will error if at least one of the transactions contains an error.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The timestamp of when the batch was created.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BatchCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The timestamp of when the batch was last updated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BatchUpdatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "progress",
              "wireValue": "progress"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The number of transactions processed so far.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BatchProgress_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "total",
              "wireValue": "total"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The total number of transactions in the batch.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BatchTotal_example_autogenerated": 1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The `Batch` object represents the status and progress of an asynchronous batch enrichment job.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Batch_example_0": {
            "id": "203613d2-83c8-4130-8809-d14206eeec20",
            "status": "processing",
            "created_at": "2024-01-01T00:00:00",
            "updated_at": "2024-01-01T00:00:30",
            "progress": 0,
            "total": 4000
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "BatchResult": {
      "name": {
        "typeId": "BatchResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BatchResult"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique identifier for the batch.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BatchResultId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "total",
              "wireValue": "total"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The total number of transactions in the batch result.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BatchResultTotal_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "BatchStatus",
              "typeId": "BatchStatus",
              "inline": false,
              "type": "named"
            },
            "docs": "The current status of the batch job.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EnrichmentResult",
              "typeId": "EnrichmentResult",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The `BatchResult` object represents the result of a batch enrichment job, including its status and\nenriched transactions.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BatchResult_example_autogenerated": {
            "id": "string",
            "total": 1,
            "status": "processing",
            "results": {
              "transactions": [
                {
                  "created_at": "2024-01-15T09:30:00Z",
                  "id": "string"
                }
              ]
            }
          }
        }
      }
    },
    "BatchStatus": {
      "name": {
        "typeId": "BatchStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BatchStatus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "processing",
              "wireValue": "processing"
            }
          },
          {
            "name": {
              "name": "completed",
              "wireValue": "completed"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BatchStatus_example_autogenerated": "processing"
        }
      }
    },
    "Body_post_bank_statement_v3_bank_statements_post": {
      "name": {
        "typeId": "Body_post_bank_statement_v3_bank_statements_post",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Body_post_bank_statement_v3_bank_statements_post"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "file",
                "pascalCase": {
                  "unsafeName": "File",
                  "safeName": "File_"
                }
              },
              "wireValue": "file"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "binary"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BodyPostBankStatementV3BankStatementsPostFile_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Body_post_bank_statement_v3_bank_statements_post_example_autogenerated": {
            "file": "string"
          }
        }
      }
    },
    "Body_set_transaction_ah_v3_transactions__id__assign_post": {
      "name": {
        "typeId": "Body_set_transaction_ah_v3_transactions__id__assign_post",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Body_set_transaction_ah_v3_transactions__id__assign_post"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "account_holder_id",
              "wireValue": "account_holder_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BodySetTransactionAhV3TransactionsIdAssignPostAccountHolderId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Body_set_transaction_ah_v3_transactions__id__assign_post_example_autogenerated": {
            "account_holder_id": "string"
          }
        }
      }
    },
    "Categories": {
      "name": {
        "typeId": "Categories",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Categories"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "general",
              "wireValue": "general"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The category of the transaction. View the valid set of categories for your key [here](./docs/v3/enrichment/entities).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CategoriesGeneral_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "accounting",
              "wireValue": "accounting"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AccountingCategory",
                  "typeId": "AccountingCategory",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The corresponding accounting category. Only available for `business` transactions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Categories_example_autogenerated": {}
        }
      }
    },
    "CategoryConfidence": {
      "name": {
        "typeId": "CategoryConfidence",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CategoryConfidence"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "high",
              "wireValue": "high"
            }
          },
          {
            "name": {
              "name": "medium",
              "wireValue": "medium"
            }
          },
          {
            "name": {
              "name": "low",
              "wireValue": "low"
            }
          },
          {
            "name": {
              "name": "unknown",
              "wireValue": "unknown"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CategoryConfidence_example_autogenerated": "high"
        }
      }
    },
    "CategorySet": {
      "name": {
        "typeId": "CategorySet",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CategorySet"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "incoming",
              "wireValue": "incoming"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CategorySetIncoming_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "outgoing",
              "wireValue": "outgoing"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CategorySetOutgoing_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "CategorySet_example_0": {
            "incoming": [
              "transfer from investment app",
              "transfer from stock broker",
              "transfer from crypto broker",
              "chargeback",
              "freelance income",
              "rideshare or delivery income",
              "paycheck",
              "benefits",
              "interest earned",
              "stock dividend"
            ],
            "outgoing": [
              "digital content and streaming",
              "vending machine",
              "reversal",
              "transfer to investment app",
              "transfer to stock broker",
              "transfer to crypto broker",
              "adjustment",
              "intra account transfer",
              "inter account transfer",
              "peer to peer transfer",
              "funeral service",
              "ATM withdrawal",
              "teller withdrawal"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "Counterparty": {
      "name": {
        "typeId": "Counterparty",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Counterparty"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique UUID identifier of the entity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CounterpartyId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the entity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CounterpartyName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "website",
              "wireValue": "website"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The website URL of the entity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CounterpartyWebsite_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "logo",
              "wireValue": "logo"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Logo's URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CounterpartyLogo_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "mccs",
              "wireValue": "mccs"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A list of [Merchant Category Codes](https://en.wikipedia.org/wiki/Merchant_category_code)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CounterpartyMccs_example_autogenerated": [
                  1
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "CounterpartyType",
              "typeId": "CounterpartyType",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Counterparty_example_0": {
            "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
            "name": "Starbucks",
            "website": "starbucks.com",
            "logo": "https://logos.ntropy.com/starbucks.com",
            "mccs": [
              5814
            ],
            "type": "organization"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "CounterpartyType": {
      "name": {
        "typeId": "CounterpartyType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CounterpartyType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "person",
              "wireValue": "person"
            }
          },
          {
            "name": {
              "name": "organization",
              "wireValue": "organization"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CounterpartyType_example_autogenerated": "person"
        }
      }
    },
    "Country": {
      "name": {
        "typeId": "Country",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Country"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "AD",
              "wireValue": "AD"
            }
          },
          {
            "name": {
              "name": "AE",
              "wireValue": "AE"
            }
          },
          {
            "name": {
              "name": "AF",
              "wireValue": "AF"
            }
          },
          {
            "name": {
              "name": "AG",
              "wireValue": "AG"
            }
          },
          {
            "name": {
              "name": "AI",
              "wireValue": "AI"
            }
          },
          {
            "name": {
              "name": "AL",
              "wireValue": "AL"
            }
          },
          {
            "name": {
              "name": "AM",
              "wireValue": "AM"
            }
          },
          {
            "name": {
              "name": "AO",
              "wireValue": "AO"
            }
          },
          {
            "name": {
              "name": "AR",
              "wireValue": "AR"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "AS",
                "camelCase": {
                  "unsafeName": "as",
                  "safeName": "as_"
                },
                "snakeCase": {
                  "unsafeName": "as",
                  "safeName": "as_"
                }
              },
              "wireValue": "AS"
            }
          },
          {
            "name": {
              "name": "AT",
              "wireValue": "AT"
            }
          },
          {
            "name": {
              "name": "AU",
              "wireValue": "AU"
            }
          },
          {
            "name": {
              "name": "AW",
              "wireValue": "AW"
            }
          },
          {
            "name": {
              "name": "AZ",
              "wireValue": "AZ"
            }
          },
          {
            "name": {
              "name": "BA",
              "wireValue": "BA"
            }
          },
          {
            "name": {
              "name": "BB",
              "wireValue": "BB"
            }
          },
          {
            "name": {
              "name": "BD",
              "wireValue": "BD"
            }
          },
          {
            "name": {
              "name": "BE",
              "wireValue": "BE"
            }
          },
          {
            "name": {
              "name": "BF",
              "wireValue": "BF"
            }
          },
          {
            "name": {
              "name": "BG",
              "wireValue": "BG"
            }
          },
          {
            "name": {
              "name": "BH",
              "wireValue": "BH"
            }
          },
          {
            "name": {
              "name": "BI",
              "wireValue": "BI"
            }
          },
          {
            "name": {
              "name": "BJ",
              "wireValue": "BJ"
            }
          },
          {
            "name": {
              "name": "BL",
              "wireValue": "BL"
            }
          },
          {
            "name": {
              "name": "BM",
              "wireValue": "BM"
            }
          },
          {
            "name": {
              "name": "BN",
              "wireValue": "BN"
            }
          },
          {
            "name": {
              "name": "BO",
              "wireValue": "BO"
            }
          },
          {
            "name": {
              "name": "BQ",
              "wireValue": "BQ"
            }
          },
          {
            "name": {
              "name": "BR",
              "wireValue": "BR"
            }
          },
          {
            "name": {
              "name": "BS",
              "wireValue": "BS"
            }
          },
          {
            "name": {
              "name": "BT",
              "wireValue": "BT"
            }
          },
          {
            "name": {
              "name": "BV",
              "wireValue": "BV"
            }
          },
          {
            "name": {
              "name": "BW",
              "wireValue": "BW"
            }
          },
          {
            "name": {
              "name": "BY",
              "wireValue": "BY"
            }
          },
          {
            "name": {
              "name": "BZ",
              "wireValue": "BZ"
            }
          },
          {
            "name": {
              "name": "CA",
              "wireValue": "CA"
            }
          },
          {
            "name": {
              "name": "CC",
              "wireValue": "CC"
            }
          },
          {
            "name": {
              "name": "CD",
              "wireValue": "CD"
            }
          },
          {
            "name": {
              "name": "CF",
              "wireValue": "CF"
            }
          },
          {
            "name": {
              "name": "CG",
              "wireValue": "CG"
            }
          },
          {
            "name": {
              "name": "CH",
              "wireValue": "CH"
            }
          },
          {
            "name": {
              "name": "CI",
              "wireValue": "CI"
            }
          },
          {
            "name": {
              "name": "CK",
              "wireValue": "CK"
            }
          },
          {
            "name": {
              "name": "CL",
              "wireValue": "CL"
            }
          },
          {
            "name": {
              "name": "CM",
              "wireValue": "CM"
            }
          },
          {
            "name": {
              "name": "CN",
              "wireValue": "CN"
            }
          },
          {
            "name": {
              "name": "CO",
              "wireValue": "CO"
            }
          },
          {
            "name": {
              "name": "CR",
              "wireValue": "CR"
            }
          },
          {
            "name": {
              "name": "CU",
              "wireValue": "CU"
            }
          },
          {
            "name": {
              "name": "CV",
              "wireValue": "CV"
            }
          },
          {
            "name": {
              "name": "CW",
              "wireValue": "CW"
            }
          },
          {
            "name": {
              "name": "CX",
              "wireValue": "CX"
            }
          },
          {
            "name": {
              "name": "CY",
              "wireValue": "CY"
            }
          },
          {
            "name": {
              "name": "CZ",
              "wireValue": "CZ"
            }
          },
          {
            "name": {
              "name": "DE",
              "wireValue": "DE"
            }
          },
          {
            "name": {
              "name": "DJ",
              "wireValue": "DJ"
            }
          },
          {
            "name": {
              "name": "DK",
              "wireValue": "DK"
            }
          },
          {
            "name": {
              "name": "DM",
              "wireValue": "DM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "DO",
                "camelCase": {
                  "unsafeName": "do",
                  "safeName": "do_"
                },
                "snakeCase": {
                  "unsafeName": "do",
                  "safeName": "do_"
                }
              },
              "wireValue": "DO"
            }
          },
          {
            "name": {
              "name": "DZ",
              "wireValue": "DZ"
            }
          },
          {
            "name": {
              "name": "EC",
              "wireValue": "EC"
            }
          },
          {
            "name": {
              "name": "EE",
              "wireValue": "EE"
            }
          },
          {
            "name": {
              "name": "EG",
              "wireValue": "EG"
            }
          },
          {
            "name": {
              "name": "EH",
              "wireValue": "EH"
            }
          },
          {
            "name": {
              "name": "ER",
              "wireValue": "ER"
            }
          },
          {
            "name": {
              "name": "ES",
              "wireValue": "ES"
            }
          },
          {
            "name": {
              "name": "ET",
              "wireValue": "ET"
            }
          },
          {
            "name": {
              "name": "FI",
              "wireValue": "FI"
            }
          },
          {
            "name": {
              "name": "FJ",
              "wireValue": "FJ"
            }
          },
          {
            "name": {
              "name": "FK",
              "wireValue": "FK"
            }
          },
          {
            "name": {
              "name": "FM",
              "wireValue": "FM"
            }
          },
          {
            "name": {
              "name": "FR",
              "wireValue": "FR"
            }
          },
          {
            "name": {
              "name": "GA",
              "wireValue": "GA"
            }
          },
          {
            "name": {
              "name": "GB",
              "wireValue": "GB"
            }
          },
          {
            "name": {
              "name": "GD",
              "wireValue": "GD"
            }
          },
          {
            "name": {
              "name": "GE",
              "wireValue": "GE"
            }
          },
          {
            "name": {
              "name": "GF",
              "wireValue": "GF"
            }
          },
          {
            "name": {
              "name": "GG",
              "wireValue": "GG"
            }
          },
          {
            "name": {
              "name": "GH",
              "wireValue": "GH"
            }
          },
          {
            "name": {
              "name": "GI",
              "wireValue": "GI"
            }
          },
          {
            "name": {
              "name": "GL",
              "wireValue": "GL"
            }
          },
          {
            "name": {
              "name": "GM",
              "wireValue": "GM"
            }
          },
          {
            "name": {
              "name": "GN",
              "wireValue": "GN"
            }
          },
          {
            "name": {
              "name": "GP",
              "wireValue": "GP"
            }
          },
          {
            "name": {
              "name": "GQ",
              "wireValue": "GQ"
            }
          },
          {
            "name": {
              "name": "GR",
              "wireValue": "GR"
            }
          },
          {
            "name": {
              "name": "GS",
              "wireValue": "GS"
            }
          },
          {
            "name": {
              "name": "GT",
              "wireValue": "GT"
            }
          },
          {
            "name": {
              "name": "GU",
              "wireValue": "GU"
            }
          },
          {
            "name": {
              "name": "GW",
              "wireValue": "GW"
            }
          },
          {
            "name": {
              "name": "GY",
              "wireValue": "GY"
            }
          },
          {
            "name": {
              "name": "HK",
              "wireValue": "HK"
            }
          },
          {
            "name": {
              "name": "HM",
              "wireValue": "HM"
            }
          },
          {
            "name": {
              "name": "HN",
              "wireValue": "HN"
            }
          },
          {
            "name": {
              "name": "HR",
              "wireValue": "HR"
            }
          },
          {
            "name": {
              "name": "HT",
              "wireValue": "HT"
            }
          },
          {
            "name": {
              "name": "HU",
              "wireValue": "HU"
            }
          },
          {
            "name": {
              "name": "ID",
              "wireValue": "ID"
            }
          },
          {
            "name": {
              "name": "IE",
              "wireValue": "IE"
            }
          },
          {
            "name": {
              "name": "IL",
              "wireValue": "IL"
            }
          },
          {
            "name": {
              "name": "IM",
              "wireValue": "IM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "IN",
                "camelCase": {
                  "unsafeName": "in",
                  "safeName": "in_"
                },
                "snakeCase": {
                  "unsafeName": "in",
                  "safeName": "in_"
                }
              },
              "wireValue": "IN"
            }
          },
          {
            "name": {
              "name": "IO",
              "wireValue": "IO"
            }
          },
          {
            "name": {
              "name": "IQ",
              "wireValue": "IQ"
            }
          },
          {
            "name": {
              "name": "IR",
              "wireValue": "IR"
            }
          },
          {
            "name": {
              "name": "IS",
              "wireValue": "IS"
            }
          },
          {
            "name": {
              "name": "IT",
              "wireValue": "IT"
            }
          },
          {
            "name": {
              "name": "JE",
              "wireValue": "JE"
            }
          },
          {
            "name": {
              "name": "JM",
              "wireValue": "JM"
            }
          },
          {
            "name": {
              "name": "JO",
              "wireValue": "JO"
            }
          },
          {
            "name": {
              "name": "JP",
              "wireValue": "JP"
            }
          },
          {
            "name": {
              "name": "KE",
              "wireValue": "KE"
            }
          },
          {
            "name": {
              "name": "KG",
              "wireValue": "KG"
            }
          },
          {
            "name": {
              "name": "KH",
              "wireValue": "KH"
            }
          },
          {
            "name": {
              "name": "KI",
              "wireValue": "KI"
            }
          },
          {
            "name": {
              "name": "KM",
              "wireValue": "KM"
            }
          },
          {
            "name": {
              "name": "KN",
              "wireValue": "KN"
            }
          },
          {
            "name": {
              "name": "KP",
              "wireValue": "KP"
            }
          },
          {
            "name": {
              "name": "KR",
              "wireValue": "KR"
            }
          },
          {
            "name": {
              "name": "KW",
              "wireValue": "KW"
            }
          },
          {
            "name": {
              "name": "KY",
              "wireValue": "KY"
            }
          },
          {
            "name": {
              "name": "KZ",
              "wireValue": "KZ"
            }
          },
          {
            "name": {
              "name": "LA",
              "wireValue": "LA"
            }
          },
          {
            "name": {
              "name": "LB",
              "wireValue": "LB"
            }
          },
          {
            "name": {
              "name": "LC",
              "wireValue": "LC"
            }
          },
          {
            "name": {
              "name": "LI",
              "wireValue": "LI"
            }
          },
          {
            "name": {
              "name": "LK",
              "wireValue": "LK"
            }
          },
          {
            "name": {
              "name": "LR",
              "wireValue": "LR"
            }
          },
          {
            "name": {
              "name": "LS",
              "wireValue": "LS"
            }
          },
          {
            "name": {
              "name": "LT",
              "wireValue": "LT"
            }
          },
          {
            "name": {
              "name": "LU",
              "wireValue": "LU"
            }
          },
          {
            "name": {
              "name": "LV",
              "wireValue": "LV"
            }
          },
          {
            "name": {
              "name": "LY",
              "wireValue": "LY"
            }
          },
          {
            "name": {
              "name": "MA",
              "wireValue": "MA"
            }
          },
          {
            "name": {
              "name": "MC",
              "wireValue": "MC"
            }
          },
          {
            "name": {
              "name": "MD",
              "wireValue": "MD"
            }
          },
          {
            "name": {
              "name": "ME",
              "wireValue": "ME"
            }
          },
          {
            "name": {
              "name": "MF",
              "wireValue": "MF"
            }
          },
          {
            "name": {
              "name": "MG",
              "wireValue": "MG"
            }
          },
          {
            "name": {
              "name": "MH",
              "wireValue": "MH"
            }
          },
          {
            "name": {
              "name": "MK",
              "wireValue": "MK"
            }
          },
          {
            "name": {
              "name": "ML",
              "wireValue": "ML"
            }
          },
          {
            "name": {
              "name": "MM",
              "wireValue": "MM"
            }
          },
          {
            "name": {
              "name": "MN",
              "wireValue": "MN"
            }
          },
          {
            "name": {
              "name": "MO",
              "wireValue": "MO"
            }
          },
          {
            "name": {
              "name": "MP",
              "wireValue": "MP"
            }
          },
          {
            "name": {
              "name": "MQ",
              "wireValue": "MQ"
            }
          },
          {
            "name": {
              "name": "MR",
              "wireValue": "MR"
            }
          },
          {
            "name": {
              "name": "MS",
              "wireValue": "MS"
            }
          },
          {
            "name": {
              "name": "MT",
              "wireValue": "MT"
            }
          },
          {
            "name": {
              "name": "MU",
              "wireValue": "MU"
            }
          },
          {
            "name": {
              "name": "MV",
              "wireValue": "MV"
            }
          },
          {
            "name": {
              "name": "MW",
              "wireValue": "MW"
            }
          },
          {
            "name": {
              "name": "MX",
              "wireValue": "MX"
            }
          },
          {
            "name": {
              "name": "MY",
              "wireValue": "MY"
            }
          },
          {
            "name": {
              "name": "MZ",
              "wireValue": "MZ"
            }
          },
          {
            "name": {
              "name": "NA",
              "wireValue": "NA"
            }
          },
          {
            "name": {
              "name": "NC",
              "wireValue": "NC"
            }
          },
          {
            "name": {
              "name": "NE",
              "wireValue": "NE"
            }
          },
          {
            "name": {
              "name": "NF",
              "wireValue": "NF"
            }
          },
          {
            "name": {
              "name": "NG",
              "wireValue": "NG"
            }
          },
          {
            "name": {
              "name": "NI",
              "wireValue": "NI"
            }
          },
          {
            "name": {
              "name": "NL",
              "wireValue": "NL"
            }
          },
          {
            "name": {
              "name": "NO",
              "wireValue": "NO"
            }
          },
          {
            "name": {
              "name": "NP",
              "wireValue": "NP"
            }
          },
          {
            "name": {
              "name": "NR",
              "wireValue": "NR"
            }
          },
          {
            "name": {
              "name": "NU",
              "wireValue": "NU"
            }
          },
          {
            "name": {
              "name": "NZ",
              "wireValue": "NZ"
            }
          },
          {
            "name": {
              "name": "OM",
              "wireValue": "OM"
            }
          },
          {
            "name": {
              "name": "PA",
              "wireValue": "PA"
            }
          },
          {
            "name": {
              "name": "PE",
              "wireValue": "PE"
            }
          },
          {
            "name": {
              "name": "PF",
              "wireValue": "PF"
            }
          },
          {
            "name": {
              "name": "PG",
              "wireValue": "PG"
            }
          },
          {
            "name": {
              "name": "PH",
              "wireValue": "PH"
            }
          },
          {
            "name": {
              "name": "PK",
              "wireValue": "PK"
            }
          },
          {
            "name": {
              "name": "PL",
              "wireValue": "PL"
            }
          },
          {
            "name": {
              "name": "PM",
              "wireValue": "PM"
            }
          },
          {
            "name": {
              "name": "PN",
              "wireValue": "PN"
            }
          },
          {
            "name": {
              "name": "PR",
              "wireValue": "PR"
            }
          },
          {
            "name": {
              "name": "PS",
              "wireValue": "PS"
            }
          },
          {
            "name": {
              "name": "PT",
              "wireValue": "PT"
            }
          },
          {
            "name": {
              "name": "PW",
              "wireValue": "PW"
            }
          },
          {
            "name": {
              "name": "PY",
              "wireValue": "PY"
            }
          },
          {
            "name": {
              "name": "QA",
              "wireValue": "QA"
            }
          },
          {
            "name": {
              "name": "RE",
              "wireValue": "RE"
            }
          },
          {
            "name": {
              "name": "RO",
              "wireValue": "RO"
            }
          },
          {
            "name": {
              "name": "RS",
              "wireValue": "RS"
            }
          },
          {
            "name": {
              "name": "RU",
              "wireValue": "RU"
            }
          },
          {
            "name": {
              "name": "RW",
              "wireValue": "RW"
            }
          },
          {
            "name": {
              "name": "SA",
              "wireValue": "SA"
            }
          },
          {
            "name": {
              "name": "SB",
              "wireValue": "SB"
            }
          },
          {
            "name": {
              "name": "SC",
              "wireValue": "SC"
            }
          },
          {
            "name": {
              "name": "SD",
              "wireValue": "SD"
            }
          },
          {
            "name": {
              "name": "SE",
              "wireValue": "SE"
            }
          },
          {
            "name": {
              "name": "SG",
              "wireValue": "SG"
            }
          },
          {
            "name": {
              "name": "SH",
              "wireValue": "SH"
            }
          },
          {
            "name": {
              "name": "SI",
              "wireValue": "SI"
            }
          },
          {
            "name": {
              "name": "SJ",
              "wireValue": "SJ"
            }
          },
          {
            "name": {
              "name": "SK",
              "wireValue": "SK"
            }
          },
          {
            "name": {
              "name": "SL",
              "wireValue": "SL"
            }
          },
          {
            "name": {
              "name": "SM",
              "wireValue": "SM"
            }
          },
          {
            "name": {
              "name": "SN",
              "wireValue": "SN"
            }
          },
          {
            "name": {
              "name": "SO",
              "wireValue": "SO"
            }
          },
          {
            "name": {
              "name": "SR",
              "wireValue": "SR"
            }
          },
          {
            "name": {
              "name": "SS",
              "wireValue": "SS"
            }
          },
          {
            "name": {
              "name": "ST",
              "wireValue": "ST"
            }
          },
          {
            "name": {
              "name": "SV",
              "wireValue": "SV"
            }
          },
          {
            "name": {
              "name": "SX",
              "wireValue": "SX"
            }
          },
          {
            "name": {
              "name": "SY",
              "wireValue": "SY"
            }
          },
          {
            "name": {
              "name": "SZ",
              "wireValue": "SZ"
            }
          },
          {
            "name": {
              "name": "TC",
              "wireValue": "TC"
            }
          },
          {
            "name": {
              "name": "TD",
              "wireValue": "TD"
            }
          },
          {
            "name": {
              "name": "TG",
              "wireValue": "TG"
            }
          },
          {
            "name": {
              "name": "TH",
              "wireValue": "TH"
            }
          },
          {
            "name": {
              "name": "TJ",
              "wireValue": "TJ"
            }
          },
          {
            "name": {
              "name": "TK",
              "wireValue": "TK"
            }
          },
          {
            "name": {
              "name": "TL",
              "wireValue": "TL"
            }
          },
          {
            "name": {
              "name": "TM",
              "wireValue": "TM"
            }
          },
          {
            "name": {
              "name": "TN",
              "wireValue": "TN"
            }
          },
          {
            "name": {
              "name": "TO",
              "wireValue": "TO"
            }
          },
          {
            "name": {
              "name": "TR",
              "wireValue": "TR"
            }
          },
          {
            "name": {
              "name": "TT",
              "wireValue": "TT"
            }
          },
          {
            "name": {
              "name": "TV",
              "wireValue": "TV"
            }
          },
          {
            "name": {
              "name": "TW",
              "wireValue": "TW"
            }
          },
          {
            "name": {
              "name": "TZ",
              "wireValue": "TZ"
            }
          },
          {
            "name": {
              "name": "UA",
              "wireValue": "UA"
            }
          },
          {
            "name": {
              "name": "UG",
              "wireValue": "UG"
            }
          },
          {
            "name": {
              "name": "UM",
              "wireValue": "UM"
            }
          },
          {
            "name": {
              "name": "US",
              "wireValue": "US"
            }
          },
          {
            "name": {
              "name": "UY",
              "wireValue": "UY"
            }
          },
          {
            "name": {
              "name": "UZ",
              "wireValue": "UZ"
            }
          },
          {
            "name": {
              "name": "VC",
              "wireValue": "VC"
            }
          },
          {
            "name": {
              "name": "VE",
              "wireValue": "VE"
            }
          },
          {
            "name": {
              "name": "VG",
              "wireValue": "VG"
            }
          },
          {
            "name": {
              "name": "VI",
              "wireValue": "VI"
            }
          },
          {
            "name": {
              "name": "VN",
              "wireValue": "VN"
            }
          },
          {
            "name": {
              "name": "VU",
              "wireValue": "VU"
            }
          },
          {
            "name": {
              "name": "WF",
              "wireValue": "WF"
            }
          },
          {
            "name": {
              "name": "WS",
              "wireValue": "WS"
            }
          },
          {
            "name": {
              "name": "YE",
              "wireValue": "YE"
            }
          },
          {
            "name": {
              "name": "YT",
              "wireValue": "YT"
            }
          },
          {
            "name": {
              "name": "ZA",
              "wireValue": "ZA"
            }
          },
          {
            "name": {
              "name": "ZM",
              "wireValue": "ZM"
            }
          },
          {
            "name": {
              "name": "ZW",
              "wireValue": "ZW"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Country_example_autogenerated": "AD"
        }
      }
    },
    "Currency": {
      "name": {
        "typeId": "Currency",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Currency"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "EUR",
              "wireValue": "EUR"
            }
          },
          {
            "name": {
              "name": "AED",
              "wireValue": "AED"
            }
          },
          {
            "name": {
              "name": "AFN",
              "wireValue": "AFN"
            }
          },
          {
            "name": {
              "name": "XCD",
              "wireValue": "XCD"
            }
          },
          {
            "name": {
              "name": "ALL",
              "wireValue": "ALL"
            }
          },
          {
            "name": {
              "name": "AMD",
              "wireValue": "AMD"
            }
          },
          {
            "name": {
              "name": "AOA",
              "wireValue": "AOA"
            }
          },
          {
            "name": {
              "name": "ARS",
              "wireValue": "ARS"
            }
          },
          {
            "name": {
              "name": "USD",
              "wireValue": "USD"
            }
          },
          {
            "name": {
              "name": "AUD",
              "wireValue": "AUD"
            }
          },
          {
            "name": {
              "name": "AWG",
              "wireValue": "AWG"
            }
          },
          {
            "name": {
              "name": "AZN",
              "wireValue": "AZN"
            }
          },
          {
            "name": {
              "name": "BAM",
              "wireValue": "BAM"
            }
          },
          {
            "name": {
              "name": "BBD",
              "wireValue": "BBD"
            }
          },
          {
            "name": {
              "name": "BDT",
              "wireValue": "BDT"
            }
          },
          {
            "name": {
              "name": "XOF",
              "wireValue": "XOF"
            }
          },
          {
            "name": {
              "name": "BGN",
              "wireValue": "BGN"
            }
          },
          {
            "name": {
              "name": "BHD",
              "wireValue": "BHD"
            }
          },
          {
            "name": {
              "name": "BIF",
              "wireValue": "BIF"
            }
          },
          {
            "name": {
              "name": "BMD",
              "wireValue": "BMD"
            }
          },
          {
            "name": {
              "name": "BND",
              "wireValue": "BND"
            }
          },
          {
            "name": {
              "name": "BOB",
              "wireValue": "BOB"
            }
          },
          {
            "name": {
              "name": "BRL",
              "wireValue": "BRL"
            }
          },
          {
            "name": {
              "name": "BSD",
              "wireValue": "BSD"
            }
          },
          {
            "name": {
              "name": "INR",
              "wireValue": "INR"
            }
          },
          {
            "name": {
              "name": "NOK",
              "wireValue": "NOK"
            }
          },
          {
            "name": {
              "name": "BWP",
              "wireValue": "BWP"
            }
          },
          {
            "name": {
              "name": "BYR",
              "wireValue": "BYR"
            }
          },
          {
            "name": {
              "name": "BZD",
              "wireValue": "BZD"
            }
          },
          {
            "name": {
              "name": "CAD",
              "wireValue": "CAD"
            }
          },
          {
            "name": {
              "name": "CDF",
              "wireValue": "CDF"
            }
          },
          {
            "name": {
              "name": "XAF",
              "wireValue": "XAF"
            }
          },
          {
            "name": {
              "name": "CHF",
              "wireValue": "CHF"
            }
          },
          {
            "name": {
              "name": "NZD",
              "wireValue": "NZD"
            }
          },
          {
            "name": {
              "name": "CLP",
              "wireValue": "CLP"
            }
          },
          {
            "name": {
              "name": "CNY",
              "wireValue": "CNY"
            }
          },
          {
            "name": {
              "name": "COP",
              "wireValue": "COP"
            }
          },
          {
            "name": {
              "name": "CRC",
              "wireValue": "CRC"
            }
          },
          {
            "name": {
              "name": "CUP",
              "wireValue": "CUP"
            }
          },
          {
            "name": {
              "name": "CVE",
              "wireValue": "CVE"
            }
          },
          {
            "name": {
              "name": "ANG",
              "wireValue": "ANG"
            }
          },
          {
            "name": {
              "name": "CZK",
              "wireValue": "CZK"
            }
          },
          {
            "name": {
              "name": "DJF",
              "wireValue": "DJF"
            }
          },
          {
            "name": {
              "name": "DKK",
              "wireValue": "DKK"
            }
          },
          {
            "name": {
              "name": "DOP",
              "wireValue": "DOP"
            }
          },
          {
            "name": {
              "name": "DZD",
              "wireValue": "DZD"
            }
          },
          {
            "name": {
              "name": "EGP",
              "wireValue": "EGP"
            }
          },
          {
            "name": {
              "name": "MAD",
              "wireValue": "MAD"
            }
          },
          {
            "name": {
              "name": "ERN",
              "wireValue": "ERN"
            }
          },
          {
            "name": {
              "name": "ETB",
              "wireValue": "ETB"
            }
          },
          {
            "name": {
              "name": "FJD",
              "wireValue": "FJD"
            }
          },
          {
            "name": {
              "name": "FKP",
              "wireValue": "FKP"
            }
          },
          {
            "name": {
              "name": "GBP",
              "wireValue": "GBP"
            }
          },
          {
            "name": {
              "name": "GEL",
              "wireValue": "GEL"
            }
          },
          {
            "name": {
              "name": "GHS",
              "wireValue": "GHS"
            }
          },
          {
            "name": {
              "name": "GIP",
              "wireValue": "GIP"
            }
          },
          {
            "name": {
              "name": "GMD",
              "wireValue": "GMD"
            }
          },
          {
            "name": {
              "name": "GNF",
              "wireValue": "GNF"
            }
          },
          {
            "name": {
              "name": "GTQ",
              "wireValue": "GTQ"
            }
          },
          {
            "name": {
              "name": "GYD",
              "wireValue": "GYD"
            }
          },
          {
            "name": {
              "name": "HKD",
              "wireValue": "HKD"
            }
          },
          {
            "name": {
              "name": "HNL",
              "wireValue": "HNL"
            }
          },
          {
            "name": {
              "name": "HUF",
              "wireValue": "HUF"
            }
          },
          {
            "name": {
              "name": "IDR",
              "wireValue": "IDR"
            }
          },
          {
            "name": {
              "name": "ILS",
              "wireValue": "ILS"
            }
          },
          {
            "name": {
              "name": "IQD",
              "wireValue": "IQD"
            }
          },
          {
            "name": {
              "name": "IRR",
              "wireValue": "IRR"
            }
          },
          {
            "name": {
              "name": "ISK",
              "wireValue": "ISK"
            }
          },
          {
            "name": {
              "name": "JMD",
              "wireValue": "JMD"
            }
          },
          {
            "name": {
              "name": "JOD",
              "wireValue": "JOD"
            }
          },
          {
            "name": {
              "name": "JPY",
              "wireValue": "JPY"
            }
          },
          {
            "name": {
              "name": "KES",
              "wireValue": "KES"
            }
          },
          {
            "name": {
              "name": "KGS",
              "wireValue": "KGS"
            }
          },
          {
            "name": {
              "name": "KHR",
              "wireValue": "KHR"
            }
          },
          {
            "name": {
              "name": "KMF",
              "wireValue": "KMF"
            }
          },
          {
            "name": {
              "name": "KPW",
              "wireValue": "KPW"
            }
          },
          {
            "name": {
              "name": "KRW",
              "wireValue": "KRW"
            }
          },
          {
            "name": {
              "name": "KWD",
              "wireValue": "KWD"
            }
          },
          {
            "name": {
              "name": "KYD",
              "wireValue": "KYD"
            }
          },
          {
            "name": {
              "name": "KZT",
              "wireValue": "KZT"
            }
          },
          {
            "name": {
              "name": "LAK",
              "wireValue": "LAK"
            }
          },
          {
            "name": {
              "name": "LBP",
              "wireValue": "LBP"
            }
          },
          {
            "name": {
              "name": "LKR",
              "wireValue": "LKR"
            }
          },
          {
            "name": {
              "name": "LRD",
              "wireValue": "LRD"
            }
          },
          {
            "name": {
              "name": "ZAR",
              "wireValue": "ZAR"
            }
          },
          {
            "name": {
              "name": "LYD",
              "wireValue": "LYD"
            }
          },
          {
            "name": {
              "name": "MDL",
              "wireValue": "MDL"
            }
          },
          {
            "name": {
              "name": "MGA",
              "wireValue": "MGA"
            }
          },
          {
            "name": {
              "name": "MKD",
              "wireValue": "MKD"
            }
          },
          {
            "name": {
              "name": "MMK",
              "wireValue": "MMK"
            }
          },
          {
            "name": {
              "name": "MNT",
              "wireValue": "MNT"
            }
          },
          {
            "name": {
              "name": "MOP",
              "wireValue": "MOP"
            }
          },
          {
            "name": {
              "name": "MRO",
              "wireValue": "MRO"
            }
          },
          {
            "name": {
              "name": "MUR",
              "wireValue": "MUR"
            }
          },
          {
            "name": {
              "name": "MVR",
              "wireValue": "MVR"
            }
          },
          {
            "name": {
              "name": "MWK",
              "wireValue": "MWK"
            }
          },
          {
            "name": {
              "name": "MXN",
              "wireValue": "MXN"
            }
          },
          {
            "name": {
              "name": "MYR",
              "wireValue": "MYR"
            }
          },
          {
            "name": {
              "name": "MZN",
              "wireValue": "MZN"
            }
          },
          {
            "name": {
              "name": "XPF",
              "wireValue": "XPF"
            }
          },
          {
            "name": {
              "name": "NGN",
              "wireValue": "NGN"
            }
          },
          {
            "name": {
              "name": "NIO",
              "wireValue": "NIO"
            }
          },
          {
            "name": {
              "name": "NPR",
              "wireValue": "NPR"
            }
          },
          {
            "name": {
              "name": "OMR",
              "wireValue": "OMR"
            }
          },
          {
            "name": {
              "name": "PEN",
              "wireValue": "PEN"
            }
          },
          {
            "name": {
              "name": "PGK",
              "wireValue": "PGK"
            }
          },
          {
            "name": {
              "name": "PHP",
              "wireValue": "PHP"
            }
          },
          {
            "name": {
              "name": "PKR",
              "wireValue": "PKR"
            }
          },
          {
            "name": {
              "name": "PLN",
              "wireValue": "PLN"
            }
          },
          {
            "name": {
              "name": "PYG",
              "wireValue": "PYG"
            }
          },
          {
            "name": {
              "name": "QAR",
              "wireValue": "QAR"
            }
          },
          {
            "name": {
              "name": "RON",
              "wireValue": "RON"
            }
          },
          {
            "name": {
              "name": "RSD",
              "wireValue": "RSD"
            }
          },
          {
            "name": {
              "name": "RUB",
              "wireValue": "RUB"
            }
          },
          {
            "name": {
              "name": "RWF",
              "wireValue": "RWF"
            }
          },
          {
            "name": {
              "name": "SAR",
              "wireValue": "SAR"
            }
          },
          {
            "name": {
              "name": "SBD",
              "wireValue": "SBD"
            }
          },
          {
            "name": {
              "name": "SCR",
              "wireValue": "SCR"
            }
          },
          {
            "name": {
              "name": "SDG",
              "wireValue": "SDG"
            }
          },
          {
            "name": {
              "name": "SEK",
              "wireValue": "SEK"
            }
          },
          {
            "name": {
              "name": "SGD",
              "wireValue": "SGD"
            }
          },
          {
            "name": {
              "name": "SHP",
              "wireValue": "SHP"
            }
          },
          {
            "name": {
              "name": "SLL",
              "wireValue": "SLL"
            }
          },
          {
            "name": {
              "name": "SOS",
              "wireValue": "SOS"
            }
          },
          {
            "name": {
              "name": "SRD",
              "wireValue": "SRD"
            }
          },
          {
            "name": {
              "name": "SSP",
              "wireValue": "SSP"
            }
          },
          {
            "name": {
              "name": "STD",
              "wireValue": "STD"
            }
          },
          {
            "name": {
              "name": "SYP",
              "wireValue": "SYP"
            }
          },
          {
            "name": {
              "name": "SZL",
              "wireValue": "SZL"
            }
          },
          {
            "name": {
              "name": "THB",
              "wireValue": "THB"
            }
          },
          {
            "name": {
              "name": "TJS",
              "wireValue": "TJS"
            }
          },
          {
            "name": {
              "name": "TMT",
              "wireValue": "TMT"
            }
          },
          {
            "name": {
              "name": "TND",
              "wireValue": "TND"
            }
          },
          {
            "name": {
              "name": "TOP",
              "wireValue": "TOP"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "TRY",
                "camelCase": {
                  "unsafeName": "try",
                  "safeName": "try_"
                },
                "snakeCase": {
                  "unsafeName": "try",
                  "safeName": "try_"
                }
              },
              "wireValue": "TRY"
            }
          },
          {
            "name": {
              "name": "TTD",
              "wireValue": "TTD"
            }
          },
          {
            "name": {
              "name": "TWD",
              "wireValue": "TWD"
            }
          },
          {
            "name": {
              "name": "TZS",
              "wireValue": "TZS"
            }
          },
          {
            "name": {
              "name": "UAH",
              "wireValue": "UAH"
            }
          },
          {
            "name": {
              "name": "UGX",
              "wireValue": "UGX"
            }
          },
          {
            "name": {
              "name": "UYU",
              "wireValue": "UYU"
            }
          },
          {
            "name": {
              "name": "UZS",
              "wireValue": "UZS"
            }
          },
          {
            "name": {
              "name": "VEF",
              "wireValue": "VEF"
            }
          },
          {
            "name": {
              "name": "VND",
              "wireValue": "VND"
            }
          },
          {
            "name": {
              "name": "VUV",
              "wireValue": "VUV"
            }
          },
          {
            "name": {
              "name": "WST",
              "wireValue": "WST"
            }
          },
          {
            "name": {
              "name": "YER",
              "wireValue": "YER"
            }
          },
          {
            "name": {
              "name": "ZMW",
              "wireValue": "ZMW"
            }
          },
          {
            "name": {
              "name": "ZWL",
              "wireValue": "ZWL"
            }
          },
          {
            "name": {
              "name": "HRK",
              "wireValue": "HRK"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Currency_example_autogenerated": "EUR"
        }
      }
    },
    "CustomCategorySet": {
      "name": {
        "typeId": "CustomCategorySet",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CustomCategorySet"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "incoming",
              "wireValue": "incoming"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CustomCategorySetIncoming_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "outgoing",
              "wireValue": "outgoing"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CustomCategorySetOutgoing_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "CustomCategorySet_example_0": {
            "incoming": [
              "salary",
              "investment income",
              "other income"
            ],
            "outgoing": [
              "rent",
              "utilities",
              "groceries",
              "entertainment"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "DocumentStatus": {
      "name": {
        "typeId": "DocumentStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DocumentStatus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "queued",
              "wireValue": "queued"
            }
          },
          {
            "name": {
              "name": "processing",
              "wireValue": "processing"
            }
          },
          {
            "name": {
              "name": "processed",
              "wireValue": "processed"
            }
          },
          {
            "name": {
              "name": "failed",
              "wireValue": "failed"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DocumentStatus_example_autogenerated": "queued"
        }
      }
    },
    "EnrichedTransaction": {
      "name": {
        "typeId": "EnrichedTransaction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnrichedTransaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "entities",
              "wireValue": "entities"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Entities",
                  "typeId": "Entities",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "categories",
              "wireValue": "categories"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Categories",
                  "typeId": "Categories",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "location",
              "wireValue": "location"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Location",
                  "typeId": "Location",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TransactionError",
                  "typeId": "TransactionError",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The timestamp of when the account holder was created.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnrichedTransactionCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique identifier for the transaction. If two transactions are submitted with the same `id` the most recent one will replace the previous one.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnrichedTransactionId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "EnrichedTransaction_example_0": {
            "entities": {
              "counterparty": {
                "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                "name": "Starbucks",
                "website": "starbucks.com",
                "logo": "https://logos.ntropy.com/starbucks.com",
                "mccs": [
                  5814
                ],
                "type": "organization"
              },
              "intermediaries": [
                {
                  "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                  "name": "Square",
                  "website": "squareup.com",
                  "logo": "https://logos.ntropy.com/squareup.com",
                  "mccs": [],
                  "type": "payment_processor"
                }
              ]
            },
            "categories": {
              "general": "outgoing - coffee shops"
            },
            "location": {
              "raw_address": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
              "structured": {
                "street": "Nw 43rd Street 5480",
                "city": "Gainesville",
                "state": "Florida",
                "postcode": "32653",
                "country_code": "US",
                "country": "United States",
                "latitude": 29.704558,
                "longitude": -82.389277,
                "google_maps_url": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                "apple_maps_url": "https://maps.apple.com/?q=29.704558,-82.389277"
              }
            },
            "created_at": "2024-03-30T00:00:00",
            "id": "xbx8YP14g565Xk"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "EnrichmentResult": {
      "name": {
        "typeId": "EnrichmentResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnrichmentResult"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "transactions",
              "wireValue": "transactions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnrichedTransaction",
                  "typeId": "EnrichedTransaction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A list of enriched transactions resulting from the enrichment of this batch.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnrichmentResultTransactions_example_autogenerated": [
                  {
                    "created_at": "2024-01-15T09:30:00Z",
                    "id": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnrichmentResult_example_autogenerated": {
            "transactions": [
              {
                "created_at": "2024-01-15T09:30:00Z",
                "id": "string"
              }
            ]
          }
        }
      }
    },
    "Entities": {
      "name": {
        "typeId": "Entities",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Entities"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "counterparty",
              "wireValue": "counterparty"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Counterparty",
                  "typeId": "Counterparty",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "intermediaries",
              "wireValue": "intermediaries"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Intermediary",
                      "typeId": "Intermediary",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EntitiesIntermediaries_example_autogenerated": [
                  {
                    "type": "delivery_service"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Entities found by identity identification",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Entities_example_autogenerated": {}
        }
      }
    },
    "Entity": {
      "name": {
        "typeId": "Entity",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Entity"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique UUID identifier of the entity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EntityId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the entity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EntityName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "website",
              "wireValue": "website"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The website URL of the entity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EntityWebsite_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "logo",
              "wireValue": "logo"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Logo's URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EntityLogo_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "mccs",
              "wireValue": "mccs"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A list of [Merchant Category Codes](https://en.wikipedia.org/wiki/Merchant_category_code)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EntityMccs_example_autogenerated": [
                  1
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Entity_example_0": {
            "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
            "name": "Starbucks",
            "website": "starbucks.com",
            "logo": "https://logos.ntropy.com/starbucks.com",
            "mccs": [
              5814
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "EntryType": {
      "name": {
        "typeId": "EntryType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EntryType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "incoming",
              "wireValue": "incoming"
            }
          },
          {
            "name": {
              "name": "outgoing",
              "wireValue": "outgoing"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EntryType_example_autogenerated": "incoming"
        }
      }
    },
    "FilterModel": {
      "name": {
        "typeId": "FilterModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FilterModel"
      },
      "shape": {
        "aliasOf": {
          "type": "unknown"
        },
        "resolvedType": {
          "type": "unknown"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FilterModel_example_autogenerated": [
            {
              "if": {}
            }
          ]
        }
      }
    },
    "HTTPValidationError": {
      "name": {
        "typeId": "HTTPValidationError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "detail",
              "wireValue": "detail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ValidationError",
                      "typeId": "ValidationError",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "HttpValidationErrorDetail_example_autogenerated": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "HTTPValidationError_example_autogenerated": {}
        }
      }
    },
    "Intermediary": {
      "name": {
        "typeId": "Intermediary",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Intermediary"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique UUID identifier of the entity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IntermediaryId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the entity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IntermediaryName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "website",
              "wireValue": "website"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The website URL of the entity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IntermediaryWebsite_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "logo",
              "wireValue": "logo"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Logo's URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IntermediaryLogo_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "mccs",
              "wireValue": "mccs"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A list of [Merchant Category Codes](https://en.wikipedia.org/wiki/Merchant_category_code)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IntermediaryMccs_example_autogenerated": [
                  1
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "IntermediaryType",
              "typeId": "IntermediaryType",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Intermediary_example_0": {
            "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
            "name": "Square",
            "website": "squareup.com",
            "logo": "https://logos.ntropy.com/squareup.com",
            "mccs": [],
            "type": "payment_processor"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "IntermediaryType": {
      "name": {
        "typeId": "IntermediaryType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "IntermediaryType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "delivery_service",
              "wireValue": "delivery_service"
            }
          },
          {
            "name": {
              "name": "payment_processor",
              "wireValue": "payment_processor"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IntermediaryType_example_autogenerated": "delivery_service"
        }
      }
    },
    "Location": {
      "name": {
        "typeId": "Location",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Location"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "raw_address",
              "wireValue": "raw_address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An unstructured string containing the address",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationRawAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "structured",
              "wireValue": "structured"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "LocationStructured",
                  "typeId": "LocationStructured",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "When raw is set, a structured representation of it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Location_example_autogenerated": {}
        }
      }
    },
    "LocationInput": {
      "name": {
        "typeId": "LocationInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LocationInput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "raw_address",
              "wireValue": "raw_address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An unstructured string containing the address",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationInputRawAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "country",
              "wireValue": "country"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Country",
              "typeId": "Country",
              "inline": false,
              "type": "named"
            },
            "docs": "The country where the transaction was made in ISO 3166-2 format",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Location of where the transaction has taken place. This can greatly improve entity identification, especially\nunder ambiguity.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LocationInput_example_autogenerated": {
            "country": "AD"
          }
        }
      }
    },
    "LocationStructured": {
      "name": {
        "typeId": "LocationStructured",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LocationStructured"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "street",
              "wireValue": "street"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The street name and number of the location",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationStructuredStreet_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "city",
              "wireValue": "city"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The city where the location is situated",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationStructuredCity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "state",
              "wireValue": "state"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The state or region of the location",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationStructuredState_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "postcode",
              "wireValue": "postcode"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The postal code or ZIP code of the location",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationStructuredPostcode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "country_code",
              "wireValue": "country_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The country code of the location in ISO 3166-2 format",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationStructuredCountryCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "country",
              "wireValue": "country"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The full name of the country",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationStructuredCountry_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "latitude",
              "wireValue": "latitude"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The latitude coordinate of the location",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationStructuredLatitude_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "longitude",
              "wireValue": "longitude"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The longitude coordinate of the location",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationStructuredLongitude_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "google_maps_url",
              "wireValue": "google_maps_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A URL link to view the location on Google Maps",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationStructuredGoogleMapsUrl_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "apple_maps_url",
              "wireValue": "apple_maps_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A URL link to view the location on Apple Maps",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationStructuredAppleMapsUrl_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "store_number",
              "wireValue": "store_number"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A unique identifier for a specific store or branch, if applicable",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationStructuredStoreNumber_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LocationStructured_example_autogenerated": {}
        }
      }
    },
    "PagedResponse_AccountHolderExternal": {
      "name": {
        "typeId": "PagedResponse_AccountHolderExternal",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PagedResponse_AccountHolderExternal"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next_cursor",
              "wireValue": "next_cursor"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PagedResponseAccountHolderExternalNextCursor_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AccountHolderExternal",
                  "typeId": "AccountHolderExternal",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PagedResponseAccountHolderExternalData_example_autogenerated": [
                  {
                    "id": "string",
                    "type": "consumer",
                    "created_at": "2024-01-15T09:30:00Z"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "PagedResponse_AccountHolderExternal_example_0": {
            "next_cursor": "XjdHaksD",
            "data": [
              {
                "id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                "type": "consumer",
                "name": "John Doe",
                "created_at": "2024-03-30T00:00:00"
              }
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "PagedResponse_BankStatement": {
      "name": {
        "typeId": "PagedResponse_BankStatement",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PagedResponse_BankStatement"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next_cursor",
              "wireValue": "next_cursor"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PagedResponseBankStatementNextCursor_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BankStatement",
                  "typeId": "BankStatement",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PagedResponseBankStatementData_example_autogenerated": [
                  {
                    "id": "string",
                    "status": "processing",
                    "created_at": "2024-01-15T09:30:00Z",
                    "file": {
                      "no_pages": 1
                    }
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "PagedResponse_BankStatement_example_0": {
            "next_cursor": "XjdHaksD",
            "data": [
              {
                "id": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                "name": "2014-01-01_2014-02-01_statement.pdf",
                "status": "processing",
                "created_at": "2024-01-01T00:00:00",
                "file": {
                  "no_pages": 1,
                  "size": 4096
                }
              }
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "PagedResponse_Batch": {
      "name": {
        "typeId": "PagedResponse_Batch",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PagedResponse_Batch"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next_cursor",
              "wireValue": "next_cursor"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PagedResponseBatchNextCursor_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Batch",
                  "typeId": "Batch",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PagedResponseBatchData_example_autogenerated": [
                  {
                    "id": "string",
                    "status": "processing",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "progress": 1,
                    "total": 1
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "PagedResponse_Batch_example_0": {
            "next_cursor": "XjdHaksD",
            "data": [
              {
                "id": "203613d2-83c8-4130-8809-d14206eeec20",
                "status": "processing",
                "created_at": "2024-01-01T00:00:00",
                "updated_at": "2024-01-01T00:00:30",
                "progress": 0,
                "total": 4000
              }
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "PagedResponse_Report_": {
      "name": {
        "typeId": "PagedResponse_Report_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PagedResponse_Report_"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next_cursor",
              "wireValue": "next_cursor"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PagedResponseReportNextCursor_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Report",
                  "typeId": "Report",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PagedResponseReportData_example_autogenerated": [
                  {
                    "transaction_id": "string",
                    "description": "string",
                    "fields": [
                      "string"
                    ],
                    "id": "string",
                    "created_at": "2024-01-15T09:30:00Z",
                    "status": "open"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PagedResponse_Report__example_autogenerated": {
            "data": [
              {
                "transaction_id": "string",
                "description": "string",
                "fields": [
                  "string"
                ],
                "id": "string",
                "created_at": "2024-01-15T09:30:00Z",
                "status": "open"
              }
            ]
          }
        }
      }
    },
    "PagedResponse_Transaction": {
      "name": {
        "typeId": "PagedResponse_Transaction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PagedResponse_Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next_cursor",
              "wireValue": "next_cursor"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PagedResponseTransactionNextCursor_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Transaction",
                  "typeId": "Transaction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PagedResponseTransactionData_example_autogenerated": [
                  {
                    "id": "string",
                    "description": "string",
                    "date": "2023-01-15",
                    "amount": 1.1,
                    "entry_type": "incoming",
                    "currency": "EUR",
                    "created_at": "2024-01-15T09:30:00Z"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "PagedResponse_Transaction_example_0": {
            "next_cursor": "XjdHaksD",
            "data": [
              {
                "id": "xbx8YP14g565Xk",
                "description": "SQ* STARBUCKS NW 43RD",
                "date": "2024-03-30",
                "amount": 10,
                "entry_type": "outgoing",
                "currency": "USD",
                "entities": {
                  "counterparty": {
                    "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                    "name": "Starbucks",
                    "website": "starbucks.com",
                    "logo": "https://logos.ntropy.com/starbucks.com",
                    "mccs": [
                      5814
                    ],
                    "type": "organization"
                  },
                  "intermediaries": [
                    {
                      "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                      "name": "Square",
                      "website": "squareup.com",
                      "logo": "https://logos.ntropy.com/squareup.com",
                      "mccs": [],
                      "type": "payment_processor"
                    }
                  ]
                },
                "categories": {
                  "general": "outgoing - coffee shops"
                },
                "location": {
                  "raw_address": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                  "structured": {
                    "street": "Nw 43rd Street 5480",
                    "city": "Gainesville",
                    "state": "Florida",
                    "postcode": "32653",
                    "country_code": "US",
                    "country": "United States",
                    "latitude": 29.704558,
                    "longitude": -82.389277,
                    "google_maps_url": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                    "apple_maps_url": "https://maps.apple.com/?q=29.704558,-82.389277"
                  }
                },
                "created_at": "2024-03-30T00:00:00",
                "account_holder_id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                "recurrence": {
                  "type": "recurring"
                }
              }
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "PagedResponse_Webhook": {
      "name": {
        "typeId": "PagedResponse_Webhook",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PagedResponse_Webhook"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next_cursor",
              "wireValue": "next_cursor"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PagedResponseWebhookNextCursor_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Webhook",
                  "typeId": "Webhook",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PagedResponseWebhookData_example_autogenerated": [
                  {
                    "url": "string",
                    "events": [
                      "reports.resolved"
                    ],
                    "id": "string",
                    "created_at": "2024-01-15T09:30:00Z",
                    "enabled": true
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "PagedResponse_Webhook_example_0": {
            "next_cursor": "XjdHaksD",
            "data": [
              {
                "url": "https://example.com:5689",
                "events": [
                  "batches.completed",
                  "batches.error"
                ],
                "token": "hunter2",
                "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                "created_at": "2024-10-03T02:53:30.167953",
                "enabled": true
              }
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "Recurrence": {
      "name": {
        "typeId": "Recurrence",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Recurrence"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RecurrenceType",
              "typeId": "RecurrenceType",
              "inline": false,
              "type": "named"
            },
            "docs": "Whether the transaction is a one-time transfer `one-off`, regularly with varying pricing `recurring` or with fixed pricing `subscription`",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The `Recurrence` object represents the recurrence pattern of a transaction. It provides information about\nwhether a transaction is a one-time event or a part of a recurring series.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Recurrence_example_autogenerated": {
            "type": "recurring"
          }
        }
      }
    },
    "RecurrenceGroup": {
      "name": {
        "typeId": "RecurrenceGroup",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RecurrenceGroup"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique UUID identifier for the group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RecurrenceGroupId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "start_date",
              "wireValue": "start_date"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The date of the oldest transaction in the group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RecurrenceGroupStartDate_example_autogenerated": "2023-01-15"
              }
            }
          },
          {
            "name": {
              "name": "end_date",
              "wireValue": "end_date"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The date of the most recent transaction in the group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RecurrenceGroupEndDate_example_autogenerated": "2023-01-15"
              }
            }
          },
          {
            "name": {
              "name": "total_amount",
              "wireValue": "total_amount"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "The sum of all transaction amounts in this group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RecurrenceGroupTotalAmount_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "average_amount",
              "wireValue": "average_amount"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "The average amount per transaction in this group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RecurrenceGroupAverageAmount_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "periodicity_in_days",
              "wireValue": "periodicity_in_days"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "The estimated number of days between transactions in this group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RecurrenceGroupPeriodicityInDays_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "periodicity",
              "wireValue": "periodicity"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RecurrencePeriodicity",
              "typeId": "RecurrencePeriodicity",
              "inline": false,
              "type": "named"
            },
            "docs": "A human-readable description of the transaction frequency",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "counterparty",
              "wireValue": "counterparty"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Counterparty",
              "typeId": "Counterparty",
              "inline": false,
              "type": "named"
            },
            "docs": "Counterparty of the transactions",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "categories",
              "wireValue": "categories"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Categories",
              "typeId": "Categories",
              "inline": false,
              "type": "named"
            },
            "docs": "Categories of the transactions in the recurrence group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "transaction_ids",
              "wireValue": "transaction_ids"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "Transactions in this recurrence group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RecurrenceGroupTransactionIds_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RecurrenceGroup_example_0": {
            "id": "8efbac45-9bd5-4b67-be29-334106198c40",
            "start_date": "2024-03-01",
            "end_date": "2024-03-30",
            "total_amount": 300,
            "average_amount": 10,
            "periodicity_in_days": 1,
            "periodicity": "daily",
            "counterparty": {
              "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
              "name": "Starbucks",
              "website": "starbucks.com",
              "logo": "https://logos.ntropy.com/starbucks.com",
              "mccs": [
                5814
              ],
              "type": "organization"
            },
            "categories": {
              "general": "outgoing - coffee shops"
            },
            "transaction_ids": [
              "2dc6SE8A7cTQ2jUdUadCg",
              "tQYAhhl0XNkl1wasacpVQ",
              "NNJTqvockIdKnYxBqPlJw"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RecurrencePeriodicity": {
      "name": {
        "typeId": "RecurrencePeriodicity",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RecurrencePeriodicity"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "daily",
              "wireValue": "daily"
            }
          },
          {
            "name": {
              "name": "weekly",
              "wireValue": "weekly"
            }
          },
          {
            "name": {
              "name": "bi_weekly",
              "wireValue": "bi_weekly"
            }
          },
          {
            "name": {
              "name": "monthly",
              "wireValue": "monthly"
            }
          },
          {
            "name": {
              "name": "bi_monthly",
              "wireValue": "bi_monthly"
            }
          },
          {
            "name": {
              "name": "quarterly",
              "wireValue": "quarterly"
            }
          },
          {
            "name": {
              "name": "semi_yearly",
              "wireValue": "semi_yearly"
            }
          },
          {
            "name": {
              "name": "yearly",
              "wireValue": "yearly"
            }
          },
          {
            "name": {
              "name": "other",
              "wireValue": "other"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RecurrencePeriodicity_example_autogenerated": "daily"
        }
      }
    },
    "RecurrenceType": {
      "name": {
        "typeId": "RecurrenceType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RecurrenceType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "recurring",
              "wireValue": "recurring"
            }
          },
          {
            "name": {
              "name": "subscription",
              "wireValue": "subscription"
            }
          },
          {
            "name": {
              "name": "one off",
              "wireValue": "one off"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RecurrenceType_example_autogenerated": "recurring"
        }
      }
    },
    "Report": {
      "name": {
        "typeId": "Report",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Report"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "transaction_id",
              "wireValue": "transaction_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier of the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ReportTransactionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A description of what is wrong in the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ReportDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "fields",
              "wireValue": "fields"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A list of the fields that are incorrect",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ReportFields_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A generated unique identifier for the report.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ReportId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The date and time when the report was created.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ReportCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ReportStatus",
              "typeId": "ReportStatus",
              "inline": false,
              "type": "named"
            },
            "docs": "The status of the report.\n\n* `open`: a newly created report\n* `pending`: the report is being investigated\n* `rejected`: the original enrichment output was deemed correct or we couldn't resolve it, check `rejection_reason`\n* `resolved`: the issue has been resolved",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "rejection_reason",
              "wireValue": "rejection_reason"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An explanation of why the report was rejected",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ReportRejectionReason_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Report_example_0": {
            "transaction_id": "xbx8YP14g565Xk",
            "description": "lorem ipsum",
            "fields": [
              ".entities.counterparty"
            ],
            "id": "a652285d-de1b-4a6f-b6ce-45efa9be7952",
            "created_at": "2024-10-03T02:53:30.167953+00:00",
            "status": "open"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ReportBase": {
      "name": {
        "typeId": "ReportBase",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ReportBase"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "transaction_id",
              "wireValue": "transaction_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier of the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ReportBaseTransactionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A description of what is wrong in the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ReportBaseDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "fields",
              "wireValue": "fields"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A list of the fields that are incorrect",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ReportBaseFields_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ReportBase_example_0": {
            "transaction_id": "xbx8YP14g565Xk",
            "description": "lorem ipsum",
            "fields": [
              ".entities.counterparty"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ReportStatus": {
      "name": {
        "typeId": "ReportStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ReportStatus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "open",
              "wireValue": "open"
            }
          },
          {
            "name": {
              "name": "pending",
              "wireValue": "pending"
            }
          },
          {
            "name": {
              "name": "resolved",
              "wireValue": "resolved"
            }
          },
          {
            "name": {
              "name": "rejected",
              "wireValue": "rejected"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ReportStatus_example_autogenerated": "open"
        }
      }
    },
    "StatementInfo": {
      "name": {
        "typeId": "StatementInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "StatementInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "institution",
              "wireValue": "institution"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatementInfoInstitution_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "start_date",
              "wireValue": "start_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatementInfoStartDate_example_autogenerated": "2023-01-15"
              }
            }
          },
          {
            "name": {
              "name": "end_date",
              "wireValue": "end_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatementInfoEndDate_example_autogenerated": "2023-01-15"
              }
            }
          },
          {
            "name": {
              "name": "account_holder",
              "wireValue": "account_holder"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AccountHolder",
                  "typeId": "AccountHolder",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "accounts",
              "wireValue": "accounts"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Account",
                      "typeId": "Account",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatementInfoAccounts_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "StatementInfo_example_0": {
            "institution": "Well's Fargo",
            "start_date": "2024-01-01",
            "end_date": "2024-02-01",
            "account_holder": {
              "type": "consumer",
              "name": "John Doe",
              "address": {
                "street": "601 Rosebud Avenue",
                "postcode": "77901",
                "city": "Victoria",
                "state": "Texas",
                "country": "United States"
              }
            },
            "accounts": [
              {
                "type": "checking",
                "number": "83721",
                "opening_balance": 1000,
                "closing_balance": 1500,
                "iso_currency_code": "USD"
              }
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "SyncEnrichmentInput": {
      "name": {
        "typeId": "SyncEnrichmentInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SyncEnrichmentInput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "transactions",
              "wireValue": "transactions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TransactionInput",
                  "typeId": "TransactionInput",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SyncEnrichmentInputTransactions_example_autogenerated": [
                  {
                    "id": "string",
                    "description": "string",
                    "date": "2023-01-15",
                    "amount": 1.1,
                    "entry_type": "incoming",
                    "currency": "EUR",
                    "account_holder_id": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SyncEnrichmentInput_example_autogenerated": {
            "transactions": [
              {
                "id": "string",
                "description": "string",
                "date": "2023-01-15",
                "amount": 1.1,
                "entry_type": "incoming",
                "currency": "EUR",
                "account_holder_id": "string"
              }
            ]
          }
        }
      }
    },
    "SyncEnrichmentOutput": {
      "name": {
        "typeId": "SyncEnrichmentOutput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SyncEnrichmentOutput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "transactions",
              "wireValue": "transactions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnrichedTransaction",
                  "typeId": "EnrichedTransaction",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A list of enriched transactions resulting from the enrichment of this batch.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SyncEnrichmentOutputTransactions_example_autogenerated": [
                  {
                    "created_at": "2024-01-15T09:30:00Z",
                    "id": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SyncEnrichmentOutput_example_autogenerated": {
            "transactions": [
              {
                "created_at": "2024-01-15T09:30:00Z",
                "id": "string"
              }
            ]
          }
        }
      }
    },
    "Transaction": {
      "name": {
        "typeId": "Transaction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique identifier of the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TransactionId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 0,
                    "maxLength": 1024
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The description string of the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TransactionDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "date",
                "pascalCase": {
                  "unsafeName": "Date",
                  "safeName": "Date_"
                }
              },
              "wireValue": "date"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The date that the transaction was posted. Uses ISO 8601 format (YYYY-MM-DD)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TransactionDate_example_autogenerated": "2023-01-15"
              }
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "The amount of the transaction in the `currency`. Must be a positive value. For example, if the `currency` is USD, then it's the amount in dollars.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TransactionAmount_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "entry_type",
              "wireValue": "entry_type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EntryType",
              "typeId": "EntryType",
              "inline": false,
              "type": "named"
            },
            "docs": "The direction of the flow of the money from the perspective of the account holder. `outgoing` to represent money leaving the account, such as purchases or fees, while `incoming` represents money entering the account, such as income or refunds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "currency",
              "wireValue": "currency"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Currency",
              "typeId": "Currency",
              "inline": false,
              "type": "named"
            },
            "docs": "The currency of the transaction in ISO 4217 format",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "entities",
              "wireValue": "entities"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Entities",
                  "typeId": "Entities",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "categories",
              "wireValue": "categories"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Categories",
                  "typeId": "Categories",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "location",
              "wireValue": "location"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Location",
                  "typeId": "Location",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TransactionError",
                  "typeId": "TransactionError",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The timestamp of when the account holder was created.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TransactionCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "account_holder_id",
              "wireValue": "account_holder_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "minLength": 1
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The unique ID of the account holder of the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TransactionAccountHolderId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "recurrence",
              "wireValue": "recurrence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Recurrence",
                  "typeId": "Recurrence",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Transaction_example_0": {
            "id": "xbx8YP14g565Xk",
            "description": "SQ* STARBUCKS NW 43RD",
            "date": "2024-03-30",
            "amount": 10,
            "entry_type": "outgoing",
            "currency": "USD",
            "entities": {
              "counterparty": {
                "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                "name": "Starbucks",
                "website": "starbucks.com",
                "logo": "https://logos.ntropy.com/starbucks.com",
                "mccs": [
                  5814
                ],
                "type": "organization"
              },
              "intermediaries": [
                {
                  "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                  "name": "Square",
                  "website": "squareup.com",
                  "logo": "https://logos.ntropy.com/squareup.com",
                  "mccs": [],
                  "type": "payment_processor"
                }
              ]
            },
            "categories": {
              "general": "outgoing - coffee shops"
            },
            "location": {
              "raw_address": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
              "structured": {
                "street": "Nw 43rd Street 5480",
                "city": "Gainesville",
                "state": "Florida",
                "postcode": "32653",
                "country_code": "US",
                "country": "United States",
                "latitude": 29.704558,
                "longitude": -82.389277,
                "google_maps_url": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                "apple_maps_url": "https://maps.apple.com/?q=29.704558,-82.389277"
              }
            },
            "created_at": "2024-03-30T00:00:00",
            "account_holder_id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
            "recurrence": {
              "type": "recurring"
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "TransactionError": {
      "name": {
        "typeId": "TransactionError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TransactionError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "code",
              "wireValue": "code"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TransactionErrorCode",
              "typeId": "TransactionErrorCode",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TransactionErrorMessage_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TransactionError_example_autogenerated": {
            "code": "account_holder_not_found",
            "message": "string"
          }
        }
      }
    },
    "TransactionErrorCode": {
      "name": {
        "typeId": "TransactionErrorCode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TransactionErrorCode"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "account_holder_not_found",
              "wireValue": "account_holder_not_found"
            }
          },
          {
            "name": {
              "name": "internal_error",
              "wireValue": "internal_error"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TransactionErrorCode_example_autogenerated": "account_holder_not_found"
        }
      }
    },
    "TransactionInput": {
      "name": {
        "typeId": "TransactionInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TransactionInput"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique identifier of the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TransactionInputId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 0,
                    "maxLength": 1024
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The description string of the transaction",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TransactionInputDescription_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "date",
                "pascalCase": {
                  "unsafeName": "Date",
                  "safeName": "Date_"
                }
              },
              "wireValue": "date"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The date that the transaction was posted. Uses ISO 8601 format (YYYY-MM-DD)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TransactionInputDate_example_autogenerated": "2023-01-15"
              }
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "The amount of the transaction in the `currency`. Must be a positive value. For example, if the `currency` is USD, then it's the amount in dollars.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TransactionInputAmount_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "entry_type",
              "wireValue": "entry_type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EntryType",
              "typeId": "EntryType",
              "inline": false,
              "type": "named"
            },
            "docs": "The direction of the flow of the money from the perspective of the account holder. `outgoing` to represent money leaving the account, such as purchases or fees, while `incoming` represents money entering the account, such as income or refunds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "currency",
              "wireValue": "currency"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Currency",
              "typeId": "Currency",
              "inline": false,
              "type": "named"
            },
            "docs": "The currency of the transaction in ISO 4217 format",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "account_holder_id",
              "wireValue": "account_holder_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique ID of the account holder. Unsetting it will disable [categorization](./docs/v3/enrichment/entities).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TransactionInputAccountHolderId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "location",
              "wireValue": "location"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "LocationInput",
                  "typeId": "LocationInput",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "TransactionInput_example_0": {
            "id": "xbx8YP14g565Xk",
            "description": "SQ* STARBUCKS NW 43RD",
            "date": "2024-03-30",
            "amount": 10,
            "entry_type": "outgoing",
            "currency": "USD",
            "account_holder_id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
            "location": {
              "country": "US"
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ValidationErrorLocItems": {
      "name": {
        "typeId": "ValidationErrorLocItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ValidationErrorLocItems"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ValidationErrorLocItems_example_autogenerated": "string"
        }
      }
    },
    "ValidationError": {
      "name": {
        "typeId": "ValidationError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ValidationError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "loc",
              "wireValue": "loc"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ValidationErrorLocItems",
                  "typeId": "ValidationErrorLocItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationErrorLoc_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": "msg",
              "wireValue": "msg"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationErrorMsg_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationErrorType_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ValidationError_example_autogenerated": {
            "loc": [
              "string"
            ],
            "msg": "string",
            "type": "string"
          }
        }
      }
    },
    "WebhookEventsItems": {
      "name": {
        "typeId": "WebhookEventsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "WebhookEventsItems"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "reports.resolved",
              "wireValue": "reports.resolved"
            }
          },
          {
            "name": {
              "name": "reports.rejected",
              "wireValue": "reports.rejected"
            }
          },
          {
            "name": {
              "name": "reports.pending",
              "wireValue": "reports.pending"
            }
          },
          {
            "name": {
              "name": "bank_statements.completed",
              "wireValue": "bank_statements.completed"
            }
          },
          {
            "name": {
              "name": "bank_statements.error",
              "wireValue": "bank_statements.error"
            }
          },
          {
            "name": {
              "name": "batches.completed",
              "wireValue": "batches.completed"
            }
          },
          {
            "name": {
              "name": "batches.error",
              "wireValue": "batches.error"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "WebhookEventsItems_example_autogenerated": "reports.resolved"
        }
      }
    },
    "Webhook": {
      "name": {
        "typeId": "Webhook",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Webhook"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "url",
              "wireValue": "url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1,
                    "maxLength": 1024,
                    "format": "uri"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The URL of the webhook",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookUrl_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "events",
              "wireValue": "events"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "WebhookEventsItems",
                  "typeId": "WebhookEventsItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A list of events that this webhook subscribes to",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookEvents_example_autogenerated": [
                  "reports.resolved"
                ]
              }
            }
          },
          {
            "name": {
              "name": "token",
              "wireValue": "token"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "maxLength": 128
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A secret string used to authenticate the webhook. This value will be included in the `X-Ntropy-Token` header when sending requests to the webhook",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookToken_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A generated unique identifier for the webhook",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The date and time when the webhook was created.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookCreatedAt_example_autogenerated": "2024-01-15T09:30:00Z"
              }
            }
          },
          {
            "name": {
              "name": "enabled",
              "wireValue": "enabled"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether the webhook is enabled or not.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookEnabled_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "Webhook_example_0": {
            "url": "https://example.com:5689",
            "events": [
              "batches.completed",
              "batches.error"
            ],
            "token": "hunter2",
            "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
            "created_at": "2024-10-03T02:53:30.167953",
            "enabled": true
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "WebhookBaseEventsItems": {
      "name": {
        "typeId": "WebhookBaseEventsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "WebhookBaseEventsItems"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "reports.resolved",
              "wireValue": "reports.resolved"
            }
          },
          {
            "name": {
              "name": "reports.rejected",
              "wireValue": "reports.rejected"
            }
          },
          {
            "name": {
              "name": "reports.pending",
              "wireValue": "reports.pending"
            }
          },
          {
            "name": {
              "name": "bank_statements.completed",
              "wireValue": "bank_statements.completed"
            }
          },
          {
            "name": {
              "name": "bank_statements.error",
              "wireValue": "bank_statements.error"
            }
          },
          {
            "name": {
              "name": "batches.completed",
              "wireValue": "batches.completed"
            }
          },
          {
            "name": {
              "name": "batches.error",
              "wireValue": "batches.error"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "WebhookBaseEventsItems_example_autogenerated": "reports.resolved"
        }
      }
    },
    "WebhookBase": {
      "name": {
        "typeId": "WebhookBase",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "WebhookBase"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "url",
              "wireValue": "url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1,
                    "maxLength": 1024,
                    "format": "uri"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The URL of the webhook",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookBaseUrl_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "events",
              "wireValue": "events"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "WebhookBaseEventsItems",
                  "typeId": "WebhookBaseEventsItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A list of events that this webhook subscribes to",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookBaseEvents_example_autogenerated": [
                  "reports.resolved"
                ]
              }
            }
          },
          {
            "name": {
              "name": "token",
              "wireValue": "token"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "maxLength": 128
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A secret string used to authenticate the webhook. This value will be included in the `X-Ntropy-Token` header when sending requests to the webhook",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookBaseToken_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "WebhookBase_example_autogenerated": {
            "url": "string",
            "events": [
              "reports.resolved"
            ]
          }
        }
      }
    },
    "WebhookPatchEventsItems": {
      "name": {
        "typeId": "WebhookPatchEventsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "WebhookPatchEventsItems"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "reports.resolved",
              "wireValue": "reports.resolved"
            }
          },
          {
            "name": {
              "name": "reports.rejected",
              "wireValue": "reports.rejected"
            }
          },
          {
            "name": {
              "name": "reports.pending",
              "wireValue": "reports.pending"
            }
          },
          {
            "name": {
              "name": "bank_statements.completed",
              "wireValue": "bank_statements.completed"
            }
          },
          {
            "name": {
              "name": "bank_statements.error",
              "wireValue": "bank_statements.error"
            }
          },
          {
            "name": {
              "name": "batches.completed",
              "wireValue": "batches.completed"
            }
          },
          {
            "name": {
              "name": "batches.error",
              "wireValue": "batches.error"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "WebhookPatchEventsItems_example_autogenerated": "reports.resolved"
        }
      }
    },
    "WebhookPatch": {
      "name": {
        "typeId": "WebhookPatch",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "WebhookPatch"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "url",
              "wireValue": "url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "minLength": 1,
                        "maxLength": 1024,
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The URL of the webhook",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookPatchUrl_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "events",
              "wireValue": "events"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "WebhookPatchEventsItems",
                      "typeId": "WebhookPatchEventsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A list of events that this webhook subscribes to",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookPatchEvents_example_autogenerated": [
                  "reports.resolved"
                ]
              }
            }
          },
          {
            "name": {
              "name": "token",
              "wireValue": "token"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "maxLength": 128
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A secret string used to authenticate the webhook. This value will be included in the `X-Ntropy-Token` header when sending requests to the webhook",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookPatchToken_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "enabled",
              "wireValue": "enabled"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether the webhook is enabled or not.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookPatchEnabled_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "WebhookPatch_example_autogenerated": {}
        }
      }
    },
    "Expr": {
      "name": {
        "typeId": "Expr",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Expr"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall",
              "typeId": "FnCall",
              "inline": false,
              "displayName": "function",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Expr_example_autogenerated": {}
        }
      }
    },
    "TxProp": {
      "name": {
        "typeId": "TxProp",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TxProp"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "logo",
              "wireValue": "logo"
            }
          },
          {
            "name": {
              "name": "website",
              "wireValue": "website"
            }
          },
          {
            "name": {
              "name": "merchant",
              "wireValue": "merchant"
            }
          },
          {
            "name": {
              "name": "description",
              "wireValue": "description"
            }
          },
          {
            "name": {
              "name": "merchant_id",
              "wireValue": "merchant_id"
            }
          },
          {
            "name": {
              "name": "location",
              "wireValue": "location"
            }
          },
          {
            "name": {
              "name": "person",
              "wireValue": "person"
            }
          },
          {
            "name": {
              "name": "transaction_type",
              "wireValue": "transaction_type"
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            }
          },
          {
            "name": {
              "name": "entry_type",
              "wireValue": "entry_type"
            }
          },
          {
            "name": {
              "name": "account_holder_type",
              "wireValue": "account_holder_type"
            }
          },
          {
            "name": {
              "name": "account_holder_id",
              "wireValue": "account_holder_id"
            }
          },
          {
            "name": {
              "name": "account_holder_name",
              "wireValue": "account_holder_name"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TxProp_example_autogenerated": "logo"
        }
      }
    },
    "FnCall0": {
      "name": {
        "typeId": "FnCall0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall0",
        "displayName": "&&"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "&&",
              "wireValue": "&&"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf0_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall0_example_autogenerated": {
            "&&": [
              {}
            ]
          }
        }
      }
    },
    "FnCall1": {
      "name": {
        "typeId": "FnCall1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall1",
        "displayName": "||"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "||",
              "wireValue": "||"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf1_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall1_example_autogenerated": {
            "||": [
              {}
            ]
          }
        }
      }
    },
    "FnCall2": {
      "name": {
        "typeId": "FnCall2",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall2",
        "displayName": "=="
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "==",
              "wireValue": "=="
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf2_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall2_example_autogenerated": {
            "==": [
              {}
            ]
          }
        }
      }
    },
    "FnCall3": {
      "name": {
        "typeId": "FnCall3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall3",
        "displayName": "+"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "+",
              "wireValue": "+"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf3_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall3_example_autogenerated": {
            "+": [
              {}
            ]
          }
        }
      }
    },
    "FnCall4": {
      "name": {
        "typeId": "FnCall4",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall4",
        "displayName": "-"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "-",
              "wireValue": "-"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf4_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall4_example_autogenerated": {
            "-": [
              {}
            ]
          }
        }
      }
    },
    "FnCall5": {
      "name": {
        "typeId": "FnCall5",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall5",
        "displayName": "*"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "*",
              "wireValue": "*"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf5_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall5_example_autogenerated": {
            "*": [
              {}
            ]
          }
        }
      }
    },
    "FnCall6": {
      "name": {
        "typeId": "FnCall6",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall6",
        "displayName": "/"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "/",
              "wireValue": "/"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf6_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall6_example_autogenerated": {
            "/": [
              {}
            ]
          }
        }
      }
    },
    "FnCall7": {
      "name": {
        "typeId": "FnCall7",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall7",
        "displayName": "//"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "//",
              "wireValue": "//"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf7_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall7_example_autogenerated": {
            "//": [
              {}
            ]
          }
        }
      }
    },
    "FnCall8": {
      "name": {
        "typeId": "FnCall8",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall8",
        "displayName": "<"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "<",
              "wireValue": "<"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf8_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall8_example_autogenerated": {
            "<": [
              {}
            ]
          }
        }
      }
    },
    "FnCall9": {
      "name": {
        "typeId": "FnCall9",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall9",
        "displayName": "<="
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "<=",
              "wireValue": "<="
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf9_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall9_example_autogenerated": {
            "<=": [
              {}
            ]
          }
        }
      }
    },
    "FnCall10": {
      "name": {
        "typeId": "FnCall10",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall10",
        "displayName": ">"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": ">",
              "wireValue": ">"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf10_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall10_example_autogenerated": {
            ">": [
              {}
            ]
          }
        }
      }
    },
    "FnCall11": {
      "name": {
        "typeId": "FnCall11",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall11",
        "displayName": ">="
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": ">=",
              "wireValue": ">="
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf11_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall11_example_autogenerated": {
            ">=": [
              {}
            ]
          }
        }
      }
    },
    "FnCall12": {
      "name": {
        "typeId": "FnCall12",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall12",
        "displayName": "!"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "!",
              "wireValue": "!"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Expr",
              "typeId": "Expr",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall12_example_autogenerated": {
            "!": {}
          }
        }
      }
    },
    "FnCall13": {
      "name": {
        "typeId": "FnCall13",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall13",
        "displayName": "is_substring"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "is_substring",
              "wireValue": "is_substring"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf13IsSubstring_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall13_example_autogenerated": {
            "is_substring": [
              {}
            ]
          }
        }
      }
    },
    "FnCall14": {
      "name": {
        "typeId": "FnCall14",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall14",
        "displayName": "starts_with"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "starts_with",
              "wireValue": "starts_with"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf14StartsWith_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall14_example_autogenerated": {
            "starts_with": [
              {}
            ]
          }
        }
      }
    },
    "FnCall15": {
      "name": {
        "typeId": "FnCall15",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall15",
        "displayName": "ends_with"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "ends_with",
              "wireValue": "ends_with"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FnCallOneOf15EndsWith_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall15_example_autogenerated": {
            "ends_with": [
              {}
            ]
          }
        }
      }
    },
    "FnCall16": {
      "name": {
        "typeId": "FnCall16",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall16",
        "displayName": "to_lower"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "to_lower",
              "wireValue": "to_lower"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Expr",
              "typeId": "Expr",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall16_example_autogenerated": {
            "to_lower": {}
          }
        }
      }
    },
    "FnCall17": {
      "name": {
        "typeId": "FnCall17",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall17",
        "displayName": "to_upper"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "to_upper",
              "wireValue": "to_upper"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Expr",
              "typeId": "Expr",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall17_example_autogenerated": {
            "to_upper": {}
          }
        }
      }
    },
    "FnCall18": {
      "name": {
        "typeId": "FnCall18",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall18",
        "displayName": "has_label"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "has_label",
              "wireValue": "has_label"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Expr",
              "typeId": "Expr",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall18_example_autogenerated": {
            "has_label": {}
          }
        }
      }
    },
    "FnCall19": {
      "name": {
        "typeId": "FnCall19",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall19",
        "displayName": "has_mcc"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "has_mcc",
              "wireValue": "has_mcc"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Expr",
              "typeId": "Expr",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall19_example_autogenerated": {
            "has_mcc": {}
          }
        }
      }
    },
    "FnCall20": {
      "name": {
        "typeId": "FnCall20",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall20",
        "displayName": "get property"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "get",
                "camelCase": {
                  "unsafeName": "get",
                  "safeName": "get_"
                },
                "snakeCase": {
                  "unsafeName": "get",
                  "safeName": "get_"
                }
              },
              "wireValue": "get"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TxProp",
              "typeId": "TxProp",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall20_example_autogenerated": {
            "get": "logo"
          }
        }
      }
    },
    "FnCall": {
      "name": {
        "typeId": "FnCall",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FnCall"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall0",
              "typeId": "FnCall0",
              "displayName": "&&",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall1",
              "typeId": "FnCall1",
              "displayName": "||",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall2",
              "typeId": "FnCall2",
              "displayName": "==",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall3",
              "typeId": "FnCall3",
              "displayName": "+",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall4",
              "typeId": "FnCall4",
              "displayName": "-",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall5",
              "typeId": "FnCall5",
              "displayName": "*",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall6",
              "typeId": "FnCall6",
              "displayName": "/",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall7",
              "typeId": "FnCall7",
              "displayName": "//",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall8",
              "typeId": "FnCall8",
              "displayName": "<",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall9",
              "typeId": "FnCall9",
              "displayName": "<=",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall10",
              "typeId": "FnCall10",
              "displayName": ">",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall11",
              "typeId": "FnCall11",
              "displayName": ">=",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall12",
              "typeId": "FnCall12",
              "displayName": "!",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall13",
              "typeId": "FnCall13",
              "displayName": "is_substring",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall14",
              "typeId": "FnCall14",
              "displayName": "starts_with",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall15",
              "typeId": "FnCall15",
              "displayName": "ends_with",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall16",
              "typeId": "FnCall16",
              "displayName": "to_lower",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall17",
              "typeId": "FnCall17",
              "displayName": "to_upper",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall18",
              "typeId": "FnCall18",
              "displayName": "has_label",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall19",
              "typeId": "FnCall19",
              "displayName": "has_mcc",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "FnCall20",
              "typeId": "FnCall20",
              "displayName": "get property",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FnCall_example_autogenerated": {
            "!": {}
          }
        }
      }
    },
    "Action": {
      "name": {
        "typeId": "Action",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Action"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "If",
                "camelCase": {
                  "unsafeName": "if",
                  "safeName": "if_"
                },
                "snakeCase": {
                  "unsafeName": "if",
                  "safeName": "if_"
                }
              },
              "typeId": "If",
              "inline": false,
              "displayName": "if",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ModifyLabels",
              "typeId": "ModifyLabels",
              "inline": false,
              "displayName": "modify labels",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Setter",
              "typeId": "Setter",
              "inline": false,
              "displayName": "set",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Action_example_autogenerated": {
            "if": {}
          }
        }
      }
    },
    "If": {
      "name": {
        "typeId": "If",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "If",
          "camelCase": {
            "unsafeName": "if",
            "safeName": "if_"
          },
          "snakeCase": {
            "unsafeName": "if",
            "safeName": "if_"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "if",
                "camelCase": {
                  "unsafeName": "if",
                  "safeName": "if_"
                },
                "snakeCase": {
                  "unsafeName": "if",
                  "safeName": "if_"
                }
              },
              "wireValue": "if"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Expr",
              "typeId": "Expr",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "then",
              "wireValue": "then"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Action",
                      "typeId": "Action",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IfThen_example_autogenerated": [
                  {
                    "if": {}
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "else",
                "camelCase": {
                  "unsafeName": "else",
                  "safeName": "else_"
                },
                "snakeCase": {
                  "unsafeName": "else",
                  "safeName": "else_"
                }
              },
              "wireValue": "else"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Action",
                      "typeId": "Action",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IfElse_example_autogenerated": [
                  {
                    "if": {}
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "If_example_autogenerated": {
            "if": {}
          }
        }
      }
    },
    "ModifyLabels0": {
      "name": {
        "typeId": "ModifyLabels0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModifyLabels0",
        "displayName": "add_label"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "add_label",
              "wireValue": "add_label"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Expr",
              "typeId": "Expr",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModifyLabels0_example_autogenerated": {
            "add_label": {}
          }
        }
      }
    },
    "ModifyLabels1": {
      "name": {
        "typeId": "ModifyLabels1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModifyLabels1",
        "displayName": "remove_label"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "remove_label",
              "wireValue": "remove_label"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Expr",
              "typeId": "Expr",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModifyLabels1_example_autogenerated": {
            "remove_label": {}
          }
        }
      }
    },
    "ModifyLabels2": {
      "name": {
        "typeId": "ModifyLabels2",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModifyLabels2",
        "displayName": "set_labels"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "set_labels",
              "wireValue": "set_labels"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModifyLabelsOneOf2SetLabels_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModifyLabels2_example_autogenerated": {
            "set_labels": [
              {}
            ]
          }
        }
      }
    },
    "ModifyLabels3": {
      "name": {
        "typeId": "ModifyLabels3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModifyLabels3",
        "displayName": "add_mcc"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "add_mcc",
              "wireValue": "add_mcc"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Expr",
              "typeId": "Expr",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModifyLabels3_example_autogenerated": {
            "add_mcc": {}
          }
        }
      }
    },
    "ModifyLabels4": {
      "name": {
        "typeId": "ModifyLabels4",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModifyLabels4",
        "displayName": "remove_mcc"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "remove_mcc",
              "wireValue": "remove_mcc"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Expr",
              "typeId": "Expr",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModifyLabels4_example_autogenerated": {
            "remove_mcc": {}
          }
        }
      }
    },
    "ModifyLabels5": {
      "name": {
        "typeId": "ModifyLabels5",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModifyLabels5",
        "displayName": "set_mcc"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "set_mcc",
              "wireValue": "set_mcc"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Expr",
                  "typeId": "Expr",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ModifyLabelsOneOf5SetMcc_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModifyLabels5_example_autogenerated": {
            "set_mcc": [
              {}
            ]
          }
        }
      }
    },
    "ModifyLabels": {
      "name": {
        "typeId": "ModifyLabels",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModifyLabels"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ModifyLabels0",
              "typeId": "ModifyLabels0",
              "displayName": "add_label",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ModifyLabels1",
              "typeId": "ModifyLabels1",
              "displayName": "remove_label",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ModifyLabels2",
              "typeId": "ModifyLabels2",
              "displayName": "set_labels",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ModifyLabels3",
              "typeId": "ModifyLabels3",
              "displayName": "add_mcc",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ModifyLabels4",
              "typeId": "ModifyLabels4",
              "displayName": "remove_mcc",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ModifyLabels5",
              "typeId": "ModifyLabels5",
              "displayName": "set_mcc",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModifyLabels_example_autogenerated": {
            "add_label": {}
          }
        }
      }
    },
    "EditableTxProp": {
      "name": {
        "typeId": "EditableTxProp",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EditableTxProp"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "logo",
              "wireValue": "logo"
            }
          },
          {
            "name": {
              "name": "website",
              "wireValue": "website"
            }
          },
          {
            "name": {
              "name": "merchant",
              "wireValue": "merchant"
            }
          },
          {
            "name": {
              "name": "merchant_id",
              "wireValue": "merchant_id"
            }
          },
          {
            "name": {
              "name": "location",
              "wireValue": "location"
            }
          },
          {
            "name": {
              "name": "person",
              "wireValue": "person"
            }
          },
          {
            "name": {
              "name": "transaction_type",
              "wireValue": "transaction_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EditableTxProp_example_autogenerated": "logo"
        }
      }
    },
    "Setter": {
      "name": {
        "typeId": "Setter",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Setter"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "set",
                "camelCase": {
                  "unsafeName": "set",
                  "safeName": "set_"
                },
                "snakeCase": {
                  "unsafeName": "set",
                  "safeName": "set_"
                }
              },
              "wireValue": "set"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EditableTxProp",
              "typeId": "EditableTxProp",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "to",
              "wireValue": "to"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Expr",
              "typeId": "Expr",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Setter_example_autogenerated": {
            "set": "logo",
            "to": {}
          }
        }
      }
    },
    "personalization": {
      "name": {
        "typeId": "personalization",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "personalization"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Action",
              "typeId": "Action",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Action",
              "typeId": "Action",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "personalization_example_0": [
            {
              "if": {},
              "then": [
                {
                  "set": "logo",
                  "to": "http://example.com/favicon.ico"
                }
              ],
              "else": [
                {
                  "remove_label": "example label"
                }
              ]
            }
          ]
        },
        "autogeneratedExamples": {}
      }
    },
    "Transactions_delete_transaction_v3_transactions__id__delete_Response_204": {
      "name": {
        "typeId": "Transactions_delete_transaction_v3_transactions__id__delete_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Transactions_delete_transaction_v3_transactions__id__delete_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Transactions_delete_transaction_v3_transactions__id__delete_Response_204_example_autogenerated": {}
        }
      }
    },
    "Bank statements_delete_bank_statement_v3_bank_statements__id__delete_Response_204": {
      "name": {
        "typeId": "Bank statements_delete_bank_statement_v3_bank_statements__id__delete_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Bank statements_delete_bank_statement_v3_bank_statements__id__delete_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Bank statements_delete_bank_statement_v3_bank_statements__id__delete_Response_204_example_autogenerated": {}
        }
      }
    },
    "Account Holders_delete_account_holder_v3_account_holders__id__delete_Response_204": {
      "name": {
        "typeId": "Account Holders_delete_account_holder_v3_account_holders__id__delete_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Account Holders_delete_account_holder_v3_account_holders__id__delete_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Account Holders_delete_account_holder_v3_account_holders__id__delete_Response_204_example_autogenerated": {}
        }
      }
    },
    "Webhooks_delete_webhook_v3_webhooks__id__delete_Response_204": {
      "name": {
        "typeId": "Webhooks_delete_webhook_v3_webhooks__id__delete_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Webhooks_delete_webhook_v3_webhooks__id__delete_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Webhooks_delete_webhook_v3_webhooks__id__delete_Response_204_example_autogenerated": {}
        }
      }
    },
    "Reports_delete_report_v3_reports__id__delete_Response_204": {
      "name": {
        "typeId": "Reports_delete_report_v3_reports__id__delete_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Reports_delete_report_v3_reports__id__delete_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Reports_delete_report_v3_reports__id__delete_Response_204_example_autogenerated": {}
        }
      }
    }
  },
  "services": {
    "service_transactions": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Transactions"
          ],
          "packagePath": [],
          "file": "Transactions"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Retrieve a transaction",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/transactions/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_transaction_v3_transactions__id__getRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_transaction_v3_transactions__id__getRequestNotFoundError"
              },
              "docs": "Transaction with the provided id not found."
            },
            {
              "error": {
                "name": "Get_transaction_v3_transactions__id__getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_transaction_v3_transactions__id__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/transactions/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_transactions.get_transaction_v3_transactions__id__get",
          "name": "get_transaction_v3_transactions__id__get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Transaction",
                  "typeId": "Transaction",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transactionsGetTransactionV3TransactionsIdGetExample": {
                      "id": "xbx8YP14g565Xk",
                      "description": "SQ* STARBUCKS NW 43RD",
                      "date": "2024-03-30",
                      "amount": 10,
                      "entry_type": "outgoing",
                      "currency": "USD",
                      "entities": {
                        "counterparty": {
                          "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                          "name": "Starbucks",
                          "website": "starbucks.com",
                          "logo": "https://logos.ntropy.com/starbucks.com",
                          "mccs": [
                            5814
                          ],
                          "type": "organization"
                        },
                        "intermediaries": [
                          {
                            "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                            "name": "Square",
                            "website": "squareup.com",
                            "logo": "https://logos.ntropy.com/squareup.com",
                            "mccs": [],
                            "type": "payment_processor"
                          }
                        ]
                      },
                      "categories": {
                        "general": "outgoing - coffee shops"
                      },
                      "location": {
                        "raw_address": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                        "structured": {
                          "street": "Nw 43rd Street 5480",
                          "city": "Gainesville",
                          "state": "Florida",
                          "postcode": "32653",
                          "country_code": "US",
                          "country": "United States",
                          "latitude": 29.704558,
                          "longitude": -82.389277,
                          "google_maps_url": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                          "apple_maps_url": "https://maps.apple.com/?q=29.704558,-82.389277"
                        }
                      },
                      "created_at": "2024-03-30T00:00:00",
                      "account_holder_id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                      "recurrence": {
                        "type": "recurring"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_transactionsGetTransactionV3TransactionsIdGetExample_200": {
                "displayName": "getTransactionV3TransactionsIdGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/transactions/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "xbx8YP14g565Xk",
                      "description": "SQ* STARBUCKS NW 43RD",
                      "date": "2024-03-30",
                      "amount": 10,
                      "entry_type": "outgoing",
                      "currency": "USD",
                      "entities": {
                        "counterparty": {
                          "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                          "name": "Starbucks",
                          "website": "starbucks.com",
                          "logo": "https://logos.ntropy.com/starbucks.com",
                          "mccs": [
                            5814
                          ],
                          "type": "organization"
                        },
                        "intermediaries": [
                          {
                            "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                            "name": "Square",
                            "website": "squareup.com",
                            "logo": "https://logos.ntropy.com/squareup.com",
                            "mccs": [],
                            "type": "payment_processor"
                          }
                        ]
                      },
                      "categories": {
                        "general": "outgoing - coffee shops"
                      },
                      "location": {
                        "raw_address": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                        "structured": {
                          "street": "Nw 43rd Street 5480",
                          "city": "Gainesville",
                          "state": "Florida",
                          "postcode": "32653",
                          "country_code": "US",
                          "country": "United States",
                          "latitude": 29.704558,
                          "longitude": -82.389277,
                          "google_maps_url": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                          "apple_maps_url": "https://maps.apple.com/?q=29.704558,-82.389277"
                        }
                      },
                      "created_at": "2024-03-30T00:00:00",
                      "account_holder_id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                      "recurrence": {
                        "type": "recurring"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Transaction",
                      "typeId": "Transaction",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "transactionsGetTransactionV3TransactionsIdGetExample": {
                          "id": "xbx8YP14g565Xk",
                          "description": "SQ* STARBUCKS NW 43RD",
                          "date": "2024-03-30",
                          "amount": 10,
                          "entry_type": "outgoing",
                          "currency": "USD",
                          "entities": {
                            "counterparty": {
                              "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                              "name": "Starbucks",
                              "website": "starbucks.com",
                              "logo": "https://logos.ntropy.com/starbucks.com",
                              "mccs": [
                                5814
                              ],
                              "type": "organization"
                            },
                            "intermediaries": [
                              {
                                "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                                "name": "Square",
                                "website": "squareup.com",
                                "logo": "https://logos.ntropy.com/squareup.com",
                                "mccs": [],
                                "type": "payment_processor"
                              }
                            ]
                          },
                          "categories": {
                            "general": "outgoing - coffee shops"
                          },
                          "location": {
                            "raw_address": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                            "structured": {
                              "street": "Nw 43rd Street 5480",
                              "city": "Gainesville",
                              "state": "Florida",
                              "postcode": "32653",
                              "country_code": "US",
                              "country": "United States",
                              "latitude": 29.704558,
                              "longitude": -82.389277,
                              "google_maps_url": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                              "apple_maps_url": "https://maps.apple.com/?q=29.704558,-82.389277"
                            }
                          },
                          "created_at": "2024-03-30T00:00:00",
                          "account_holder_id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                          "recurrence": {
                            "type": "recurring"
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Deletes a transaction",
          "method": "DELETE",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/transactions/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_transaction_v3_transactions__id__deleteRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_transaction_v3_transactions__id__deleteRequestNotFoundError"
              },
              "docs": "Transaction with the provided id not found."
            },
            {
              "error": {
                "name": "Delete_transaction_v3_transactions__id__deleteRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_transaction_v3_transactions__id__deleteRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/transactions/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_transactions.delete_transaction_v3_transactions__id__delete",
          "name": "delete_transaction_v3_transactions__id__delete",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Transactions_delete_transaction_v3_transactions__id__delete_Response_204",
                  "typeId": "Transactions_delete_transaction_v3_transactions__id__delete_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Deletion successful",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transactionsDeleteTransactionV3TransactionsIdDeleteExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deleting a transaction will also delete it from our systems. This operation is permanent.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_transactionsDeleteTransactionV3TransactionsIdDeleteExample_204": {
                "displayName": "deleteTransactionV3TransactionsIdDeleteExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v3/transactions/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Transactions_delete_transaction_v3_transactions__id__delete_Response_204",
                      "typeId": "Transactions_delete_transaction_v3_transactions__id__delete_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Deletion successful",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "transactionsDeleteTransactionV3TransactionsIdDeleteExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List all transactions",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/transactions",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "Only return transactions older or equal than this date",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "Only return transactions newer than this date",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "Starting point for the set of transactions",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "cursor_example": "cursor"
                }
              }
            },
            {
              "name": {
                "name": "limit",
                "wireValue": "limit"
              },
              "docs": "The limit of transactions to be returned",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 25,
                        "validation": {
                          "max": 500,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "limit_example": 25
                }
              }
            },
            {
              "name": {
                "name": "account_holder_id",
                "wireValue": "account_holder_id"
              },
              "docs": "If specified, only return the transactions of this account holder",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "account_holder_id_example": "account_holder_id"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "List_transactions_v3_transactions_getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_transactions_v3_transactions_getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/transactions",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_transactions.list_transactions_v3_transactions_get",
          "name": "list_transactions_v3_transactions_get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PagedResponse_Transaction",
                  "typeId": "PagedResponse_Transaction",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transactionsListTransactionsV3TransactionsGetExample": {
                      "next_cursor": "XjdHaksD",
                      "data": [
                        {
                          "id": "xbx8YP14g565Xk",
                          "description": "SQ* STARBUCKS NW 43RD",
                          "date": "2024-03-30",
                          "amount": 10,
                          "entry_type": "outgoing",
                          "currency": "USD",
                          "entities": {
                            "counterparty": {
                              "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                              "name": "Starbucks",
                              "website": "starbucks.com",
                              "logo": "https://logos.ntropy.com/starbucks.com",
                              "mccs": [
                                5814
                              ],
                              "type": "organization"
                            },
                            "intermediaries": [
                              {
                                "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                                "name": "Square",
                                "website": "squareup.com",
                                "logo": "https://logos.ntropy.com/squareup.com",
                                "mccs": [],
                                "type": "payment_processor"
                              }
                            ]
                          },
                          "categories": {
                            "general": "outgoing - coffee shops"
                          },
                          "location": {
                            "raw_address": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                            "structured": {
                              "street": "Nw 43rd Street 5480",
                              "city": "Gainesville",
                              "state": "Florida",
                              "postcode": "32653",
                              "country_code": "US",
                              "country": "United States",
                              "latitude": 29.704558,
                              "longitude": -82.389277,
                              "google_maps_url": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                              "apple_maps_url": "https://maps.apple.com/?q=29.704558,-82.389277"
                            }
                          },
                          "created_at": "2024-03-30T00:00:00",
                          "account_holder_id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                          "recurrence": {
                            "type": "recurring"
                          }
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Return a list of enriched transactions starting with the most recent one.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_transactionsListTransactionsV3TransactionsGetExample_200": {
                "displayName": "listTransactionsV3TransactionsGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/transactions"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next_cursor": "XjdHaksD",
                      "data": [
                        {
                          "id": "xbx8YP14g565Xk",
                          "description": "SQ* STARBUCKS NW 43RD",
                          "date": "2024-03-30",
                          "amount": 10,
                          "entry_type": "outgoing",
                          "currency": "USD",
                          "entities": {
                            "counterparty": {
                              "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                              "name": "Starbucks",
                              "website": "starbucks.com",
                              "logo": "https://logos.ntropy.com/starbucks.com",
                              "mccs": [
                                5814
                              ],
                              "type": "organization"
                            },
                            "intermediaries": [
                              {
                                "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                                "name": "Square",
                                "website": "squareup.com",
                                "logo": "https://logos.ntropy.com/squareup.com",
                                "mccs": [],
                                "type": "payment_processor"
                              }
                            ]
                          },
                          "categories": {
                            "general": "outgoing - coffee shops"
                          },
                          "location": {
                            "raw_address": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                            "structured": {
                              "street": "Nw 43rd Street 5480",
                              "city": "Gainesville",
                              "state": "Florida",
                              "postcode": "32653",
                              "country_code": "US",
                              "country": "United States",
                              "latitude": 29.704558,
                              "longitude": -82.389277,
                              "google_maps_url": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                              "apple_maps_url": "https://maps.apple.com/?q=29.704558,-82.389277"
                            }
                          },
                          "created_at": "2024-03-30T00:00:00",
                          "account_holder_id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                          "recurrence": {
                            "type": "recurring"
                          }
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PagedResponse_Transaction",
                      "typeId": "PagedResponse_Transaction",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "transactionsListTransactionsV3TransactionsGetExample": {
                          "next_cursor": "XjdHaksD",
                          "data": [
                            {
                              "id": "xbx8YP14g565Xk",
                              "description": "SQ* STARBUCKS NW 43RD",
                              "date": "2024-03-30",
                              "amount": 10,
                              "entry_type": "outgoing",
                              "currency": "USD",
                              "entities": {
                                "counterparty": {
                                  "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                                  "name": "Starbucks",
                                  "website": "starbucks.com",
                                  "logo": "https://logos.ntropy.com/starbucks.com",
                                  "mccs": [
                                    5814
                                  ],
                                  "type": "organization"
                                },
                                "intermediaries": [
                                  {
                                    "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                                    "name": "Square",
                                    "website": "squareup.com",
                                    "logo": "https://logos.ntropy.com/squareup.com",
                                    "mccs": [],
                                    "type": "payment_processor"
                                  }
                                ]
                              },
                              "categories": {
                                "general": "outgoing - coffee shops"
                              },
                              "location": {
                                "raw_address": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                                "structured": {
                                  "street": "Nw 43rd Street 5480",
                                  "city": "Gainesville",
                                  "state": "Florida",
                                  "postcode": "32653",
                                  "country_code": "US",
                                  "country": "United States",
                                  "latitude": 29.704558,
                                  "longitude": -82.389277,
                                  "google_maps_url": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                                  "apple_maps_url": "https://maps.apple.com/?q=29.704558,-82.389277"
                                }
                              },
                              "created_at": "2024-03-30T00:00:00",
                              "account_holder_id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                              "recurrence": {
                                "type": "recurring"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Synchronously enrich transactions",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/transactions",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Post_transactions_v3_transactions_postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Post_transactions_v3_transactions_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/transactions",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_transactions.post_transactions_v3_transactions_post",
          "name": "post_transactions_v3_transactions_post",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "SyncEnrichmentInput",
              "typeId": "SyncEnrichmentInput",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "transactionsPostTransactionsV3TransactionsPostExample": {
                  "transactions": [
                    {
                      "id": "string",
                      "description": "string",
                      "date": "2023-01-15",
                      "amount": 1.1,
                      "entry_type": "incoming",
                      "currency": "EUR",
                      "account_holder_id": "string"
                    }
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "SyncEnrichmentInput",
                  "typeId": "SyncEnrichmentInput",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transactionsPostTransactionsV3TransactionsPostExample": {
                      "transactions": [
                        {
                          "id": "string",
                          "description": "string",
                          "date": "2023-01-15",
                          "amount": 1.1,
                          "entry_type": "incoming",
                          "currency": "EUR",
                          "account_holder_id": "string"
                        }
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "SyncEnrichmentOutput",
                  "typeId": "SyncEnrichmentOutput",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Enriched transactions.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transactionsPostTransactionsV3TransactionsPostExample": {
                      "transactions": [
                        {
                          "entities": {
                            "counterparty": {
                              "id": "string",
                              "name": "string",
                              "website": "string",
                              "logo": "string",
                              "mccs": [
                                1
                              ],
                              "type": "person"
                            },
                            "intermediaries": [
                              {
                                "id": "string",
                                "name": "string",
                                "website": "string",
                                "logo": "string",
                                "mccs": [
                                  1
                                ],
                                "type": "delivery_service"
                              }
                            ]
                          },
                          "categories": {
                            "general": "string",
                            "accounting": "operational expenses"
                          },
                          "location": {
                            "raw_address": "string",
                            "structured": {
                              "street": "string",
                              "city": "string",
                              "state": "string",
                              "postcode": "string",
                              "country_code": "string",
                              "country": "string",
                              "latitude": 1.1,
                              "longitude": 1.1,
                              "google_maps_url": "string",
                              "apple_maps_url": "string",
                              "store_number": "string"
                            }
                          },
                          "error": {
                            "code": "account_holder_not_found",
                            "message": "string"
                          },
                          "created_at": "2024-01-15T09:30:00Z",
                          "id": "string"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Enriches a list of transactions in synchronous fashion. The enriched transactions returned in\nthe order that they were submitted. Webhook events are not triggered for this operation. \n\nThis endpoint supports up to 1000 transactions. \n\nIf you want more throughput and live updates refer to the \n[async enrichment endpoint](../batches/post-batch).",
          "v2Examples": {
            "autogeneratedExamples": {
              "transactionsPostTransactionsV3TransactionsPostExample_200": {
                "displayName": "transactionsPostTransactionsV3TransactionsPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/transactions"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "transactions": [
                      {
                        "id": "string",
                        "description": "string",
                        "date": "2023-01-15",
                        "amount": 1.1,
                        "entry_type": "incoming",
                        "currency": "EUR",
                        "account_holder_id": "string"
                      }
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "transactions": [
                        {
                          "entities": {
                            "counterparty": {
                              "id": "string",
                              "name": "string",
                              "website": "string",
                              "logo": "string",
                              "mccs": [
                                1
                              ],
                              "type": "person"
                            },
                            "intermediaries": [
                              {
                                "id": "string",
                                "name": "string",
                                "website": "string",
                                "logo": "string",
                                "mccs": [
                                  1
                                ],
                                "type": "delivery_service"
                              }
                            ]
                          },
                          "categories": {
                            "general": "string",
                            "accounting": "operational expenses"
                          },
                          "location": {
                            "raw_address": "string",
                            "structured": {
                              "street": "string",
                              "city": "string",
                              "state": "string",
                              "postcode": "string",
                              "country_code": "string",
                              "country": "string",
                              "latitude": 1.1,
                              "longitude": 1.1,
                              "google_maps_url": "string",
                              "apple_maps_url": "string",
                              "store_number": "string"
                            }
                          },
                          "error": {
                            "code": "account_holder_not_found",
                            "message": "string"
                          },
                          "created_at": "2024-01-15T09:30:00Z",
                          "id": "string"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "SyncEnrichmentOutput",
                      "typeId": "SyncEnrichmentOutput",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Enriched transactions.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "transactionsPostTransactionsV3TransactionsPostExample": {
                          "transactions": [
                            {
                              "entities": {
                                "counterparty": {
                                  "id": "string",
                                  "name": "string",
                                  "website": "string",
                                  "logo": "string",
                                  "mccs": [
                                    1
                                  ],
                                  "type": "person"
                                },
                                "intermediaries": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "website": "string",
                                    "logo": "string",
                                    "mccs": [
                                      1
                                    ],
                                    "type": "delivery_service"
                                  }
                                ]
                              },
                              "categories": {
                                "general": "string",
                                "accounting": "operational expenses"
                              },
                              "location": {
                                "raw_address": "string",
                                "structured": {
                                  "street": "string",
                                  "city": "string",
                                  "state": "string",
                                  "postcode": "string",
                                  "country_code": "string",
                                  "country": "string",
                                  "latitude": 1.1,
                                  "longitude": 1.1,
                                  "google_maps_url": "string",
                                  "apple_maps_url": "string",
                                  "store_number": "string"
                                }
                              },
                              "error": {
                                "code": "account_holder_not_found",
                                "message": "string"
                              },
                              "created_at": "2024-01-15T09:30:00Z",
                              "id": "string"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Assign a transaction to an account holder",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/transactions/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/assign"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Set_transaction_ah_v3_transactions__id__assign_postRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Set_transaction_ah_v3_transactions__id__assign_postRequestNotFoundError"
              },
              "docs": "Transaction or account holder with the provided id not found."
            },
            {
              "error": {
                "name": "Set_transaction_ah_v3_transactions__id__assign_postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Set_transaction_ah_v3_transactions__id__assign_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/transactions/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/assign"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_transactions.set_transaction_ah_v3_transactions__id__assign_post",
          "name": "set_transaction_ah_v3_transactions__id__assign_post",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Body_set_transaction_ah_v3_transactions__id__assign_post",
              "typeId": "Body_set_transaction_ah_v3_transactions__id__assign_post",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "transactionsSetTransactionAhV3TransactionsIdAssignPostExample": {
                  "account_holder_id": "string"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Body_set_transaction_ah_v3_transactions__id__assign_post",
                  "typeId": "Body_set_transaction_ah_v3_transactions__id__assign_post",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transactionsSetTransactionAhV3TransactionsIdAssignPostExample": {
                      "account_holder_id": "string"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Transaction",
                  "typeId": "Transaction",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transactionsSetTransactionAhV3TransactionsIdAssignPostExample": {
                      "id": "xbx8YP14g565Xk",
                      "description": "SQ* STARBUCKS NW 43RD",
                      "date": "2024-03-30",
                      "amount": 10,
                      "entry_type": "outgoing",
                      "currency": "USD",
                      "entities": {
                        "counterparty": {
                          "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                          "name": "Starbucks",
                          "website": "starbucks.com",
                          "logo": "https://logos.ntropy.com/starbucks.com",
                          "mccs": [
                            5814
                          ],
                          "type": "organization"
                        },
                        "intermediaries": [
                          {
                            "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                            "name": "Square",
                            "website": "squareup.com",
                            "logo": "https://logos.ntropy.com/squareup.com",
                            "mccs": [],
                            "type": "payment_processor"
                          }
                        ]
                      },
                      "categories": {
                        "general": "outgoing - coffee shops"
                      },
                      "location": {
                        "raw_address": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                        "structured": {
                          "street": "Nw 43rd Street 5480",
                          "city": "Gainesville",
                          "state": "Florida",
                          "postcode": "32653",
                          "country_code": "US",
                          "country": "United States",
                          "latitude": 29.704558,
                          "longitude": -82.389277,
                          "google_maps_url": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                          "apple_maps_url": "https://maps.apple.com/?q=29.704558,-82.389277"
                        }
                      },
                      "created_at": "2024-03-30T00:00:00",
                      "account_holder_id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                      "recurrence": {
                        "type": "recurring"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Changes the account holder associated with the transaction. The old and new account holder must share the same categories",
          "v2Examples": {
            "autogeneratedExamples": {
              "transactionsSetTransactionAhV3TransactionsIdAssignPostExample_200": {
                "displayName": "transactionsSetTransactionAhV3TransactionsIdAssignPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/transactions/id/assign"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "account_holder_id": "string"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "xbx8YP14g565Xk",
                      "description": "SQ* STARBUCKS NW 43RD",
                      "date": "2024-03-30",
                      "amount": 10,
                      "entry_type": "outgoing",
                      "currency": "USD",
                      "entities": {
                        "counterparty": {
                          "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                          "name": "Starbucks",
                          "website": "starbucks.com",
                          "logo": "https://logos.ntropy.com/starbucks.com",
                          "mccs": [
                            5814
                          ],
                          "type": "organization"
                        },
                        "intermediaries": [
                          {
                            "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                            "name": "Square",
                            "website": "squareup.com",
                            "logo": "https://logos.ntropy.com/squareup.com",
                            "mccs": [],
                            "type": "payment_processor"
                          }
                        ]
                      },
                      "categories": {
                        "general": "outgoing - coffee shops"
                      },
                      "location": {
                        "raw_address": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                        "structured": {
                          "street": "Nw 43rd Street 5480",
                          "city": "Gainesville",
                          "state": "Florida",
                          "postcode": "32653",
                          "country_code": "US",
                          "country": "United States",
                          "latitude": 29.704558,
                          "longitude": -82.389277,
                          "google_maps_url": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                          "apple_maps_url": "https://maps.apple.com/?q=29.704558,-82.389277"
                        }
                      },
                      "created_at": "2024-03-30T00:00:00",
                      "account_holder_id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                      "recurrence": {
                        "type": "recurring"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Transaction",
                      "typeId": "Transaction",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "transactionsSetTransactionAhV3TransactionsIdAssignPostExample": {
                          "id": "xbx8YP14g565Xk",
                          "description": "SQ* STARBUCKS NW 43RD",
                          "date": "2024-03-30",
                          "amount": 10,
                          "entry_type": "outgoing",
                          "currency": "USD",
                          "entities": {
                            "counterparty": {
                              "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                              "name": "Starbucks",
                              "website": "starbucks.com",
                              "logo": "https://logos.ntropy.com/starbucks.com",
                              "mccs": [
                                5814
                              ],
                              "type": "organization"
                            },
                            "intermediaries": [
                              {
                                "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                                "name": "Square",
                                "website": "squareup.com",
                                "logo": "https://logos.ntropy.com/squareup.com",
                                "mccs": [],
                                "type": "payment_processor"
                              }
                            ]
                          },
                          "categories": {
                            "general": "outgoing - coffee shops"
                          },
                          "location": {
                            "raw_address": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                            "structured": {
                              "street": "Nw 43rd Street 5480",
                              "city": "Gainesville",
                              "state": "Florida",
                              "postcode": "32653",
                              "country_code": "US",
                              "country": "United States",
                              "latitude": 29.704558,
                              "longitude": -82.389277,
                              "google_maps_url": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                              "apple_maps_url": "https://maps.apple.com/?q=29.704558,-82.389277"
                            }
                          },
                          "created_at": "2024-03-30T00:00:00",
                          "account_holder_id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                          "recurrence": {
                            "type": "recurring"
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_batches": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Batches"
          ],
          "packagePath": [],
          "file": "Batches"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List all batches",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/batches",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "Only return batches older or equal than this date",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "Only return batches newer than this date",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "Starting point for the set of batches",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "cursor_example": "cursor"
                }
              }
            },
            {
              "name": {
                "name": "limit",
                "wireValue": "limit"
              },
              "docs": "The limit of batches to be returned",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 10,
                        "validation": {
                          "max": 50,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "limit_example": 10
                }
              }
            },
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "If specified, only return batches with this status",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "BatchStatus",
                    "typeId": "BatchStatus",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "processing"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_batches_v3_batches_getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_batches_v3_batches_getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/batches",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_batches.get_batches_v3_batches_get",
          "name": "get_batches_v3_batches_get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PagedResponse_Batch",
                  "typeId": "PagedResponse_Batch",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "batchesGetBatchesV3BatchesGetExample": {
                      "next_cursor": "XjdHaksD",
                      "data": [
                        {
                          "id": "203613d2-83c8-4130-8809-d14206eeec20",
                          "status": "processing",
                          "created_at": "2024-01-01T00:00:00",
                          "updated_at": "2024-01-01T00:00:30",
                          "progress": 0,
                          "total": 4000
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of submitted batches starting with the most recent one.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_batchesGetBatchesV3BatchesGetExample_200": {
                "displayName": "getBatchesV3BatchesGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/batches"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next_cursor": "XjdHaksD",
                      "data": [
                        {
                          "id": "203613d2-83c8-4130-8809-d14206eeec20",
                          "status": "processing",
                          "created_at": "2024-01-01T00:00:00",
                          "updated_at": "2024-01-01T00:00:30",
                          "progress": 0,
                          "total": 4000
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PagedResponse_Batch",
                      "typeId": "PagedResponse_Batch",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "batchesGetBatchesV3BatchesGetExample": {
                          "next_cursor": "XjdHaksD",
                          "data": [
                            {
                              "id": "203613d2-83c8-4130-8809-d14206eeec20",
                              "status": "processing",
                              "created_at": "2024-01-01T00:00:00",
                              "updated_at": "2024-01-01T00:00:30",
                              "progress": 0,
                              "total": 4000
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Submit a batch of transactions",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/batches",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Post_batch_v3_batches_postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Post_batch_v3_batches_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/batches",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_batches.post_batch_v3_batches_post",
          "name": "post_batch_v3_batches_post",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AsyncEnrichmentInput",
              "typeId": "AsyncEnrichmentInput",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "batchesPostBatchV3BatchesPostExample": {
                  "transactions": [
                    {
                      "id": "string",
                      "description": "string",
                      "date": "2023-01-15",
                      "amount": 1.1,
                      "entry_type": "incoming",
                      "currency": "EUR",
                      "account_holder_id": "string"
                    }
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AsyncEnrichmentInput",
                  "typeId": "AsyncEnrichmentInput",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "batchesPostBatchV3BatchesPostExample": {
                      "transactions": [
                        {
                          "id": "string",
                          "description": "string",
                          "date": "2023-01-15",
                          "amount": 1.1,
                          "entry_type": "incoming",
                          "currency": "EUR",
                          "account_holder_id": "string"
                        }
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Batch",
                  "typeId": "Batch",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "batchesPostBatchV3BatchesPostExample": {
                      "id": "203613d2-83c8-4130-8809-d14206eeec20",
                      "status": "processing",
                      "created_at": "2024-01-01T00:00:00",
                      "updated_at": "2024-01-01T00:00:30",
                      "progress": 0,
                      "total": 4000
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a batch of transactions and enriches it in an asynchronous fashion. A batch, representing the status of the \nenrichment progress is returned as a result of the submission. \n\nIn order to be notified on the status of the batch, you can setup [webhooks](../../../webhooks) and receive \nthe respective notifications. Alternatively, you can \n[poll](../../../enrichment/introduction/#viewing-the-progress-of-a-batch) for the status of the batch using its id.\n\nThis endpoints supports up to 24960 transactions.",
          "v2Examples": {
            "autogeneratedExamples": {
              "batchesPostBatchV3BatchesPostExample_200": {
                "displayName": "batchesPostBatchV3BatchesPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/batches"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "transactions": [
                      {
                        "id": "string",
                        "description": "string",
                        "date": "2023-01-15",
                        "amount": 1.1,
                        "entry_type": "incoming",
                        "currency": "EUR",
                        "account_holder_id": "string"
                      }
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "203613d2-83c8-4130-8809-d14206eeec20",
                      "status": "processing",
                      "created_at": "2024-01-01T00:00:00",
                      "updated_at": "2024-01-01T00:00:30",
                      "progress": 0,
                      "total": 4000
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Batch",
                      "typeId": "Batch",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "batchesPostBatchV3BatchesPostExample": {
                          "id": "203613d2-83c8-4130-8809-d14206eeec20",
                          "status": "processing",
                          "created_at": "2024-01-01T00:00:00",
                          "updated_at": "2024-01-01T00:00:30",
                          "progress": 0,
                          "total": 4000
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Retrieve a batch",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/batches/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_single_batch_v3_batches__id__getRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_single_batch_v3_batches__id__getRequestNotFoundError"
              },
              "docs": "Batch with the provided id not found."
            },
            {
              "error": {
                "name": "Get_single_batch_v3_batches__id__getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_single_batch_v3_batches__id__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/batches/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_batches.get_single_batch_v3_batches__id__get",
          "name": "get_single_batch_v3_batches__id__get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Batch",
                  "typeId": "Batch",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "batchesGetSingleBatchV3BatchesIdGetExample": {
                      "id": "203613d2-83c8-4130-8809-d14206eeec20",
                      "status": "processing",
                      "created_at": "2024-01-01T00:00:00",
                      "updated_at": "2024-01-01T00:00:30",
                      "progress": 0,
                      "total": 4000
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_batchesGetSingleBatchV3BatchesIdGetExample_200": {
                "displayName": "getSingleBatchV3BatchesIdGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/batches/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "203613d2-83c8-4130-8809-d14206eeec20",
                      "status": "processing",
                      "created_at": "2024-01-01T00:00:00",
                      "updated_at": "2024-01-01T00:00:30",
                      "progress": 0,
                      "total": 4000
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Batch",
                      "typeId": "Batch",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "batchesGetSingleBatchV3BatchesIdGetExample": {
                          "id": "203613d2-83c8-4130-8809-d14206eeec20",
                          "status": "processing",
                          "created_at": "2024-01-01T00:00:00",
                          "updated_at": "2024-01-01T00:00:30",
                          "progress": 0,
                          "total": 4000
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Retrieve the results of a batch",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/batches/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/results"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_batch_results_v3_batches__id__results_getRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_batch_results_v3_batches__id__results_getRequestNotFoundError"
              },
              "docs": "Batch with the provided id not found."
            },
            {
              "error": {
                "name": "Get_batch_results_v3_batches__id__results_getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_batch_results_v3_batches__id__results_getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/batches/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/results"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_batches.get_batch_results_v3_batches__id__results_get",
          "name": "get_batch_results_v3_batches__id__results_get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BatchResult",
                  "typeId": "BatchResult",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returned batch of transaction enrichment results.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "batchesGetBatchResultsV3BatchesIdResultsGetExample": {
                      "id": "string",
                      "total": 1,
                      "status": "processing",
                      "results": {
                        "transactions": [
                          {
                            "entities": {
                              "counterparty": {
                                "id": "string",
                                "name": "string",
                                "website": "string",
                                "logo": "string",
                                "mccs": [
                                  1
                                ],
                                "type": "person"
                              },
                              "intermediaries": [
                                {
                                  "id": "string",
                                  "name": "string",
                                  "website": "string",
                                  "logo": "string",
                                  "mccs": [
                                    1
                                  ],
                                  "type": "delivery_service"
                                }
                              ]
                            },
                            "categories": {
                              "general": "string",
                              "accounting": "operational expenses"
                            },
                            "location": {
                              "raw_address": "string",
                              "structured": {
                                "street": "string",
                                "city": "string",
                                "state": "string",
                                "postcode": "string",
                                "country_code": "string",
                                "country": "string",
                                "latitude": 1.1,
                                "longitude": 1.1,
                                "google_maps_url": "string",
                                "apple_maps_url": "string",
                                "store_number": "string"
                              }
                            },
                            "error": {
                              "code": "account_holder_not_found",
                              "message": "string"
                            },
                            "created_at": "2024-01-15T09:30:00Z",
                            "id": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns the results of the enrichment request. The resulting enriched transactions are returned in the same order they were submitted. Results are available after the batch has finished processing.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_batchesGetBatchResultsV3BatchesIdResultsGetExample_200": {
                "displayName": "getBatchResultsV3BatchesIdResultsGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/batches/id/results"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "string",
                      "total": 1,
                      "status": "processing",
                      "results": {
                        "transactions": [
                          {
                            "entities": {
                              "counterparty": {
                                "id": "string",
                                "name": "string",
                                "website": "string",
                                "logo": "string",
                                "mccs": [
                                  1
                                ],
                                "type": "person"
                              },
                              "intermediaries": [
                                {
                                  "id": "string",
                                  "name": "string",
                                  "website": "string",
                                  "logo": "string",
                                  "mccs": [
                                    1
                                  ],
                                  "type": "delivery_service"
                                }
                              ]
                            },
                            "categories": {
                              "general": "string",
                              "accounting": "operational expenses"
                            },
                            "location": {
                              "raw_address": "string",
                              "structured": {
                                "street": "string",
                                "city": "string",
                                "state": "string",
                                "postcode": "string",
                                "country_code": "string",
                                "country": "string",
                                "latitude": 1.1,
                                "longitude": 1.1,
                                "google_maps_url": "string",
                                "apple_maps_url": "string",
                                "store_number": "string"
                              }
                            },
                            "error": {
                              "code": "account_holder_not_found",
                              "message": "string"
                            },
                            "created_at": "2024-01-15T09:30:00Z",
                            "id": "string"
                          }
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "BatchResult",
                      "typeId": "BatchResult",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Returned batch of transaction enrichment results.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "batchesGetBatchResultsV3BatchesIdResultsGetExample": {
                          "id": "string",
                          "total": 1,
                          "status": "processing",
                          "results": {
                            "transactions": [
                              {
                                "entities": {
                                  "counterparty": {
                                    "id": "string",
                                    "name": "string",
                                    "website": "string",
                                    "logo": "string",
                                    "mccs": [
                                      1
                                    ],
                                    "type": "person"
                                  },
                                  "intermediaries": [
                                    {
                                      "id": "string",
                                      "name": "string",
                                      "website": "string",
                                      "logo": "string",
                                      "mccs": [
                                        1
                                      ],
                                      "type": "delivery_service"
                                    }
                                  ]
                                },
                                "categories": {
                                  "general": "string",
                                  "accounting": "operational expenses"
                                },
                                "location": {
                                  "raw_address": "string",
                                  "structured": {
                                    "street": "string",
                                    "city": "string",
                                    "state": "string",
                                    "postcode": "string",
                                    "country_code": "string",
                                    "country": "string",
                                    "latitude": 1.1,
                                    "longitude": 1.1,
                                    "google_maps_url": "string",
                                    "apple_maps_url": "string",
                                    "store_number": "string"
                                  }
                                },
                                "error": {
                                  "code": "account_holder_not_found",
                                  "message": "string"
                                },
                                "created_at": "2024-01-15T09:30:00Z",
                                "id": "string"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_bankStatements": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Bank statements"
          ],
          "packagePath": [],
          "file": "Bank statements"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List all bank statements",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/bank_statements",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "Only return bank statements older or equal than this date",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "Only return bank statements newer than this date",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "Starting point for the set of bank statements",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "cursor_example": "cursor"
                }
              }
            },
            {
              "name": {
                "name": "limit",
                "wireValue": "limit"
              },
              "docs": "The limit of bank statements to be returned",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 10,
                        "validation": {
                          "max": 50,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "limit_example": 10
                }
              }
            },
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "If specified, only return bank statements with this status",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "DocumentStatus",
                    "typeId": "DocumentStatus",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "queued"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_bank_statements_v3_bank_statements_getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_bank_statements_v3_bank_statements_getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/bank_statements",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bankStatements.get_bank_statements_v3_bank_statements_get",
          "name": "get_bank_statements_v3_bank_statements_get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PagedResponse_BankStatement",
                  "typeId": "PagedResponse_BankStatement",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bankStatementsGetBankStatementsV3BankStatementsGetExample": {
                      "next_cursor": "XjdHaksD",
                      "data": [
                        {
                          "id": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                          "name": "2014-01-01_2014-02-01_statement.pdf",
                          "status": "processing",
                          "created_at": "2024-01-01T00:00:00",
                          "file": {
                            "no_pages": 1,
                            "size": 4096
                          }
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Return a list of submitted bank statements starting with the most recent one.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_bankStatementsGetBankStatementsV3BankStatementsGetExample_200": {
                "displayName": "getBankStatementsV3BankStatementsGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/bank_statements"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next_cursor": "XjdHaksD",
                      "data": [
                        {
                          "id": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                          "name": "2014-01-01_2014-02-01_statement.pdf",
                          "status": "processing",
                          "created_at": "2024-01-01T00:00:00",
                          "file": {
                            "no_pages": 1,
                            "size": 4096
                          }
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PagedResponse_BankStatement",
                      "typeId": "PagedResponse_BankStatement",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bankStatementsGetBankStatementsV3BankStatementsGetExample": {
                          "next_cursor": "XjdHaksD",
                          "data": [
                            {
                              "id": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                              "name": "2014-01-01_2014-02-01_statement.pdf",
                              "status": "processing",
                              "created_at": "2024-01-01T00:00:00",
                              "file": {
                                "no_pages": 1,
                                "size": 4096
                              }
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Submit a bank statement PDF",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/bank_statements",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Post_bank_statement_v3_bank_statements_postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Post_bank_statement_v3_bank_statements_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/bank_statements",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bankStatements.post_bank_statement_v3_bank_statements_post",
          "name": "post_bank_statement_v3_bank_statements_post",
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "Bank statements_post_bank_statement_v3_bank_statements_post_Request",
            "properties": [
              {
                "value": {
                  "key": {
                    "name": {
                      "originalName": "file",
                      "pascalCase": {
                        "unsafeName": "File",
                        "safeName": "File_"
                      }
                    },
                    "wireValue": "file"
                  },
                  "isOptional": false,
                  "contentType": "multipart/form-data",
                  "type": "file"
                },
                "type": "file"
              }
            ],
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "bankStatementsPostBankStatementV3BankStatementsPostExample": {
                  "file": "string"
                }
              }
            },
            "type": "fileUpload"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "multipart/form-data",
                "name": "Bank statements_post_bank_statement_v3_bank_statements_post_Request",
                "properties": [
                  {
                    "value": {
                      "key": {
                        "name": {
                          "originalName": "file",
                          "pascalCase": {
                            "unsafeName": "File",
                            "safeName": "File_"
                          }
                        },
                        "wireValue": "file"
                      },
                      "isOptional": false,
                      "contentType": "multipart/form-data",
                      "type": "file"
                    },
                    "type": "file"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bankStatementsPostBankStatementV3BankStatementsPostExample": {
                      "file": "string"
                    }
                  }
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BankStatement",
                  "typeId": "BankStatement",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bankStatementsPostBankStatementV3BankStatementsPostExample": {
                      "id": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                      "name": "2014-01-01_2014-02-01_statement.pdf",
                      "status": "processing",
                      "created_at": "2024-01-01T00:00:00",
                      "file": {
                        "no_pages": 1,
                        "size": 4096
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Upload a PDF file and queue it for extraction.",
          "v2Examples": {
            "autogeneratedExamples": {
              "bankStatementsPostBankStatementV3BankStatementsPostExample_200": {
                "displayName": "bankStatementsPostBankStatementV3BankStatementsPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/bank_statements"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "file": "string"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                      "name": "2014-01-01_2014-02-01_statement.pdf",
                      "status": "processing",
                      "created_at": "2024-01-01T00:00:00",
                      "file": {
                        "no_pages": 1,
                        "size": 4096
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "BankStatement",
                      "typeId": "BankStatement",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bankStatementsPostBankStatementV3BankStatementsPostExample": {
                          "id": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                          "name": "2014-01-01_2014-02-01_statement.pdf",
                          "status": "processing",
                          "created_at": "2024-01-01T00:00:00",
                          "file": {
                            "no_pages": 1,
                            "size": 4096
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Retrieve a bank statement",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/bank_statements/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_bank_statement_v3_bank_statements__id__getRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_bank_statement_v3_bank_statements__id__getRequestNotFoundError"
              },
              "docs": "Bank statement with the provided id not found."
            },
            {
              "error": {
                "name": "Get_bank_statement_v3_bank_statements__id__getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_bank_statement_v3_bank_statements__id__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/bank_statements/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bankStatements.get_bank_statement_v3_bank_statements__id__get",
          "name": "get_bank_statement_v3_bank_statements__id__get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BankStatement",
                  "typeId": "BankStatement",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bankStatementsGetBankStatementV3BankStatementsIdGetExample": {
                      "id": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                      "name": "2014-01-01_2014-02-01_statement.pdf",
                      "status": "processing",
                      "created_at": "2024-01-01T00:00:00",
                      "file": {
                        "no_pages": 1,
                        "size": 4096
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_bankStatementsGetBankStatementV3BankStatementsIdGetExample_200": {
                "displayName": "getBankStatementV3BankStatementsIdGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/bank_statements/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                      "name": "2014-01-01_2014-02-01_statement.pdf",
                      "status": "processing",
                      "created_at": "2024-01-01T00:00:00",
                      "file": {
                        "no_pages": 1,
                        "size": 4096
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "BankStatement",
                      "typeId": "BankStatement",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bankStatementsGetBankStatementV3BankStatementsIdGetExample": {
                          "id": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                          "name": "2014-01-01_2014-02-01_statement.pdf",
                          "status": "processing",
                          "created_at": "2024-01-01T00:00:00",
                          "file": {
                            "no_pages": 1,
                            "size": 4096
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Deletes a bank statement",
          "method": "DELETE",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/bank_statements/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_bank_statement_v3_bank_statements__id__deleteRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_bank_statement_v3_bank_statements__id__deleteRequestNotFoundError"
              },
              "docs": "Bank statement with the provided id not found."
            },
            {
              "error": {
                "name": "Delete_bank_statement_v3_bank_statements__id__deleteRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_bank_statement_v3_bank_statements__id__deleteRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/bank_statements/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bankStatements.delete_bank_statement_v3_bank_statements__id__delete",
          "name": "delete_bank_statement_v3_bank_statements__id__delete",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Bank statements_delete_bank_statement_v3_bank_statements__id__delete_Response_204",
                  "typeId": "Bank statements_delete_bank_statement_v3_bank_statements__id__delete_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Deletion successful",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bankStatementsDeleteBankStatementV3BankStatementsIdDeleteExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_bankStatementsDeleteBankStatementV3BankStatementsIdDeleteExample_204": {
                "displayName": "deleteBankStatementV3BankStatementsIdDeleteExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v3/bank_statements/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Bank statements_delete_bank_statement_v3_bank_statements__id__delete_Response_204",
                      "typeId": "Bank statements_delete_bank_statement_v3_bank_statements__id__delete_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Deletion successful",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bankStatementsDeleteBankStatementV3BankStatementsIdDeleteExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Quickly extract account holder, institution and first account",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/bank_statements/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/overview"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestNotFoundError"
              },
              "docs": "Bank statement with the provided id not found."
            },
            {
              "error": {
                "name": "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/bank_statements/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/overview"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bankStatements.get_bank_statement_statement_info_v3_bank_statements__id__overview_post",
          "name": "get_bank_statement_statement_info_v3_bank_statements__id__overview_post",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "StatementInfo",
                  "typeId": "StatementInfo",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bankStatementsGetBankStatementStatementInfoV3BankStatementsIdOverviewPostExample": {
                      "institution": "Well's Fargo",
                      "start_date": "2024-01-01",
                      "end_date": "2024-02-01",
                      "account_holder": {
                        "type": "consumer",
                        "name": "John Doe",
                        "address": {
                          "street": "601 Rosebud Avenue",
                          "postcode": "77901",
                          "city": "Victoria",
                          "state": "Texas",
                          "country": "United States"
                        }
                      },
                      "accounts": [
                        {
                          "type": "checking",
                          "number": "83721",
                          "opening_balance": 1000,
                          "closing_balance": 1500,
                          "iso_currency_code": "USD"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Extracts account holder, bank and account information extracted from the first page of the bank statement, which is typically available before the full results. This is a synchronous call.\n\nComplete guide: [Overview](../../../bank-statements)",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_bankStatementsGetBankStatementStatementInfoV3BankStatementsIdOverviewPostExample_200": {
                "displayName": "getBankStatementStatementInfoV3BankStatementsIdOverviewPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/bank_statements/id/overview"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "institution": "Well's Fargo",
                      "start_date": "2024-01-01",
                      "end_date": "2024-02-01",
                      "account_holder": {
                        "type": "consumer",
                        "name": "John Doe",
                        "address": {
                          "street": "601 Rosebud Avenue",
                          "postcode": "77901",
                          "city": "Victoria",
                          "state": "Texas",
                          "country": "United States"
                        }
                      },
                      "accounts": [
                        {
                          "type": "checking",
                          "number": "83721",
                          "opening_balance": 1000,
                          "closing_balance": 1500,
                          "iso_currency_code": "USD"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "StatementInfo",
                      "typeId": "StatementInfo",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bankStatementsGetBankStatementStatementInfoV3BankStatementsIdOverviewPostExample": {
                          "institution": "Well's Fargo",
                          "start_date": "2024-01-01",
                          "end_date": "2024-02-01",
                          "account_holder": {
                            "type": "consumer",
                            "name": "John Doe",
                            "address": {
                              "street": "601 Rosebud Avenue",
                              "postcode": "77901",
                              "city": "Victoria",
                              "state": "Texas",
                              "country": "United States"
                            }
                          },
                          "accounts": [
                            {
                              "type": "checking",
                              "number": "83721",
                              "opening_balance": 1000,
                              "closing_balance": 1500,
                              "iso_currency_code": "USD"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Retrieve the extraction results",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/bank_statements/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/results"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_bank_statement_result_v3_bank_statements__id__results_getRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_bank_statement_result_v3_bank_statements__id__results_getRequestNotFoundError"
              },
              "docs": "Bank statement with the provided id not found."
            },
            {
              "error": {
                "name": "Get_bank_statement_result_v3_bank_statements__id__results_getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_bank_statement_result_v3_bank_statements__id__results_getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/bank_statements/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/results"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bankStatements.get_bank_statement_result_v3_bank_statements__id__results_get",
          "name": "get_bank_statement_result_v3_bank_statements__id__results_get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BankStatementResults",
                  "typeId": "BankStatementResults",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bankStatementsGetBankStatementResultV3BankStatementsIdResultsGetExample": {
                      "accounts": [
                        {
                          "number": "string",
                          "opening_balance": 1.1,
                          "closing_balance": 1.1,
                          "start_date": "2023-01-15",
                          "end_date": "2023-01-15",
                          "is_balance_reconciled": true,
                          "total_incoming": 1.1,
                          "total_outgoing": 1.1,
                          "transactions": [
                            {
                              "id": "string",
                              "description": "string",
                              "date": "2023-01-15",
                              "amount": 1.1,
                              "entry_type": "incoming",
                              "currency": "EUR",
                              "running_balance": 1.1
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Return the extracted account information and associated transactions from a bank statement PDF. The results are accessible once the statement's status is `completed`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_bankStatementsGetBankStatementResultV3BankStatementsIdResultsGetExample_200": {
                "displayName": "getBankStatementResultV3BankStatementsIdResultsGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/bank_statements/id/results"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "accounts": [
                        {
                          "number": "string",
                          "opening_balance": 1.1,
                          "closing_balance": 1.1,
                          "start_date": "2023-01-15",
                          "end_date": "2023-01-15",
                          "is_balance_reconciled": true,
                          "total_incoming": 1.1,
                          "total_outgoing": 1.1,
                          "transactions": [
                            {
                              "id": "string",
                              "description": "string",
                              "date": "2023-01-15",
                              "amount": 1.1,
                              "entry_type": "incoming",
                              "currency": "EUR",
                              "running_balance": 1.1
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "BankStatementResults",
                      "typeId": "BankStatementResults",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bankStatementsGetBankStatementResultV3BankStatementsIdResultsGetExample": {
                          "accounts": [
                            {
                              "number": "string",
                              "opening_balance": 1.1,
                              "closing_balance": 1.1,
                              "start_date": "2023-01-15",
                              "end_date": "2023-01-15",
                              "is_balance_reconciled": true,
                              "total_incoming": 1.1,
                              "total_outgoing": 1.1,
                              "transactions": [
                                {
                                  "id": "string",
                                  "description": "string",
                                  "date": "2023-01-15",
                                  "amount": 1.1,
                                  "entry_type": "incoming",
                                  "currency": "EUR",
                                  "running_balance": 1.1
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_accountHolders": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Account Holders"
          ],
          "packagePath": [],
          "file": "Account Holders"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Retrieve an account holder.",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/account_holders/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_account_holder_v3_account_holders__id__getRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_account_holder_v3_account_holders__id__getRequestNotFoundError"
              },
              "docs": "Account holder with the provided id not found."
            },
            {
              "error": {
                "name": "Get_account_holder_v3_account_holders__id__getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_account_holder_v3_account_holders__id__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/account_holders/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_accountHolders.get_account_holder_v3_account_holders__id__get",
          "name": "get_account_holder_v3_account_holders__id__get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AccountHolderExternal",
                  "typeId": "AccountHolderExternal",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "accountHoldersGetAccountHolderV3AccountHoldersIdGetExample": {
                      "id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                      "type": "consumer",
                      "name": "John Doe",
                      "created_at": "2024-03-30T00:00:00"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_accountHoldersGetAccountHolderV3AccountHoldersIdGetExample_200": {
                "displayName": "getAccountHolderV3AccountHoldersIdGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/account_holders/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                      "type": "consumer",
                      "name": "John Doe",
                      "created_at": "2024-03-30T00:00:00"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AccountHolderExternal",
                      "typeId": "AccountHolderExternal",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "accountHoldersGetAccountHolderV3AccountHoldersIdGetExample": {
                          "id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                          "type": "consumer",
                          "name": "John Doe",
                          "created_at": "2024-03-30T00:00:00"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Deletes an account holder and their transactions",
          "method": "DELETE",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/account_holders/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_account_holder_v3_account_holders__id__deleteRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_account_holder_v3_account_holders__id__deleteRequestNotFoundError"
              },
              "docs": "Account holder with the provided id not found."
            },
            {
              "error": {
                "name": "Delete_account_holder_v3_account_holders__id__deleteRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_account_holder_v3_account_holders__id__deleteRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/account_holders/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_accountHolders.delete_account_holder_v3_account_holders__id__delete",
          "name": "delete_account_holder_v3_account_holders__id__delete",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Account Holders_delete_account_holder_v3_account_holders__id__delete_Response_204",
                  "typeId": "Account Holders_delete_account_holder_v3_account_holders__id__delete_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Deletion successful",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "accountHoldersDeleteAccountHolderV3AccountHoldersIdDeleteExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes all of the transactions in the account holder's history. This operation is permanent and irreversible",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_accountHoldersDeleteAccountHolderV3AccountHoldersIdDeleteExample_204": {
                "displayName": "deleteAccountHolderV3AccountHoldersIdDeleteExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v3/account_holders/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Account Holders_delete_account_holder_v3_account_holders__id__delete_Response_204",
                      "typeId": "Account Holders_delete_account_holder_v3_account_holders__id__delete_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Deletion successful",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "accountHoldersDeleteAccountHolderV3AccountHoldersIdDeleteExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "List all account holders.",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/account_holders",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "Only return account holders older or equal than this date",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "Only return account holders newer than this date",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "Starting point for the set of account holders",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "cursor_example": "cursor"
                }
              }
            },
            {
              "name": {
                "name": "limit",
                "wireValue": "limit"
              },
              "docs": "The limit of account holders to be returned",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 10,
                        "validation": {
                          "max": 50,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "limit_example": 10
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_account_holders_v3_account_holders_getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_account_holders_v3_account_holders_getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/account_holders",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_accountHolders.get_account_holders_v3_account_holders_get",
          "name": "get_account_holders_v3_account_holders_get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PagedResponse_AccountHolderExternal",
                  "typeId": "PagedResponse_AccountHolderExternal",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "accountHoldersGetAccountHoldersV3AccountHoldersGetExample": {
                      "next_cursor": "XjdHaksD",
                      "data": [
                        {
                          "id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                          "type": "consumer",
                          "name": "John Doe",
                          "created_at": "2024-03-30T00:00:00"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "base_accountHoldersGetAccountHoldersV3AccountHoldersGetExample_200": {
                "displayName": "getAccountHoldersV3AccountHoldersGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/account_holders"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next_cursor": "XjdHaksD",
                      "data": [
                        {
                          "id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                          "type": "consumer",
                          "name": "John Doe",
                          "created_at": "2024-03-30T00:00:00"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PagedResponse_AccountHolderExternal",
                      "typeId": "PagedResponse_AccountHolderExternal",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "accountHoldersGetAccountHoldersV3AccountHoldersGetExample": {
                          "next_cursor": "XjdHaksD",
                          "data": [
                            {
                              "id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                              "type": "consumer",
                              "name": "John Doe",
                              "created_at": "2024-03-30T00:00:00"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create an account holder.",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/account_holders",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Create_account_holder_v3_account_holders_postRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_account_holder_v3_account_holders_postRequestBadRequestError"
              },
              "docs": "Account holder with the provided id already exists."
            },
            {
              "error": {
                "name": "Create_account_holder_v3_account_holders_postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_account_holder_v3_account_holders_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/account_holders",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_accountHolders.create_account_holder_v3_account_holders_post",
          "name": "create_account_holder_v3_account_holders_post",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AccountHolderCreate",
              "typeId": "AccountHolderCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "accountHoldersCreateAccountHolderV3AccountHoldersPostExample": {
                  "id": "string",
                  "type": "consumer"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AccountHolderCreate",
                  "typeId": "AccountHolderCreate",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "accountHoldersCreateAccountHolderV3AccountHoldersPostExample": {
                      "id": "string",
                      "type": "consumer"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AccountHolderExternal",
                  "typeId": "AccountHolderExternal",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "accountHoldersCreateAccountHolderV3AccountHoldersPostExample": {
                      "id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                      "type": "consumer",
                      "name": "John Doe",
                      "created_at": "2024-03-30T00:00:00"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "accountHoldersCreateAccountHolderV3AccountHoldersPostExample_200": {
                "displayName": "accountHoldersCreateAccountHolderV3AccountHoldersPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/account_holders"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "id": "string",
                    "type": "consumer"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                      "type": "consumer",
                      "name": "John Doe",
                      "created_at": "2024-03-30T00:00:00"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AccountHolderExternal",
                      "typeId": "AccountHolderExternal",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "accountHoldersCreateAccountHolderV3AccountHoldersPostExample": {
                          "id": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                          "type": "consumer",
                          "name": "John Doe",
                          "created_at": "2024-03-30T00:00:00"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_recurrence": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Recurrence"
          ],
          "packagePath": [],
          "file": "Recurrence"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Find recurring groups in a transaction history",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/account_holders/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/recurring_groups"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestNotFoundError"
              },
              "docs": "Account holder with the provided id not found."
            },
            {
              "error": {
                "name": "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/account_holders/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/recurring_groups"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_recurrence.get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_post",
          "name": "get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_post",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RecurrenceGroup",
                      "typeId": "RecurrenceGroup",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "recurrenceGetAccountHolderRecurringPaymentsV3AccountHoldersIdRecurringGroupsPostExample": [
                      {
                        "id": "string",
                        "start_date": "2023-01-15",
                        "end_date": "2023-01-15",
                        "total_amount": 1.1,
                        "average_amount": 1.1,
                        "periodicity_in_days": 1.1,
                        "periodicity": "daily",
                        "counterparty": {
                          "id": "string",
                          "name": "string",
                          "website": "string",
                          "logo": "string",
                          "mccs": [
                            1
                          ],
                          "type": "person"
                        },
                        "categories": {
                          "general": "string",
                          "accounting": "operational expenses"
                        },
                        "transaction_ids": [
                          "string"
                        ]
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Identifies and categorizes recurring patterns found in the transaction history of the account holder, such as periodic payments or subscriptions. These patterns are called recurrence groups.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_recurrenceGetAccountHolderRecurringPaymentsV3AccountHoldersIdRecurringGroupsPostExample_200": {
                "displayName": "getAccountHolderRecurringPaymentsV3AccountHoldersIdRecurringGroupsPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/account_holders/id/recurring_groups"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": "string",
                        "start_date": "2023-01-15",
                        "end_date": "2023-01-15",
                        "total_amount": 1.1,
                        "average_amount": 1.1,
                        "periodicity_in_days": 1.1,
                        "periodicity": "daily",
                        "counterparty": {
                          "id": "string",
                          "name": "string",
                          "website": "string",
                          "logo": "string",
                          "mccs": [
                            1
                          ],
                          "type": "person"
                        },
                        "categories": {
                          "general": "string",
                          "accounting": "operational expenses"
                        },
                        "transaction_ids": [
                          "string"
                        ]
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RecurrenceGroup",
                          "typeId": "RecurrenceGroup",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "recurrenceGetAccountHolderRecurringPaymentsV3AccountHoldersIdRecurringGroupsPostExample": [
                          {
                            "id": "string",
                            "start_date": "2023-01-15",
                            "end_date": "2023-01-15",
                            "total_amount": 1.1,
                            "average_amount": 1.1,
                            "periodicity_in_days": 1.1,
                            "periodicity": "daily",
                            "counterparty": {
                              "id": "string",
                              "name": "string",
                              "website": "string",
                              "logo": "string",
                              "mccs": [
                                1
                              ],
                              "type": "person"
                            },
                            "categories": {
                              "general": "string",
                              "accounting": "operational expenses"
                            },
                            "transaction_ids": [
                              "string"
                            ]
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_webhooks": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Webhooks"
          ],
          "packagePath": [],
          "file": "Webhooks"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List all webhooks",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/webhooks",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_webhooks_v3_webhooks_getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_webhooks_v3_webhooks_getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/webhooks",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_webhooks.get_webhooks_v3_webhooks_get",
          "name": "get_webhooks_v3_webhooks_get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PagedResponse_Webhook",
                  "typeId": "PagedResponse_Webhook",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "webhooksGetWebhooksV3WebhooksGetExample": {
                      "next_cursor": "XjdHaksD",
                      "data": [
                        {
                          "url": "https://example.com:5689",
                          "events": [
                            "batches.completed",
                            "batches.error"
                          ],
                          "token": "hunter2",
                          "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                          "created_at": "2024-10-03T02:53:30.167953",
                          "enabled": true
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "List all webhooks",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_webhooksGetWebhooksV3WebhooksGetExample_200": {
                "displayName": "getWebhooksV3WebhooksGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/webhooks"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next_cursor": "XjdHaksD",
                      "data": [
                        {
                          "url": "https://example.com:5689",
                          "events": [
                            "batches.completed",
                            "batches.error"
                          ],
                          "token": "hunter2",
                          "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                          "created_at": "2024-10-03T02:53:30.167953",
                          "enabled": true
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PagedResponse_Webhook",
                      "typeId": "PagedResponse_Webhook",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "webhooksGetWebhooksV3WebhooksGetExample": {
                          "next_cursor": "XjdHaksD",
                          "data": [
                            {
                              "url": "https://example.com:5689",
                              "events": [
                                "batches.completed",
                                "batches.error"
                              ],
                              "token": "hunter2",
                              "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                              "created_at": "2024-10-03T02:53:30.167953",
                              "enabled": true
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create a webhook",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/webhooks",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Post_webhook_v3_webhooks_postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Post_webhook_v3_webhooks_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/webhooks",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_webhooks.post_webhook_v3_webhooks_post",
          "name": "post_webhook_v3_webhooks_post",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "WebhookBase",
              "typeId": "WebhookBase",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "webhooksPostWebhookV3WebhooksPostExample": {
                  "url": "string",
                  "events": [
                    "reports.resolved"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "WebhookBase",
                  "typeId": "WebhookBase",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "webhooksPostWebhookV3WebhooksPostExample": {
                      "url": "string",
                      "events": [
                        "reports.resolved"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Webhook",
                  "typeId": "Webhook",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "webhooksPostWebhookV3WebhooksPostExample": {
                      "url": "https://example.com:5689",
                      "events": [
                        "batches.completed",
                        "batches.error"
                      ],
                      "token": "hunter2",
                      "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                      "created_at": "2024-10-03T02:53:30.167953",
                      "enabled": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a webhook to be called when certain events occur.",
          "v2Examples": {
            "autogeneratedExamples": {
              "webhooksPostWebhookV3WebhooksPostExample_200": {
                "displayName": "webhooksPostWebhookV3WebhooksPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/webhooks"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "url": "string",
                    "events": [
                      "reports.resolved"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "url": "https://example.com:5689",
                      "events": [
                        "batches.completed",
                        "batches.error"
                      ],
                      "token": "hunter2",
                      "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                      "created_at": "2024-10-03T02:53:30.167953",
                      "enabled": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Webhook",
                      "typeId": "Webhook",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "webhooksPostWebhookV3WebhooksPostExample": {
                          "url": "https://example.com:5689",
                          "events": [
                            "batches.completed",
                            "batches.error"
                          ],
                          "token": "hunter2",
                          "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                          "created_at": "2024-10-03T02:53:30.167953",
                          "enabled": true
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Retrieve a webhook",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/webhooks/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_webhook_v3_webhooks__id__getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_webhook_v3_webhooks__id__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/webhooks/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_webhooks.get_webhook_v3_webhooks__id__get",
          "name": "get_webhook_v3_webhooks__id__get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Webhook",
                  "typeId": "Webhook",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "webhooksGetWebhookV3WebhooksIdGetExample": {
                      "url": "https://example.com:5689",
                      "events": [
                        "batches.completed",
                        "batches.error"
                      ],
                      "token": "hunter2",
                      "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                      "created_at": "2024-10-03T02:53:30.167953",
                      "enabled": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieve a webhook",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_webhooksGetWebhookV3WebhooksIdGetExample_200": {
                "displayName": "getWebhookV3WebhooksIdGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/webhooks/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "url": "https://example.com:5689",
                      "events": [
                        "batches.completed",
                        "batches.error"
                      ],
                      "token": "hunter2",
                      "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                      "created_at": "2024-10-03T02:53:30.167953",
                      "enabled": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Webhook",
                      "typeId": "Webhook",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "webhooksGetWebhookV3WebhooksIdGetExample": {
                          "url": "https://example.com:5689",
                          "events": [
                            "batches.completed",
                            "batches.error"
                          ],
                          "token": "hunter2",
                          "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                          "created_at": "2024-10-03T02:53:30.167953",
                          "enabled": true
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete a webhook",
          "method": "DELETE",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/webhooks/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_webhook_v3_webhooks__id__deleteRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_webhook_v3_webhooks__id__deleteRequestNotFoundError"
              },
              "docs": "Webhook with the provided id not found."
            },
            {
              "error": {
                "name": "Delete_webhook_v3_webhooks__id__deleteRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_webhook_v3_webhooks__id__deleteRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/webhooks/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_webhooks.delete_webhook_v3_webhooks__id__delete",
          "name": "delete_webhook_v3_webhooks__id__delete",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Webhooks_delete_webhook_v3_webhooks__id__delete_Response_204",
                  "typeId": "Webhooks_delete_webhook_v3_webhooks__id__delete_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Deletion successful",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "webhooksDeleteWebhookV3WebhooksIdDeleteExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete a webhook",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_webhooksDeleteWebhookV3WebhooksIdDeleteExample_204": {
                "displayName": "deleteWebhookV3WebhooksIdDeleteExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v3/webhooks/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Webhooks_delete_webhook_v3_webhooks__id__delete_Response_204",
                      "typeId": "Webhooks_delete_webhook_v3_webhooks__id__delete_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Deletion successful",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "webhooksDeleteWebhookV3WebhooksIdDeleteExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Update a webhook",
          "method": "PATCH",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/webhooks/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Patch_webhook_v3_webhooks__id__patchRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Patch_webhook_v3_webhooks__id__patchRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/webhooks/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_webhooks.patch_webhook_v3_webhooks__id__patch",
          "name": "patch_webhook_v3_webhooks__id__patch",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "WebhookPatch",
              "typeId": "WebhookPatch",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "webhooksPatchWebhookV3WebhooksIdPatchExample": {}
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "WebhookPatch",
                  "typeId": "WebhookPatch",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "webhooksPatchWebhookV3WebhooksIdPatchExample": {}
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Webhook",
                  "typeId": "Webhook",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "webhooksPatchWebhookV3WebhooksIdPatchExample": {
                      "url": "https://example.com:5689",
                      "events": [
                        "batches.completed",
                        "batches.error"
                      ],
                      "token": "hunter2",
                      "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                      "created_at": "2024-10-03T02:53:30.167953",
                      "enabled": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Update a webhook. Fields that aren't specified in the body will remain unchanged",
          "v2Examples": {
            "autogeneratedExamples": {
              "webhooksPatchWebhookV3WebhooksIdPatchExample_200": {
                "displayName": "webhooksPatchWebhookV3WebhooksIdPatchExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v3/webhooks/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "url": "https://example.com:5689",
                      "events": [
                        "batches.completed",
                        "batches.error"
                      ],
                      "token": "hunter2",
                      "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                      "created_at": "2024-10-03T02:53:30.167953",
                      "enabled": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Webhook",
                      "typeId": "Webhook",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "webhooksPatchWebhookV3WebhooksIdPatchExample": {
                          "url": "https://example.com:5689",
                          "events": [
                            "batches.completed",
                            "batches.error"
                          ],
                          "token": "hunter2",
                          "id": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                          "created_at": "2024-10-03T02:53:30.167953",
                          "enabled": true
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_personalization": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Personalization"
          ],
          "packagePath": [],
          "file": "Personalization"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Get the current personalization ruleset.",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/rules",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Filter_get_v3_rules_getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Filter_get_v3_rules_getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/rules",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_personalization.filter_get_v3_rules_get",
          "name": "filter_get_v3_rules_get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "personalization",
                  "typeId": "personalization",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "personalizationFilterGetV3RulesGetExample": [
                      {
                        "if": {},
                        "then": [
                          {
                            "set": "logo",
                            "to": "http://example.com/favicon.ico"
                          }
                        ],
                        "else": [
                          {
                            "remove_label": "example label"
                          }
                        ]
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get the current personalization ruleset.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_personalizationFilterGetV3RulesGetExample_200": {
                "displayName": "filterGetV3RulesGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/rules"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "if": {},
                        "then": [
                          {
                            "set": "logo",
                            "to": "http://example.com/favicon.ico"
                          }
                        ],
                        "else": [
                          {
                            "remove_label": "example label"
                          }
                        ]
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "personalization",
                      "typeId": "personalization",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "personalizationFilterGetV3RulesGetExample": [
                          {
                            "if": {},
                            "then": [
                              {
                                "set": "logo",
                                "to": "http://example.com/favicon.ico"
                              }
                            ],
                            "else": [
                              {
                                "remove_label": "example label"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Set the personalization ruleset.",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/rules",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Filter_post_v3_rules_postRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Filter_post_v3_rules_postRequestBadRequestError"
              },
              "docs": "Provided ruleset has invalid structure"
            },
            {
              "error": {
                "name": "Filter_post_v3_rules_postRequestContentTooLargeError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Filter_post_v3_rules_postRequestContentTooLargeError"
              },
              "docs": "Ruleset was larger than 50KiB"
            },
            {
              "error": {
                "name": "Filter_post_v3_rules_postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Filter_post_v3_rules_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/rules",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_personalization.filter_post_v3_rules_post",
          "name": "filter_post_v3_rules_post",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "personalization",
              "typeId": "personalization",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "personalizationFilterPostV3RulesPostExample": [
                  {
                    "if": {},
                    "then": [
                      {
                        "set": "logo",
                        "to": "http://example.com/favicon.ico"
                      }
                    ],
                    "else": [
                      {
                        "remove_label": "example label"
                      }
                    ]
                  }
                ]
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "personalization",
                  "typeId": "personalization",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "personalizationFilterPostV3RulesPostExample": [
                      {
                        "if": {},
                        "then": [
                          {
                            "set": "logo",
                            "to": "http://example.com/favicon.ico"
                          }
                        ],
                        "else": [
                          {
                            "remove_label": "example label"
                          }
                        ]
                      }
                    ]
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Set the personalization ruleset.",
          "v2Examples": {
            "autogeneratedExamples": {
              "personalizationFilterPostV3RulesPostExample_200": {
                "displayName": "personalizationFilterPostV3RulesPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/rules"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {
                      "if": {},
                      "then": [
                        {
                          "set": "logo",
                          "to": "http://example.com/favicon.ico"
                        }
                      ],
                      "else": [
                        {
                          "remove_label": "example label"
                        }
                      ]
                    }
                  ]
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Append a rule.",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/rules/append",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Filter_append_v3_rules_append_postRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Filter_append_v3_rules_append_postRequestBadRequestError"
              },
              "docs": "Provided rule has invalid structure"
            },
            {
              "error": {
                "name": "Filter_append_v3_rules_append_postRequestContentTooLargeError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Filter_append_v3_rules_append_postRequestContentTooLargeError"
              },
              "docs": "Ruleset after append was larger than 50KiB"
            },
            {
              "error": {
                "name": "Filter_append_v3_rules_append_postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Filter_append_v3_rules_append_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/rules/append",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_personalization.filter_append_v3_rules_append_post",
          "name": "filter_append_v3_rules_append_post",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Action",
              "typeId": "Action",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "personalizationFilterAppendV3RulesAppendPostExample": {
                  "if": {}
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Action",
                  "typeId": "Action",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "personalizationFilterAppendV3RulesAppendPostExample": {
                      "if": {}
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Append a rule to the personalization ruleset.",
          "v2Examples": {
            "autogeneratedExamples": {
              "personalizationFilterAppendV3RulesAppendPostExample_200": {
                "displayName": "personalizationFilterAppendV3RulesAppendPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/rules/append"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "if": {}
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete a rule.",
          "method": "DELETE",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/rules/",
            "parts": [
              {
                "pathParameter": "index",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "index",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "index_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Filter_delete_v3_rules__index__deleteRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Filter_delete_v3_rules__index__deleteRequestBadRequestError"
              },
              "docs": "Provided index does not exist in ruleset"
            },
            {
              "error": {
                "name": "Filter_delete_v3_rules__index__deleteRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Filter_delete_v3_rules__index__deleteRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/rules/",
            "parts": [
              {
                "pathParameter": "index",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "index",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "index_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_personalization.filter_delete_v3_rules__index__delete",
          "name": "filter_delete_v3_rules__index__delete",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete the rule at the specified index from the personalization ruleset.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_personalizationFilterDeleteV3RulesIndexDeleteExample_200": {
                "displayName": "filterDeleteV3RulesIndexDeleteExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v3/rules/1"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "index": 1
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Modify an existing rule.",
          "method": "PATCH",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/rules/",
            "parts": [
              {
                "pathParameter": "index",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "index",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "index_example": 1
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Filter_patch_v3_rules__index__patchRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Filter_patch_v3_rules__index__patchRequestBadRequestError"
              },
              "docs": "Provided index does not exist in ruleset"
            },
            {
              "error": {
                "name": "Filter_patch_v3_rules__index__patchRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Filter_patch_v3_rules__index__patchRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/rules/",
            "parts": [
              {
                "pathParameter": "index",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "index",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "index_example": 1
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_personalization.filter_patch_v3_rules__index__patch",
          "name": "filter_patch_v3_rules__index__patch",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Action",
              "typeId": "Action",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "personalizationFilterPatchV3RulesIndexPatchExample": {
                  "if": {}
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Action",
                  "typeId": "Action",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "personalizationFilterPatchV3RulesIndexPatchExample": {
                      "if": {}
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Modify an existing rule at the specified index on the ruleset.",
          "v2Examples": {
            "autogeneratedExamples": {
              "personalizationFilterPatchV3RulesIndexPatchExample_200": {
                "displayName": "personalizationFilterPatchV3RulesIndexPatchExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v3/rules/1"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "index": 1
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "if": {}
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "type": "unknown"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_reports": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Reports"
          ],
          "packagePath": [],
          "file": "Reports"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List all reports",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/reports",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "Only return report older or equal than this date",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "Only return report newer than this date",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "Starting point for the set of report",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "cursor_example": "cursor"
                }
              }
            },
            {
              "name": {
                "name": "limit",
                "wireValue": "limit"
              },
              "docs": "The limit of report to be returned",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 10,
                        "validation": {
                          "max": 50,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "limit_example": 10
                }
              }
            },
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "If specified, only return reports with this status",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "ReportStatus",
                    "typeId": "ReportStatus",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "open"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_reports_v3_reports_getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_reports_v3_reports_getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/reports",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_reports.get_reports_v3_reports_get",
          "name": "get_reports_v3_reports_get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PagedResponse_Report_",
                  "typeId": "PagedResponse_Report_",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "reportsGetReportsV3ReportsGetExample": {
                      "next_cursor": "string",
                      "data": [
                        {
                          "transaction_id": "string",
                          "description": "string",
                          "fields": [
                            "string"
                          ],
                          "id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "status": "open",
                          "rejection_reason": "string"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "List all reports",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_reportsGetReportsV3ReportsGetExample_200": {
                "displayName": "getReportsV3ReportsGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/reports"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next_cursor": "string",
                      "data": [
                        {
                          "transaction_id": "string",
                          "description": "string",
                          "fields": [
                            "string"
                          ],
                          "id": "string",
                          "created_at": "2024-01-15T09:30:00Z",
                          "status": "open",
                          "rejection_reason": "string"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PagedResponse_Report_",
                      "typeId": "PagedResponse_Report_",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "reportsGetReportsV3ReportsGetExample": {
                          "next_cursor": "string",
                          "data": [
                            {
                              "transaction_id": "string",
                              "description": "string",
                              "fields": [
                                "string"
                              ],
                              "id": "string",
                              "created_at": "2024-01-15T09:30:00Z",
                              "status": "open",
                              "rejection_reason": "string"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Create a report",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/reports",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Post_report_v3_reports_postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Post_report_v3_reports_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/reports",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_reports.post_report_v3_reports_post",
          "name": "post_report_v3_reports_post",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ReportBase",
              "typeId": "ReportBase",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "reportsPostReportV3ReportsPostExample": {
                  "transaction_id": "xbx8YP14g565Xk",
                  "description": "lorem ipsum",
                  "fields": [
                    ".entities.counterparty"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ReportBase",
                  "typeId": "ReportBase",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "reportsPostReportV3ReportsPostExample": {
                      "transaction_id": "xbx8YP14g565Xk",
                      "description": "lorem ipsum",
                      "fields": [
                        ".entities.counterparty"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Report",
                  "typeId": "Report",
                  "inline": false,
                  "type": "named"
                },
                "docs": "The newly created report",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "reportsPostReportV3ReportsPostExample": {
                      "transaction_id": "xbx8YP14g565Xk",
                      "description": "lorem ipsum",
                      "fields": [
                        ".entities.counterparty"
                      ],
                      "id": "a652285d-de1b-4a6f-b6ce-45efa9be7952",
                      "created_at": "2024-10-03T02:53:30.167953+00:00",
                      "status": "open"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Report a transaction with incorrect fields.",
          "v2Examples": {
            "autogeneratedExamples": {
              "reportsPostReportV3ReportsPostExample_200": {
                "displayName": "reportsPostReportV3ReportsPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/reports"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "transaction_id": "xbx8YP14g565Xk",
                    "description": "lorem ipsum",
                    "fields": [
                      ".entities.counterparty"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "transaction_id": "xbx8YP14g565Xk",
                      "description": "lorem ipsum",
                      "fields": [
                        ".entities.counterparty"
                      ],
                      "id": "a652285d-de1b-4a6f-b6ce-45efa9be7952",
                      "created_at": "2024-10-03T02:53:30.167953+00:00",
                      "status": "open"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Report",
                      "typeId": "Report",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "The newly created report",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "reportsPostReportV3ReportsPostExample": {
                          "transaction_id": "xbx8YP14g565Xk",
                          "description": "lorem ipsum",
                          "fields": [
                            ".entities.counterparty"
                          ],
                          "id": "a652285d-de1b-4a6f-b6ce-45efa9be7952",
                          "created_at": "2024-10-03T02:53:30.167953+00:00",
                          "status": "open"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Retrieve a report",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/reports/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_report_v3_reports__id__getRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_report_v3_reports__id__getRequestNotFoundError"
              },
              "docs": "Report with the provided id not found."
            },
            {
              "error": {
                "name": "Get_report_v3_reports__id__getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_report_v3_reports__id__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/reports/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_reports.get_report_v3_reports__id__get",
          "name": "get_report_v3_reports__id__get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Report",
                  "typeId": "Report",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "reportsGetReportV3ReportsIdGetExample": {
                      "transaction_id": "xbx8YP14g565Xk",
                      "description": "lorem ipsum",
                      "fields": [
                        ".entities.counterparty"
                      ],
                      "id": "a652285d-de1b-4a6f-b6ce-45efa9be7952",
                      "created_at": "2024-10-03T02:53:30.167953+00:00",
                      "status": "open"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieve a report",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_reportsGetReportV3ReportsIdGetExample_200": {
                "displayName": "getReportV3ReportsIdGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/reports/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "transaction_id": "xbx8YP14g565Xk",
                      "description": "lorem ipsum",
                      "fields": [
                        ".entities.counterparty"
                      ],
                      "id": "a652285d-de1b-4a6f-b6ce-45efa9be7952",
                      "created_at": "2024-10-03T02:53:30.167953+00:00",
                      "status": "open"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Report",
                      "typeId": "Report",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "reportsGetReportV3ReportsIdGetExample": {
                          "transaction_id": "xbx8YP14g565Xk",
                          "description": "lorem ipsum",
                          "fields": [
                            ".entities.counterparty"
                          ],
                          "id": "a652285d-de1b-4a6f-b6ce-45efa9be7952",
                          "created_at": "2024-10-03T02:53:30.167953+00:00",
                          "status": "open"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Delete a report",
          "method": "DELETE",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/reports/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_report_v3_reports__id__deleteRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_report_v3_reports__id__deleteRequestNotFoundError"
              },
              "docs": "Report with the provided id not found."
            },
            {
              "error": {
                "name": "Delete_report_v3_reports__id__deleteRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_report_v3_reports__id__deleteRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/reports/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_reports.delete_report_v3_reports__id__delete",
          "name": "delete_report_v3_reports__id__delete",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Reports_delete_report_v3_reports__id__delete_Response_204",
                  "typeId": "Reports_delete_report_v3_reports__id__delete_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Deletion successful",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "reportsDeleteReportV3ReportsIdDeleteExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete a report",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_reportsDeleteReportV3ReportsIdDeleteExample_204": {
                "displayName": "deleteReportV3ReportsIdDeleteExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v3/reports/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Reports_delete_report_v3_reports__id__delete_Response_204",
                      "typeId": "Reports_delete_report_v3_reports__id__delete_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Deletion successful",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "reportsDeleteReportV3ReportsIdDeleteExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_categories": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Categories"
          ],
          "packagePath": [],
          "file": "Categories"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Retrieve category set",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/categories/",
            "parts": [
              {
                "pathParameter": "account_holder_type",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "account_holder_type",
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "AccountHolderType",
                "typeId": "AccountHolderType",
                "inline": false,
                "type": "named"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "account_holder_type_example": "consumer"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_category_set_v3_categories__account_holder_type__getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_category_set_v3_categories__account_holder_type__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/categories/",
            "parts": [
              {
                "pathParameter": "account_holder_type",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "account_holder_type",
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "AccountHolderType",
                "typeId": "AccountHolderType",
                "inline": false,
                "type": "named"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "account_holder_type_example": "consumer"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_categories.get_category_set_v3_categories__account_holder_type__get",
          "name": "get_category_set_v3_categories__account_holder_type__get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "CategorySet",
                  "typeId": "CategorySet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Category set for the selected type of account holder",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "categoriesGetCategorySetV3CategoriesAccountHolderTypeGetExample": {
                      "incoming": [
                        "transfer from investment app",
                        "transfer from stock broker",
                        "transfer from crypto broker",
                        "chargeback",
                        "freelance income",
                        "rideshare or delivery income",
                        "paycheck",
                        "benefits",
                        "interest earned",
                        "stock dividend"
                      ],
                      "outgoing": [
                        "digital content and streaming",
                        "vending machine",
                        "reversal",
                        "transfer to investment app",
                        "transfer to stock broker",
                        "transfer to crypto broker",
                        "adjustment",
                        "intra account transfer",
                        "inter account transfer",
                        "peer to peer transfer",
                        "funeral service",
                        "ATM withdrawal",
                        "teller withdrawal"
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves the set of categories. Category sets are different per account holder type.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_categoriesGetCategorySetV3CategoriesAccountHolderTypeGetExample_200": {
                "displayName": "getCategorySetV3CategoriesAccountHolderTypeGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/categories/consumer"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "account_holder_type": "consumer"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "incoming": [
                        "transfer from investment app",
                        "transfer from stock broker",
                        "transfer from crypto broker",
                        "chargeback",
                        "freelance income",
                        "rideshare or delivery income",
                        "paycheck",
                        "benefits",
                        "interest earned",
                        "stock dividend"
                      ],
                      "outgoing": [
                        "digital content and streaming",
                        "vending machine",
                        "reversal",
                        "transfer to investment app",
                        "transfer to stock broker",
                        "transfer to crypto broker",
                        "adjustment",
                        "intra account transfer",
                        "inter account transfer",
                        "peer to peer transfer",
                        "funeral service",
                        "ATM withdrawal",
                        "teller withdrawal"
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "CategorySet",
                      "typeId": "CategorySet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Category set for the selected type of account holder",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "categoriesGetCategorySetV3CategoriesAccountHolderTypeGetExample": {
                          "incoming": [
                            "transfer from investment app",
                            "transfer from stock broker",
                            "transfer from crypto broker",
                            "chargeback",
                            "freelance income",
                            "rideshare or delivery income",
                            "paycheck",
                            "benefits",
                            "interest earned",
                            "stock dividend"
                          ],
                          "outgoing": [
                            "digital content and streaming",
                            "vending machine",
                            "reversal",
                            "transfer to investment app",
                            "transfer to stock broker",
                            "transfer to crypto broker",
                            "adjustment",
                            "intra account transfer",
                            "inter account transfer",
                            "peer to peer transfer",
                            "funeral service",
                            "ATM withdrawal",
                            "teller withdrawal"
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Set a custom set of categories",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/categories/",
            "parts": [
              {
                "pathParameter": "account_holder_type",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "account_holder_type",
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "AccountHolderType",
                "typeId": "AccountHolderType",
                "inline": false,
                "type": "named"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "account_holder_type_example": "consumer"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Custom_categories_post_v3_categories__account_holder_type__postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Custom_categories_post_v3_categories__account_holder_type__postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/categories/",
            "parts": [
              {
                "pathParameter": "account_holder_type",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "account_holder_type",
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "AccountHolderType",
                "typeId": "AccountHolderType",
                "inline": false,
                "type": "named"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "account_holder_type_example": "consumer"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_categories.custom_categories_post_v3_categories__account_holder_type__post",
          "name": "custom_categories_post_v3_categories__account_holder_type__post",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "CustomCategorySet",
              "typeId": "CustomCategorySet",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "categoriesCustomCategoriesPostV3CategoriesAccountHolderTypePostExample": {
                  "incoming": [
                    "salary",
                    "investment income",
                    "other income"
                  ],
                  "outgoing": [
                    "rent",
                    "utilities",
                    "groceries",
                    "entertainment"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "CustomCategorySet",
                  "typeId": "CustomCategorySet",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "categoriesCustomCategoriesPostV3CategoriesAccountHolderTypePostExample": {
                      "incoming": [
                        "salary",
                        "investment income",
                        "other income"
                      ],
                      "outgoing": [
                        "rent",
                        "utilities",
                        "groceries",
                        "entertainment"
                      ]
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "CustomCategorySet",
                  "typeId": "CustomCategorySet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Custom categories successfully set.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "categoriesCustomCategoriesPostV3CategoriesAccountHolderTypePostExample": {
                      "incoming": [
                        "salary",
                        "investment income",
                        "other income"
                      ],
                      "outgoing": [
                        "rent",
                        "utilities",
                        "groceries",
                        "entertainment"
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Sets a custom set of categories. Transactions that don't match a category will be categorized `not enough information` regardless of whether it is present in the set.",
          "v2Examples": {
            "autogeneratedExamples": {
              "categoriesCustomCategoriesPostV3CategoriesAccountHolderTypePostExample_200": {
                "displayName": "categoriesCustomCategoriesPostV3CategoriesAccountHolderTypePostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/categories/consumer"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "account_holder_type": "consumer"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "incoming": [
                      "salary",
                      "investment income",
                      "other income"
                    ],
                    "outgoing": [
                      "rent",
                      "utilities",
                      "groceries",
                      "entertainment"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "incoming": [
                        "salary",
                        "investment income",
                        "other income"
                      ],
                      "outgoing": [
                        "rent",
                        "utilities",
                        "groceries",
                        "entertainment"
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "CustomCategorySet",
                      "typeId": "CustomCategorySet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Custom categories successfully set.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "categoriesCustomCategoriesPostV3CategoriesAccountHolderTypePostExample": {
                          "incoming": [
                            "salary",
                            "investment income",
                            "other income"
                          ],
                          "outgoing": [
                            "rent",
                            "utilities",
                            "groceries",
                            "entertainment"
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Reset category set to original values",
          "method": "POST",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/categories/",
            "parts": [
              {
                "pathParameter": "account_holder_type",
                "tail": "/reset"
              }
            ]
          },
          "pathParameters": [
            {
              "name": "account_holder_type",
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "AccountHolderType",
                "typeId": "AccountHolderType",
                "inline": false,
                "type": "named"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "account_holder_type_example": "consumer"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Delete_custom_category_set_v3_categories__account_holder_type__reset_postRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_custom_category_set_v3_categories__account_holder_type__reset_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/categories/",
            "parts": [
              {
                "pathParameter": "account_holder_type",
                "tail": "/reset"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "account_holder_type",
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "AccountHolderType",
                "typeId": "AccountHolderType",
                "inline": false,
                "type": "named"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "account_holder_type_example": "consumer"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_categories.delete_custom_category_set_v3_categories__account_holder_type__reset_post",
          "name": "delete_custom_category_set_v3_categories__account_holder_type__reset_post",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "CategorySet",
                  "typeId": "CategorySet",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "categoriesDeleteCustomCategorySetV3CategoriesAccountHolderTypeResetPostExample": {
                      "incoming": [
                        "transfer from investment app",
                        "transfer from stock broker",
                        "transfer from crypto broker",
                        "chargeback",
                        "freelance income",
                        "rideshare or delivery income",
                        "paycheck",
                        "benefits",
                        "interest earned",
                        "stock dividend"
                      ],
                      "outgoing": [
                        "digital content and streaming",
                        "vending machine",
                        "reversal",
                        "transfer to investment app",
                        "transfer to stock broker",
                        "transfer to crypto broker",
                        "adjustment",
                        "intra account transfer",
                        "inter account transfer",
                        "peer to peer transfer",
                        "funeral service",
                        "ATM withdrawal",
                        "teller withdrawal"
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Resets the set of categories of the specified account holder type to the original values.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_categoriesDeleteCustomCategorySetV3CategoriesAccountHolderTypeResetPostExample_200": {
                "displayName": "deleteCustomCategorySetV3CategoriesAccountHolderTypeResetPostExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/categories/consumer/reset"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "account_holder_type": "consumer"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "incoming": [
                        "transfer from investment app",
                        "transfer from stock broker",
                        "transfer from crypto broker",
                        "chargeback",
                        "freelance income",
                        "rideshare or delivery income",
                        "paycheck",
                        "benefits",
                        "interest earned",
                        "stock dividend"
                      ],
                      "outgoing": [
                        "digital content and streaming",
                        "vending machine",
                        "reversal",
                        "transfer to investment app",
                        "transfer to stock broker",
                        "transfer to crypto broker",
                        "adjustment",
                        "intra account transfer",
                        "inter account transfer",
                        "peer to peer transfer",
                        "funeral service",
                        "ATM withdrawal",
                        "teller withdrawal"
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "CategorySet",
                      "typeId": "CategorySet",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Successful Response",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "categoriesDeleteCustomCategorySetV3CategoriesAccountHolderTypeResetPostExample": {
                          "incoming": [
                            "transfer from investment app",
                            "transfer from stock broker",
                            "transfer from crypto broker",
                            "chargeback",
                            "freelance income",
                            "rideshare or delivery income",
                            "paycheck",
                            "benefits",
                            "interest earned",
                            "stock dividend"
                          ],
                          "outgoing": [
                            "digital content and streaming",
                            "vending machine",
                            "reversal",
                            "transfer to investment app",
                            "transfer to stock broker",
                            "transfer to crypto broker",
                            "adjustment",
                            "intra account transfer",
                            "inter account transfer",
                            "peer to peer transfer",
                            "funeral service",
                            "ATM withdrawal",
                            "teller withdrawal"
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_entities": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "Entities"
          ],
          "packagePath": [],
          "file": "Entities"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Searches for an entity",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/entities/lookup",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "name",
                "wireValue": "name"
              },
              "docs": "The name of the entity to resolve",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_example": "name"
                }
              }
            },
            {
              "name": {
                "name": "website",
                "wireValue": "website"
              },
              "docs": "The website of the entity to resolve",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "website_example": "website"
                }
              }
            },
            {
              "name": {
                "name": "location",
                "wireValue": "location"
              },
              "docs": "An unstructured location string of the entity to resolve",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "location_example": "location"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Search_entity_v3_entities_lookup_getRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Search_entity_v3_entities_lookup_getRequestBadRequestError"
              },
              "docs": "Bad request."
            },
            {
              "error": {
                "name": "Search_entity_v3_entities_lookup_getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Search_entity_v3_entities_lookup_getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            },
            {
              "error": {
                "name": "Search_entity_v3_entities_lookup_getRequestLockedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Search_entity_v3_entities_lookup_getRequestLockedError"
              },
              "docs": "Not enough credits."
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/entities/lookup",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_entities.search_entity_v3_entities_lookup_get",
          "name": "search_entity_v3_entities_lookup_get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Entity",
                  "typeId": "Entity",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Entity",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "entitiesSearchEntityV3EntitiesLookupGetExample": {
                      "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                      "name": "Starbucks",
                      "website": "starbucks.com",
                      "logo": "https://logos.ntropy.com/starbucks.com",
                      "mccs": [
                        5814
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Resolves a query into an entity by querying our entity resolution system. \n    The parameters `name` and `website` are mutually exclusive. Calls to this endpoint using \n    the `name` parameter are billed the same way transactions are.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_entitiesSearchEntityV3EntitiesLookupGetExample_200": {
                "displayName": "searchEntityV3EntitiesLookupGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/entities/lookup"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                      "name": "Starbucks",
                      "website": "starbucks.com",
                      "logo": "https://logos.ntropy.com/starbucks.com",
                      "mccs": [
                        5814
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Entity",
                      "typeId": "Entity",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Entity",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "entitiesSearchEntityV3EntitiesLookupGetExample": {
                          "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                          "name": "Starbucks",
                          "website": "starbucks.com",
                          "logo": "https://logos.ntropy.com/starbucks.com",
                          "mccs": [
                            5814
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Retrieve an entity",
          "method": "GET",
          "baseUrl": "Production server (uses live data).",
          "path": {
            "head": "/v3/entities/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "The unique ID of the entity",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "Get_entity_by_id_v3_entities__id__getRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_entity_by_id_v3_entities__id__getRequestBadRequestError"
              },
              "docs": "Bad request."
            },
            {
              "error": {
                "name": "Get_entity_by_id_v3_entities__id__getRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_entity_by_id_v3_entities__id__getRequestNotFoundError"
              },
              "docs": "Entity does not exist for ID"
            },
            {
              "error": {
                "name": "Get_entity_by_id_v3_entities__id__getRequestUnprocessableEntityError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_entity_by_id_v3_entities__id__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/entities/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "The unique ID of the entity",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_entities.get_entity_by_id_v3_entities__id__get",
          "name": "get_entity_by_id_v3_entities__id__get",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Entity",
                  "typeId": "Entity",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Entity",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "entitiesGetEntityByIdV3EntitiesIdGetExample": {
                      "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                      "name": "Starbucks",
                      "website": "starbucks.com",
                      "logo": "https://logos.ntropy.com/starbucks.com",
                      "mccs": [
                        5814
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieve more information about an entity by using its unique ID.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_entitiesGetEntityByIdV3EntitiesIdGetExample_200": {
                "displayName": "getEntityByIdV3EntitiesIdGetExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/entities/id"
                  },
                  "environment": "Production server (uses live data).",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                      "name": "Starbucks",
                      "website": "starbucks.com",
                      "logo": "https://logos.ntropy.com/starbucks.com",
                      "mccs": [
                        5814
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Entity",
                      "typeId": "Entity",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Entity",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "entitiesGetEntityByIdV3EntitiesIdGetExample": {
                          "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                          "name": "Starbucks",
                          "website": "starbucks.com",
                          "logo": "https://logos.ntropy.com/starbucks.com",
                          "mccs": [
                            5814
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "errors": {
    "Get_transaction_v3_transactions__id__getRequestNotFoundError": {
      "name": {
        "name": "Get_transaction_v3_transactions__id__getRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_transaction_v3_transactions__id__getRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Get_transaction_v3_transactions__id__getRequestNotFoundError",
        "wireValue": "Get_transaction_v3_transactions__id__getRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Transaction with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_transaction_v3_transactions__id__getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_transaction_v3_transactions__id__getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_transaction_v3_transactions__id__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_transaction_v3_transactions__id__getRequestUnprocessableEntityError",
        "wireValue": "Get_transaction_v3_transactions__id__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_transaction_v3_transactions__id__deleteRequestNotFoundError": {
      "name": {
        "name": "Delete_transaction_v3_transactions__id__deleteRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_transaction_v3_transactions__id__deleteRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Delete_transaction_v3_transactions__id__deleteRequestNotFoundError",
        "wireValue": "Delete_transaction_v3_transactions__id__deleteRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Transaction with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_transaction_v3_transactions__id__deleteRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_transaction_v3_transactions__id__deleteRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_transaction_v3_transactions__id__deleteRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_transaction_v3_transactions__id__deleteRequestUnprocessableEntityError",
        "wireValue": "Delete_transaction_v3_transactions__id__deleteRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "List_transactions_v3_transactions_getRequestUnprocessableEntityError": {
      "name": {
        "name": "List_transactions_v3_transactions_getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_transactions_v3_transactions_getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "List_transactions_v3_transactions_getRequestUnprocessableEntityError",
        "wireValue": "List_transactions_v3_transactions_getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Post_transactions_v3_transactions_postRequestUnprocessableEntityError": {
      "name": {
        "name": "Post_transactions_v3_transactions_postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Post_transactions_v3_transactions_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Post_transactions_v3_transactions_postRequestUnprocessableEntityError",
        "wireValue": "Post_transactions_v3_transactions_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Set_transaction_ah_v3_transactions__id__assign_postRequestNotFoundError": {
      "name": {
        "name": "Set_transaction_ah_v3_transactions__id__assign_postRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Set_transaction_ah_v3_transactions__id__assign_postRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Set_transaction_ah_v3_transactions__id__assign_postRequestNotFoundError",
        "wireValue": "Set_transaction_ah_v3_transactions__id__assign_postRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Transaction or account holder with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Set_transaction_ah_v3_transactions__id__assign_postRequestUnprocessableEntityError": {
      "name": {
        "name": "Set_transaction_ah_v3_transactions__id__assign_postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Set_transaction_ah_v3_transactions__id__assign_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Set_transaction_ah_v3_transactions__id__assign_postRequestUnprocessableEntityError",
        "wireValue": "Set_transaction_ah_v3_transactions__id__assign_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_batches_v3_batches_getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_batches_v3_batches_getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_batches_v3_batches_getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_batches_v3_batches_getRequestUnprocessableEntityError",
        "wireValue": "Get_batches_v3_batches_getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Post_batch_v3_batches_postRequestUnprocessableEntityError": {
      "name": {
        "name": "Post_batch_v3_batches_postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Post_batch_v3_batches_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Post_batch_v3_batches_postRequestUnprocessableEntityError",
        "wireValue": "Post_batch_v3_batches_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_single_batch_v3_batches__id__getRequestNotFoundError": {
      "name": {
        "name": "Get_single_batch_v3_batches__id__getRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_single_batch_v3_batches__id__getRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Get_single_batch_v3_batches__id__getRequestNotFoundError",
        "wireValue": "Get_single_batch_v3_batches__id__getRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Batch with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_single_batch_v3_batches__id__getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_single_batch_v3_batches__id__getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_single_batch_v3_batches__id__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_single_batch_v3_batches__id__getRequestUnprocessableEntityError",
        "wireValue": "Get_single_batch_v3_batches__id__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_batch_results_v3_batches__id__results_getRequestNotFoundError": {
      "name": {
        "name": "Get_batch_results_v3_batches__id__results_getRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_batch_results_v3_batches__id__results_getRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Get_batch_results_v3_batches__id__results_getRequestNotFoundError",
        "wireValue": "Get_batch_results_v3_batches__id__results_getRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Batch with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_batch_results_v3_batches__id__results_getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_batch_results_v3_batches__id__results_getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_batch_results_v3_batches__id__results_getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_batch_results_v3_batches__id__results_getRequestUnprocessableEntityError",
        "wireValue": "Get_batch_results_v3_batches__id__results_getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_bank_statements_v3_bank_statements_getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_bank_statements_v3_bank_statements_getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_bank_statements_v3_bank_statements_getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_bank_statements_v3_bank_statements_getRequestUnprocessableEntityError",
        "wireValue": "Get_bank_statements_v3_bank_statements_getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Post_bank_statement_v3_bank_statements_postRequestUnprocessableEntityError": {
      "name": {
        "name": "Post_bank_statement_v3_bank_statements_postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Post_bank_statement_v3_bank_statements_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Post_bank_statement_v3_bank_statements_postRequestUnprocessableEntityError",
        "wireValue": "Post_bank_statement_v3_bank_statements_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_bank_statement_v3_bank_statements__id__getRequestNotFoundError": {
      "name": {
        "name": "Get_bank_statement_v3_bank_statements__id__getRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_bank_statement_v3_bank_statements__id__getRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Get_bank_statement_v3_bank_statements__id__getRequestNotFoundError",
        "wireValue": "Get_bank_statement_v3_bank_statements__id__getRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Bank statement with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_bank_statement_v3_bank_statements__id__getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_bank_statement_v3_bank_statements__id__getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_bank_statement_v3_bank_statements__id__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_bank_statement_v3_bank_statements__id__getRequestUnprocessableEntityError",
        "wireValue": "Get_bank_statement_v3_bank_statements__id__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_bank_statement_v3_bank_statements__id__deleteRequestNotFoundError": {
      "name": {
        "name": "Delete_bank_statement_v3_bank_statements__id__deleteRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_bank_statement_v3_bank_statements__id__deleteRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Delete_bank_statement_v3_bank_statements__id__deleteRequestNotFoundError",
        "wireValue": "Delete_bank_statement_v3_bank_statements__id__deleteRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Bank statement with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_bank_statement_v3_bank_statements__id__deleteRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_bank_statement_v3_bank_statements__id__deleteRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_bank_statement_v3_bank_statements__id__deleteRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_bank_statement_v3_bank_statements__id__deleteRequestUnprocessableEntityError",
        "wireValue": "Delete_bank_statement_v3_bank_statements__id__deleteRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestNotFoundError": {
      "name": {
        "name": "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestNotFoundError",
        "wireValue": "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Bank statement with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestUnprocessableEntityError",
        "wireValue": "Get_bank_statement_statement_info_v3_bank_statements__id__overview_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_bank_statement_result_v3_bank_statements__id__results_getRequestNotFoundError": {
      "name": {
        "name": "Get_bank_statement_result_v3_bank_statements__id__results_getRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_bank_statement_result_v3_bank_statements__id__results_getRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Get_bank_statement_result_v3_bank_statements__id__results_getRequestNotFoundError",
        "wireValue": "Get_bank_statement_result_v3_bank_statements__id__results_getRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Bank statement with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_bank_statement_result_v3_bank_statements__id__results_getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_bank_statement_result_v3_bank_statements__id__results_getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_bank_statement_result_v3_bank_statements__id__results_getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_bank_statement_result_v3_bank_statements__id__results_getRequestUnprocessableEntityError",
        "wireValue": "Get_bank_statement_result_v3_bank_statements__id__results_getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_account_holder_v3_account_holders__id__getRequestNotFoundError": {
      "name": {
        "name": "Get_account_holder_v3_account_holders__id__getRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_account_holder_v3_account_holders__id__getRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Get_account_holder_v3_account_holders__id__getRequestNotFoundError",
        "wireValue": "Get_account_holder_v3_account_holders__id__getRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Account holder with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_account_holder_v3_account_holders__id__getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_account_holder_v3_account_holders__id__getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_account_holder_v3_account_holders__id__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_account_holder_v3_account_holders__id__getRequestUnprocessableEntityError",
        "wireValue": "Get_account_holder_v3_account_holders__id__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_account_holder_v3_account_holders__id__deleteRequestNotFoundError": {
      "name": {
        "name": "Delete_account_holder_v3_account_holders__id__deleteRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_account_holder_v3_account_holders__id__deleteRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Delete_account_holder_v3_account_holders__id__deleteRequestNotFoundError",
        "wireValue": "Delete_account_holder_v3_account_holders__id__deleteRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Account holder with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_account_holder_v3_account_holders__id__deleteRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_account_holder_v3_account_holders__id__deleteRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_account_holder_v3_account_holders__id__deleteRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_account_holder_v3_account_holders__id__deleteRequestUnprocessableEntityError",
        "wireValue": "Delete_account_holder_v3_account_holders__id__deleteRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_account_holders_v3_account_holders_getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_account_holders_v3_account_holders_getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_account_holders_v3_account_holders_getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_account_holders_v3_account_holders_getRequestUnprocessableEntityError",
        "wireValue": "Get_account_holders_v3_account_holders_getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_account_holder_v3_account_holders_postRequestBadRequestError": {
      "name": {
        "name": "Create_account_holder_v3_account_holders_postRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_account_holder_v3_account_holders_postRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "Create_account_holder_v3_account_holders_postRequestBadRequestError",
        "wireValue": "Create_account_holder_v3_account_holders_postRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Account holder with the provided id already exists.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Create_account_holder_v3_account_holders_postRequestUnprocessableEntityError": {
      "name": {
        "name": "Create_account_holder_v3_account_holders_postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_account_holder_v3_account_holders_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Create_account_holder_v3_account_holders_postRequestUnprocessableEntityError",
        "wireValue": "Create_account_holder_v3_account_holders_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestNotFoundError": {
      "name": {
        "name": "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestNotFoundError",
        "wireValue": "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Account holder with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestUnprocessableEntityError",
        "wireValue": "Get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_webhooks_v3_webhooks_getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_webhooks_v3_webhooks_getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_webhooks_v3_webhooks_getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_webhooks_v3_webhooks_getRequestUnprocessableEntityError",
        "wireValue": "Get_webhooks_v3_webhooks_getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Post_webhook_v3_webhooks_postRequestUnprocessableEntityError": {
      "name": {
        "name": "Post_webhook_v3_webhooks_postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Post_webhook_v3_webhooks_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Post_webhook_v3_webhooks_postRequestUnprocessableEntityError",
        "wireValue": "Post_webhook_v3_webhooks_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_webhook_v3_webhooks__id__getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_webhook_v3_webhooks__id__getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_webhook_v3_webhooks__id__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_webhook_v3_webhooks__id__getRequestUnprocessableEntityError",
        "wireValue": "Get_webhook_v3_webhooks__id__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_webhook_v3_webhooks__id__deleteRequestNotFoundError": {
      "name": {
        "name": "Delete_webhook_v3_webhooks__id__deleteRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_webhook_v3_webhooks__id__deleteRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Delete_webhook_v3_webhooks__id__deleteRequestNotFoundError",
        "wireValue": "Delete_webhook_v3_webhooks__id__deleteRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Webhook with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_webhook_v3_webhooks__id__deleteRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_webhook_v3_webhooks__id__deleteRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_webhook_v3_webhooks__id__deleteRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_webhook_v3_webhooks__id__deleteRequestUnprocessableEntityError",
        "wireValue": "Delete_webhook_v3_webhooks__id__deleteRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Patch_webhook_v3_webhooks__id__patchRequestUnprocessableEntityError": {
      "name": {
        "name": "Patch_webhook_v3_webhooks__id__patchRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Patch_webhook_v3_webhooks__id__patchRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Patch_webhook_v3_webhooks__id__patchRequestUnprocessableEntityError",
        "wireValue": "Patch_webhook_v3_webhooks__id__patchRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Filter_get_v3_rules_getRequestUnprocessableEntityError": {
      "name": {
        "name": "Filter_get_v3_rules_getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Filter_get_v3_rules_getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Filter_get_v3_rules_getRequestUnprocessableEntityError",
        "wireValue": "Filter_get_v3_rules_getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Filter_post_v3_rules_postRequestBadRequestError": {
      "name": {
        "name": "Filter_post_v3_rules_postRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Filter_post_v3_rules_postRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "Filter_post_v3_rules_postRequestBadRequestError",
        "wireValue": "Filter_post_v3_rules_postRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Provided ruleset has invalid structure",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Filter_post_v3_rules_postRequestContentTooLargeError": {
      "name": {
        "name": "Filter_post_v3_rules_postRequestContentTooLargeError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Filter_post_v3_rules_postRequestContentTooLargeError"
      },
      "displayName": "ContentTooLargeError",
      "discriminantValue": {
        "name": "Filter_post_v3_rules_postRequestContentTooLargeError",
        "wireValue": "Filter_post_v3_rules_postRequestContentTooLargeError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 413,
      "docs": "Ruleset was larger than 50KiB",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Filter_post_v3_rules_postRequestUnprocessableEntityError": {
      "name": {
        "name": "Filter_post_v3_rules_postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Filter_post_v3_rules_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Filter_post_v3_rules_postRequestUnprocessableEntityError",
        "wireValue": "Filter_post_v3_rules_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Filter_append_v3_rules_append_postRequestBadRequestError": {
      "name": {
        "name": "Filter_append_v3_rules_append_postRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Filter_append_v3_rules_append_postRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "Filter_append_v3_rules_append_postRequestBadRequestError",
        "wireValue": "Filter_append_v3_rules_append_postRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Provided rule has invalid structure",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Filter_append_v3_rules_append_postRequestContentTooLargeError": {
      "name": {
        "name": "Filter_append_v3_rules_append_postRequestContentTooLargeError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Filter_append_v3_rules_append_postRequestContentTooLargeError"
      },
      "displayName": "ContentTooLargeError",
      "discriminantValue": {
        "name": "Filter_append_v3_rules_append_postRequestContentTooLargeError",
        "wireValue": "Filter_append_v3_rules_append_postRequestContentTooLargeError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 413,
      "docs": "Ruleset after append was larger than 50KiB",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Filter_append_v3_rules_append_postRequestUnprocessableEntityError": {
      "name": {
        "name": "Filter_append_v3_rules_append_postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Filter_append_v3_rules_append_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Filter_append_v3_rules_append_postRequestUnprocessableEntityError",
        "wireValue": "Filter_append_v3_rules_append_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Filter_delete_v3_rules__index__deleteRequestBadRequestError": {
      "name": {
        "name": "Filter_delete_v3_rules__index__deleteRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Filter_delete_v3_rules__index__deleteRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "Filter_delete_v3_rules__index__deleteRequestBadRequestError",
        "wireValue": "Filter_delete_v3_rules__index__deleteRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Provided index does not exist in ruleset",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Filter_delete_v3_rules__index__deleteRequestUnprocessableEntityError": {
      "name": {
        "name": "Filter_delete_v3_rules__index__deleteRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Filter_delete_v3_rules__index__deleteRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Filter_delete_v3_rules__index__deleteRequestUnprocessableEntityError",
        "wireValue": "Filter_delete_v3_rules__index__deleteRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Filter_patch_v3_rules__index__patchRequestBadRequestError": {
      "name": {
        "name": "Filter_patch_v3_rules__index__patchRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Filter_patch_v3_rules__index__patchRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "Filter_patch_v3_rules__index__patchRequestBadRequestError",
        "wireValue": "Filter_patch_v3_rules__index__patchRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Provided index does not exist in ruleset",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Filter_patch_v3_rules__index__patchRequestUnprocessableEntityError": {
      "name": {
        "name": "Filter_patch_v3_rules__index__patchRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Filter_patch_v3_rules__index__patchRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Filter_patch_v3_rules__index__patchRequestUnprocessableEntityError",
        "wireValue": "Filter_patch_v3_rules__index__patchRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_reports_v3_reports_getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_reports_v3_reports_getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_reports_v3_reports_getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_reports_v3_reports_getRequestUnprocessableEntityError",
        "wireValue": "Get_reports_v3_reports_getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Post_report_v3_reports_postRequestUnprocessableEntityError": {
      "name": {
        "name": "Post_report_v3_reports_postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Post_report_v3_reports_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Post_report_v3_reports_postRequestUnprocessableEntityError",
        "wireValue": "Post_report_v3_reports_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_report_v3_reports__id__getRequestNotFoundError": {
      "name": {
        "name": "Get_report_v3_reports__id__getRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_report_v3_reports__id__getRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Get_report_v3_reports__id__getRequestNotFoundError",
        "wireValue": "Get_report_v3_reports__id__getRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Report with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_report_v3_reports__id__getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_report_v3_reports__id__getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_report_v3_reports__id__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_report_v3_reports__id__getRequestUnprocessableEntityError",
        "wireValue": "Get_report_v3_reports__id__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_report_v3_reports__id__deleteRequestNotFoundError": {
      "name": {
        "name": "Delete_report_v3_reports__id__deleteRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_report_v3_reports__id__deleteRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Delete_report_v3_reports__id__deleteRequestNotFoundError",
        "wireValue": "Delete_report_v3_reports__id__deleteRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Report with the provided id not found.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_report_v3_reports__id__deleteRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_report_v3_reports__id__deleteRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_report_v3_reports__id__deleteRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_report_v3_reports__id__deleteRequestUnprocessableEntityError",
        "wireValue": "Delete_report_v3_reports__id__deleteRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_category_set_v3_categories__account_holder_type__getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_category_set_v3_categories__account_holder_type__getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_category_set_v3_categories__account_holder_type__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_category_set_v3_categories__account_holder_type__getRequestUnprocessableEntityError",
        "wireValue": "Get_category_set_v3_categories__account_holder_type__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Custom_categories_post_v3_categories__account_holder_type__postRequestUnprocessableEntityError": {
      "name": {
        "name": "Custom_categories_post_v3_categories__account_holder_type__postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Custom_categories_post_v3_categories__account_holder_type__postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Custom_categories_post_v3_categories__account_holder_type__postRequestUnprocessableEntityError",
        "wireValue": "Custom_categories_post_v3_categories__account_holder_type__postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Delete_custom_category_set_v3_categories__account_holder_type__reset_postRequestUnprocessableEntityError": {
      "name": {
        "name": "Delete_custom_category_set_v3_categories__account_holder_type__reset_postRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_custom_category_set_v3_categories__account_holder_type__reset_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Delete_custom_category_set_v3_categories__account_holder_type__reset_postRequestUnprocessableEntityError",
        "wireValue": "Delete_custom_category_set_v3_categories__account_holder_type__reset_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Search_entity_v3_entities_lookup_getRequestBadRequestError": {
      "name": {
        "name": "Search_entity_v3_entities_lookup_getRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Search_entity_v3_entities_lookup_getRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "Search_entity_v3_entities_lookup_getRequestBadRequestError",
        "wireValue": "Search_entity_v3_entities_lookup_getRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Bad request.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Search_entity_v3_entities_lookup_getRequestUnprocessableEntityError": {
      "name": {
        "name": "Search_entity_v3_entities_lookup_getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Search_entity_v3_entities_lookup_getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Search_entity_v3_entities_lookup_getRequestUnprocessableEntityError",
        "wireValue": "Search_entity_v3_entities_lookup_getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Search_entity_v3_entities_lookup_getRequestLockedError": {
      "name": {
        "name": "Search_entity_v3_entities_lookup_getRequestLockedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Search_entity_v3_entities_lookup_getRequestLockedError"
      },
      "displayName": "LockedError",
      "discriminantValue": {
        "name": "Search_entity_v3_entities_lookup_getRequestLockedError",
        "wireValue": "Search_entity_v3_entities_lookup_getRequestLockedError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 423,
      "docs": "Not enough credits.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_entity_by_id_v3_entities__id__getRequestBadRequestError": {
      "name": {
        "name": "Get_entity_by_id_v3_entities__id__getRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_entity_by_id_v3_entities__id__getRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "Get_entity_by_id_v3_entities__id__getRequestBadRequestError",
        "wireValue": "Get_entity_by_id_v3_entities__id__getRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Bad request.",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_entity_by_id_v3_entities__id__getRequestNotFoundError": {
      "name": {
        "name": "Get_entity_by_id_v3_entities__id__getRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_entity_by_id_v3_entities__id__getRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "Get_entity_by_id_v3_entities__id__getRequestNotFoundError",
        "wireValue": "Get_entity_by_id_v3_entities__id__getRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Entity does not exist for ID",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "Get_entity_by_id_v3_entities__id__getRequestUnprocessableEntityError": {
      "name": {
        "name": "Get_entity_by_id_v3_entities__id__getRequestUnprocessableEntityError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_entity_by_id_v3_entities__id__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": "Get_entity_by_id_v3_entities__id__getRequestUnprocessableEntityError",
        "wireValue": "Get_entity_by_id_v3_entities__id__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "HTTPValidationError",
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    }
  },
  "webhookGroups": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "environments": {
    "defaultEnvironment": "Production server (uses live data).",
    "environments": {
      "environments": [
        {
          "id": "Production server (uses live data).",
          "name": "Production server (uses live data).",
          "url": "https://api.ntropy.com",
          "docs": "Production server (uses live data)."
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "types": [
      "Account",
      "AccountHolder",
      "AccountHolderCreate",
      "AccountHolderExternal",
      "AccountHolderType",
      "AccountType",
      "AccountingCategory",
      "ActionModel",
      "Address",
      "AsyncEnrichmentInput",
      "BankStatement",
      "BankStatementAccount",
      "BankStatementError",
      "BankStatementErrorCode",
      "BankStatementFile",
      "BankStatementResults",
      "BankStatementStatus",
      "BankStatementTransaction",
      "Batch",
      "BatchResult",
      "BatchStatus",
      "Body_post_bank_statement_v3_bank_statements_post",
      "Body_set_transaction_ah_v3_transactions__id__assign_post",
      "Categories",
      "CategoryConfidence",
      "CategorySet",
      "Counterparty",
      "CounterpartyType",
      "Country",
      "Currency",
      "CustomCategorySet",
      "DocumentStatus",
      "EnrichedTransaction",
      "EnrichmentResult",
      "Entities",
      "Entity",
      "EntryType",
      "FilterModel",
      "HTTPValidationError",
      "Intermediary",
      "IntermediaryType",
      "Location",
      "LocationInput",
      "LocationStructured",
      "PagedResponse_AccountHolderExternal",
      "PagedResponse_BankStatement",
      "PagedResponse_Batch",
      "PagedResponse_Report_",
      "PagedResponse_Transaction",
      "PagedResponse_Webhook",
      "Recurrence",
      "RecurrenceGroup",
      "RecurrencePeriodicity",
      "RecurrenceType",
      "Report",
      "ReportBase",
      "ReportStatus",
      "StatementInfo",
      "SyncEnrichmentInput",
      "SyncEnrichmentOutput",
      "Transaction",
      "TransactionError",
      "TransactionErrorCode",
      "TransactionInput",
      "ValidationError",
      "Webhook",
      "WebhookBase",
      "WebhookPatch",
      "Expr",
      "TxProp",
      "FnCall",
      "Action",
      "If",
      "ModifyLabels",
      "EditableTxProp",
      "Setter",
      "personalization"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_transactions",
      "subpackage_batches",
      "subpackage_bankStatements",
      "subpackage_accountHolders",
      "subpackage_recurrence",
      "subpackage_webhooks",
      "subpackage_personalization",
      "subpackage_reports",
      "subpackage_categories",
      "subpackage_entities"
    ],
    "hasEndpointsInTree": false
  },
  "subpackages": {
    "subpackage_transactions": {
      "name": "transactions",
      "fernFilepath": {
        "allParts": [
          "transactions"
        ],
        "packagePath": [],
        "file": "transactions"
      },
      "service": "service_transactions",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_batches": {
      "name": "batches",
      "fernFilepath": {
        "allParts": [
          "batches"
        ],
        "packagePath": [],
        "file": "batches"
      },
      "service": "service_batches",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_bankStatements": {
      "name": "bankStatements",
      "fernFilepath": {
        "allParts": [
          "bankStatements"
        ],
        "packagePath": [],
        "file": "bankStatements"
      },
      "service": "service_bankStatements",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_accountHolders": {
      "name": "accountHolders",
      "fernFilepath": {
        "allParts": [
          "accountHolders"
        ],
        "packagePath": [],
        "file": "accountHolders"
      },
      "service": "service_accountHolders",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_recurrence": {
      "name": "recurrence",
      "fernFilepath": {
        "allParts": [
          "recurrence"
        ],
        "packagePath": [],
        "file": "recurrence"
      },
      "service": "service_recurrence",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_webhooks": {
      "name": "webhooks",
      "fernFilepath": {
        "allParts": [
          "webhooks"
        ],
        "packagePath": [],
        "file": "webhooks"
      },
      "service": "service_webhooks",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_personalization": {
      "name": "personalization",
      "fernFilepath": {
        "allParts": [
          "personalization"
        ],
        "packagePath": [],
        "file": "personalization"
      },
      "service": "service_personalization",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_reports": {
      "name": "reports",
      "fernFilepath": {
        "allParts": [
          "reports"
        ],
        "packagePath": [],
        "file": "reports"
      },
      "service": "service_reports",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_categories": {
      "name": "categories",
      "fernFilepath": {
        "allParts": [
          "categories"
        ],
        "packagePath": [],
        "file": "categories"
      },
      "service": "service_categories",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_entities": {
      "name": "entities",
      "fernFilepath": {
        "allParts": [
          "entities"
        ],
        "packagePath": [],
        "file": "entities"
      },
      "service": "service_entities",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    }
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "apiName": "",
  "constants": {
    "errorInstanceIdKey": {
      "name": "errorInstanceId",
      "wireValue": "errorInstanceId"
    }
  }
}