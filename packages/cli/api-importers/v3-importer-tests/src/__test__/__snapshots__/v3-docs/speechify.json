{
  "auth": {
    "requirement": "ANY",
    "schemes": [
      {
        "key": "header",
        "name": {
          "name": "apiKey",
          "wireValue": "Authorization"
        },
        "valueType": {
          "container": {
            "optional": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "docs": "Enter the key with the `Bearer` prefix, e.g. 'Bearer API_KEY'.",
        "type": "header"
      },
      {
        "key": "header",
        "name": {
          "name": "apiKey",
          "wireValue": "Authorization"
        },
        "valueType": {
          "container": {
            "optional": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "docs": "User authorization token",
        "type": "header"
      }
    ]
  },
  "selfHosted": false,
  "types": {
    "APIKey": {
      "name": {
        "typeId": "APIKey",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "APIKey"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "api_key",
              "wireValue": "api_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "API key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ApiKeyApiKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Creation time of the key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ApiKeyCreatedAt_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "ID of the key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ApiKeyId_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Name of the key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ApiKeyName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last updated time of the key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ApiKeyUpdatedAt_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "user_id",
              "wireValue": "user_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "User ID to whom the key belongs",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ApiKeyUserId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "APIKey_example_autogenerated": {}
        }
      }
    },
    "AccessTokenScope": {
      "name": {
        "typeId": "AccessTokenScope",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccessTokenScope"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "audio:speech",
              "wireValue": "audio:speech"
            }
          },
          {
            "name": {
              "name": "audio:stream",
              "wireValue": "audio:stream"
            }
          },
          {
            "name": {
              "name": "audio:all",
              "wireValue": "audio:all"
            }
          },
          {
            "name": {
              "name": "voices:read",
              "wireValue": "voices:read"
            }
          },
          {
            "name": {
              "name": "voices:create",
              "wireValue": "voices:create"
            }
          },
          {
            "name": {
              "name": "voices:delete",
              "wireValue": "voices:delete"
            }
          },
          {
            "name": {
              "name": "voices:all",
              "wireValue": "voices:all"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The scope, or a space-delimited list of scopes the token is issued for",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccessTokenScope_example_autogenerated": "audio:speech"
        }
      }
    },
    "AccessTokenTokenType": {
      "name": {
        "typeId": "AccessTokenTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccessTokenTokenType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "bearer",
              "wireValue": "bearer"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Token type",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccessTokenTokenType_example_autogenerated": "bearer"
        }
      }
    },
    "AccessToken": {
      "name": {
        "typeId": "AccessToken",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccessToken"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "access_token",
              "wireValue": "access_token"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccessTokenAccessToken_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "expires_in",
              "wireValue": "expires_in"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Expiration time, in seconds from the issue time",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccessTokenExpiresIn_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "scope",
              "wireValue": "scope"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AccessTokenScope",
                  "typeId": "AccessTokenScope",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The scope, or a space-delimited list of scopes the token is issued for",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccessTokenScope_example_autogenerated": "audio:speech"
              }
            }
          },
          {
            "name": {
              "name": "token_type",
              "wireValue": "token_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AccessTokenTokenType",
                  "typeId": "AccessTokenTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Token type",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccessTokenTokenType_example_autogenerated": "bearer"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccessToken_example_autogenerated": {}
        }
      }
    },
    "CreateAccessTokenRequestGrantType": {
      "name": {
        "typeId": "CreateAccessTokenRequestGrantType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateAccessTokenRequestGrantType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "client_credentials",
              "wireValue": "client_credentials"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "in: body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateAccessTokenRequestGrantType_example_autogenerated": "client_credentials"
        }
      }
    },
    "CreateAccessTokenRequestScope": {
      "name": {
        "typeId": "CreateAccessTokenRequestScope",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateAccessTokenRequestScope"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "audio:speech",
              "wireValue": "audio:speech"
            }
          },
          {
            "name": {
              "name": "audio:stream",
              "wireValue": "audio:stream"
            }
          },
          {
            "name": {
              "name": "audio:all",
              "wireValue": "audio:all"
            }
          },
          {
            "name": {
              "name": "voices:read",
              "wireValue": "voices:read"
            }
          },
          {
            "name": {
              "name": "voices:create",
              "wireValue": "voices:create"
            }
          },
          {
            "name": {
              "name": "voices:delete",
              "wireValue": "voices:delete"
            }
          },
          {
            "name": {
              "name": "voices:all",
              "wireValue": "voices:all"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The scope, or a space-delimited list of scopes the token is requested for\nin: body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateAccessTokenRequestScope_example_autogenerated": "audio:speech"
        }
      }
    },
    "CreateAccessTokenRequest": {
      "name": {
        "typeId": "CreateAccessTokenRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateAccessTokenRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "grant_type",
              "wireValue": "grant_type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "CreateAccessTokenRequestGrantType",
              "typeId": "CreateAccessTokenRequestGrantType",
              "inline": false,
              "type": "named"
            },
            "docs": "in: body",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateAccessTokenRequestGrantType_example_autogenerated": "client_credentials"
              }
            }
          },
          {
            "name": {
              "name": "scope",
              "wireValue": "scope"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "CreateAccessTokenRequestScope",
                  "typeId": "CreateAccessTokenRequestScope",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The scope, or a space-delimited list of scopes the token is requested for\nin: body",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateAccessTokenRequestScope_example_autogenerated": "audio:speech"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateAccessTokenRequest_example_autogenerated": {
            "grant_type": "client_credentials"
          }
        }
      }
    },
    "CreateVoiceLanguage": {
      "name": {
        "typeId": "CreateVoiceLanguage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateVoiceLanguage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "locale",
              "wireValue": "locale"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateVoiceLanguageLocale_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "preview_audio",
              "wireValue": "preview_audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateVoiceLanguagePreviewAudio_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateVoiceLanguage_example_autogenerated": {}
        }
      }
    },
    "CreateVoiceModelName": {
      "name": {
        "typeId": "CreateVoiceModelName",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateVoiceModelName"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "simba-base",
              "wireValue": "simba-base"
            }
          },
          {
            "name": {
              "name": "simba-english",
              "wireValue": "simba-english"
            }
          },
          {
            "name": {
              "name": "simba-multilingual",
              "wireValue": "simba-multilingual"
            }
          },
          {
            "name": {
              "name": "simba-turbo",
              "wireValue": "simba-turbo"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateVoiceModelName_example_autogenerated": "simba-base"
        }
      }
    },
    "CreateVoiceModel": {
      "name": {
        "typeId": "CreateVoiceModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreateVoiceModel"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "languages",
              "wireValue": "languages"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "CreateVoiceLanguage",
                      "typeId": "CreateVoiceLanguage",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateVoiceModelLanguages_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "CreateVoiceModelName",
                  "typeId": "CreateVoiceModelName",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateVoiceModelName_example_autogenerated": "simba-base"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateVoiceModel_example_autogenerated": {}
        }
      }
    },
    "CreatedVoiceType": {
      "name": {
        "typeId": "CreatedVoiceType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreatedVoiceType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "shared",
              "wireValue": "shared"
            }
          },
          {
            "name": {
              "name": "personal",
              "wireValue": "personal"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreatedVoiceType_example_autogenerated": "shared"
        }
      }
    },
    "CreatedVoice": {
      "name": {
        "typeId": "CreatedVoice",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CreatedVoice"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "display_name",
              "wireValue": "display_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreatedVoiceDisplayName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreatedVoiceId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "CreateVoiceModel",
                      "typeId": "CreateVoiceModel",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreatedVoiceModels_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "CreatedVoiceType",
                  "typeId": "CreatedVoiceType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreatedVoiceType_example_autogenerated": "shared"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreatedVoice_example_autogenerated": {}
        }
      }
    },
    "ExperimentalStreamRequestModel": {
      "name": {
        "typeId": "ExperimentalStreamRequestModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ExperimentalStreamRequestModel"
      },
      "shape": {
        "default": {
          "name": {
            "name": "simba-base",
            "wireValue": "simba-base"
          }
        },
        "values": [
          {
            "name": {
              "name": "simba-base",
              "wireValue": "simba-base"
            }
          },
          {
            "name": {
              "name": "simba-english",
              "wireValue": "simba-english"
            }
          },
          {
            "name": {
              "name": "simba-multilingual",
              "wireValue": "simba-multilingual"
            }
          },
          {
            "name": {
              "name": "simba-turbo",
              "wireValue": "simba-turbo"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ExperimentalStreamRequestModel_example_autogenerated": "simba-base"
        }
      }
    },
    "ExperimentalStreamRequest": {
      "name": {
        "typeId": "ExperimentalStreamRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ExperimentalStreamRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "input",
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Plain text or SSML to be synthesized to speech.\nRefer to https://docs.sws.speechify.com/docs/api-limits for the input size limits.\nEmotion, Pitch and Speed Rate are configured in the ssml input, please refer to the ssml documentation for more information: https://docs.sws.speechify.com/docs/ssml#prosody",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ExperimentalStreamRequestInput_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "language",
              "wireValue": "language"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Language of the input. Follow the format of an ISO 639-1 language code and an ISO 3166-1 region code, separated by a hyphen, e.g. en-US.\nPlease refer to the list of the supported languages and recommendations regarding this parameter: https://docs.sws.speechify.com/docs/language-support.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ExperimentalStreamRequestLanguage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "model",
              "wireValue": "model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ExperimentalStreamRequestModel",
                  "typeId": "ExperimentalStreamRequestModel",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ExperimentalStreamRequestModel_example_autogenerated": "simba-base"
              }
            }
          },
          {
            "name": {
              "name": "voice_id",
              "wireValue": "voice_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Id of the voice to be used for synthesizing speech. Refer to /v1/voices endpoint for available voices",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ExperimentalStreamRequestVoiceId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "ExperimentalStreamRequest is the wrapper for request parameters to the client",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ExperimentalStreamRequest_example_autogenerated": {
            "input": "string",
            "voice_id": "string"
          }
        }
      }
    },
    "ExperimentalStreamResponse": {
      "name": {
        "typeId": "ExperimentalStreamResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ExperimentalStreamResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "audio_url",
              "wireValue": "audio_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL to the synthesized audio file. It includes the expiration time and a signature in the query params.\nThe audio file will be available for download until the expiration time.\nFor the URL to work correctly, it must be used verbatim, with all the query parameters.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ExperimentalStreamResponseAudioUrl_example_0": "https://streaming.sws.speechify.com/v1/stream/abc.mp3?exp=2024-07-26T10:54:44.429Z&s=xyz"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "expires",
              "wireValue": "expires"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Expiry time of the audio file, in ISO-8601 format.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ExperimentalStreamResponseExpires_example_0": "2024-07-26T11:18:41.236Z"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "ExperimentalStreamResponse represents generated audio stream info",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ExperimentalStreamResponse_example_autogenerated": {}
        }
      }
    },
    "GetSpeechOptionsRequest": {
      "name": {
        "typeId": "GetSpeechOptionsRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetSpeechOptionsRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "loudness_normalization",
              "wireValue": "loudness_normalization"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": true,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Determines whether to normalize the audio loudness to a standard level.\nWhen enabled, loudness normalization aligns the audio output to the following standards:\nIntegrated loudness: -14 LUFS\nTrue peak: -2 dBTP\nLoudness range: 7 LU\nIf disabled, the audio loudness will match the original loudness of the selected voice, which may vary significantly and be either too quiet or too loud.\nEnabling loudness normalization can increase latency due to additional processing required for audio level adjustments.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetSpeechOptionsRequestLoudnessNormalization_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "GetSpeechOptionsRequest is the wrapper for request parameters to the client",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetSpeechOptionsRequest_example_autogenerated": {}
        }
      }
    },
    "GetSpeechRequestAudioFormat": {
      "name": {
        "typeId": "GetSpeechRequestAudioFormat",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetSpeechRequestAudioFormat"
      },
      "shape": {
        "default": {
          "name": {
            "name": "wav",
            "wireValue": "wav"
          }
        },
        "values": [
          {
            "name": {
              "name": "wav",
              "wireValue": "wav"
            }
          },
          {
            "name": {
              "name": "mp3",
              "wireValue": "mp3"
            }
          },
          {
            "name": {
              "name": "ogg",
              "wireValue": "ogg"
            }
          },
          {
            "name": {
              "name": "aac",
              "wireValue": "aac"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The format for the output audio. Note, that the current default is \"wav\", but there's no guarantee it will not change in the future. We recommend always passing the specific param you expect.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetSpeechRequestAudioFormat_example_autogenerated": "wav"
        }
      }
    },
    "GetSpeechRequestModel": {
      "name": {
        "typeId": "GetSpeechRequestModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetSpeechRequestModel"
      },
      "shape": {
        "default": {
          "name": {
            "name": "simba-base",
            "wireValue": "simba-base"
          }
        },
        "values": [
          {
            "name": {
              "name": "simba-base",
              "wireValue": "simba-base"
            }
          },
          {
            "name": {
              "name": "simba-english",
              "wireValue": "simba-english"
            }
          },
          {
            "name": {
              "name": "simba-multilingual",
              "wireValue": "simba-multilingual"
            }
          },
          {
            "name": {
              "name": "simba-turbo",
              "wireValue": "simba-turbo"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetSpeechRequestModel_example_autogenerated": "simba-base"
        }
      }
    },
    "GetSpeechRequest": {
      "name": {
        "typeId": "GetSpeechRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetSpeechRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "audio_format",
              "wireValue": "audio_format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GetSpeechRequestAudioFormat",
                  "typeId": "GetSpeechRequestAudioFormat",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The format for the output audio. Note, that the current default is \"wav\", but there's no guarantee it will not change in the future. We recommend always passing the specific param you expect.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetSpeechRequestAudioFormat_example_autogenerated": "wav"
              }
            }
          },
          {
            "name": {
              "name": "input",
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Plain text or SSML to be synthesized to speech.\nRefer to https://docs.sws.speechify.com/docs/api-limits for the input size limits.\nEmotion, Pitch and Speed Rate are configured in the ssml input, please refer to the ssml documentation for more information: https://docs.sws.speechify.com/docs/ssml#prosody",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetSpeechRequestInput_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "language",
              "wireValue": "language"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Language of the input. Follow the format of an ISO 639-1 language code and an ISO 3166-1 region code, separated by a hyphen, e.g. en-US.\nPlease refer to the list of the supported languages and recommendations regarding this parameter: https://docs.sws.speechify.com/docs/language-support.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetSpeechRequestLanguage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "model",
              "wireValue": "model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GetSpeechRequestModel",
                  "typeId": "GetSpeechRequestModel",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetSpeechRequestModel_example_autogenerated": "simba-base"
              }
            }
          },
          {
            "name": {
              "name": "options",
              "wireValue": "options"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GetSpeechOptionsRequest",
                  "typeId": "GetSpeechOptionsRequest",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "voice_id",
              "wireValue": "voice_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Id of the voice to be used for synthesizing speech. Refer to /v1/voices endpoint for available voices",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetSpeechRequestVoiceId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "GetSpeechRequest is the wrapper for request parameters to the client",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetSpeechRequest_example_autogenerated": {
            "input": "string",
            "voice_id": "string"
          }
        }
      }
    },
    "GetSpeechResponseAudioFormat": {
      "name": {
        "typeId": "GetSpeechResponseAudioFormat",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetSpeechResponseAudioFormat"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "wav",
              "wireValue": "wav"
            }
          },
          {
            "name": {
              "name": "mp3",
              "wireValue": "mp3"
            }
          },
          {
            "name": {
              "name": "ogg",
              "wireValue": "ogg"
            }
          },
          {
            "name": {
              "name": "aac",
              "wireValue": "aac"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The format of the audio data",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetSpeechResponseAudioFormat_example_autogenerated": "wav"
        }
      }
    },
    "GetSpeechResponse": {
      "name": {
        "typeId": "GetSpeechResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetSpeechResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "audio_data",
              "wireValue": "audio_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Synthesized speech audio, Base64-encoded",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetSpeechResponseAudioData_example_autogenerated": [
                  1
                ]
              }
            }
          },
          {
            "name": {
              "name": "audio_format",
              "wireValue": "audio_format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GetSpeechResponseAudioFormat",
                  "typeId": "GetSpeechResponseAudioFormat",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The format of the audio data",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetSpeechResponseAudioFormat_example_autogenerated": "wav"
              }
            }
          },
          {
            "name": {
              "name": "billable_characters_count",
              "wireValue": "billable_characters_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The number of billable characters processed in the request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetSpeechResponseBillableCharactersCount_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "speech_marks",
              "wireValue": "speech_marks"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "SpeechMarks",
                  "typeId": "SpeechMarks",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetSpeechResponse_example_autogenerated": {}
        }
      }
    },
    "GetStreamOptionsRequest": {
      "name": {
        "typeId": "GetStreamOptionsRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetStreamOptionsRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "loudness_normalization",
              "wireValue": "loudness_normalization"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": true,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Determines whether to normalize the audio loudness to a standard level.\nWhen enabled, loudness normalization aligns the audio output to the following standards:\nIntegrated loudness: -14 LUFS\nTrue peak: -2 dBTP\nLoudness range: 7 LU\nIf disabled, the audio loudness will match the original loudness of the selected voice, which may vary significantly and be either too quiet or too loud.\nEnabling loudness normalization can increase latency due to additional processing required for audio level adjustments.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetStreamOptionsRequestLoudnessNormalization_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "GetStreamOptionsRequest is the wrapper for request parameters to the client",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetStreamOptionsRequest_example_autogenerated": {}
        }
      }
    },
    "GetStreamRequestModel": {
      "name": {
        "typeId": "GetStreamRequestModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetStreamRequestModel"
      },
      "shape": {
        "default": {
          "name": {
            "name": "simba-base",
            "wireValue": "simba-base"
          }
        },
        "values": [
          {
            "name": {
              "name": "simba-base",
              "wireValue": "simba-base"
            }
          },
          {
            "name": {
              "name": "simba-english",
              "wireValue": "simba-english"
            }
          },
          {
            "name": {
              "name": "simba-multilingual",
              "wireValue": "simba-multilingual"
            }
          },
          {
            "name": {
              "name": "simba-turbo",
              "wireValue": "simba-turbo"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetStreamRequestModel_example_autogenerated": "simba-base"
        }
      }
    },
    "GetStreamRequest": {
      "name": {
        "typeId": "GetStreamRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetStreamRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "input",
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Plain text or SSML to be synthesized to speech.\nRefer to https://docs.sws.speechify.com/docs/api-limits for the input size limits.\nEmotion, Pitch and Speed Rate are configured in the ssml input, please refer to the ssml documentation for more information: https://docs.sws.speechify.com/docs/ssml#prosody",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetStreamRequestInput_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "language",
              "wireValue": "language"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Language of the input. Follow the format of an ISO 639-1 language code and an ISO 3166-1 region code, separated by a hyphen, e.g. en-US.\nPlease refer to the list of the supported languages and recommendations regarding this parameter: https://docs.sws.speechify.com/docs/language-support.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetStreamRequestLanguage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "model",
              "wireValue": "model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GetStreamRequestModel",
                  "typeId": "GetStreamRequestModel",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetStreamRequestModel_example_autogenerated": "simba-base"
              }
            }
          },
          {
            "name": {
              "name": "options",
              "wireValue": "options"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GetStreamOptionsRequest",
                  "typeId": "GetStreamOptionsRequest",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "voice_id",
              "wireValue": "voice_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Id of the voice to be used for synthesizing speech. Refer to /v1/voices endpoint for available voices",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetStreamRequestVoiceId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "GetStreamRequest is the wrapper for request parameters to the client",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetStreamRequest_example_autogenerated": {
            "input": "string",
            "voice_id": "string"
          }
        }
      }
    },
    "GetVoiceGender": {
      "name": {
        "typeId": "GetVoiceGender",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetVoiceGender"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "male",
              "wireValue": "male"
            }
          },
          {
            "name": {
              "name": "female",
              "wireValue": "female"
            }
          },
          {
            "name": {
              "name": "notSpecified",
              "wireValue": "notSpecified"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetVoiceGender_example_autogenerated": "male"
        }
      }
    },
    "GetVoiceType": {
      "name": {
        "typeId": "GetVoiceType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetVoiceType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "shared",
              "wireValue": "shared"
            }
          },
          {
            "name": {
              "name": "personal",
              "wireValue": "personal"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetVoiceType_example_autogenerated": "shared"
        }
      }
    },
    "GetVoice": {
      "name": {
        "typeId": "GetVoice",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetVoice"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "avatar_image",
              "wireValue": "avatar_image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetVoiceAvatarImage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "display_name",
              "wireValue": "display_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetVoiceDisplayName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "gender",
              "wireValue": "gender"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GetVoiceGender",
                  "typeId": "GetVoiceGender",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetVoiceGender_example_autogenerated": "male"
              }
            }
          },
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetVoiceId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "GetVoicesModel",
                      "typeId": "GetVoicesModel",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetVoiceModels_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "preview_audio",
              "wireValue": "preview_audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetVoicePreviewAudio_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "tags",
              "wireValue": "tags"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetVoiceTags_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GetVoiceType",
                  "typeId": "GetVoiceType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetVoiceType_example_autogenerated": "shared"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetVoice_example_autogenerated": {}
        }
      }
    },
    "GetVoiceLanguage": {
      "name": {
        "typeId": "GetVoiceLanguage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetVoiceLanguage"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "locale",
              "wireValue": "locale"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetVoiceLanguageLocale_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "preview_audio",
              "wireValue": "preview_audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetVoiceLanguagePreviewAudio_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetVoiceLanguage_example_autogenerated": {}
        }
      }
    },
    "GetVoicesModelName": {
      "name": {
        "typeId": "GetVoicesModelName",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetVoicesModelName"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "simba-base",
              "wireValue": "simba-base"
            }
          },
          {
            "name": {
              "name": "simba-english",
              "wireValue": "simba-english"
            }
          },
          {
            "name": {
              "name": "simba-multilingual",
              "wireValue": "simba-multilingual"
            }
          },
          {
            "name": {
              "name": "simba-turbo",
              "wireValue": "simba-turbo"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetVoicesModelName_example_autogenerated": "simba-base"
        }
      }
    },
    "GetVoicesModel": {
      "name": {
        "typeId": "GetVoicesModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GetVoicesModel"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "languages",
              "wireValue": "languages"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "GetVoiceLanguage",
                      "typeId": "GetVoiceLanguage",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetVoicesModelLanguages_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GetVoicesModelName",
                  "typeId": "GetVoicesModelName",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GetVoicesModelName_example_autogenerated": "simba-base"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GetVoicesModel_example_autogenerated": {}
        }
      }
    },
    "NestedChunk": {
      "name": {
        "typeId": "NestedChunk",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "NestedChunk"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NestedChunkEnd_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "end_time",
              "wireValue": "end_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NestedChunkEndTime_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NestedChunkStart_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "start_time",
              "wireValue": "start_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NestedChunkStartTime_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NestedChunkType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "value",
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "NestedChunkValue_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "It details the type of segment, its start and end points in the text, and its start and end times in the synthesized speech audio.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NestedChunk_example_autogenerated": {}
        }
      }
    },
    "OAuthErrorError": {
      "name": {
        "typeId": "OAuthErrorError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OAuthErrorError"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "invalid_client",
              "wireValue": "invalid_client"
            }
          },
          {
            "name": {
              "name": "unauthorized_client",
              "wireValue": "unauthorized_client"
            }
          },
          {
            "name": {
              "name": "invalid_request",
              "wireValue": "invalid_request"
            }
          },
          {
            "name": {
              "name": "unsupported_grant_type",
              "wireValue": "unsupported_grant_type"
            }
          },
          {
            "name": {
              "name": "invalid_scope",
              "wireValue": "invalid_scope"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OAuthErrorError_example_autogenerated": "invalid_client"
        }
      }
    },
    "OAuthError": {
      "name": {
        "typeId": "OAuthError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OAuthError"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "error",
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OAuthErrorError",
                  "typeId": "OAuthErrorError",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OAuthErrorError_example_autogenerated": "invalid_client"
              }
            }
          },
          {
            "name": {
              "name": "error_description",
              "wireValue": "error_description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OAuthErrorErrorDescription_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OAuthError_example_autogenerated": {}
        }
      }
    },
    "SpeechMarks": {
      "name": {
        "typeId": "SpeechMarks",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SpeechMarks"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "chunks",
              "wireValue": "chunks"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "NestedChunk",
                      "typeId": "NestedChunk",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Array of NestedChunk, each providing detailed segment information within the synthesized speech.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SpeechMarksChunks_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SpeechMarksEnd_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "end_time",
              "wireValue": "end_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SpeechMarksEndTime_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SpeechMarksStart_example_autogenerated": 1
              }
            }
          },
          {
            "name": {
              "name": "start_time",
              "wireValue": "start_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SpeechMarksStartTime_example_autogenerated": 1.1
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SpeechMarksType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "value",
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SpeechMarksValue_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "It is used to annotate the audio data with metadata about the synthesis process, like word timing or phoneme details.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SpeechMarks_example_autogenerated": {}
        }
      }
    },
    "audio_ExperimentalStreamCreate_Response_200": {
      "name": {
        "typeId": "audio_ExperimentalStreamCreate_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "audio_ExperimentalStreamCreate_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "audio_ExperimentalStreamCreate_Response_200_example_autogenerated": {}
        }
      }
    },
    "audio_GetSpeech_Response_200": {
      "name": {
        "typeId": "audio_GetSpeech_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "audio_GetSpeech_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "audio_GetSpeech_Response_200_example_autogenerated": {}
        }
      }
    },
    "V1AudioStreamPostParametersAccept": {
      "name": {
        "typeId": "V1AudioStreamPostParametersAccept",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "V1AudioStreamPostParametersAccept"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "audio/mpeg",
              "wireValue": "audio/mpeg"
            }
          },
          {
            "name": {
              "name": "audio/ogg",
              "wireValue": "audio/ogg"
            }
          },
          {
            "name": {
              "name": "audio/aac",
              "wireValue": "audio/aac"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V1AudioStreamPostParametersAccept_example_autogenerated": "audio/mpeg"
        }
      }
    },
    "audio_GetStream_Response_200": {
      "name": {
        "typeId": "audio_GetStream_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "audio_GetStream_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "audio_GetStream_Response_200_example_autogenerated": {}
        }
      }
    },
    "auth_CreateAccessToken_Response_200": {
      "name": {
        "typeId": "auth_CreateAccessToken_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "auth_CreateAccessToken_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "auth_CreateAccessToken_Response_200_example_autogenerated": {}
        }
      }
    },
    "apikey_ListAPIKeys_Response_200": {
      "name": {
        "typeId": "apikey_ListAPIKeys_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "apikey_ListAPIKeys_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "apikey_ListAPIKeys_Response_200_example_autogenerated": {}
        }
      }
    },
    "apikey_CreateAPIKey_Response_200": {
      "name": {
        "typeId": "apikey_CreateAPIKey_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "apikey_CreateAPIKey_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "apikey_CreateAPIKey_Response_200_example_autogenerated": {}
        }
      }
    },
    "apikey_DeleteAPIKey_Response_200": {
      "name": {
        "typeId": "apikey_DeleteAPIKey_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "apikey_DeleteAPIKey_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "apikey_DeleteAPIKey_Response_200_example_autogenerated": {}
        }
      }
    },
    "apikey_UpdateApiKey_Response_200": {
      "name": {
        "typeId": "apikey_UpdateApiKey_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "apikey_UpdateApiKey_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "apikey_UpdateApiKey_Response_200_example_autogenerated": {}
        }
      }
    },
    "voices_GetVoices_Response_200": {
      "name": {
        "typeId": "voices_GetVoices_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "voices_GetVoices_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "voices_GetVoices_Response_200_example_autogenerated": {}
        }
      }
    },
    "voices_CreateVoice_Response_200": {
      "name": {
        "typeId": "voices_CreateVoice_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "voices_CreateVoice_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "voices_CreateVoice_Response_200_example_autogenerated": {}
        }
      }
    },
    "voices_DeleteVoice_Response_204": {
      "name": {
        "typeId": "voices_DeleteVoice_Response_204",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "voices_DeleteVoice_Response_204"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "voices_DeleteVoice_Response_204_example_autogenerated": {}
        }
      }
    }
  },
  "services": {
    "service_audio": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "audio"
          ],
          "packagePath": [],
          "file": "audio"
        }
      },
      "displayName": "audio",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "POST",
          "baseUrl": "https://api.sws.speechify.com",
          "path": {
            "head": "/experimental/audio/stream",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "ExperimentalStreamCreateRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ExperimentalStreamCreateRequestBadRequestError"
              },
              "docs": "Invalid request params"
            },
            {
              "error": {
                "name": "ExperimentalStreamCreateRequestPaymentRequiredError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ExperimentalStreamCreateRequestPaymentRequiredError"
              },
              "docs": "Insufficient credits"
            },
            {
              "error": {
                "name": "ExperimentalStreamCreateRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ExperimentalStreamCreateRequestForbiddenError"
              },
              "docs": "Request access rejected"
            },
            {
              "error": {
                "name": "ExperimentalStreamCreateRequestInternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ExperimentalStreamCreateRequestInternalServerError"
              },
              "docs": "Internal server error"
            }
          ],
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/experimental/audio/stream",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_audio.ExperimentalStreamCreate",
          "name": "ExperimentalStreamCreate",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ExperimentalStreamRequest",
              "typeId": "ExperimentalStreamRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "audioExperimentalStreamCreateExample": {
                  "input": "string",
                  "voice_id": "string"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ExperimentalStreamRequest",
                  "typeId": "ExperimentalStreamRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "audioExperimentalStreamCreateExample": {
                      "input": "string",
                      "voice_id": "string"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "audio_ExperimentalStreamCreate_Response_200",
                  "typeId": "audio_ExperimentalStreamCreate_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "audioExperimentalStreamCreateExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets the stream speech for the given input",
          "v2Examples": {
            "autogeneratedExamples": {
              "audioExperimentalStreamCreateExample_200": {
                "displayName": "audioExperimentalStreamCreateExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/experimental/audio/stream"
                  },
                  "environment": "https://api.sws.speechify.com",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "input": "string",
                    "voice_id": "string"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "audio_ExperimentalStreamCreate_Response_200",
                      "typeId": "audio_ExperimentalStreamCreate_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "audioExperimentalStreamCreateExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "POST",
          "baseUrl": "https://api.sws.speechify.com",
          "path": {
            "head": "/v1/audio/speech",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetSpeechRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSpeechRequestBadRequestError"
              },
              "docs": "Invalid request params"
            },
            {
              "error": {
                "name": "GetSpeechRequestPaymentRequiredError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSpeechRequestPaymentRequiredError"
              },
              "docs": "Insufficient credits"
            },
            {
              "error": {
                "name": "GetSpeechRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSpeechRequestForbiddenError"
              },
              "docs": "Request access rejected"
            },
            {
              "error": {
                "name": "GetSpeechRequestInternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSpeechRequestInternalServerError"
              },
              "docs": "Internal server error"
            }
          ],
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/audio/speech",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_audio.GetSpeech",
          "name": "GetSpeech",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "GetSpeechRequest",
              "typeId": "GetSpeechRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "audioGetSpeechExample": {
                  "input": "string",
                  "voice_id": "string"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GetSpeechRequest",
                  "typeId": "GetSpeechRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "audioGetSpeechExample": {
                      "input": "string",
                      "voice_id": "string"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "audio_GetSpeech_Response_200",
                  "typeId": "audio_GetSpeech_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "audioGetSpeechExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets the speech data for the given input",
          "v2Examples": {
            "autogeneratedExamples": {
              "audioGetSpeechExample_200": {
                "displayName": "audioGetSpeechExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v1/audio/speech"
                  },
                  "environment": "https://api.sws.speechify.com",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "input": "string",
                    "voice_id": "string"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "audio_GetSpeech_Response_200",
                      "typeId": "audio_GetSpeech_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "audioGetSpeechExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "POST",
          "baseUrl": "https://api.sws.speechify.com",
          "path": {
            "head": "/v1/audio/stream",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "Accept",
                "wireValue": "Accept"
              },
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "V1AudioStreamPostParametersAccept",
                "typeId": "V1AudioStreamPostParametersAccept",
                "inline": false,
                "type": "named"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "Accept_example": "audio/mpeg"
                }
              }
            }
          ],
          "errors": [
            {
              "error": {
                "name": "GetStreamRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetStreamRequestBadRequestError"
              },
              "docs": "Invalid request params"
            },
            {
              "error": {
                "name": "GetStreamRequestPaymentRequiredError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetStreamRequestPaymentRequiredError"
              },
              "docs": "Insufficient credits"
            },
            {
              "error": {
                "name": "GetStreamRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetStreamRequestForbiddenError"
              },
              "docs": "Request access rejected"
            },
            {
              "error": {
                "name": "GetStreamRequestInternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetStreamRequestInternalServerError"
              },
              "docs": "Internal server error"
            }
          ],
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/audio/stream",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_audio.GetStream",
          "name": "GetStream",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "GetStreamRequest",
              "typeId": "GetStreamRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "audioGetStreamExample": {
                  "input": "string",
                  "voice_id": "string"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GetStreamRequest",
                  "typeId": "GetStreamRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "audioGetStreamExample": {
                      "input": "string",
                      "voice_id": "string"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "audio_GetStream_Response_200",
                  "typeId": "audio_GetStream_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "audioGetStreamExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets the stream speech for the given input",
          "v2Examples": {
            "autogeneratedExamples": {
              "audioGetStreamExample_200": {
                "displayName": "audioGetStreamExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v1/audio/stream"
                  },
                  "environment": "https://api.sws.speechify.com",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "Accept": "audio/mpeg"
                  },
                  "requestBody": {
                    "input": "string",
                    "voice_id": "string"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "audio_GetStream_Response_200",
                      "typeId": "audio_GetStream_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "audioGetStreamExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_auth": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "auth"
          ],
          "packagePath": [],
          "file": "auth"
        }
      },
      "displayName": "auth",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "POST",
          "baseUrl": "https://api.sws.speechify.com",
          "path": {
            "head": "/v1/auth/token",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/auth/token",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_auth.CreateAccessToken",
          "name": "CreateAccessToken",
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "CreateAccessTokenRequest",
              "typeId": "CreateAccessTokenRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "authCreateAccessTokenExample": {
                  "grant_type": "client_credentials"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/x-www-form-urlencoded",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "CreateAccessTokenRequest",
                  "typeId": "CreateAccessTokenRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "authCreateAccessTokenExample": {
                      "grant_type": "client_credentials"
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "CreateAccessTokenRequest",
                  "typeId": "CreateAccessTokenRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "authCreateAccessTokenExample": {
                      "grant_type": "client_credentials"
                    }
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "auth_CreateAccessToken_Response_200",
                  "typeId": "auth_CreateAccessToken_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Contains the details of the token which can be used by the user to access the API",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "authCreateAccessTokenExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a new API token for the logged in user",
          "v2Examples": {
            "autogeneratedExamples": {
              "authCreateAccessTokenExample_200": {
                "displayName": "authCreateAccessTokenExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v1/auth/token"
                  },
                  "environment": "https://api.sws.speechify.com",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "grant_type": "client_credentials"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "auth_CreateAccessToken_Response_200",
                      "typeId": "auth_CreateAccessToken_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Contains the details of the token which can be used by the user to access the API",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "authCreateAccessTokenExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_apikey": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "apikey"
          ],
          "packagePath": [],
          "file": "apikey"
        }
      },
      "displayName": "apikey",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "https://api.sws.speechify.com",
          "path": {
            "head": "/v1/token",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "userAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/token",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_apikey.ListAPIKeys",
          "name": "ListAPIKeys",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "apikey_ListAPIKeys_Response_200",
                  "typeId": "apikey_ListAPIKeys_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "An array of all API keys for the user for the given request",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "apikeyListApiKeysExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Fetches all the API keys for the logged in user",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_apikeyListApiKeysExample_200": {
                "displayName": "listApiKeysExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/token"
                  },
                  "environment": "https://api.sws.speechify.com",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "apikey_ListAPIKeys_Response_200",
                      "typeId": "apikey_ListAPIKeys_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "An array of all API keys for the user for the given request",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "apikeyListApiKeysExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "POST",
          "baseUrl": "https://api.sws.speechify.com",
          "path": {
            "head": "/v1/token",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "userAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/token",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_apikey.CreateAPIKey",
          "name": "CreateAPIKey",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "apikey_CreateAPIKey_Response_200",
                  "typeId": "apikey_CreateAPIKey_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "APIKeyResponseWrapper contains the details of the API key which can be used by the user to access the API",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "apikeyCreateApiKeyExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a new API key for the logged in user",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_apikeyCreateApiKeyExample_200": {
                "displayName": "createApiKeyExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v1/token"
                  },
                  "environment": "https://api.sws.speechify.com",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "apikey_CreateAPIKey_Response_200",
                      "typeId": "apikey_CreateAPIKey_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "APIKeyResponseWrapper contains the details of the API key which can be used by the user to access the API",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "apikeyCreateApiKeyExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "DELETE",
          "baseUrl": "https://api.sws.speechify.com",
          "path": {
            "head": "/v1/token/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "The ID of the API key to delete",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "userAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/token/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "The ID of the API key to delete",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_apikey.DeleteAPIKey",
          "name": "DeleteAPIKey",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "apikey_DeleteAPIKey_Response_200",
                  "typeId": "apikey_DeleteAPIKey_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "API key deleted successfully",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "apikeyDeleteApiKeyExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Deletes the given API key for the logged in user",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_apikeyDeleteApiKeyExample_200": {
                "displayName": "deleteApiKeyExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v1/token/id"
                  },
                  "environment": "https://api.sws.speechify.com",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "apikey_DeleteAPIKey_Response_200",
                      "typeId": "apikey_DeleteAPIKey_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "API key deleted successfully",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "apikeyDeleteApiKeyExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "PATCH",
          "baseUrl": "https://api.sws.speechify.com",
          "path": {
            "head": "/v1/token/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "The ID of the key to edit",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "userAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/token/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "The ID of the key to edit",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_apikey.UpdateApiKey",
          "name": "UpdateApiKey",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "apikeyUpdateApiKeyExample": "string"
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "apikeyUpdateApiKeyExample": "string"
                  }
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "apikey_UpdateApiKey_Response_200",
                  "typeId": "apikey_UpdateApiKey_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "APIKeyResponseWrapper contains the details of the API key which can be used by the user to access the API",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "apikeyUpdateApiKeyExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Update API key name for the logged in user",
          "v2Examples": {
            "autogeneratedExamples": {
              "apikeyUpdateApiKeyExample_200": {
                "displayName": "apikeyUpdateApiKeyExample",
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v1/token/id"
                  },
                  "environment": "https://api.sws.speechify.com",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": "string"
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "apikey_UpdateApiKey_Response_200",
                      "typeId": "apikey_UpdateApiKey_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "APIKeyResponseWrapper contains the details of the API key which can be used by the user to access the API",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "apikeyUpdateApiKeyExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_voices": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "voices"
          ],
          "packagePath": [],
          "file": "voices"
        }
      },
      "displayName": "voices",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "https://api.sws.speechify.com",
          "path": {
            "head": "/v1/voices",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "GetVoicesRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetVoicesRequestNotFoundError"
              },
              "docs": "No voices found"
            },
            {
              "error": {
                "name": "GetVoicesRequestInternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetVoicesRequestInternalServerError"
              },
              "docs": "Internal server error"
            }
          ],
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/voices",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_voices.GetVoices",
          "name": "GetVoices",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "voices_GetVoices_Response_200",
                  "typeId": "voices_GetVoices_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A list of voices",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "voicesGetVoicesExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets the list of voices available for the user",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_voicesGetVoicesExample_200": {
                "displayName": "getVoicesExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v1/voices"
                  },
                  "environment": "https://api.sws.speechify.com",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "voices_GetVoices_Response_200",
                      "typeId": "voices_GetVoices_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A list of voices",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "voicesGetVoicesExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "POST",
          "baseUrl": "https://api.sws.speechify.com",
          "path": {
            "head": "/v1/voices",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "CreateVoiceRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateVoiceRequestBadRequestError"
              },
              "docs": "Invalid request params"
            },
            {
              "error": {
                "name": "CreateVoiceRequestPaymentRequiredError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateVoiceRequestPaymentRequiredError"
              },
              "docs": "Current billing plan does not have access to voice cloning"
            },
            {
              "error": {
                "name": "CreateVoiceRequestInternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateVoiceRequestInternalServerError"
              },
              "docs": "Internal server error"
            }
          ],
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/voices",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_voices.CreateVoice",
          "name": "CreateVoice",
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "voices_CreateVoice_Request",
            "properties": [
              {
                "name": {
                  "name": "name",
                  "wireValue": "name"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "Name of the personal voice",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V1VoicesPostRequestBodyContentMultipartFormDataSchemaName_example_autogenerated": "string"
                  }
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              },
              {
                "value": {
                  "key": {
                    "name": "sample",
                    "wireValue": "sample"
                  },
                  "isOptional": false,
                  "contentType": "multipart/form-data",
                  "docs": "Audio sample file",
                  "type": "file"
                },
                "type": "file"
              },
              {
                "name": {
                  "name": "consent",
                  "wireValue": "consent"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "User consent information in JSON format: {\"fullName\": \"\", \"email\": \"\"}\nFor example, {\"fullName\": \"John Doe\", \"email\": \"john@example.com\"}\nThis should include the fullName and email of the consenting individual.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V1VoicesPostRequestBodyContentMultipartFormDataSchemaConsent_example_autogenerated": "string"
                  }
                },
                "contentType": "multipart/form-data",
                "type": "bodyProperty"
              }
            ],
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "voicesCreateVoiceExample": {
                  "name": "string",
                  "sample": "string",
                  "consent": "string"
                }
              }
            },
            "type": "fileUpload"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "multipart/form-data",
                "name": "voices_CreateVoice_Request",
                "properties": [
                  {
                    "name": {
                      "name": "name",
                      "wireValue": "name"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "Name of the personal voice",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "V1VoicesPostRequestBodyContentMultipartFormDataSchemaName_example_autogenerated": "string"
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "value": {
                      "key": {
                        "name": "sample",
                        "wireValue": "sample"
                      },
                      "isOptional": false,
                      "contentType": "multipart/form-data",
                      "docs": "Audio sample file",
                      "type": "file"
                    },
                    "type": "file"
                  },
                  {
                    "name": {
                      "name": "consent",
                      "wireValue": "consent"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "User consent information in JSON format: {\"fullName\": \"\", \"email\": \"\"}\nFor example, {\"fullName\": \"John Doe\", \"email\": \"john@example.com\"}\nThis should include the fullName and email of the consenting individual.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "V1VoicesPostRequestBodyContentMultipartFormDataSchemaConsent_example_autogenerated": "string"
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "voicesCreateVoiceExample": {
                      "name": "string",
                      "sample": "string",
                      "consent": "string"
                    }
                  }
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "voices_CreateVoice_Response_200",
                  "typeId": "voices_CreateVoice_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A created voice",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "voicesCreateVoiceExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a personal (cloned) voice for the user",
          "v2Examples": {
            "autogeneratedExamples": {
              "voicesCreateVoiceExample_200": {
                "displayName": "voicesCreateVoiceExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v1/voices"
                  },
                  "environment": "https://api.sws.speechify.com",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "string",
                    "sample": "string",
                    "consent": "string"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "voices_CreateVoice_Response_200",
                      "typeId": "voices_CreateVoice_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A created voice",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "voicesCreateVoiceExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "DELETE",
          "baseUrl": "https://api.sws.speechify.com",
          "path": {
            "head": "/v1/voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "docs": "The ID of the voice to delete",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": "DeleteVoiceRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteVoiceRequestBadRequestError"
              },
              "docs": "Missing or invalid voice ID"
            },
            {
              "error": {
                "name": "DeleteVoiceRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteVoiceRequestNotFoundError"
              },
              "docs": "Voice not found"
            },
            {
              "error": {
                "name": "DeleteVoiceRequestInternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteVoiceRequestInternalServerError"
              },
              "docs": "Internal server error"
            }
          ],
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v1/voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "docs": "The ID of the voice to delete",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_voices.DeleteVoice",
          "name": "DeleteVoice",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 204,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "voices_DeleteVoice_Response_204",
                  "typeId": "voices_DeleteVoice_Response_204",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Voice deleted successfully",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "voicesDeleteVoiceExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete a personal (cloned) voice",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_voicesDeleteVoiceExample_204": {
                "displayName": "deleteVoiceExample",
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v1/voices/id"
                  },
                  "environment": "https://api.sws.speechify.com",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 204,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 204,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "voices_DeleteVoice_Response_204",
                      "typeId": "voices_DeleteVoice_Response_204",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "Voice deleted successfully",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "voicesDeleteVoiceExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "errors": {
    "ExperimentalStreamCreateRequestBadRequestError": {
      "name": {
        "name": "ExperimentalStreamCreateRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ExperimentalStreamCreateRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "ExperimentalStreamCreateRequestBadRequestError",
        "wireValue": "ExperimentalStreamCreateRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid request params",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ExperimentalStreamCreateRequestPaymentRequiredError": {
      "name": {
        "name": "ExperimentalStreamCreateRequestPaymentRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ExperimentalStreamCreateRequestPaymentRequiredError"
      },
      "displayName": "PaymentRequiredError",
      "discriminantValue": {
        "name": "ExperimentalStreamCreateRequestPaymentRequiredError",
        "wireValue": "ExperimentalStreamCreateRequestPaymentRequiredError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 402,
      "docs": "Insufficient credits",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ExperimentalStreamCreateRequestForbiddenError": {
      "name": {
        "name": "ExperimentalStreamCreateRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ExperimentalStreamCreateRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "ExperimentalStreamCreateRequestForbiddenError",
        "wireValue": "ExperimentalStreamCreateRequestForbiddenError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 403,
      "docs": "Request access rejected",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "ExperimentalStreamCreateRequestInternalServerError": {
      "name": {
        "name": "ExperimentalStreamCreateRequestInternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ExperimentalStreamCreateRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": "ExperimentalStreamCreateRequestInternalServerError",
        "wireValue": "ExperimentalStreamCreateRequestInternalServerError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 500,
      "docs": "Internal server error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetSpeechRequestBadRequestError": {
      "name": {
        "name": "GetSpeechRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSpeechRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "GetSpeechRequestBadRequestError",
        "wireValue": "GetSpeechRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid request params",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetSpeechRequestPaymentRequiredError": {
      "name": {
        "name": "GetSpeechRequestPaymentRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSpeechRequestPaymentRequiredError"
      },
      "displayName": "PaymentRequiredError",
      "discriminantValue": {
        "name": "GetSpeechRequestPaymentRequiredError",
        "wireValue": "GetSpeechRequestPaymentRequiredError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 402,
      "docs": "Insufficient credits",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetSpeechRequestForbiddenError": {
      "name": {
        "name": "GetSpeechRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSpeechRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "GetSpeechRequestForbiddenError",
        "wireValue": "GetSpeechRequestForbiddenError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 403,
      "docs": "Request access rejected",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetSpeechRequestInternalServerError": {
      "name": {
        "name": "GetSpeechRequestInternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSpeechRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": "GetSpeechRequestInternalServerError",
        "wireValue": "GetSpeechRequestInternalServerError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 500,
      "docs": "Internal server error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetStreamRequestBadRequestError": {
      "name": {
        "name": "GetStreamRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetStreamRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "GetStreamRequestBadRequestError",
        "wireValue": "GetStreamRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid request params",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetStreamRequestPaymentRequiredError": {
      "name": {
        "name": "GetStreamRequestPaymentRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetStreamRequestPaymentRequiredError"
      },
      "displayName": "PaymentRequiredError",
      "discriminantValue": {
        "name": "GetStreamRequestPaymentRequiredError",
        "wireValue": "GetStreamRequestPaymentRequiredError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 402,
      "docs": "Insufficient credits",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetStreamRequestForbiddenError": {
      "name": {
        "name": "GetStreamRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetStreamRequestForbiddenError"
      },
      "displayName": "ForbiddenError",
      "discriminantValue": {
        "name": "GetStreamRequestForbiddenError",
        "wireValue": "GetStreamRequestForbiddenError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 403,
      "docs": "Request access rejected",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetStreamRequestInternalServerError": {
      "name": {
        "name": "GetStreamRequestInternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetStreamRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": "GetStreamRequestInternalServerError",
        "wireValue": "GetStreamRequestInternalServerError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 500,
      "docs": "Internal server error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetVoicesRequestNotFoundError": {
      "name": {
        "name": "GetVoicesRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetVoicesRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "GetVoicesRequestNotFoundError",
        "wireValue": "GetVoicesRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "No voices found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "GetVoicesRequestInternalServerError": {
      "name": {
        "name": "GetVoicesRequestInternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetVoicesRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": "GetVoicesRequestInternalServerError",
        "wireValue": "GetVoicesRequestInternalServerError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 500,
      "docs": "Internal server error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "CreateVoiceRequestBadRequestError": {
      "name": {
        "name": "CreateVoiceRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateVoiceRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "CreateVoiceRequestBadRequestError",
        "wireValue": "CreateVoiceRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Invalid request params",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "CreateVoiceRequestPaymentRequiredError": {
      "name": {
        "name": "CreateVoiceRequestPaymentRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateVoiceRequestPaymentRequiredError"
      },
      "displayName": "PaymentRequiredError",
      "discriminantValue": {
        "name": "CreateVoiceRequestPaymentRequiredError",
        "wireValue": "CreateVoiceRequestPaymentRequiredError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 402,
      "docs": "Current billing plan does not have access to voice cloning",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "CreateVoiceRequestInternalServerError": {
      "name": {
        "name": "CreateVoiceRequestInternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateVoiceRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": "CreateVoiceRequestInternalServerError",
        "wireValue": "CreateVoiceRequestInternalServerError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 500,
      "docs": "Internal server error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteVoiceRequestBadRequestError": {
      "name": {
        "name": "DeleteVoiceRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteVoiceRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": "DeleteVoiceRequestBadRequestError",
        "wireValue": "DeleteVoiceRequestBadRequestError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 400,
      "docs": "Missing or invalid voice ID",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteVoiceRequestNotFoundError": {
      "name": {
        "name": "DeleteVoiceRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteVoiceRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": "DeleteVoiceRequestNotFoundError",
        "wireValue": "DeleteVoiceRequestNotFoundError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 404,
      "docs": "Voice not found",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    },
    "DeleteVoiceRequestInternalServerError": {
      "name": {
        "name": "DeleteVoiceRequestInternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteVoiceRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": "DeleteVoiceRequestInternalServerError",
        "wireValue": "DeleteVoiceRequestInternalServerError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 500,
      "docs": "Internal server error",
      "examples": [],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    }
  },
  "webhookGroups": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "environments": {
    "defaultEnvironment": "https://api.sws.speechify.com",
    "environments": {
      "environments": [
        {
          "id": "https://api.sws.speechify.com",
          "name": "https://api.sws.speechify.com",
          "url": "https://api.sws.speechify.com"
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "types": [
      "APIKey",
      "AccessToken",
      "CreateAccessTokenRequest",
      "CreateVoiceLanguage",
      "CreateVoiceModel",
      "CreatedVoice",
      "ExperimentalStreamRequest",
      "ExperimentalStreamResponse",
      "GetSpeechOptionsRequest",
      "GetSpeechRequest",
      "GetSpeechResponse",
      "GetStreamOptionsRequest",
      "GetStreamRequest",
      "GetVoice",
      "GetVoiceLanguage",
      "GetVoicesModel",
      "NestedChunk",
      "OAuthError",
      "SpeechMarks"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_audio",
      "subpackage_auth",
      "subpackage_apikey",
      "subpackage_voices"
    ],
    "hasEndpointsInTree": false
  },
  "subpackages": {
    "subpackage_audio": {
      "name": "audio",
      "fernFilepath": {
        "allParts": [
          "audio"
        ],
        "packagePath": [],
        "file": "audio"
      },
      "service": "service_audio",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_auth": {
      "name": "auth",
      "fernFilepath": {
        "allParts": [
          "auth"
        ],
        "packagePath": [],
        "file": "auth"
      },
      "service": "service_auth",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_apikey": {
      "name": "apikey",
      "fernFilepath": {
        "allParts": [
          "apikey"
        ],
        "packagePath": [],
        "file": "apikey"
      },
      "service": "service_apikey",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_voices": {
      "name": "voices",
      "fernFilepath": {
        "allParts": [
          "voices"
        ],
        "packagePath": [],
        "file": "voices"
      },
      "service": "service_voices",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    }
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "apiName": "",
  "constants": {
    "errorInstanceIdKey": {
      "name": "errorInstanceId",
      "wireValue": "errorInstanceId"
    }
  }
}