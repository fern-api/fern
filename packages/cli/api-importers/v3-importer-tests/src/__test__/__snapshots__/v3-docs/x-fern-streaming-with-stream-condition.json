{
  "auth": {
    "requirement": "ALL",
    "schemes": []
  },
  "selfHosted": false,
  "types": {
    "ChatRequest": {
      "name": {
        "typeId": "ChatRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "query",
              "wireValue": "query"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The chat message or question.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ChatRequestQuery_example_0": "How can I use the Vectara platform?"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "stream_response",
              "wireValue": "stream_response"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether the response should be streamed or not.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatRequestStreamResponse_example_autogenerated": false
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatRequest_example_autogenerated": {
            "query": "How can I use the Vectara platform?"
          }
        }
      }
    },
    "ChatFullResponse": {
      "name": {
        "typeId": "ChatFullResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatFullResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "chat_id",
              "wireValue": "chat_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "If the chat response was stored, the ID of the chat.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatFullResponseChatId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "turn_id",
              "wireValue": "turn_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "If the chat response was stored, the ID of the turn.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatFullResponseTurnId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "answer",
              "wireValue": "answer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The message from the chat model for the chat message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatFullResponseAnswer_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Full response to a chat question when the result is not streamed.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatFullResponse_example_autogenerated": {}
        }
      }
    },
    "ChatStreamedResponse": {
      "name": {
        "typeId": "ChatStreamedResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ChatStreamedResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "chunk",
              "wireValue": "chunk"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The chunk of the response.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "ChatStreamedResponseChunk_example_0": "Hello, how can I help you today?"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An individual event when the response is streamed.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatStreamedResponse_example_autogenerated": {}
        }
      }
    }
  },
  "services": {
    "service_": {
      "name": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Start a chat",
          "method": "POST",
          "baseUrl": "https://api.streamingtest.io",
          "path": {
            "head": "/v2/chats",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "Request-Timeout",
                "wireValue": "Request-Timeout"
              },
              "docs": "The API will make a best effort to complete the request in the specified seconds or time out.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "Request-Timeout_example": 1
                }
              }
            },
            {
              "name": {
                "name": "Request-Timeout-Millis",
                "wireValue": "Request-Timeout-Millis"
              },
              "docs": "The API will make a best effort to complete the request in the specified milliseconds or time out.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "Request-Timeout-Millis_example": 1
                }
              }
            }
          ],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/chats",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_.chat_stream",
          "name": "chat_stream",
          "requestBody": {
            "contentType": "application/json",
            "name": "chat_Request_streaming",
            "extendedProperties": [],
            "extends": [],
            "properties": [
              {
                "name": {
                  "name": "query",
                  "wireValue": "query"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "The chat message or question.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "V2ChatsPostRequestBodyContentApplicationJsonSchemaQuery_example_0": "How can I use the Vectara platform?"
                  },
                  "autogeneratedExamples": {}
                }
              },
              {
                "name": {
                  "name": "stream_response",
                  "wireValue": "stream_response"
                },
                "valueType": {
                  "container": {
                    "literal": {
                      "boolean": true,
                      "type": "boolean"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "docs": "Indicates whether the response should be streamed or not.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V2ChatsPostRequestBodyContentApplicationJsonSchemaStreamResponse_example_autogenerated": true
                  }
                }
              }
            ],
            "extraProperties": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "chatExample": {
                  "query": "How can I use the Vectara platform?",
                  "stream_response": true
                }
              }
            },
            "type": "inlinedRequestBody"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "docs": "A response to a chat request.",
                "payload": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChatStreamedResponse",
                  "typeId": "ChatStreamedResponse",
                  "inline": false,
                  "type": "named"
                },
                "type": "json"
              },
              "type": "streaming"
            }
          },
          "docs": "Create a chat while specifying the default retrieval parameters used by the prompt.",
          "v2Examples": {
            "autogeneratedExamples": {
              "chatExample_base_200": {
                "displayName": "chatExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/chats"
                  },
                  "environment": "https://api.streamingtest.io",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "query": "How can I use the Vectara platform?",
                    "stream_response": true
                  }
                },
                "response": {
                  "statusCode": 200
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChatFullResponse",
                      "typeId": "ChatFullResponse",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A response to a chat request.",
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "displayName": "Start a chat",
          "method": "POST",
          "baseUrl": "https://api.streamingtest.io",
          "path": {
            "head": "/v2/chats",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "Request-Timeout",
                "wireValue": "Request-Timeout"
              },
              "docs": "The API will make a best effort to complete the request in the specified seconds or time out.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "Request-Timeout_example": 1
                }
              }
            },
            {
              "name": {
                "name": "Request-Timeout-Millis",
                "wireValue": "Request-Timeout-Millis"
              },
              "docs": "The API will make a best effort to complete the request in the specified milliseconds or time out.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "Request-Timeout-Millis_example": 1
                }
              }
            }
          ],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/chats",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_.chat",
          "name": "chat",
          "requestBody": {
            "contentType": "application/json",
            "name": "chat_Request",
            "extendedProperties": [],
            "extends": [],
            "properties": [
              {
                "name": {
                  "name": "query",
                  "wireValue": "query"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "The chat message or question.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "V2ChatsPostRequestBodyContentApplicationJsonSchemaQuery_example_0": "How can I use the Vectara platform?"
                  },
                  "autogeneratedExamples": {}
                }
              },
              {
                "name": {
                  "name": "stream_response",
                  "wireValue": "stream_response"
                },
                "valueType": {
                  "container": {
                    "literal": {
                      "boolean": false,
                      "type": "boolean"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "docs": "Indicates whether the response should be streamed or not.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V2ChatsPostRequestBodyContentApplicationJsonSchemaStreamResponse_example_autogenerated": false
                  }
                }
              }
            ],
            "extraProperties": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "chatExample": {
                  "query": "How can I use the Vectara platform?",
                  "stream_response": false
                }
              }
            },
            "type": "inlinedRequestBody"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "name": "chat_Request",
                "extendedProperties": [],
                "extends": [],
                "properties": [
                  {
                    "name": {
                      "name": "query",
                      "wireValue": "query"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "The chat message or question.",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "V2ChatsPostRequestBodyContentApplicationJsonSchemaQuery_example_0": "How can I use the Vectara platform?"
                      },
                      "autogeneratedExamples": {}
                    }
                  },
                  {
                    "name": {
                      "name": "stream_response",
                      "wireValue": "stream_response"
                    },
                    "valueType": {
                      "container": {
                        "literal": {
                          "boolean": false,
                          "type": "boolean"
                        },
                        "type": "literal"
                      },
                      "type": "container"
                    },
                    "docs": "Indicates whether the response should be streamed or not.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "V2ChatsPostRequestBodyContentApplicationJsonSchemaStreamResponse_example_autogenerated": false
                      }
                    }
                  }
                ],
                "extraProperties": false,
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "chatExample": {
                      "query": "How can I use the Vectara platform?",
                      "stream_response": false
                    }
                  }
                },
                "type": "inlinedRequestBody"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ChatFullResponse",
                  "typeId": "ChatFullResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A response to a chat request.",
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a chat while specifying the default retrieval parameters used by the prompt.",
          "v2Examples": {
            "autogeneratedExamples": {
              "chatExample_base_200": {
                "displayName": "chatExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/chats"
                  },
                  "environment": "https://api.streamingtest.io",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "query": "How can I use the Vectara platform?",
                    "stream_response": false
                  }
                },
                "response": {
                  "statusCode": 200
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ChatFullResponse",
                      "typeId": "ChatFullResponse",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "A response to a chat request.",
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "errors": {},
  "webhookGroups": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "environments": {
    "defaultEnvironment": "https://api.streamingtest.io",
    "environments": {
      "environments": [
        {
          "id": "https://api.streamingtest.io",
          "name": "https://api.streamingtest.io",
          "url": "https://api.streamingtest.io"
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "service": "service_",
    "types": [
      "ChatRequest",
      "ChatFullResponse",
      "ChatStreamedResponse"
    ],
    "errors": [],
    "subpackages": [],
    "hasEndpointsInTree": false
  },
  "subpackages": {},
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "apiName": "",
  "constants": {
    "errorInstanceIdKey": {
      "name": "errorInstanceId",
      "wireValue": "errorInstanceId"
    }
  }
}